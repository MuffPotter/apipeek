{
  "Name": "Windows.Networking, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime",
  "Classes": [
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTransferBase"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "completionGroup",
              "Type": "BackgroundTransferCompletionGroup"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "BackgroundTransferCompletionGroup",
          "IsGet": true,
          "Name": "CompletionGroup"
        },
        {
          "Type": "BackgroundTransferCostPolicy",
          "IsGet": true,
          "IsSet": true,
          "Name": "CostPolicy"
        },
        {
          "Type": "TileNotification",
          "IsGet": true,
          "IsSet": true,
          "Name": "FailureTileNotification"
        },
        {
          "Type": "ToastNotification",
          "IsGet": true,
          "IsSet": true,
          "Name": "FailureToastNotification"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Group"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Method"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProxyCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServerCredential"
        },
        {
          "Type": "TileNotification",
          "IsGet": true,
          "IsSet": true,
          "Name": "SuccessTileNotification"
        },
        {
          "Type": "ToastNotification",
          "IsGet": true,
          "IsSet": true,
          "Name": "SuccessToastNotification"
        },
        {
          "Type": "BackgroundTransferGroup",
          "IsGet": true,
          "IsSet": true,
          "Name": "TransferGroup"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "DownloadOperation",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "resultFile",
              "Type": "IStorageFile"
            }
          ],
          "Name": "CreateDownload"
        },
        {
          "ReturnType": "DownloadOperation",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "resultFile",
              "Type": "IStorageFile"
            },
            {
              "Name": "requestBodyFile",
              "Type": "IStorageFile"
            }
          ],
          "Name": "CreateDownload"
        },
        {
          "ReturnType": "IAsyncOperation<DownloadOperation>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "resultFile",
              "Type": "IStorageFile"
            },
            {
              "Name": "requestBodyStream",
              "Type": "IInputStream"
            }
          ],
          "Name": "CreateDownloadAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<DownloadOperation>>",
          "Name": "GetCurrentDownloadsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<DownloadOperation>>",
          "Parameters": [
            {
              "Name": "group",
              "Type": "String"
            }
          ],
          "Name": "GetCurrentDownloadsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<DownloadOperation>>",
          "Parameters": [
            {
              "Name": "group",
              "Type": "BackgroundTransferGroup"
            }
          ],
          "Name": "GetCurrentDownloadsForTransferGroupAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<UnconstrainedTransferRequestResult>",
          "Parameters": [
            {
              "Name": "operations",
              "Type": "IEnumerable<DownloadOperation>"
            }
          ],
          "Name": "RequestUnconstrainedDownloadsAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ],
          "Name": "SetRequestHeader"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundDownloader"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsEnabled"
        },
        {
          "Type": "IBackgroundTrigger",
          "IsGet": true,
          "Name": "Trigger"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Enable"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferCompletionGroup"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<DownloadOperation>",
          "IsGet": true,
          "Name": "Downloads"
        },
        {
          "Type": "IReadOnlyList<UploadOperation>",
          "IsGet": true,
          "Name": "Uploads"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferCompletionGroupTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "fileName",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "IStorageFile"
            }
          ],
          "Name": "SetFile"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ],
          "Name": "SetHeader"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "SetText"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferContentPart"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "WebErrorStatus",
          "Parameters": [
            {
              "Name": "hresult",
              "Type": "Int32"
            }
          ],
          "Name": "GetStatus"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferError"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "BackgroundTransferBehavior",
          "IsGet": true,
          "IsSet": true,
          "Name": "TransferBehavior"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "BackgroundTransferGroup",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "CreateGroup"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferGroup"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTransferBase"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "completionGroup",
              "Type": "BackgroundTransferCompletionGroup"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "BackgroundTransferCompletionGroup",
          "IsGet": true,
          "Name": "CompletionGroup"
        },
        {
          "Type": "BackgroundTransferCostPolicy",
          "IsGet": true,
          "IsSet": true,
          "Name": "CostPolicy"
        },
        {
          "Type": "TileNotification",
          "IsGet": true,
          "IsSet": true,
          "Name": "FailureTileNotification"
        },
        {
          "Type": "ToastNotification",
          "IsGet": true,
          "IsSet": true,
          "Name": "FailureToastNotification"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Group"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Method"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProxyCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServerCredential"
        },
        {
          "Type": "TileNotification",
          "IsGet": true,
          "IsSet": true,
          "Name": "SuccessTileNotification"
        },
        {
          "Type": "ToastNotification",
          "IsGet": true,
          "IsSet": true,
          "Name": "SuccessToastNotification"
        },
        {
          "Type": "BackgroundTransferGroup",
          "IsGet": true,
          "IsSet": true,
          "Name": "TransferGroup"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "UploadOperation",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "sourceFile",
              "Type": "IStorageFile"
            }
          ],
          "Name": "CreateUpload"
        },
        {
          "ReturnType": "IAsyncOperation<UploadOperation>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "parts",
              "Type": "IEnumerable<BackgroundTransferContentPart>"
            }
          ],
          "Name": "CreateUploadAsync"
        },
        {
          "ReturnType": "IAsyncOperation<UploadOperation>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "parts",
              "Type": "IEnumerable<BackgroundTransferContentPart>"
            },
            {
              "Name": "subType",
              "Type": "String"
            }
          ],
          "Name": "CreateUploadAsync"
        },
        {
          "ReturnType": "IAsyncOperation<UploadOperation>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "parts",
              "Type": "IEnumerable<BackgroundTransferContentPart>"
            },
            {
              "Name": "subType",
              "Type": "String"
            },
            {
              "Name": "boundary",
              "Type": "String"
            }
          ],
          "Name": "CreateUploadAsync"
        },
        {
          "ReturnType": "IAsyncOperation<UploadOperation>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "sourceStream",
              "Type": "IInputStream"
            }
          ],
          "Name": "CreateUploadFromStreamAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<UploadOperation>>",
          "Name": "GetCurrentUploadsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<UploadOperation>>",
          "Parameters": [
            {
              "Name": "group",
              "Type": "String"
            }
          ],
          "Name": "GetCurrentUploadsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<UploadOperation>>",
          "Parameters": [
            {
              "Name": "group",
              "Type": "BackgroundTransferGroup"
            }
          ],
          "Name": "GetCurrentUploadsForTransferGroupAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<UnconstrainedTransferRequestResult>",
          "Parameters": [
            {
              "Name": "operations",
              "Type": "IEnumerable<UploadOperation>"
            }
          ],
          "Name": "RequestUnconstrainedUploadsAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ],
          "Name": "SetRequestHeader"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundUploader"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<Uri>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContentUris"
        },
        {
          "Type": "Uri",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true,
          "Name": "IndirectContentUri"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LastSuccessfulPrefetchTime"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.ContentPrefetcher"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTransferOperation",
        "IBackgroundTransferOperationPriority"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BackgroundTransferCostPolicy",
          "IsGet": true,
          "IsSet": true,
          "Name": "CostPolicy"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Group"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "Guid"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Method"
        },
        {
          "Type": "BackgroundTransferPriority",
          "IsGet": true,
          "IsSet": true,
          "Name": "Priority"
        },
        {
          "Type": "BackgroundDownloadProgress",
          "IsGet": true,
          "Name": "Progress"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "RequestedUri"
        },
        {
          "Type": "IStorageFile",
          "IsGet": true,
          "Name": "ResultFile"
        },
        {
          "Type": "BackgroundTransferGroup",
          "IsGet": true,
          "Name": "TransferGroup"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperationWithProgress<DownloadOperation,DownloadOperation>",
          "Name": "AttachAsync"
        },
        {
          "ReturnType": "ResponseInformation",
          "Name": "GetResponseInformation"
        },
        {
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "GetResultStreamAt"
        },
        {
          "ReturnType": "Void",
          "Name": "Pause"
        },
        {
          "ReturnType": "Void",
          "Name": "Resume"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<DownloadOperation,DownloadOperation>",
          "Name": "StartAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.DownloadOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "ActualUri"
        },
        {
          "Type": "IReadOnlyDictionary<String,String>",
          "IsGet": true,
          "Name": "Headers"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsResumable"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "StatusCode"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.ResponseInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsUnconstrained"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.UnconstrainedTransferRequestResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTransferOperation",
        "IBackgroundTransferOperationPriority"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BackgroundTransferCostPolicy",
          "IsGet": true,
          "IsSet": true,
          "Name": "CostPolicy"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Group"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "Guid"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Method"
        },
        {
          "Type": "BackgroundTransferPriority",
          "IsGet": true,
          "IsSet": true,
          "Name": "Priority"
        },
        {
          "Type": "BackgroundUploadProgress",
          "IsGet": true,
          "Name": "Progress"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "RequestedUri"
        },
        {
          "Type": "IStorageFile",
          "IsGet": true,
          "Name": "SourceFile"
        },
        {
          "Type": "BackgroundTransferGroup",
          "IsGet": true,
          "Name": "TransferGroup"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperationWithProgress<UploadOperation,UploadOperation>",
          "Name": "AttachAsync"
        },
        {
          "ReturnType": "ResponseInformation",
          "Name": "GetResponseInformation"
        },
        {
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "GetResultStreamAt"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<UploadOperation,UploadOperation>",
          "Name": "StartAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.UploadOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AttributionId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AttributionName"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "Name": "AttributionThumbnail"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "BytesReceived"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "BytesSent"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.AttributedNetworkUsage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "AccessPointName"
        },
        {
          "Type": "CellularApnAuthenticationType",
          "IsGet": true,
          "IsSet": true,
          "Name": "AuthenticationType"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsCompressionEnabled"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Password"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProviderId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "UserName"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.CellularApnContext"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "ApproachingDataLimit"
        },
        {
          "Type": "NetworkCostType",
          "IsGet": true,
          "Name": "NetworkCostType"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "OverDataLimit"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Roaming"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ConnectionCost"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsWlanConnectionProfile"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsWwanConnectionProfile"
        },
        {
          "Type": "NetworkAdapter",
          "IsGet": true,
          "Name": "NetworkAdapter"
        },
        {
          "Type": "NetworkSecuritySettings",
          "IsGet": true,
          "Name": "NetworkSecuritySettings"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ProfileName"
        },
        {
          "Type": "Nullable<Guid>",
          "IsGet": true,
          "Name": "ServiceProviderGuid"
        },
        {
          "Type": "WlanConnectionProfileDetails",
          "IsGet": true,
          "Name": "WlanConnectionProfileDetails"
        },
        {
          "Type": "WwanConnectionProfileDetails",
          "IsGet": true,
          "Name": "WwanConnectionProfileDetails"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<AttributedNetworkUsage>>",
          "Parameters": [
            {
              "Name": "startTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "endTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "states",
              "Type": "NetworkUsageStates"
            }
          ],
          "Name": "GetAttributedNetworkUsageAsync"
        },
        {
          "ReturnType": "ConnectionCost",
          "Name": "GetConnectionCost"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<ConnectivityInterval>>",
          "Parameters": [
            {
              "Name": "startTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "endTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "states",
              "Type": "NetworkUsageStates"
            }
          ],
          "Name": "GetConnectivityIntervalsAsync"
        },
        {
          "ReturnType": "DataPlanStatus",
          "Name": "GetDataPlanStatus"
        },
        {
          "ReturnType": "DomainConnectivityLevel",
          "Name": "GetDomainConnectivityLevel"
        },
        {
          "ReturnType": "DataUsage",
          "Parameters": [
            {
              "Name": "StartTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "EndTime",
              "Type": "DateTimeOffset"
            }
          ],
          "Name": "GetLocalUsage"
        },
        {
          "ReturnType": "DataUsage",
          "Parameters": [
            {
              "Name": "StartTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "EndTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "States",
              "Type": "RoamingStates"
            }
          ],
          "Name": "GetLocalUsage"
        },
        {
          "ReturnType": "NetworkConnectivityLevel",
          "Name": "GetNetworkConnectivityLevel"
        },
        {
          "ReturnType": "IReadOnlyList<String>",
          "Name": "GetNetworkNames"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<NetworkUsage>>",
          "Parameters": [
            {
              "Name": "startTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "endTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "granularity",
              "Type": "DataUsageGranularity"
            },
            {
              "Name": "states",
              "Type": "NetworkUsageStates"
            }
          ],
          "Name": "GetNetworkUsageAsync"
        },
        {
          "ReturnType": "Nullable<Byte>",
          "Name": "GetSignalBars"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ConnectionProfile"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<Boolean>",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsBackgroundDataUsageRestricted"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsConnected"
        },
        {
          "Type": "Nullable<Boolean>",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsOverDataLimit"
        },
        {
          "Type": "Nullable<Boolean>",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsRoaming"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsWlanConnectionProfile"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsWwanConnectionProfile"
        },
        {
          "Type": "NetworkCostType",
          "IsGet": true,
          "IsSet": true,
          "Name": "NetworkCostType"
        },
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "RawData"
        },
        {
          "Type": "Nullable<Guid>",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServiceProviderGuid"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ConnectionProfileFilter"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ConnectionProfile",
          "IsGet": true,
          "Name": "ConnectionProfile"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ConnectionSession"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "ConnectionDuration"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "StartTime"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ConnectivityInterval"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ConnectionSession>",
          "Parameters": [
            {
              "Name": "cellularApnContext",
              "Type": "CellularApnContext"
            }
          ],
          "Name": "AcquireConnectionAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "routePolicy",
              "Type": "RoutePolicy"
            }
          ],
          "Name": "AddHttpRoutePolicy"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "routePolicy",
              "Type": "RoutePolicy"
            }
          ],
          "Name": "RemoveHttpRoutePolicy"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ConnectivityManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "Name": "DataLimitInMegabytes"
        },
        {
          "Type": "DataPlanUsage",
          "IsGet": true,
          "Name": "DataPlanUsage"
        },
        {
          "Type": "Nullable<UInt64>",
          "IsGet": true,
          "Name": "InboundBitsPerSecond"
        },
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "Name": "MaxTransferSizeInMegabytes"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "Name": "NextBillingCycle"
        },
        {
          "Type": "Nullable<UInt64>",
          "IsGet": true,
          "Name": "OutboundBitsPerSecond"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.DataPlanStatus"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "LastSyncTime"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MegabytesUsed"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.DataPlanUsage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "BytesReceived"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "BytesSent"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.DataUsage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "NetworkAdapter",
          "IsGet": true,
          "Name": "NetworkAdapter"
        },
        {
          "Type": "Nullable<Byte>",
          "IsGet": true,
          "Name": "PrefixLength"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.IPInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "LanIdentifierData",
          "IsGet": true,
          "Name": "InfrastructureId"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "NetworkAdapterId"
        },
        {
          "Type": "LanIdentifierData",
          "IsGet": true,
          "Name": "PortId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.LanIdentifier"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Type"
        },
        {
          "Type": "IReadOnlyList<Byte>",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.LanIdentifierData"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "IanaInterfaceType"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "InboundMaxBitsPerSecond"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "NetworkAdapterId"
        },
        {
          "Type": "NetworkItem",
          "IsGet": true,
          "Name": "NetworkItem"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "OutboundMaxBitsPerSecond"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<ConnectionProfile>",
          "Name": "GetConnectedProfileAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.NetworkAdapter"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<ConnectionProfile>>",
          "Parameters": [
            {
              "Name": "pProfileFilter",
              "Type": "ConnectionProfileFilter"
            }
          ],
          "Name": "FindConnectionProfilesAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<ConnectionProfile>",
          "Name": "GetConnectionProfiles"
        },
        {
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<HostName>",
          "Name": "GetHostNames"
        },
        {
          "IsStatic": true,
          "ReturnType": "ConnectionProfile",
          "Name": "GetInternetConnectionProfile"
        },
        {
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<LanIdentifier>",
          "Name": "GetLanIdentifiers"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ProxyConfiguration>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "GetProxyConfigurationAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<EndpointPair>",
          "Parameters": [
            {
              "Name": "destinationList",
              "Type": "IEnumerable<EndpointPair>"
            },
            {
              "Name": "sortOptions",
              "Type": "HostNameSortOptions"
            }
          ],
          "Name": "GetSortedEndpointPairs"
        }
      ],
      "Events": [
        {
          "Type": "NetworkStatusChangedEventHandler",
          "IsStatic": true,
          "Name": "NetworkStatusChanged"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "NetworkId"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "NetworkTypes",
          "Name": "GetNetworkTypes"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.NetworkItem"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "NetworkAuthenticationType",
          "IsGet": true,
          "Name": "NetworkAuthenticationType"
        },
        {
          "Type": "NetworkEncryptionType",
          "IsGet": true,
          "Name": "NetworkEncryptionType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.NetworkSecuritySettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasNewConnectionCost"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasNewDomainConnectivityLevel"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasNewHostNameList"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasNewInternetConnectionProfile"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasNewNetworkConnectivityLevel"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasNewTetheringClientCount"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasNewTetheringOperationalState"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasNewWwanRegistrationState"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.NetworkStateChangeEventDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "BytesReceived"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "BytesSent"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "ConnectionDuration"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.NetworkUsage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanConnectDirectly"
        },
        {
          "Type": "IReadOnlyList<Uri>",
          "IsGet": true,
          "Name": "ProxyUris"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ProxyConfiguration"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "connectionProfile",
              "Type": "ConnectionProfile"
            },
            {
              "Name": "hostName",
              "Type": "HostName"
            },
            {
              "Name": "type",
              "Type": "DomainNameType"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "ConnectionProfile",
          "IsGet": true,
          "Name": "ConnectionProfile"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "HostName"
        },
        {
          "Type": "DomainNameType",
          "IsGet": true,
          "Name": "HostNameType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.RoutePolicy"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "String",
          "Name": "GetConnectedSsid"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.WlanConnectionProfileDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AccessPointName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "HomeProviderId"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "WwanDataClass",
          "Name": "GetCurrentDataClass"
        },
        {
          "ReturnType": "WwanNetworkRegistrationState",
          "Name": "GetNetworkRegistrationState"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.WwanConnectionProfileDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "localHostName",
              "Type": "HostName"
            },
            {
              "Name": "localServiceName",
              "Type": "String"
            },
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "HostName",
          "IsGet": true,
          "IsSet": true,
          "Name": "LocalHostName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "LocalServiceName"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "IsSet": true,
          "Name": "RemoteHostName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "RemoteServiceName"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.EndpointPair"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "hostName",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "CanonicalName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "IPInformation",
          "IsGet": true,
          "Name": "IPInformation"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RawName"
        },
        {
          "Type": "HostNameType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "value1",
              "Type": "String"
            },
            {
              "Name": "value2",
              "Type": "String"
            }
          ],
          "Name": "Compare"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "hostName",
              "Type": "HostName"
            }
          ],
          "Name": "IsEqual"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.HostName"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "AuthenticationUrl"
        },
        {
          "Type": "NetworkAdapter",
          "IsGet": true,
          "Name": "NetworkAdapter"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "RedirectMessageUrl"
        },
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "Name": "RedirectMessageXml"
        },
        {
          "Type": "Byte[]",
          "IsGet": true,
          "Name": "WirelessNetworkId"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "markAsManual",
              "Type": "Boolean"
            }
          ],
          "Name": "AbortAuthentication"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "password",
              "Type": "String"
            },
            {
              "Name": "extraParameters",
              "Type": "String"
            },
            {
              "Name": "markAsManualConnectOnFailure",
              "Type": "Boolean"
            }
          ],
          "Name": "IssueCredentials"
        },
        {
          "ReturnType": "IAsyncOperation<HotspotCredentialsAuthenticationResult>",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "password",
              "Type": "String"
            },
            {
              "Name": "extraParameters",
              "Type": "String"
            },
            {
              "Name": "markAsManualConnectOnFailure",
              "Type": "Boolean"
            }
          ],
          "Name": "IssueCredentialsAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "SkipAuthentication"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "packageRelativeApplicationId",
              "Type": "String"
            },
            {
              "Name": "applicationParameters",
              "Type": "String"
            }
          ],
          "Name": "TriggerAttentionRequired"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "evenToken",
              "Type": "String"
            },
            {
              "Name": "context",
              "Type": "HotspotAuthenticationContext&",
              "Out": true
            }
          ],
          "Name": "TryGetAuthenticationContext"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.HotspotAuthenticationContext"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "EventToken"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.HotspotAuthenticationEventDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "Name": "AuthenticationReplyXml"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasNetworkErrorOccurred"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "LogoffUrl"
        },
        {
          "Type": "HotspotAuthenticationResponseCode",
          "IsGet": true,
          "Name": "ResponseCode"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.HotspotCredentialsAuthenticationResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<String>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AvailableNetworkAccountIds"
        },
        {
          "Type": "MobileBroadbandDeviceInformation",
          "IsGet": true,
          "Name": "CurrentDeviceInformation"
        },
        {
          "Type": "MobileBroadbandNetwork",
          "IsGet": true,
          "Name": "CurrentNetwork"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NetworkAccountId"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "ServiceProviderGuid"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ServiceProviderName"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "MobileBroadbandAccount",
          "Parameters": [
            {
              "Name": "networkAccountId",
              "Type": "String"
            }
          ],
          "Name": "CreateFromNetworkAccountId"
        },
        {
          "ReturnType": "IReadOnlyList<ConnectionProfile>",
          "Name": "GetConnectionProfiles"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandAccount"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NetworkAccountId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandAccountEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasDeviceInformationChanged"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasNetworkChanged"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NetworkAccountId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandAccountUpdatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MobileBroadbandAccountWatcherStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Start"
        },
        {
          "ReturnType": "Void",
          "Name": "Stop"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<MobileBroadbandAccountWatcher,MobileBroadbandAccountEventArgs>",
          "Name": "AccountAdded"
        },
        {
          "Type": "TypedEventHandler<MobileBroadbandAccountWatcher,MobileBroadbandAccountEventArgs>",
          "Name": "AccountRemoved"
        },
        {
          "Type": "TypedEventHandler<MobileBroadbandAccountWatcher,MobileBroadbandAccountUpdatedEventArgs>",
          "Name": "AccountUpdated"
        },
        {
          "Type": "TypedEventHandler<MobileBroadbandAccountWatcher,Object>",
          "Name": "EnumerationCompleted"
        },
        {
          "Type": "TypedEventHandler<MobileBroadbandAccountWatcher,Object>",
          "Name": "Stopped"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "CellularClass",
          "IsGet": true,
          "Name": "CellularClass"
        },
        {
          "Type": "MobileBroadbandRadioState",
          "IsGet": true,
          "Name": "CurrentRadioState"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "CustomDataClass"
        },
        {
          "Type": "DataClasses",
          "IsGet": true,
          "Name": "DataClasses"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "MobileBroadbandDeviceType",
          "IsGet": true,
          "Name": "DeviceType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "FirmwareInformation"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Manufacturer"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "MobileEquipmentId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Model"
        },
        {
          "Type": "NetworkDeviceStatus",
          "IsGet": true,
          "Name": "NetworkDeviceStatus"
        },
        {
          "Type": "MobileBroadbandPinManager",
          "IsGet": true,
          "Name": "PinManager"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Revision"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "SerialNumber"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "SimIccId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "SubscriberId"
        },
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "TelephoneNumbers"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandDeviceInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "DeviceServiceId"
        },
        {
          "Type": "IReadOnlyList<UInt32>",
          "IsGet": true,
          "Name": "SupportedCommands"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "MobileBroadbandDeviceServiceCommandSession",
          "Name": "OpenCommandSession"
        },
        {
          "ReturnType": "MobileBroadbandDeviceServiceDataSession",
          "Name": "OpenDataSession"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandDeviceService"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "ResponseData"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "StatusCode"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceCommandResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "CloseSession"
        },
        {
          "ReturnType": "IAsyncOperation<MobileBroadbandDeviceServiceCommandResult>",
          "Parameters": [
            {
              "Name": "commandId",
              "Type": "UInt32"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ],
          "Name": "SendQueryCommandAsync"
        },
        {
          "ReturnType": "IAsyncOperation<MobileBroadbandDeviceServiceCommandResult>",
          "Parameters": [
            {
              "Name": "commandId",
              "Type": "UInt32"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ],
          "Name": "SendSetCommandAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceCommandSession"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "ReceivedData"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "CloseSession"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "value",
              "Type": "IBuffer"
            }
          ],
          "Name": "WriteDataAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<MobileBroadbandDeviceServiceDataSession,MobileBroadbandDeviceServiceDataReceivedEventArgs>",
          "Name": "DataReceived"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataSession"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "DeviceServiceId"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsDataReadSupported"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsDataWriteSupported"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "DeviceServiceId"
        },
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "ReceivedData"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MobileBroadbandAccount",
          "IsGet": true,
          "Name": "CurrentAccount"
        },
        {
          "Type": "MobileBroadbandDeviceInformation",
          "IsGet": true,
          "Name": "DeviceInformation"
        },
        {
          "Type": "IReadOnlyList<MobileBroadbandDeviceServiceInformation>",
          "IsGet": true,
          "Name": "DeviceServices"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MaxDeviceServiceCommandSizeInBytes"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MaxDeviceServiceDataSizeInBytes"
        },
        {
          "Type": "MobileBroadbandUicc",
          "IsGet": true,
          "Name": "Uicc"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "MobileBroadbandModem",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ],
          "Name": "FromId"
        },
        {
          "IsStatic": true,
          "ReturnType": "MobileBroadbandModem",
          "Name": "GetDefault"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Name": "GetDeviceSelector"
        },
        {
          "ReturnType": "MobileBroadbandDeviceService",
          "Parameters": [
            {
              "Name": "deviceServiceId",
              "Type": "Guid"
            }
          ],
          "Name": "GetDeviceService"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandModem"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AccessPointName"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "ActivationNetworkError"
        },
        {
          "Type": "NetworkAdapter",
          "IsGet": true,
          "Name": "NetworkAdapter"
        },
        {
          "Type": "NetworkRegistrationState",
          "IsGet": true,
          "Name": "NetworkRegistrationState"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "PacketAttachNetworkError"
        },
        {
          "Type": "DataClasses",
          "IsGet": true,
          "Name": "RegisteredDataClass"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RegisteredProviderId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RegisteredProviderName"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "RegistrationNetworkError"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "ShowConnectionUI"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandNetwork"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "MobileBroadbandNetwork",
          "IsGet": true,
          "Name": "Network"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandNetworkRegistrationStateChange"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<MobileBroadbandNetworkRegistrationStateChange>",
          "IsGet": true,
          "Name": "NetworkRegistrationStateChanges"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandNetworkRegistrationStateChangeTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "AttemptsRemaining"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Enabled"
        },
        {
          "Type": "MobileBroadbandPinFormat",
          "IsGet": true,
          "Name": "Format"
        },
        {
          "Type": "MobileBroadbandPinLockState",
          "IsGet": true,
          "Name": "LockState"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MaxLength"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MinLength"
        },
        {
          "Type": "MobileBroadbandPinType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<MobileBroadbandPinOperationResult>",
          "Parameters": [
            {
              "Name": "currentPin",
              "Type": "String"
            }
          ],
          "Name": "DisableAsync"
        },
        {
          "ReturnType": "IAsyncOperation<MobileBroadbandPinOperationResult>",
          "Parameters": [
            {
              "Name": "currentPin",
              "Type": "String"
            }
          ],
          "Name": "EnableAsync"
        },
        {
          "ReturnType": "IAsyncOperation<MobileBroadbandPinOperationResult>",
          "Parameters": [
            {
              "Name": "currentPin",
              "Type": "String"
            }
          ],
          "Name": "EnterAsync"
        },
        {
          "ReturnType": "IAsyncOperation<MobileBroadbandPinOperationResult>",
          "Parameters": [
            {
              "Name": "currentPin",
              "Type": "String"
            },
            {
              "Name": "newPin",
              "Type": "String"
            }
          ],
          "Name": "ChangeAsync"
        },
        {
          "ReturnType": "IAsyncOperation<MobileBroadbandPinOperationResult>",
          "Parameters": [
            {
              "Name": "pinUnblockKey",
              "Type": "String"
            },
            {
              "Name": "newPin",
              "Type": "String"
            }
          ],
          "Name": "UnblockAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandPin"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "MobileBroadbandPinLockState",
          "IsGet": true,
          "Name": "PinLockState"
        },
        {
          "Type": "MobileBroadbandPinType",
          "IsGet": true,
          "Name": "PinType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandPinLockStateChange"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<MobileBroadbandPinLockStateChange>",
          "IsGet": true,
          "Name": "PinLockStateChanges"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandPinLockStateChangeTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<MobileBroadbandPinType>",
          "IsGet": true,
          "Name": "SupportedPins"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "MobileBroadbandPin",
          "Parameters": [
            {
              "Name": "pinType",
              "Type": "MobileBroadbandPinType"
            }
          ],
          "Name": "GetPin"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandPinManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "AttemptsRemaining"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Succeeded"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandPinOperationResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "MobileBroadbandRadioState",
          "IsGet": true,
          "Name": "RadioState"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<MobileBroadbandRadioStateChange>",
          "IsGet": true,
          "Name": "RadioStateChanges"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChangeTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "SimIccId"
        },
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "UiccAppIds"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandUicc"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Byte",
          "IsGet": true,
          "Name": "EncodingType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Message"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NetworkAccountId"
        },
        {
          "Type": "NetworkOperatorEventMessageType",
          "IsGet": true,
          "Name": "NotificationType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RuleId"
        },
        {
          "Type": "ISmsMessage",
          "IsGet": true,
          "Name": "SmsMessage"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "allow",
              "Type": "Boolean"
            },
            {
              "Name": "entitlementFailureReason",
              "Type": "String"
            }
          ],
          "Name": "AuthorizeTethering"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Passphrase"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Ssid"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.NetworkOperatorTetheringAccessPointConfiguration"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<HostName>",
          "IsGet": true,
          "Name": "HostNames"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "MacAddress"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.NetworkOperatorTetheringClient"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "ClientCount"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MaxClientCount"
        },
        {
          "Type": "TetheringOperationalState",
          "IsGet": true,
          "Name": "TetheringOperationalState"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "configuration",
              "Type": "NetworkOperatorTetheringAccessPointConfiguration"
            }
          ],
          "Name": "ConfigureAccessPointAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "NetworkOperatorTetheringManager",
          "Parameters": [
            {
              "Name": "profile",
              "Type": "ConnectionProfile"
            }
          ],
          "Name": "CreateFromConnectionProfile"
        },
        {
          "IsStatic": true,
          "ReturnType": "NetworkOperatorTetheringManager",
          "Parameters": [
            {
              "Name": "networkAccountId",
              "Type": "String"
            }
          ],
          "Name": "CreateFromNetworkAccountId"
        },
        {
          "ReturnType": "NetworkOperatorTetheringAccessPointConfiguration",
          "Name": "GetCurrentAccessPointConfiguration"
        },
        {
          "IsStatic": true,
          "ReturnType": "TetheringCapability",
          "Parameters": [
            {
              "Name": "networkAccountId",
              "Type": "String"
            }
          ],
          "Name": "GetTetheringCapability"
        },
        {
          "IsStatic": true,
          "ReturnType": "TetheringCapability",
          "Parameters": [
            {
              "Name": "profile",
              "Type": "ConnectionProfile"
            }
          ],
          "Name": "GetTetheringCapabilityFromConnectionProfile"
        },
        {
          "ReturnType": "IReadOnlyList<NetworkOperatorTetheringClient>",
          "Name": "GetTetheringClients"
        },
        {
          "ReturnType": "IAsyncOperation<NetworkOperatorTetheringOperationResult>",
          "Name": "StartTetheringAsync"
        },
        {
          "ReturnType": "IAsyncOperation<NetworkOperatorTetheringOperationResult>",
          "Name": "StopTetheringAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.NetworkOperatorTetheringManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AdditionalErrorMessage"
        },
        {
          "Type": "TetheringOperationStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.NetworkOperatorTetheringOperationResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "NetworkCostType"
            }
          ],
          "Name": "UpdateCost"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "ProfileUsage"
            }
          ],
          "Name": "UpdateUsage"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.ProvisionedProfile"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AllElementsProvisioned"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ProvisionResultsXml"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.ProvisionFromXmlDocumentResults"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "ProvisioningAgent",
          "Parameters": [
            {
              "Name": "networkAccountId",
              "Type": "String"
            }
          ],
          "Name": "CreateFromNetworkAccountId"
        },
        {
          "ReturnType": "ProvisionedProfile",
          "Parameters": [
            {
              "Name": "mediaType",
              "Type": "ProfileMediaType"
            },
            {
              "Name": "profileName",
              "Type": "String"
            }
          ],
          "Name": "GetProvisionedProfile"
        },
        {
          "ReturnType": "IAsyncOperation<ProvisionFromXmlDocumentResults>",
          "Parameters": [
            {
              "Name": "provisioningXmlDocument",
              "Type": "String"
            }
          ],
          "Name": "ProvisionFromXmlDocumentAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.ProvisioningAgent"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "messageText",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Byte",
          "IsGet": true,
          "IsSet": true,
          "Name": "DataCodingScheme"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "PayloadAsText"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Byte[]",
          "Name": "GetPayload"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]"
            }
          ],
          "Name": "SetPayload"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.UssdMessage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UssdMessage",
          "IsGet": true,
          "Name": "Message"
        },
        {
          "Type": "UssdResultCode",
          "IsGet": true,
          "Name": "ResultCode"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.UssdReply"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Close"
        },
        {
          "IsStatic": true,
          "ReturnType": "UssdSession",
          "Parameters": [
            {
              "Name": "networkAccountId",
              "Type": "String"
            }
          ],
          "Name": "CreateFromNetworkAccountId"
        },
        {
          "IsStatic": true,
          "ReturnType": "UssdSession",
          "Parameters": [
            {
              "Name": "networkInterfaceId",
              "Type": "String"
            }
          ],
          "Name": "CreateFromNetworkInterfaceId"
        },
        {
          "ReturnType": "IAsyncOperation<UssdReply>",
          "Parameters": [
            {
              "Name": "message",
              "Type": "UssdMessage"
            }
          ],
          "Name": "SendMessageAndGetReplyAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.UssdSession"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PeerInformation",
          "IsGet": true,
          "Name": "PeerInformation"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Proximity.ConnectionRequestedEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true,
          "Name": "AllowBluetooth"
        },
        {
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true,
          "Name": "AllowInfrastructure"
        },
        {
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true,
          "Name": "AllowWiFiDirect"
        },
        {
          "Type": "IDictionary<String,String>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AlternateIdentities"
        },
        {
          "Type": "IBuffer",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true,
          "Name": "DiscoveryData"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "PeerRole",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true,
          "Name": "Role"
        },
        {
          "Type": "PeerDiscoveryTypes",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SupportedDiscoveryTypes"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<StreamSocket>",
          "Parameters": [
            {
              "Name": "peerInformation",
              "Type": "PeerInformation"
            }
          ],
          "Name": "ConnectAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "PeerWatcher",
          "Name": "CreateWatcher"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<PeerInformation>>",
          "Name": "FindAllPeersAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "Start"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "peerMessage",
              "Type": "String"
            }
          ],
          "Name": "Start"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "Stop"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<Object,ConnectionRequestedEventArgs>",
          "IsStatic": true,
          "Name": "ConnectionRequested"
        },
        {
          "Type": "TypedEventHandler<Object,TriggeredConnectionStateChangedEventArgs>",
          "IsStatic": true,
          "Name": "TriggeredConnectionStateChanged"
        }
      ],
      "Name": "Windows.Networking.Proximity.PeerFinder"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "DiscoveryData"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "HostName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ServiceName"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Proximity.PeerInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PeerWatcherStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Start"
        },
        {
          "ReturnType": "Void",
          "Name": "Stop"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<PeerWatcher,PeerInformation>",
          "Name": "Added"
        },
        {
          "Type": "TypedEventHandler<PeerWatcher,Object>",
          "Name": "EnumerationCompleted"
        },
        {
          "Type": "TypedEventHandler<PeerWatcher,PeerInformation>",
          "Name": "Removed"
        },
        {
          "Type": "TypedEventHandler<PeerWatcher,Object>",
          "Name": "Stopped"
        },
        {
          "Type": "TypedEventHandler<PeerWatcher,PeerInformation>",
          "Name": "Updated"
        }
      ],
      "Name": "Windows.Networking.Proximity.PeerWatcher"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "BitsPerSecond"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MaxMessageBytes"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "ProximityDevice",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ],
          "Name": "FromId"
        },
        {
          "IsStatic": true,
          "ReturnType": "ProximityDevice",
          "Name": "GetDefault"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Name": "GetDeviceSelector"
        },
        {
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "messageType",
              "Type": "String"
            },
            {
              "Name": "message",
              "Type": "IBuffer"
            }
          ],
          "Name": "PublishBinaryMessage"
        },
        {
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "messageType",
              "Type": "String"
            },
            {
              "Name": "message",
              "Type": "IBuffer"
            },
            {
              "Name": "messageTransmittedHandler",
              "Type": "MessageTransmittedHandler"
            }
          ],
          "Name": "PublishBinaryMessage"
        },
        {
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "messageType",
              "Type": "String"
            },
            {
              "Name": "message",
              "Type": "String"
            }
          ],
          "Name": "PublishMessage"
        },
        {
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "messageType",
              "Type": "String"
            },
            {
              "Name": "message",
              "Type": "String"
            },
            {
              "Name": "messageTransmittedHandler",
              "Type": "MessageTransmittedHandler"
            }
          ],
          "Name": "PublishMessage"
        },
        {
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "message",
              "Type": "Uri"
            }
          ],
          "Name": "PublishUriMessage"
        },
        {
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "message",
              "Type": "Uri"
            },
            {
              "Name": "messageTransmittedHandler",
              "Type": "MessageTransmittedHandler"
            }
          ],
          "Name": "PublishUriMessage"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "messageId",
              "Type": "Int64"
            }
          ],
          "Name": "StopPublishingMessage"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "subscriptionId",
              "Type": "Int64"
            }
          ],
          "Name": "StopSubscribingForMessage"
        },
        {
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "messageType",
              "Type": "String"
            },
            {
              "Name": "messageReceivedHandler",
              "Type": "MessageReceivedHandler"
            }
          ],
          "Name": "SubscribeForMessage"
        }
      ],
      "Events": [
        {
          "Type": "DeviceArrivedEventHandler",
          "Name": "DeviceArrived"
        },
        {
          "Type": "DeviceDepartedEventHandler",
          "Name": "DeviceDeparted"
        }
      ],
      "Name": "Windows.Networking.Proximity.ProximityDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "Data"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DataAsString"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "MessageType"
        },
        {
          "Type": "Int64",
          "IsGet": true,
          "Name": "SubscriptionId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Proximity.ProximityMessage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "StreamSocket",
          "IsGet": true,
          "Name": "Socket"
        },
        {
          "Type": "TriggeredConnectState",
          "IsGet": true,
          "Name": "State"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Proximity.TriggeredConnectionStateChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "ExpirationTime"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Uri"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Close"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<PushNotificationChannel,PushNotificationReceivedEventArgs>",
          "Name": "PushNotificationReceived"
        }
      ],
      "Name": "Windows.Networking.PushNotifications.PushNotificationChannel"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PushNotificationChannel>",
          "Name": "CreatePushNotificationChannelForApplicationAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PushNotificationChannel>",
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ],
          "Name": "CreatePushNotificationChannelForApplicationAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PushNotificationChannel>",
          "Parameters": [
            {
              "Name": "tileId",
              "Type": "String"
            }
          ],
          "Name": "CreatePushNotificationChannelForSecondaryTileAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.PushNotifications.PushNotificationChannelManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BadgeNotification",
          "IsGet": true,
          "Name": "BadgeNotification"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Cancel"
        },
        {
          "Type": "PushNotificationType",
          "IsGet": true,
          "Name": "NotificationType"
        },
        {
          "Type": "RawNotification",
          "IsGet": true,
          "Name": "RawNotification"
        },
        {
          "Type": "TileNotification",
          "IsGet": true,
          "Name": "TileNotification"
        },
        {
          "Type": "ToastNotification",
          "IsGet": true,
          "Name": "ToastNotification"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.PushNotifications.PushNotificationReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Content"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.PushNotifications.RawNotification"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasInstanceNameChanged"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "IPAddress"
        },
        {
          "Type": "DnssdRegistrationStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.ServiceDiscovery.Dnssd.DnssdRegistrationResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "DnssdServiceInstanceName",
              "Type": "HostName"
            },
            {
              "Name": "hostName",
              "Type": "HostName"
            },
            {
              "Name": "port",
              "Type": "UInt16"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "HostName",
          "IsGet": true,
          "IsSet": true,
          "Name": "DnssdServiceInstanceName"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "IsSet": true,
          "Name": "HostName"
        },
        {
          "Type": "UInt16",
          "IsGet": true,
          "IsSet": true,
          "Name": "Port"
        },
        {
          "Type": "UInt16",
          "IsGet": true,
          "IsSet": true,
          "Name": "Priority"
        },
        {
          "Type": "IDictionary<String,String>",
          "IsGet": true,
          "Name": "TextAttributes"
        },
        {
          "Type": "UInt16",
          "IsGet": true,
          "IsSet": true,
          "Name": "Weight"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<DnssdRegistrationResult>",
          "Parameters": [
            {
              "Name": "socket",
              "Type": "DatagramSocket"
            }
          ],
          "Name": "RegisterDatagramSocketAsync"
        },
        {
          "ReturnType": "IAsyncOperation<DnssdRegistrationResult>",
          "Parameters": [
            {
              "Name": "socket",
              "Type": "DatagramSocket"
            },
            {
              "Name": "adapter",
              "Type": "NetworkAdapter"
            }
          ],
          "Name": "RegisterDatagramSocketAsync"
        },
        {
          "ReturnType": "IAsyncOperation<DnssdRegistrationResult>",
          "Parameters": [
            {
              "Name": "socket",
              "Type": "StreamSocketListener"
            }
          ],
          "Name": "RegisterStreamSocketListenerAsync"
        },
        {
          "ReturnType": "IAsyncOperation<DnssdRegistrationResult>",
          "Parameters": [
            {
              "Name": "socket",
              "Type": "StreamSocketListener"
            },
            {
              "Name": "adapter",
              "Type": "NetworkAdapter"
            }
          ],
          "Name": "RegisterStreamSocketListenerAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.ServiceDiscovery.Dnssd.DnssdServiceInstance"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<DnssdServiceInstance>",
        "IReadOnlyCollection<DnssdServiceInstance>",
        "IReadOnlyList<DnssdServiceInstance>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.ServiceDiscovery.Dnssd.DnssdServiceInstanceCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DnssdServiceWatcherStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Start"
        },
        {
          "ReturnType": "Void",
          "Name": "Stop"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<DnssdServiceWatcher,DnssdServiceInstance>",
          "Name": "Added"
        },
        {
          "Type": "TypedEventHandler<DnssdServiceWatcher,Object>",
          "Name": "EnumerationCompleted"
        },
        {
          "Type": "TypedEventHandler<DnssdServiceWatcher,Object>",
          "Name": "Stopped"
        }
      ],
      "Name": "Windows.Networking.ServiceDiscovery.Dnssd.DnssdServiceWatcher"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "channelId",
              "Type": "String"
            },
            {
              "Name": "serverKeepAliveIntervalInMinutes",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "channelId",
              "Type": "String"
            },
            {
              "Name": "serverKeepAliveIntervalInMinutes",
              "Type": "UInt32"
            },
            {
              "Name": "resourceRequestType",
              "Type": "ControlChannelTriggerResourceType"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ControlChannelTriggerId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "CurrentKeepAliveIntervalInMinutes"
        },
        {
          "Type": "IBackgroundTrigger",
          "IsGet": true,
          "Name": "KeepAliveTrigger"
        },
        {
          "Type": "IBackgroundTrigger",
          "IsGet": true,
          "Name": "PushNotificationTrigger"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServerKeepAliveIntervalInMinutes"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "TransportObject"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "DecreaseNetworkKeepAliveInterval"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "Void",
          "Name": "FlushTransport"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "transport",
              "Type": "Object"
            }
          ],
          "Name": "UsingTransport"
        },
        {
          "ReturnType": "ControlChannelTriggerStatus",
          "Name": "WaitForPushEnabled"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.ControlChannelTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DatagramSocketControl",
          "IsGet": true,
          "Name": "Control"
        },
        {
          "Type": "DatagramSocketInformation",
          "IsGet": true,
          "Name": "Information"
        },
        {
          "Type": "IOutputStream",
          "IsGet": true,
          "Name": "OutputStream"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localHostName",
              "Type": "HostName"
            },
            {
              "Name": "localServiceName",
              "Type": "String"
            }
          ],
          "Name": "BindEndpointAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localServiceName",
              "Type": "String"
            }
          ],
          "Name": "BindServiceNameAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localServiceName",
              "Type": "String"
            },
            {
              "Name": "adapter",
              "Type": "NetworkAdapter"
            }
          ],
          "Name": "BindServiceNameAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "CancelIOAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            }
          ],
          "Name": "ConnectAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "endpointPair",
              "Type": "EndpointPair"
            }
          ],
          "Name": "ConnectAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "taskId",
              "Type": "Guid"
            }
          ],
          "Name": "EnableTransferOwnership"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "taskId",
              "Type": "Guid"
            },
            {
              "Name": "connectedStandbyAction",
              "Type": "SocketActivityConnectedStandbyAction"
            }
          ],
          "Name": "EnableTransferOwnership"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<EndpointPair>>",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            }
          ],
          "Name": "GetEndpointPairsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<EndpointPair>>",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            },
            {
              "Name": "sortOptions",
              "Type": "HostNameSortOptions"
            }
          ],
          "Name": "GetEndpointPairsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IOutputStream>",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            }
          ],
          "Name": "GetOutputStreamAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IOutputStream>",
          "Parameters": [
            {
              "Name": "endpointPair",
              "Type": "EndpointPair"
            }
          ],
          "Name": "GetOutputStreamAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "host",
              "Type": "HostName"
            }
          ],
          "Name": "JoinMulticastGroup"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "socketId",
              "Type": "String"
            }
          ],
          "Name": "TransferOwnership"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "socketId",
              "Type": "String"
            },
            {
              "Name": "data",
              "Type": "SocketActivityContext"
            }
          ],
          "Name": "TransferOwnership"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "socketId",
              "Type": "String"
            },
            {
              "Name": "data",
              "Type": "SocketActivityContext"
            },
            {
              "Name": "keepAliveTime",
              "Type": "TimeSpan"
            }
          ],
          "Name": "TransferOwnership"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<DatagramSocket,DatagramSocketMessageReceivedEventArgs>",
          "Name": "MessageReceived"
        }
      ],
      "Name": "Windows.Networking.Sockets.DatagramSocket"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "DontFragment"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "InboundBufferSizeInBytes"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "MulticastOnly"
        },
        {
          "Type": "Byte",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutboundUnicastHopLimit"
        },
        {
          "Type": "SocketQualityOfService",
          "IsGet": true,
          "IsSet": true,
          "Name": "QualityOfService"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.DatagramSocketControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "LocalAddress"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "LocalPort"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "RemoteAddress"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RemotePort"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.DatagramSocketInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "LocalAddress"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "RemoteAddress"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RemotePort"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "DataReader",
          "Name": "GetDataReader"
        },
        {
          "ReturnType": "IInputStream",
          "Name": "GetDataStream"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.DatagramSocketMessageReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IWebSocket"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MessageWebSocketControl",
          "IsGet": true,
          "Name": "Control"
        },
        {
          "Type": "MessageWebSocketInformation",
          "IsGet": true,
          "Name": "Information"
        },
        {
          "Type": "IOutputStream",
          "IsGet": true,
          "Name": "OutputStream"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "code",
              "Type": "UInt16"
            },
            {
              "Name": "reason",
              "Type": "String"
            }
          ],
          "Name": "Close"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "ConnectAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ],
          "Name": "SetRequestHeader"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<IWebSocket,WebSocketClosedEventArgs>",
          "Name": "Closed"
        },
        {
          "Type": "TypedEventHandler<MessageWebSocket,MessageWebSocketMessageReceivedEventArgs>",
          "Name": "MessageReceived"
        }
      ],
      "Name": "Windows.Networking.Sockets.MessageWebSocket"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebSocketControl"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxMessageSize"
        },
        {
          "Type": "SocketMessageType",
          "IsGet": true,
          "IsSet": true,
          "Name": "MessageType"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutboundBufferSizeInBytes"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProxyCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServerCredential"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "SupportedProtocols"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.MessageWebSocketControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebSocketInformation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BandwidthStatistics",
          "IsGet": true,
          "Name": "BandwidthStatistics"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "LocalAddress"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Protocol"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.MessageWebSocketInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SocketMessageType",
          "IsGet": true,
          "Name": "MessageType"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "DataReader",
          "Name": "GetDataReader"
        },
        {
          "ReturnType": "IInputStream",
          "Name": "GetDataStream"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.MessageWebSocketMessageReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "Data"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.SocketActivityContext"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyDictionary<String,SocketActivityInformation>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AllSockets"
        },
        {
          "Type": "SocketActivityContext",
          "IsGet": true,
          "Name": "Context"
        },
        {
          "Type": "DatagramSocket",
          "IsGet": true,
          "Name": "DatagramSocket"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "SocketActivityKind",
          "IsGet": true,
          "Name": "SocketKind"
        },
        {
          "Type": "StreamSocket",
          "IsGet": true,
          "Name": "StreamSocket"
        },
        {
          "Type": "StreamSocketListener",
          "IsGet": true,
          "Name": "StreamSocketListener"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "TaskId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.SocketActivityInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SocketActivityTriggerReason",
          "IsGet": true,
          "Name": "Reason"
        },
        {
          "Type": "SocketActivityInformation",
          "IsGet": true,
          "Name": "SocketInformation"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.SocketActivityTriggerDetails"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "SocketErrorStatus",
          "Parameters": [
            {
              "Name": "hresult",
              "Type": "Int32"
            }
          ],
          "Name": "GetStatus"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.SocketError"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "StreamSocketControl",
          "IsGet": true,
          "Name": "Control"
        },
        {
          "Type": "StreamSocketInformation",
          "IsGet": true,
          "Name": "Information"
        },
        {
          "Type": "IInputStream",
          "IsGet": true,
          "Name": "InputStream"
        },
        {
          "Type": "IOutputStream",
          "IsGet": true,
          "Name": "OutputStream"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Name": "CancelIOAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "endpointPair",
              "Type": "EndpointPair"
            }
          ],
          "Name": "ConnectAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            }
          ],
          "Name": "ConnectAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "endpointPair",
              "Type": "EndpointPair"
            },
            {
              "Name": "protectionLevel",
              "Type": "SocketProtectionLevel"
            }
          ],
          "Name": "ConnectAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            },
            {
              "Name": "protectionLevel",
              "Type": "SocketProtectionLevel"
            }
          ],
          "Name": "ConnectAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            },
            {
              "Name": "protectionLevel",
              "Type": "SocketProtectionLevel"
            },
            {
              "Name": "adapter",
              "Type": "NetworkAdapter"
            }
          ],
          "Name": "ConnectAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "taskId",
              "Type": "Guid"
            }
          ],
          "Name": "EnableTransferOwnership"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "taskId",
              "Type": "Guid"
            },
            {
              "Name": "connectedStandbyAction",
              "Type": "SocketActivityConnectedStandbyAction"
            }
          ],
          "Name": "EnableTransferOwnership"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "socketId",
              "Type": "String"
            }
          ],
          "Name": "TransferOwnership"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "socketId",
              "Type": "String"
            },
            {
              "Name": "data",
              "Type": "SocketActivityContext"
            }
          ],
          "Name": "TransferOwnership"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "socketId",
              "Type": "String"
            },
            {
              "Name": "data",
              "Type": "SocketActivityContext"
            },
            {
              "Name": "keepAliveTime",
              "Type": "TimeSpan"
            }
          ],
          "Name": "TransferOwnership"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "protectionLevel",
              "Type": "SocketProtectionLevel"
            },
            {
              "Name": "validationHostName",
              "Type": "HostName"
            }
          ],
          "Name": "UpgradeToSslAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamSocket"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Certificate",
          "IsGet": true,
          "IsSet": true,
          "Name": "ClientCertificate"
        },
        {
          "Type": "IList<ChainValidationResult>",
          "IsGet": true,
          "Name": "IgnorableServerCertificateErrors"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "KeepAlive"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "NoDelay"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutboundBufferSizeInBytes"
        },
        {
          "Type": "Byte",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutboundUnicastHopLimit"
        },
        {
          "Type": "SocketQualityOfService",
          "IsGet": true,
          "IsSet": true,
          "Name": "QualityOfService"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "SerializeConnectionAttempts"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamSocketControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BandwidthStatistics",
          "IsGet": true,
          "Name": "BandwidthStatistics"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "LocalAddress"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "LocalPort"
        },
        {
          "Type": "SocketProtectionLevel",
          "IsGet": true,
          "Name": "ProtectionLevel"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "RemoteAddress"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "RemoteHostName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RemotePort"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RemoteServiceName"
        },
        {
          "Type": "RoundTripTimeStatistics",
          "IsGet": true,
          "Name": "RoundTripTimeStatistics"
        },
        {
          "Type": "Certificate",
          "IsGet": true,
          "Name": "ServerCertificate"
        },
        {
          "Type": "IReadOnlyList<ChainValidationResult>",
          "IsGet": true,
          "Name": "ServerCertificateErrors"
        },
        {
          "Type": "SocketSslErrorSeverity",
          "IsGet": true,
          "Name": "ServerCertificateErrorSeverity"
        },
        {
          "Type": "IReadOnlyList<Certificate>",
          "IsGet": true,
          "Name": "ServerIntermediateCertificates"
        },
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "SessionKey"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamSocketInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "StreamSocketListenerControl",
          "IsGet": true,
          "Name": "Control"
        },
        {
          "Type": "StreamSocketListenerInformation",
          "IsGet": true,
          "Name": "Information"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localHostName",
              "Type": "HostName"
            },
            {
              "Name": "localServiceName",
              "Type": "String"
            }
          ],
          "Name": "BindEndpointAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localServiceName",
              "Type": "String"
            }
          ],
          "Name": "BindServiceNameAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localServiceName",
              "Type": "String"
            },
            {
              "Name": "protectionLevel",
              "Type": "SocketProtectionLevel"
            }
          ],
          "Name": "BindServiceNameAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localServiceName",
              "Type": "String"
            },
            {
              "Name": "protectionLevel",
              "Type": "SocketProtectionLevel"
            },
            {
              "Name": "adapter",
              "Type": "NetworkAdapter"
            }
          ],
          "Name": "BindServiceNameAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "CancelIOAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "taskId",
              "Type": "Guid"
            }
          ],
          "Name": "EnableTransferOwnership"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "taskId",
              "Type": "Guid"
            },
            {
              "Name": "connectedStandbyAction",
              "Type": "SocketActivityConnectedStandbyAction"
            }
          ],
          "Name": "EnableTransferOwnership"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "socketId",
              "Type": "String"
            }
          ],
          "Name": "TransferOwnership"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "socketId",
              "Type": "String"
            },
            {
              "Name": "data",
              "Type": "SocketActivityContext"
            }
          ],
          "Name": "TransferOwnership"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<StreamSocketListener,StreamSocketListenerConnectionReceivedEventArgs>",
          "Name": "ConnectionReceived"
        }
      ],
      "Name": "Windows.Networking.Sockets.StreamSocketListener"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "StreamSocket",
          "IsGet": true,
          "Name": "Socket"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamSocketListenerConnectionReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "KeepAlive"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "NoDelay"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutboundBufferSizeInBytes"
        },
        {
          "Type": "Byte",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutboundUnicastHopLimit"
        },
        {
          "Type": "SocketQualityOfService",
          "IsGet": true,
          "IsSet": true,
          "Name": "QualityOfService"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamSocketListenerControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "LocalPort"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamSocketListenerInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IWebSocket"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "StreamWebSocketControl",
          "IsGet": true,
          "Name": "Control"
        },
        {
          "Type": "StreamWebSocketInformation",
          "IsGet": true,
          "Name": "Information"
        },
        {
          "Type": "IInputStream",
          "IsGet": true,
          "Name": "InputStream"
        },
        {
          "Type": "IOutputStream",
          "IsGet": true,
          "Name": "OutputStream"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "code",
              "Type": "UInt16"
            },
            {
              "Name": "reason",
              "Type": "String"
            }
          ],
          "Name": "Close"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "ConnectAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ],
          "Name": "SetRequestHeader"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<IWebSocket,WebSocketClosedEventArgs>",
          "Name": "Closed"
        }
      ],
      "Name": "Windows.Networking.Sockets.StreamWebSocket"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebSocketControl"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "NoDelay"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutboundBufferSizeInBytes"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProxyCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServerCredential"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "SupportedProtocols"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamWebSocketControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebSocketInformation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BandwidthStatistics",
          "IsGet": true,
          "Name": "BandwidthStatistics"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "LocalAddress"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Protocol"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamWebSocketInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt16",
          "IsGet": true,
          "Name": "Code"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Reason"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.WebSocketClosedEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "WebErrorStatus",
          "Parameters": [
            {
              "Name": "hresult",
              "Type": "Int32"
            }
          ],
          "Name": "GetStatus"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.WebSocketError"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTask"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "taskInstance",
              "Type": "IBackgroundTaskInstance"
            }
          ],
          "Name": "Run"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.WebSocketKeepAlive"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "type",
              "Type": "VpnAppIdType"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "VpnAppIdType",
          "IsGet": true,
          "IsSet": true,
          "Name": "Type"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnAppId"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCredential"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AdditionalPin"
        },
        {
          "Type": "Certificate",
          "IsGet": true,
          "Name": "CertificateCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "Name": "OldPasswordCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "Name": "PasskeyCredential"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCredential"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPrompt"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Bordered"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Compulsory"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Label"
        },
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "IsSet": true,
          "Name": "OptionsText"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Selected"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomComboBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPrompt"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Bordered"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Compulsory"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DefaultText"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Label"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "NoEcho"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Text"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomEditBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPrompt"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Bordered"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Compulsory"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Label"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomErrorBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPrompt"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Bordered"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Compulsory"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Checked"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "InitialCheckState"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Label"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomCheckBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPromptElement"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Compulsory"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Emphasized"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "InitialValue"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomPromptBooleanInput"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPromptElement"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Compulsory"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Emphasized"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "Options"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "SelectedIndex"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomPromptOptionSelector"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPromptElement"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Compulsory"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Emphasized"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Text"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomPromptText"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPromptElement"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Compulsory"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Emphasized"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsTextHidden"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "PlaceholderText"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Text"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomPromptTextInput"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPrompt"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Bordered"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Compulsory"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayText"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Label"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomTextBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<VpnDomainNameInfo>",
          "IsGet": true,
          "Name": "DomainNameList"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProxyAutoConfigurationUri"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnDomainNameAssignment"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "nameType",
              "Type": "VpnDomainNameType"
            },
            {
              "Name": "dnsServerList",
              "Type": "IEnumerable<HostName>"
            },
            {
              "Name": "proxyServerList",
              "Type": "IEnumerable<HostName>"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IList<HostName>",
          "IsGet": true,
          "Name": "DnsServers"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "IsSet": true,
          "Name": "DomainName"
        },
        {
          "Type": "VpnDomainNameType",
          "IsGet": true,
          "IsSet": true,
          "Name": "DomainNameType"
        },
        {
          "Type": "IList<HostName>",
          "IsGet": true,
          "Name": "WebProxyServers"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnDomainNameInfo"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "VpnChannelConfiguration",
          "IsGet": true,
          "Name": "Configuration"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "PlugInContext"
        },
        {
          "Type": "VpnSystemHealth",
          "IsGet": true,
          "Name": "SystemHealth"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "mainOuterTunnelTransport",
              "Type": "Object"
            },
            {
              "Name": "optionalOuterTunnelTransport",
              "Type": "Object"
            }
          ],
          "Name": "AssociateTransport"
        },
        {
          "ReturnType": "VpnPacketBuffer",
          "Name": "GetVpnReceivePacketBuffer"
        },
        {
          "ReturnType": "VpnPacketBuffer",
          "Name": "GetVpnSendPacketBuffer"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "message",
              "Type": "String"
            }
          ],
          "Name": "LogDiagnosticMessage"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "thirdPartyPlugIn",
              "Type": "Object"
            },
            {
              "Name": "event",
              "Type": "Object"
            }
          ],
          "Name": "ProcessEventAsync"
        },
        {
          "ReturnType": "VpnPickedCredential",
          "Parameters": [
            {
              "Name": "credType",
              "Type": "VpnCredentialType"
            },
            {
              "Name": "isRetry",
              "Type": "Boolean"
            },
            {
              "Name": "isSingleSignOnCredential",
              "Type": "Boolean"
            },
            {
              "Name": "certificate",
              "Type": "Certificate"
            }
          ],
          "Name": "RequestCredentials"
        },
        {
          "ReturnType": "IAsyncOperation<VpnCredential>",
          "Parameters": [
            {
              "Name": "credType",
              "Type": "VpnCredentialType"
            },
            {
              "Name": "credOptions",
              "Type": "UInt32"
            },
            {
              "Name": "certificate",
              "Type": "Certificate"
            }
          ],
          "Name": "RequestCredentialsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<VpnCredential>",
          "Parameters": [
            {
              "Name": "credType",
              "Type": "VpnCredentialType"
            },
            {
              "Name": "credOptions",
              "Type": "UInt32"
            }
          ],
          "Name": "RequestCredentialsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<VpnCredential>",
          "Parameters": [
            {
              "Name": "credType",
              "Type": "VpnCredentialType"
            }
          ],
          "Name": "RequestCredentialsAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "customPrompt",
              "Type": "IReadOnlyList<IVpnCustomPrompt>"
            }
          ],
          "Name": "RequestCustomPrompt"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "customPromptElement",
              "Type": "IReadOnlyList<IVpnCustomPromptElement>"
            }
          ],
          "Name": "RequestCustomPromptAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "type",
              "Type": "VpnDataPathType"
            },
            {
              "Name": "vpnPacketBuffer",
              "Type": "VpnPacketBuffer&",
              "Out": true
            }
          ],
          "Name": "RequestVpnPacketBuffer"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "tunnelTransport",
              "Type": "Object"
            },
            {
              "Name": "useTls12",
              "Type": "Boolean"
            }
          ],
          "Name": "SetAllowedSslTlsVersions"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "message",
              "Type": "String"
            }
          ],
          "Name": "SetErrorMessage"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "assignedClientIPv4list",
              "Type": "IReadOnlyList<HostName>"
            },
            {
              "Name": "assignedClientIPv6list",
              "Type": "IReadOnlyList<HostName>"
            },
            {
              "Name": "vpnInterfaceId",
              "Type": "VpnInterfaceId"
            },
            {
              "Name": "routeScope",
              "Type": "VpnRouteAssignment"
            },
            {
              "Name": "namespaceScope",
              "Type": "VpnNamespaceAssignment"
            },
            {
              "Name": "mtuSize",
              "Type": "UInt32"
            },
            {
              "Name": "maxFrameSize",
              "Type": "UInt32"
            },
            {
              "Name": "optimizeForLowCostNetwork",
              "Type": "Boolean"
            },
            {
              "Name": "mainOuterTunnelTransport",
              "Type": "Object"
            },
            {
              "Name": "optionalOuterTunnelTransport",
              "Type": "Object"
            }
          ],
          "Name": "Start"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "assignedClientIPv4list",
              "Type": "IReadOnlyList<HostName>"
            },
            {
              "Name": "assignedClientIPv6list",
              "Type": "IReadOnlyList<HostName>"
            },
            {
              "Name": "vpnInterfaceId",
              "Type": "VpnInterfaceId"
            },
            {
              "Name": "assignedRoutes",
              "Type": "VpnRouteAssignment"
            },
            {
              "Name": "assignedDomainName",
              "Type": "VpnDomainNameAssignment"
            },
            {
              "Name": "mtuSize",
              "Type": "UInt32"
            },
            {
              "Name": "maxFrameSize",
              "Type": "UInt32"
            },
            {
              "Name": "Reserved",
              "Type": "Boolean"
            }
          ],
          "Name": "StartExistingTransports"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "assignedClientIPv4list",
              "Type": "IReadOnlyList<HostName>"
            },
            {
              "Name": "assignedClientIPv6list",
              "Type": "IReadOnlyList<HostName>"
            },
            {
              "Name": "vpnInterfaceId",
              "Type": "VpnInterfaceId"
            },
            {
              "Name": "assignedRoutes",
              "Type": "VpnRouteAssignment"
            },
            {
              "Name": "assignedDomainName",
              "Type": "VpnDomainNameAssignment"
            },
            {
              "Name": "mtuSize",
              "Type": "UInt32"
            },
            {
              "Name": "maxFrameSize",
              "Type": "UInt32"
            },
            {
              "Name": "Reserved",
              "Type": "Boolean"
            },
            {
              "Name": "mainOuterTunnelTransport",
              "Type": "Object"
            }
          ],
          "Name": "StartWithMainTransport"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "assignedClientIpv4List",
              "Type": "IReadOnlyList<HostName>"
            },
            {
              "Name": "assignedClientIpv6List",
              "Type": "IReadOnlyList<HostName>"
            },
            {
              "Name": "vpnInterfaceId",
              "Type": "VpnInterfaceId"
            },
            {
              "Name": "assignedRoutes",
              "Type": "VpnRouteAssignment"
            },
            {
              "Name": "assignedNamespace",
              "Type": "VpnDomainNameAssignment"
            },
            {
              "Name": "mtuSize",
              "Type": "UInt32"
            },
            {
              "Name": "maxFrameSize",
              "Type": "UInt32"
            },
            {
              "Name": "reserved",
              "Type": "Boolean"
            },
            {
              "Name": "mainOuterTunnelTransport",
              "Type": "Object"
            },
            {
              "Name": "optionalOuterTunnelTransport",
              "Type": "Object"
            },
            {
              "Name": "assignedTrafficFilters",
              "Type": "VpnTrafficFilterAssignment"
            }
          ],
          "Name": "StartWithTrafficFilter"
        },
        {
          "ReturnType": "Void",
          "Name": "Stop"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "message",
              "Type": "String"
            }
          ],
          "Name": "TerminateConnection"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<VpnChannel,VpnChannelActivityEventArgs>",
          "Name": "ActivityChange"
        },
        {
          "Type": "TypedEventHandler<VpnChannel,VpnChannelActivityStateChangedArgs>",
          "Name": "ActivityStateChange"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnChannel"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "VpnChannelActivityEventType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnChannelActivityEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "VpnChannelActivityEventType",
          "IsGet": true,
          "Name": "ActivityState"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnChannelActivityStateChangedArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "CustomField"
        },
        {
          "Type": "IReadOnlyList<HostName>",
          "IsGet": true,
          "Name": "ServerHostNameList"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ServerServiceName"
        },
        {
          "Type": "IReadOnlyList<Uri>",
          "IsGet": true,
          "Name": "ServerUris"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnChannelConfiguration"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "address",
              "Type": "Byte[]"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "id",
              "Type": "Byte[]&",
              "Out": true
            }
          ],
          "Name": "GetAddressInfo"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnInterfaceId"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<VpnManagementErrorStatus>",
          "Parameters": [
            {
              "Name": "profile",
              "Type": "IVpnProfile"
            }
          ],
          "Name": "AddProfileFromObjectAsync"
        },
        {
          "ReturnType": "IAsyncOperation<VpnManagementErrorStatus>",
          "Parameters": [
            {
              "Name": "xml",
              "Type": "String"
            }
          ],
          "Name": "AddProfileFromXmlAsync"
        },
        {
          "ReturnType": "IAsyncOperation<VpnManagementErrorStatus>",
          "Parameters": [
            {
              "Name": "profile",
              "Type": "IVpnProfile"
            }
          ],
          "Name": "ConnectProfileAsync"
        },
        {
          "ReturnType": "IAsyncOperation<VpnManagementErrorStatus>",
          "Parameters": [
            {
              "Name": "profile",
              "Type": "IVpnProfile"
            },
            {
              "Name": "passwordCredential",
              "Type": "PasswordCredential"
            }
          ],
          "Name": "ConnectProfileWithPasswordCredentialAsync"
        },
        {
          "ReturnType": "IAsyncOperation<VpnManagementErrorStatus>",
          "Parameters": [
            {
              "Name": "profile",
              "Type": "IVpnProfile"
            }
          ],
          "Name": "DeleteProfileAsync"
        },
        {
          "ReturnType": "IAsyncOperation<VpnManagementErrorStatus>",
          "Parameters": [
            {
              "Name": "profile",
              "Type": "IVpnProfile"
            }
          ],
          "Name": "DisconnectProfileAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<IVpnProfile>>",
          "Name": "GetProfilesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<VpnManagementErrorStatus>",
          "Parameters": [
            {
              "Name": "profile",
              "Type": "IVpnProfile"
            }
          ],
          "Name": "UpdateProfileFromObjectAsync"
        },
        {
          "ReturnType": "IAsyncOperation<VpnManagementErrorStatus>",
          "Parameters": [
            {
              "Name": "xml",
              "Type": "String"
            }
          ],
          "Name": "UpdateProfileFromXmlAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnManagementAgent"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<VpnNamespaceInfo>",
          "IsGet": true,
          "IsSet": true,
          "Name": "NamespaceList"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProxyAutoConfigUri"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnNamespaceAssignment"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "dnsServerList",
              "Type": "IList<HostName>"
            },
            {
              "Name": "proxyServerList",
              "Type": "IList<HostName>"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IList<HostName>",
          "IsGet": true,
          "IsSet": true,
          "Name": "DnsServers"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Namespace"
        },
        {
          "Type": "IList<HostName>",
          "IsGet": true,
          "IsSet": true,
          "Name": "WebProxyServers"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnNamespaceInfo"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnProfile"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AlwaysOn"
        },
        {
          "Type": "IList<VpnAppId>",
          "IsGet": true,
          "Name": "AppTriggers"
        },
        {
          "Type": "IList<VpnDomainNameInfo>",
          "IsGet": true,
          "Name": "DomainNameInfoList"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "EapConfiguration"
        },
        {
          "Type": "VpnNativeProtocolType",
          "IsGet": true,
          "IsSet": true,
          "Name": "NativeProtocolType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProfileName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "RememberCredentials"
        },
        {
          "Type": "IList<VpnRoute>",
          "IsGet": true,
          "Name": "Routes"
        },
        {
          "Type": "VpnRoutingPolicyType",
          "IsGet": true,
          "IsSet": true,
          "Name": "RoutingPolicyType"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "Servers"
        },
        {
          "Type": "IList<VpnTrafficFilter>",
          "IsGet": true,
          "Name": "TrafficFilters"
        },
        {
          "Type": "VpnAuthenticationMethod",
          "IsGet": true,
          "IsSet": true,
          "Name": "TunnelAuthenticationMethod"
        },
        {
          "Type": "VpnAuthenticationMethod",
          "IsGet": true,
          "IsSet": true,
          "Name": "UserAuthenticationMethod"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnNativeProfile"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "parentBuffer",
              "Type": "VpnPacketBuffer"
            },
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "length",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "VpnAppId",
          "IsGet": true,
          "Name": "AppId"
        },
        {
          "Type": "Buffer",
          "IsGet": true,
          "Name": "Buffer"
        },
        {
          "Type": "VpnPacketBufferStatus",
          "IsGet": true,
          "IsSet": true,
          "Name": "Status"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "TransportAffinity"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnPacketBuffer"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<VpnPacketBuffer>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        },
        {
          "Type": "VpnPacketBufferStatus",
          "IsGet": true,
          "IsSet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "nextVpnPacketBuffer",
              "Type": "VpnPacketBuffer"
            }
          ],
          "Name": "AddAtBegin"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "nextVpnPacketBuffer",
              "Type": "VpnPacketBuffer"
            }
          ],
          "Name": "Append"
        },
        {
          "ReturnType": "Void",
          "Name": "Clear"
        },
        {
          "ReturnType": "VpnPacketBuffer",
          "Name": "RemoveAtBegin"
        },
        {
          "ReturnType": "VpnPacketBuffer",
          "Name": "RemoveAtEnd"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnPacketBufferList"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AdditionalPin"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "Name": "OldPasswordCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "Name": "PasskeyCredential"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnPickedCredential"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnProfile"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AlwaysOn"
        },
        {
          "Type": "IList<VpnAppId>",
          "IsGet": true,
          "Name": "AppTriggers"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "CustomConfiguration"
        },
        {
          "Type": "IList<VpnDomainNameInfo>",
          "IsGet": true,
          "Name": "DomainNameInfoList"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProfileName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "RememberCredentials"
        },
        {
          "Type": "IList<VpnRoute>",
          "IsGet": true,
          "Name": "Routes"
        },
        {
          "Type": "IList<Uri>",
          "IsGet": true,
          "Name": "ServerUris"
        },
        {
          "Type": "IList<VpnTrafficFilter>",
          "IsGet": true,
          "Name": "TrafficFilters"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "VpnPluginPackageFamilyName"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnPlugInProfile"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnProfile"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AlwaysOn"
        },
        {
          "Type": "IList<VpnAppId>",
          "IsGet": true,
          "Name": "AppTriggers"
        },
        {
          "Type": "IList<VpnDomainNameInfo>",
          "IsGet": true,
          "Name": "DomainNameInfoList"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProfileName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "RememberCredentials"
        },
        {
          "Type": "IList<VpnRoute>",
          "IsGet": true,
          "Name": "Routes"
        },
        {
          "Type": "IList<VpnTrafficFilter>",
          "IsGet": true,
          "Name": "TrafficFilters"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnProfile"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "address",
              "Type": "HostName"
            },
            {
              "Name": "prefixSize",
              "Type": "Byte"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "HostName",
          "IsGet": true,
          "IsSet": true,
          "Name": "Address"
        },
        {
          "Type": "Byte",
          "IsGet": true,
          "IsSet": true,
          "Name": "PrefixSize"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnRoute"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "ExcludeLocalSubnets"
        },
        {
          "Type": "IList<VpnRoute>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Ipv4ExclusionRoutes"
        },
        {
          "Type": "IList<VpnRoute>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Ipv4InclusionRoutes"
        },
        {
          "Type": "IList<VpnRoute>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Ipv6ExclusionRoutes"
        },
        {
          "Type": "IList<VpnRoute>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Ipv6InclusionRoutes"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnRouteAssignment"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Buffer",
          "IsGet": true,
          "Name": "StatementOfHealth"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnSystemHealth"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "appId",
              "Type": "VpnAppId"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "AppClaims"
        },
        {
          "Type": "VpnAppId",
          "IsGet": true,
          "IsSet": true,
          "Name": "AppId"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "LocalAddressRanges"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "LocalPortRanges"
        },
        {
          "Type": "VpnIPProtocol",
          "IsGet": true,
          "IsSet": true,
          "Name": "Protocol"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "RemoteAddressRanges"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "RemotePortRanges"
        },
        {
          "Type": "VpnRoutingPolicyType",
          "IsGet": true,
          "IsSet": true,
          "Name": "RoutingPolicyType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnTrafficFilter"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AllowInbound"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AllowOutbound"
        },
        {
          "Type": "IList<VpnTrafficFilter>",
          "IsGet": true,
          "Name": "TrafficFilterList"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnTrafficFilterAssignment"
    }
  ],
  "Structs": [
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "UInt64",
          "Name": "BytesReceived"
        },
        {
          "Type": "Boolean",
          "Name": "HasResponseChanged"
        },
        {
          "Type": "Boolean",
          "Name": "HasRestarted"
        },
        {
          "Type": "BackgroundTransferStatus",
          "Name": "Status"
        },
        {
          "Type": "UInt64",
          "Name": "TotalBytesToReceive"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundDownloadProgress"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "UInt64",
          "Name": "BytesReceived"
        },
        {
          "Type": "UInt64",
          "Name": "BytesSent"
        },
        {
          "Type": "Boolean",
          "Name": "HasResponseChanged"
        },
        {
          "Type": "Boolean",
          "Name": "HasRestarted"
        },
        {
          "Type": "BackgroundTransferStatus",
          "Name": "Status"
        },
        {
          "Type": "UInt64",
          "Name": "TotalBytesToReceive"
        },
        {
          "Type": "UInt64",
          "Name": "TotalBytesToSend"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundUploadProgress"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "TriStates",
          "Name": "Roaming"
        },
        {
          "Type": "TriStates",
          "Name": "Shared"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.NetworkUsageStates"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.WwanContract"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.LegacyNetworkOperatorsContract"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.NetworkOperatorsTetheringContract"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "DateTimeOffset",
          "Name": "LastSyncTime"
        },
        {
          "Type": "UInt32",
          "Name": "UsageInMegabytes"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.ProfileUsage"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "Boolean",
          "Name": "InboundBandwidthPeaked"
        },
        {
          "Type": "UInt64",
          "Name": "InboundBitsPerSecond"
        },
        {
          "Type": "UInt64",
          "Name": "InboundBitsPerSecondInstability"
        },
        {
          "Type": "Boolean",
          "Name": "OutboundBandwidthPeaked"
        },
        {
          "Type": "UInt64",
          "Name": "OutboundBitsPerSecond"
        },
        {
          "Type": "UInt64",
          "Name": "OutboundBitsPerSecondInstability"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.BandwidthStatistics"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "UInt32",
          "Name": "Max"
        },
        {
          "Type": "UInt32",
          "Name": "Min"
        },
        {
          "Type": "UInt32",
          "Name": "Sum"
        },
        {
          "Type": "UInt32",
          "Name": "Variance"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.RoundTripTimeStatistics"
    }
  ],
  "Interfaces": [
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "BackgroundTransferCostPolicy",
          "IsGet": true,
          "IsSet": true,
          "Name": "CostPolicy"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Group"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Method"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProxyCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServerCredential"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ],
          "Name": "SetRequestHeader"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.IBackgroundTransferBase"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "BackgroundTransferContentPart",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "CreateWithName"
        },
        {
          "ReturnType": "BackgroundTransferContentPart",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "fileName",
              "Type": "String"
            }
          ],
          "Name": "CreateWithNameAndFileName"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.IBackgroundTransferContentPartFactory"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "BackgroundTransferCostPolicy",
          "IsGet": true,
          "IsSet": true,
          "Name": "CostPolicy"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Group"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "Guid"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Method"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "RequestedUri"
        }
      ],
      "Methods": [
        {
          "ReturnType": "ResponseInformation",
          "Name": "GetResponseInformation"
        },
        {
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "GetResultStreamAt"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.IBackgroundTransferOperation"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "BackgroundTransferPriority",
          "IsGet": true,
          "IsSet": true,
          "Name": "Priority"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.IBackgroundTransferOperationPriority"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "ControlChannelTrigger",
          "IsGet": true,
          "Name": "ControlChannelTrigger"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.IControlChannelTriggerEventDetails"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HardwareSlotReset"
        },
        {
          "Type": "ControlChannelTriggerResetReason",
          "IsGet": true,
          "Name": "ResetReason"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "SoftwareSlotReset"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.IControlChannelTriggerResetEventDetails"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [
        {
          "Type": "IOutputStream",
          "IsGet": true,
          "Name": "OutputStream"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "code",
              "Type": "UInt16"
            },
            {
              "Name": "reason",
              "Type": "String"
            }
          ],
          "Name": "Close"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "ConnectAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ],
          "Name": "SetRequestHeader"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<IWebSocket,WebSocketClosedEventArgs>",
          "Name": "Closed"
        }
      ],
      "Name": "Windows.Networking.Sockets.IWebSocket"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutboundBufferSizeInBytes"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProxyCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServerCredential"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "SupportedProtocols"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.IWebSocketControl"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "BandwidthStatistics",
          "IsGet": true,
          "Name": "BandwidthStatistics"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "LocalAddress"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Protocol"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.IWebSocketInformation"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AdditionalPin"
        },
        {
          "Type": "Certificate",
          "IsGet": true,
          "Name": "CertificateCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "Name": "OldPasswordCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "Name": "PasskeyCredential"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnCredential"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Bordered"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Compulsory"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Label"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnCustomPrompt"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Compulsory"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Emphasized"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnCustomPromptElement"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "VpnDomainNameInfo",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "nameType",
              "Type": "VpnDomainNameType"
            },
            {
              "Name": "dnsServerList",
              "Type": "IEnumerable<HostName>"
            },
            {
              "Name": "proxyServerList",
              "Type": "IEnumerable<HostName>"
            }
          ],
          "Name": "CreateVpnDomainNameInfo"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnDomainNameInfoFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "thirdPartyPlugIn",
              "Type": "Object"
            },
            {
              "Name": "event",
              "Type": "Object"
            }
          ],
          "Name": "ProcessEventAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnChannelStatics"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "VpnInterfaceId",
          "Parameters": [
            {
              "Name": "address",
              "Type": "Byte[]"
            }
          ],
          "Name": "CreateVpnInterfaceId"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnInterfaceIdFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "VpnNamespaceInfo",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "dnsServerList",
              "Type": "IList<HostName>"
            },
            {
              "Name": "proxyServerList",
              "Type": "IList<HostName>"
            }
          ],
          "Name": "CreateVpnNamespaceInfo"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnNamespaceInfoFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "VpnPacketBuffer",
          "Parameters": [
            {
              "Name": "parentBuffer",
              "Type": "VpnPacketBuffer"
            },
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "length",
              "Type": "UInt32"
            }
          ],
          "Name": "CreateVpnPacketBuffer"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnPacketBufferFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "channel",
              "Type": "VpnChannel"
            }
          ],
          "Name": "Connect"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "channel",
              "Type": "VpnChannel"
            },
            {
              "Name": "encapBuffer",
              "Type": "VpnPacketBuffer"
            },
            {
              "Name": "decapsulatedPackets",
              "Type": "VpnPacketBufferList"
            },
            {
              "Name": "controlPacketsToSend",
              "Type": "VpnPacketBufferList"
            }
          ],
          "Name": "Decapsulate"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "channel",
              "Type": "VpnChannel"
            }
          ],
          "Name": "Disconnect"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "channel",
              "Type": "VpnChannel"
            },
            {
              "Name": "packets",
              "Type": "VpnPacketBufferList"
            },
            {
              "Name": "encapulatedPackets",
              "Type": "VpnPacketBufferList"
            }
          ],
          "Name": "Encapsulate"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "channel",
              "Type": "VpnChannel"
            },
            {
              "Name": "keepAlivePacket",
              "Type": "VpnPacketBuffer&",
              "Out": true
            }
          ],
          "Name": "GetKeepAlivePayload"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnPlugIn"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AlwaysOn"
        },
        {
          "Type": "IList<VpnAppId>",
          "IsGet": true,
          "Name": "AppTriggers"
        },
        {
          "Type": "IList<VpnDomainNameInfo>",
          "IsGet": true,
          "Name": "DomainNameInfoList"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProfileName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "RememberCredentials"
        },
        {
          "Type": "IList<VpnRoute>",
          "IsGet": true,
          "Name": "Routes"
        },
        {
          "Type": "IList<VpnTrafficFilter>",
          "IsGet": true,
          "Name": "TrafficFilters"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnProfile"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "VpnRoute",
          "Parameters": [
            {
              "Name": "address",
              "Type": "HostName"
            },
            {
              "Name": "prefixSize",
              "Type": "Byte"
            }
          ],
          "Name": "CreateVpnRoute"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnRouteFactory"
    }
  ],
  "Enums": [
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Parallel"
        },
        {
          "Value": "1",
          "Name": "Serialized"
        }
      ],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferBehavior"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "UnrestrictedOnly"
        },
        {
          "Value": "2",
          "Name": "Always"
        }
      ],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferCostPolicy"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "High"
        }
      ],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferPriority"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Idle"
        },
        {
          "Value": "1",
          "Name": "Running"
        },
        {
          "Value": "2",
          "Name": "PausedByApplication"
        },
        {
          "Value": "3",
          "Name": "PausedCostedNetwork"
        },
        {
          "Value": "4",
          "Name": "PausedNoNetwork"
        },
        {
          "Value": "5",
          "Name": "Completed"
        },
        {
          "Value": "6",
          "Name": "Canceled"
        },
        {
          "Value": "7",
          "Name": "Error"
        },
        {
          "Value": "32",
          "Name": "PausedSystemPolicy"
        }
      ],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Pap"
        },
        {
          "Value": "2",
          "Name": "Chap"
        },
        {
          "Value": "3",
          "Name": "Mschapv2"
        }
      ],
      "Name": "Windows.Networking.Connectivity.CellularApnAuthenticationType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "PerMinute"
        },
        {
          "Value": "1",
          "Name": "PerHour"
        },
        {
          "Value": "2",
          "Name": "PerDay"
        },
        {
          "Value": "3",
          "Name": "Total"
        }
      ],
      "Name": "Windows.Networking.Connectivity.DataUsageGranularity"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Unauthenticated"
        },
        {
          "Value": "2",
          "Name": "Authenticated"
        }
      ],
      "Name": "Windows.Networking.Connectivity.DomainConnectivityLevel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Unknown"
        },
        {
          "Value": "2",
          "Name": "Open80211"
        },
        {
          "Value": "3",
          "Name": "SharedKey80211"
        },
        {
          "Value": "4",
          "Name": "Wpa"
        },
        {
          "Value": "5",
          "Name": "WpaPsk"
        },
        {
          "Value": "6",
          "Name": "WpaNone"
        },
        {
          "Value": "7",
          "Name": "Rsna"
        },
        {
          "Value": "8",
          "Name": "RsnaPsk"
        },
        {
          "Value": "9",
          "Name": "Ihv"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkAuthenticationType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "LocalAccess"
        },
        {
          "Value": "2",
          "Name": "ConstrainedInternetAccess"
        },
        {
          "Value": "3",
          "Name": "InternetAccess"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkConnectivityLevel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "Unrestricted"
        },
        {
          "Value": "2",
          "Name": "Fixed"
        },
        {
          "Value": "3",
          "Name": "Variable"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkCostType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Unknown"
        },
        {
          "Value": "2",
          "Name": "Wep"
        },
        {
          "Value": "3",
          "Name": "Wep40"
        },
        {
          "Value": "4",
          "Name": "Wep104"
        },
        {
          "Value": "5",
          "Name": "Tkip"
        },
        {
          "Value": "6",
          "Name": "Ccmp"
        },
        {
          "Value": "7",
          "Name": "WpaUseGroup"
        },
        {
          "Value": "8",
          "Name": "RsnUseGroup"
        },
        {
          "Value": "9",
          "Name": "Ihv"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkEncryptionType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Internet"
        },
        {
          "Value": "2",
          "Name": "PrivateNetwork"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkTypes"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "NotRoaming"
        },
        {
          "Value": "2",
          "Name": "Roaming"
        }
      ],
      "Name": "Windows.Networking.Connectivity.RoamingStates"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "DoNotCare"
        },
        {
          "Value": "1",
          "Name": "No"
        },
        {
          "Value": "2",
          "Name": "Yes"
        }
      ],
      "Name": "Windows.Networking.Connectivity.TriStates"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Gprs"
        },
        {
          "Value": "2",
          "Name": "Edge"
        },
        {
          "Value": "4",
          "Name": "Umts"
        },
        {
          "Value": "8",
          "Name": "Hsdpa"
        },
        {
          "Value": "16",
          "Name": "Hsupa"
        },
        {
          "Value": "32",
          "Name": "LteAdvanced"
        },
        {
          "Value": "65536",
          "Name": "Cdma1xRtt"
        },
        {
          "Value": "131072",
          "Name": "Cdma1xEvdo"
        },
        {
          "Value": "262144",
          "Name": "Cdma1xEvdoRevA"
        },
        {
          "Value": "524288",
          "Name": "Cdma1xEvdv"
        },
        {
          "Value": "1048576",
          "Name": "Cdma3xRtt"
        },
        {
          "Value": "2097152",
          "Name": "Cdma1xEvdoRevB"
        },
        {
          "Value": "4194304",
          "Name": "CdmaUmb"
        },
        {
          "Value": "2147483648",
          "Name": "Custom"
        }
      ],
      "Name": "Windows.Networking.Connectivity.WwanDataClass"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Deregistered"
        },
        {
          "Value": "2",
          "Name": "Searching"
        },
        {
          "Value": "3",
          "Name": "Home"
        },
        {
          "Value": "4",
          "Name": "Roaming"
        },
        {
          "Value": "5",
          "Name": "Partner"
        },
        {
          "Value": "6",
          "Name": "Denied"
        }
      ],
      "Name": "Windows.Networking.Connectivity.WwanNetworkRegistrationState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Suffix"
        },
        {
          "Value": "1",
          "Name": "FullyQualified"
        }
      ],
      "Name": "Windows.Networking.DomainNameType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "2",
          "Name": "OptimizeForLongConnections"
        }
      ],
      "Name": "Windows.Networking.HostNameSortOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "DomainName"
        },
        {
          "Value": "1",
          "Name": "Ipv4"
        },
        {
          "Value": "2",
          "Name": "Ipv6"
        },
        {
          "Value": "3",
          "Name": "Bluetooth"
        }
      ],
      "Name": "Windows.Networking.HostNameType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Gprs"
        },
        {
          "Value": "2",
          "Name": "Edge"
        },
        {
          "Value": "4",
          "Name": "Umts"
        },
        {
          "Value": "8",
          "Name": "Hsdpa"
        },
        {
          "Value": "16",
          "Name": "Hsupa"
        },
        {
          "Value": "32",
          "Name": "LteAdvanced"
        },
        {
          "Value": "65536",
          "Name": "Cdma1xRtt"
        },
        {
          "Value": "131072",
          "Name": "Cdma1xEvdo"
        },
        {
          "Value": "262144",
          "Name": "Cdma1xEvdoRevA"
        },
        {
          "Value": "524288",
          "Name": "Cdma1xEvdv"
        },
        {
          "Value": "1048576",
          "Name": "Cdma3xRtt"
        },
        {
          "Value": "2097152",
          "Name": "Cdma1xEvdoRevB"
        },
        {
          "Value": "4194304",
          "Name": "CdmaUmb"
        },
        {
          "Value": "2147483648",
          "Name": "Custom"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.DataClasses"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "NoError"
        },
        {
          "Value": "50",
          "Name": "LoginSucceeded"
        },
        {
          "Value": "100",
          "Name": "LoginFailed"
        },
        {
          "Value": "102",
          "Name": "RadiusServerError"
        },
        {
          "Value": "105",
          "Name": "NetworkAdministratorError"
        },
        {
          "Value": "151",
          "Name": "LoginAborted"
        },
        {
          "Value": "255",
          "Name": "AccessGatewayInternalError"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.HotspotAuthenticationResponseCode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Created"
        },
        {
          "Value": "1",
          "Name": "Started"
        },
        {
          "Value": "2",
          "Name": "EnumerationCompleted"
        },
        {
          "Value": "3",
          "Name": "Stopped"
        },
        {
          "Value": "4",
          "Name": "Aborted"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcherStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "Embedded"
        },
        {
          "Value": "2",
          "Name": "Removable"
        },
        {
          "Value": "3",
          "Name": "Remote"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandDeviceType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "Numeric"
        },
        {
          "Value": "2",
          "Name": "Alphanumeric"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandPinFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "Unlocked"
        },
        {
          "Value": "2",
          "Name": "PinRequired"
        },
        {
          "Value": "3",
          "Name": "PinUnblockKeyRequired"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandPinLockState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Custom"
        },
        {
          "Value": "2",
          "Name": "Pin1"
        },
        {
          "Value": "3",
          "Name": "Pin2"
        },
        {
          "Value": "4",
          "Name": "SimPin"
        },
        {
          "Value": "5",
          "Name": "FirstSimPin"
        },
        {
          "Value": "6",
          "Name": "NetworkPin"
        },
        {
          "Value": "7",
          "Name": "NetworkSubsetPin"
        },
        {
          "Value": "8",
          "Name": "ServiceProviderPin"
        },
        {
          "Value": "9",
          "Name": "CorporatePin"
        },
        {
          "Value": "10",
          "Name": "SubsidyLock"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandPinType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Off"
        },
        {
          "Value": "1",
          "Name": "On"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandRadioState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "DeviceNotReady"
        },
        {
          "Value": "1",
          "Name": "DeviceReady"
        },
        {
          "Value": "2",
          "Name": "SimNotInserted"
        },
        {
          "Value": "3",
          "Name": "BadSim"
        },
        {
          "Value": "4",
          "Name": "DeviceHardwareFailure"
        },
        {
          "Value": "5",
          "Name": "AccountNotActivated"
        },
        {
          "Value": "6",
          "Name": "DeviceLocked"
        },
        {
          "Value": "7",
          "Name": "DeviceBlocked"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.NetworkDeviceStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Gsm"
        },
        {
          "Value": "1",
          "Name": "Cdma"
        },
        {
          "Value": "2",
          "Name": "Ussd"
        },
        {
          "Value": "3",
          "Name": "DataPlanThresholdReached"
        },
        {
          "Value": "4",
          "Name": "DataPlanReset"
        },
        {
          "Value": "5",
          "Name": "DataPlanDeleted"
        },
        {
          "Value": "6",
          "Name": "ProfileConnected"
        },
        {
          "Value": "7",
          "Name": "ProfileDisconnected"
        },
        {
          "Value": "8",
          "Name": "RegisteredRoaming"
        },
        {
          "Value": "9",
          "Name": "RegisteredHome"
        },
        {
          "Value": "10",
          "Name": "TetheringEntitlementCheck"
        },
        {
          "Value": "11",
          "Name": "TetheringOperationalStateChanged"
        },
        {
          "Value": "12",
          "Name": "TetheringNumberOfClientsChanged"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.NetworkOperatorEventMessageType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Deregistered"
        },
        {
          "Value": "2",
          "Name": "Searching"
        },
        {
          "Value": "3",
          "Name": "Home"
        },
        {
          "Value": "4",
          "Name": "Roaming"
        },
        {
          "Value": "5",
          "Name": "Partner"
        },
        {
          "Value": "6",
          "Name": "Denied"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.NetworkRegistrationState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Wlan"
        },
        {
          "Value": "1",
          "Name": "Wwan"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.ProfileMediaType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Enabled"
        },
        {
          "Value": "1",
          "Name": "DisabledByGroupPolicy"
        },
        {
          "Value": "2",
          "Name": "DisabledByHardwareLimitation"
        },
        {
          "Value": "3",
          "Name": "DisabledByOperator"
        },
        {
          "Value": "4",
          "Name": "DisabledBySku"
        },
        {
          "Value": "5",
          "Name": "DisabledByRequiredAppNotInstalled"
        },
        {
          "Value": "6",
          "Name": "DisabledDueToUnknownCause"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.TetheringCapability"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "On"
        },
        {
          "Value": "2",
          "Name": "Off"
        },
        {
          "Value": "3",
          "Name": "InTransition"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.TetheringOperationalState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "Unknown"
        },
        {
          "Value": "2",
          "Name": "MobileBroadbandDeviceOff"
        },
        {
          "Value": "3",
          "Name": "WiFiDeviceOff"
        },
        {
          "Value": "4",
          "Name": "EntitlementCheckTimeout"
        },
        {
          "Value": "5",
          "Name": "EntitlementCheckFailure"
        },
        {
          "Value": "6",
          "Name": "OperationInProgress"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.TetheringOperationStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "NoActionRequired"
        },
        {
          "Value": "1",
          "Name": "ActionRequired"
        },
        {
          "Value": "2",
          "Name": "Terminated"
        },
        {
          "Value": "3",
          "Name": "OtherLocalClient"
        },
        {
          "Value": "4",
          "Name": "OperationNotSupported"
        },
        {
          "Value": "5",
          "Name": "NetworkTimeout"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.UssdResultCode"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Browse"
        },
        {
          "Value": "2",
          "Name": "Triggered"
        }
      ],
      "Name": "Windows.Networking.Proximity.PeerDiscoveryTypes"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Peer"
        },
        {
          "Value": "1",
          "Name": "Host"
        },
        {
          "Value": "2",
          "Name": "Client"
        }
      ],
      "Name": "Windows.Networking.Proximity.PeerRole"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Created"
        },
        {
          "Value": "1",
          "Name": "Started"
        },
        {
          "Value": "2",
          "Name": "EnumerationCompleted"
        },
        {
          "Value": "3",
          "Name": "Stopping"
        },
        {
          "Value": "4",
          "Name": "Stopped"
        },
        {
          "Value": "5",
          "Name": "Aborted"
        }
      ],
      "Name": "Windows.Networking.Proximity.PeerWatcherStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "PeerFound"
        },
        {
          "Value": "1",
          "Name": "Listening"
        },
        {
          "Value": "2",
          "Name": "Connecting"
        },
        {
          "Value": "3",
          "Name": "Completed"
        },
        {
          "Value": "4",
          "Name": "Canceled"
        },
        {
          "Value": "5",
          "Name": "Failed"
        }
      ],
      "Name": "Windows.Networking.Proximity.TriggeredConnectState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Toast"
        },
        {
          "Value": "1",
          "Name": "Tile"
        },
        {
          "Value": "2",
          "Name": "Badge"
        },
        {
          "Value": "3",
          "Name": "Raw"
        },
        {
          "Value": "4",
          "Name": "TileFlyout"
        }
      ],
      "Name": "Windows.Networking.PushNotifications.PushNotificationType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "InvalidServiceName"
        },
        {
          "Value": "2",
          "Name": "ServerError"
        },
        {
          "Value": "3",
          "Name": "SecurityError"
        }
      ],
      "Name": "Windows.Networking.ServiceDiscovery.Dnssd.DnssdRegistrationStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Created"
        },
        {
          "Value": "1",
          "Name": "Started"
        },
        {
          "Value": "2",
          "Name": "EnumerationCompleted"
        },
        {
          "Value": "3",
          "Name": "Stopping"
        },
        {
          "Value": "4",
          "Name": "Stopped"
        },
        {
          "Value": "5",
          "Name": "Aborted"
        }
      ],
      "Name": "Windows.Networking.ServiceDiscovery.Dnssd.DnssdServiceWatcherStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "FastUserSwitched"
        },
        {
          "Value": "1",
          "Name": "LowPowerExit"
        },
        {
          "Value": "2",
          "Name": "QuietHoursExit"
        },
        {
          "Value": "3",
          "Name": "ApplicationRestart"
        }
      ],
      "Name": "Windows.Networking.Sockets.ControlChannelTriggerResetReason"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "RequestSoftwareSlot"
        },
        {
          "Value": "1",
          "Name": "RequestHardwareSlot"
        }
      ],
      "Name": "Windows.Networking.Sockets.ControlChannelTriggerResourceType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "HardwareSlotRequested"
        },
        {
          "Value": "1",
          "Name": "SoftwareSlotAllocated"
        },
        {
          "Value": "2",
          "Name": "HardwareSlotAllocated"
        },
        {
          "Value": "3",
          "Name": "PolicyError"
        },
        {
          "Value": "4",
          "Name": "SystemError"
        },
        {
          "Value": "5",
          "Name": "TransportDisconnected"
        },
        {
          "Value": "6",
          "Name": "ServiceUnavailable"
        }
      ],
      "Name": "Windows.Networking.Sockets.ControlChannelTriggerStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "DoNotWake"
        },
        {
          "Value": "1",
          "Name": "Wake"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketActivityConnectedStandbyAction"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "StreamSocketListener"
        },
        {
          "Value": "2",
          "Name": "DatagramSocket"
        },
        {
          "Value": "3",
          "Name": "StreamSocket"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketActivityKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "SocketActivity"
        },
        {
          "Value": "2",
          "Name": "ConnectionAccepted"
        },
        {
          "Value": "3",
          "Name": "KeepAliveTimerExpired"
        },
        {
          "Value": "4",
          "Name": "SocketClosed"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketActivityTriggerReason"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "OperationAborted"
        },
        {
          "Value": "2",
          "Name": "HttpInvalidServerResponse"
        },
        {
          "Value": "3",
          "Name": "ConnectionTimedOut"
        },
        {
          "Value": "4",
          "Name": "AddressFamilyNotSupported"
        },
        {
          "Value": "5",
          "Name": "SocketTypeNotSupported"
        },
        {
          "Value": "6",
          "Name": "HostNotFound"
        },
        {
          "Value": "7",
          "Name": "NoDataRecordOfRequestedType"
        },
        {
          "Value": "8",
          "Name": "NonAuthoritativeHostNotFound"
        },
        {
          "Value": "9",
          "Name": "ClassTypeNotFound"
        },
        {
          "Value": "10",
          "Name": "AddressAlreadyInUse"
        },
        {
          "Value": "11",
          "Name": "CannotAssignRequestedAddress"
        },
        {
          "Value": "12",
          "Name": "ConnectionRefused"
        },
        {
          "Value": "13",
          "Name": "NetworkIsUnreachable"
        },
        {
          "Value": "14",
          "Name": "UnreachableHost"
        },
        {
          "Value": "15",
          "Name": "NetworkIsDown"
        },
        {
          "Value": "16",
          "Name": "NetworkDroppedConnectionOnReset"
        },
        {
          "Value": "17",
          "Name": "SoftwareCausedConnectionAbort"
        },
        {
          "Value": "18",
          "Name": "ConnectionResetByPeer"
        },
        {
          "Value": "19",
          "Name": "HostIsDown"
        },
        {
          "Value": "20",
          "Name": "NoAddressesFound"
        },
        {
          "Value": "21",
          "Name": "TooManyOpenFiles"
        },
        {
          "Value": "22",
          "Name": "MessageTooLong"
        },
        {
          "Value": "23",
          "Name": "CertificateExpired"
        },
        {
          "Value": "24",
          "Name": "CertificateUntrustedRoot"
        },
        {
          "Value": "25",
          "Name": "CertificateCommonNameIsIncorrect"
        },
        {
          "Value": "26",
          "Name": "CertificateWrongUsage"
        },
        {
          "Value": "27",
          "Name": "CertificateRevoked"
        },
        {
          "Value": "28",
          "Name": "CertificateNoRevocationCheck"
        },
        {
          "Value": "29",
          "Name": "CertificateRevocationServerOffline"
        },
        {
          "Value": "30",
          "Name": "CertificateIsInvalid"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketErrorStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Binary"
        },
        {
          "Value": "1",
          "Name": "Utf8"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketMessageType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "PlainSocket"
        },
        {
          "Value": "1",
          "Name": "Ssl"
        },
        {
          "Value": "2",
          "Name": "SslAllowNullEncryption"
        },
        {
          "Value": "3",
          "Name": "BluetoothEncryptionAllowNullAuthentication"
        },
        {
          "Value": "4",
          "Name": "BluetoothEncryptionWithAuthentication"
        },
        {
          "Value": "5",
          "Name": "Ssl3AllowWeakEncryption"
        },
        {
          "Value": "6",
          "Name": "Tls10"
        },
        {
          "Value": "7",
          "Name": "Tls11"
        },
        {
          "Value": "8",
          "Name": "Tls12"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketProtectionLevel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Normal"
        },
        {
          "Value": "1",
          "Name": "LowLatency"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketQualityOfService"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Ignorable"
        },
        {
          "Value": "2",
          "Name": "Fatal"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketSslErrorSeverity"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "PackageFamilyName"
        },
        {
          "Value": "1",
          "Name": "FullyQualifiedBinaryName"
        },
        {
          "Value": "2",
          "Name": "FilePath"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnAppIdType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Mschapv2"
        },
        {
          "Value": "1",
          "Name": "Eap"
        },
        {
          "Value": "2",
          "Name": "Certificate"
        },
        {
          "Value": "3",
          "Name": "PresharedKey"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnAuthenticationMethod"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "UsernamePassword"
        },
        {
          "Value": "1",
          "Name": "UsernameOtpPin"
        },
        {
          "Value": "2",
          "Name": "UsernamePasswordAndPin"
        },
        {
          "Value": "3",
          "Name": "UsernamePasswordChange"
        },
        {
          "Value": "4",
          "Name": "SmartCard"
        },
        {
          "Value": "5",
          "Name": "ProtectedCertificate"
        },
        {
          "Value": "6",
          "Name": "UnProtectedCertificate"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnCredentialType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Send"
        },
        {
          "Value": "1",
          "Name": "Receive"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnDataPathType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Suffix"
        },
        {
          "Value": "1",
          "Name": "FullyQualified"
        },
        {
          "Value": "65535",
          "Name": "Reserved"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnDomainNameType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Idle"
        },
        {
          "Value": "1",
          "Name": "Active"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnChannelActivityEventType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Retrying"
        },
        {
          "Value": "2",
          "Name": "UseForSingleSignIn"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnChannelRequestCredentialsOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "6",
          "Name": "Tcp"
        },
        {
          "Value": "17",
          "Name": "Udp"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnIPProtocol"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Ok"
        },
        {
          "Value": "1",
          "Name": "Other"
        },
        {
          "Value": "2",
          "Name": "InvalidXmlSyntax"
        },
        {
          "Value": "3",
          "Name": "ProfileNameTooLong"
        },
        {
          "Value": "4",
          "Name": "ProfileInvalidAppId"
        },
        {
          "Value": "5",
          "Name": "AccessDenied"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnManagementErrorStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Pptp"
        },
        {
          "Value": "1",
          "Name": "L2tp"
        },
        {
          "Value": "2",
          "Name": "IpsecIkev2"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnNativeProtocolType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Ok"
        },
        {
          "Value": "1",
          "Name": "InvalidBufferSize"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnPacketBufferStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "SplitRouting"
        },
        {
          "Value": "1",
          "Name": "ForceAllTrafficOverVpn"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnRoutingPolicyType"
    }
  ],
  "Delegates": [
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "ProximityDevice"
        },
        {
          "Name": "message",
          "Type": "ProximityMessage"
        }
      ],
      "Name": "Windows.Networking.Proximity.MessageReceivedHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "ProximityDevice"
        },
        {
          "Name": "messageId",
          "Type": "Int64"
        }
      ],
      "Name": "Windows.Networking.Proximity.MessageTransmittedHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "ProximityDevice"
        }
      ],
      "Name": "Windows.Networking.Proximity.DeviceArrivedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "ProximityDevice"
        }
      ],
      "Name": "Windows.Networking.Proximity.DeviceDepartedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkStatusChangedEventHandler"
    }
  ]
}