{
  "Name": "Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime",
  "Classes": [
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IAppointmentsProviderActivatedEventArgs",
        "IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "InstanceStartDate",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "LocalId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "RoamingId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        },
        {
          "Name": "Verb",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.AppointmentsProviderShowAppointmentDetailsActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "ICachedFileUpdaterActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CachedFileUpdaterUI",
          "Type": "CachedFileUpdaterUI",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.CachedFileUpdaterActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IFileActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Files",
          "Type": "IReadOnlyList<IStorageItem>",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        },
        {
          "Name": "Verb",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.FileActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IFileOpenPickerActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FileOpenPickerUI",
          "Type": "FileOpenPickerUI",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.FileOpenPickerActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IContinuationActivatedEventArgs",
        "IFileOpenPickerContinuationEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ContinuationData",
          "Type": "ValueSet",
          "IsGet": true
        },
        {
          "Name": "Files",
          "Type": "IReadOnlyList<StorageFile>",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.FileOpenPickerContinuationEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IFileSavePickerActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FileSavePickerUI",
          "Type": "FileSavePickerUI",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.FileSavePickerActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IContinuationActivatedEventArgs",
        "IFileSavePickerContinuationEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ContinuationData",
          "Type": "ValueSet",
          "IsGet": true
        },
        {
          "Name": "File",
          "Type": "StorageFile",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.FileSavePickerContinuationEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IContinuationActivatedEventArgs",
        "IFolderPickerContinuationEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ContinuationData",
          "Type": "ValueSet",
          "IsGet": true
        },
        {
          "Name": "Folder",
          "Type": "StorageFolder",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.FolderPickerContinuationEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "ILaunchActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Arguments",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        },
        {
          "Name": "TileId",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.LaunchActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IPickerReturnedActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PickerOperationId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.PickerReturnedActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IProtocolActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        },
        {
          "Name": "Uri",
          "Type": "Uri",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.ProtocolActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "ISearchActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "QueryText",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.SearchActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IShareTargetActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "ShareOperation",
          "Type": "ShareOperation",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.ShareTargetActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ImageLocation",
          "Type": "Rect",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "Dismissed",
          "Type": "TypedEventHandler<SplashScreen,Object>"
        }
      ],
      "Name": "Windows.ApplicationModel.Activation.SplashScreen"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IVoiceCommandActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "Result",
          "Type": "SpeechRecognitionResult",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.VoiceCommandActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IWalletActionActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ActionId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ActionKind",
          "Type": "WalletActionKind",
          "IsGet": true
        },
        {
          "Name": "ItemId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.WalletActionActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IContinuationActivatedEventArgs",
        "IWebAuthenticationBrokerContinuationEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ContinuationData",
          "Type": "ValueSet",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        },
        {
          "Name": "WebAuthenticationResult",
          "Type": "WebAuthenticationResult",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.WebAuthenticationBrokerContinuationEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AllDay",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AllowNewTimeProposal",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "BusyStatus",
          "Type": "AppointmentBusyStatus",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CalendarId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Details",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Duration",
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HasInvitees",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Invitees",
          "Type": "IList<AppointmentInvitee>",
          "IsGet": true
        },
        {
          "Name": "IsCanceledMeeting",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsOrganizedByUser",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsResponseRequested",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LocalId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Location",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OnlineMeetingLink",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Organizer",
          "Type": "AppointmentOrganizer",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OriginalStartTime",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true
        },
        {
          "Name": "Recurrence",
          "Type": "AppointmentRecurrence",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Reminder",
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ReplyTime",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RoamingId",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Sensitivity",
          "Type": "AppointmentSensitivity",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StartTime",
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Subject",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Uri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UserResponse",
          "Type": "AppointmentParticipantResponse",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.Appointment"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DisplayColor",
          "Type": "Color",
          "IsGet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsHidden",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "LocalId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "OtherAppReadAccess",
          "Type": "AppointmentCalendarOtherAppReadAccess",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OtherAppWriteAccess",
          "Type": "AppointmentCalendarOtherAppWriteAccess",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SourceDisplayName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SummaryCardView",
          "Type": "AppointmentSummaryCardView",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "DeleteAppointmentAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "DeleteAppointmentInstanceAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localId",
              "Type": "String"
            },
            {
              "Name": "instanceStartTime",
              "Type": "DateTimeOffset"
            }
          ]
        },
        {
          "Name": "DeleteAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "FindAllInstancesAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<Appointment>>",
          "Parameters": [
            {
              "Name": "masterLocalId",
              "Type": "String"
            },
            {
              "Name": "rangeStart",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "rangeLength",
              "Type": "TimeSpan"
            }
          ]
        },
        {
          "Name": "FindAllInstancesAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<Appointment>>",
          "Parameters": [
            {
              "Name": "masterLocalId",
              "Type": "String"
            },
            {
              "Name": "rangeStart",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "rangeLength",
              "Type": "TimeSpan"
            },
            {
              "Name": "pOptions",
              "Type": "FindAppointmentsOptions"
            }
          ]
        },
        {
          "Name": "FindAppointmentsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<Appointment>>",
          "Parameters": [
            {
              "Name": "rangeStart",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "rangeLength",
              "Type": "TimeSpan"
            }
          ]
        },
        {
          "Name": "FindAppointmentsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<Appointment>>",
          "Parameters": [
            {
              "Name": "rangeStart",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "rangeLength",
              "Type": "TimeSpan"
            },
            {
              "Name": "options",
              "Type": "FindAppointmentsOptions"
            }
          ]
        },
        {
          "Name": "FindExceptionsFromMasterAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<AppointmentException>>",
          "Parameters": [
            {
              "Name": "masterLocalId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "FindUnexpandedAppointmentsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<Appointment>>"
        },
        {
          "Name": "FindUnexpandedAppointmentsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<Appointment>>",
          "Parameters": [
            {
              "Name": "options",
              "Type": "FindAppointmentsOptions"
            }
          ]
        },
        {
          "Name": "GetAppointmentAsync",
          "ReturnType": "IAsyncOperation<Appointment>",
          "Parameters": [
            {
              "Name": "localId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetAppointmentInstanceAsync",
          "ReturnType": "IAsyncOperation<Appointment>",
          "Parameters": [
            {
              "Name": "localId",
              "Type": "String"
            },
            {
              "Name": "instanceStartTime",
              "Type": "DateTimeOffset"
            }
          ]
        },
        {
          "Name": "SaveAppointmentAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pAppointment",
              "Type": "Appointment"
            }
          ]
        },
        {
          "Name": "SaveAsync",
          "ReturnType": "IAsyncAction"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentCalendar"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Date",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "AppointmentConflictType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentConflictResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Appointment",
          "Type": "Appointment",
          "IsGet": true
        },
        {
          "Name": "ExceptionProperties",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        },
        {
          "Name": "IsDeleted",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentException"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IAppointmentParticipant"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Address",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Response",
          "Type": "AppointmentParticipantResponse",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Role",
          "Type": "AppointmentParticipantRole",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentInvitee"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "RequestStoreAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<AppointmentStore>",
          "Parameters": [
            {
              "Name": "options",
              "Type": "AppointmentStoreAccessType"
            }
          ]
        },
        {
          "Name": "ShowAddAppointmentAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "appointment",
              "Type": "Appointment"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            }
          ]
        },
        {
          "Name": "ShowAddAppointmentAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "appointment",
              "Type": "Appointment"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            }
          ]
        },
        {
          "Name": "ShowAppointmentDetailsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "appointmentId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ShowAppointmentDetailsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "appointmentId",
              "Type": "String"
            },
            {
              "Name": "instanceStartDate",
              "Type": "DateTimeOffset"
            }
          ]
        },
        {
          "Name": "ShowEditNewAppointmentAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "appointment",
              "Type": "Appointment"
            }
          ]
        },
        {
          "Name": "ShowRemoveAppointmentAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "appointmentId",
              "Type": "String"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            }
          ]
        },
        {
          "Name": "ShowRemoveAppointmentAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "appointmentId",
              "Type": "String"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            }
          ]
        },
        {
          "Name": "ShowRemoveAppointmentAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "appointmentId",
              "Type": "String"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            },
            {
              "Name": "instanceStartDate",
              "Type": "DateTimeOffset"
            }
          ]
        },
        {
          "Name": "ShowReplaceAppointmentAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "appointmentId",
              "Type": "String"
            },
            {
              "Name": "appointment",
              "Type": "Appointment"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            }
          ]
        },
        {
          "Name": "ShowReplaceAppointmentAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "appointmentId",
              "Type": "String"
            },
            {
              "Name": "appointment",
              "Type": "Appointment"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            }
          ]
        },
        {
          "Name": "ShowReplaceAppointmentAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "appointmentId",
              "Type": "String"
            },
            {
              "Name": "appointment",
              "Type": "Appointment"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            },
            {
              "Name": "instanceStartDate",
              "Type": "DateTimeOffset"
            }
          ]
        },
        {
          "Name": "ShowTimeFrameAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "timeToShow",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "duration",
              "Type": "TimeSpan"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IAppointmentParticipant"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Address",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentOrganizer"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AllDay",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AllowNewTimeProposal",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BusyStatus",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DefaultProperties",
          "Type": "IList<String>",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Details",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Duration",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HasInvitees",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Invitees",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsCanceledMeeting",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsOrganizedByUser",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsResponseRequested",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Location",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OnlineMeetingLink",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Organizer",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OriginalStartTime",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Recurrence",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Reminder",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ReplyTime",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Sensitivity",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StartTime",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Subject",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Uri",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "UserResponse",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Day",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DaysOfWeek",
          "Type": "AppointmentDaysOfWeek",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Interval",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Month",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Occurrences",
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RecurrenceType",
          "Type": "RecurrenceType",
          "IsGet": true
        },
        {
          "Name": "TimeZone",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Unit",
          "Type": "AppointmentRecurrenceUnit",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Until",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "WeekOfMonth",
          "Type": "AppointmentWeekOfMonth",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentRecurrence"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ShowAppointmentDetails",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentsProvider.AppointmentsProviderLaunchActionVerbs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ChangeTracker",
          "Type": "AppointmentStoreChangeTracker",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateAppointmentCalendarAsync",
          "ReturnType": "IAsyncOperation<AppointmentCalendar>",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "FindAppointmentCalendarsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<AppointmentCalendar>>"
        },
        {
          "Name": "FindAppointmentCalendarsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<AppointmentCalendar>>",
          "Parameters": [
            {
              "Name": "options",
              "Type": "FindAppointmentCalendarsOptions"
            }
          ]
        },
        {
          "Name": "FindAppointmentsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<Appointment>>",
          "Parameters": [
            {
              "Name": "rangeStart",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "rangeLength",
              "Type": "TimeSpan"
            }
          ]
        },
        {
          "Name": "FindAppointmentsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<Appointment>>",
          "Parameters": [
            {
              "Name": "rangeStart",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "rangeLength",
              "Type": "TimeSpan"
            },
            {
              "Name": "options",
              "Type": "FindAppointmentsOptions"
            }
          ]
        },
        {
          "Name": "FindConflictAsync",
          "ReturnType": "IAsyncOperation<AppointmentConflictResult>",
          "Parameters": [
            {
              "Name": "appointment",
              "Type": "Appointment"
            }
          ]
        },
        {
          "Name": "FindConflictAsync",
          "ReturnType": "IAsyncOperation<AppointmentConflictResult>",
          "Parameters": [
            {
              "Name": "appointment",
              "Type": "Appointment"
            },
            {
              "Name": "instanceStartTime",
              "Type": "DateTimeOffset"
            }
          ]
        },
        {
          "Name": "FindLocalIdsFromRoamingIdAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<String>>",
          "Parameters": [
            {
              "Name": "roamingId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetAppointmentAsync",
          "ReturnType": "IAsyncOperation<Appointment>",
          "Parameters": [
            {
              "Name": "localId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetAppointmentCalendarAsync",
          "ReturnType": "IAsyncOperation<AppointmentCalendar>",
          "Parameters": [
            {
              "Name": "calendarId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetAppointmentInstanceAsync",
          "ReturnType": "IAsyncOperation<Appointment>",
          "Parameters": [
            {
              "Name": "localId",
              "Type": "String"
            },
            {
              "Name": "instanceStartTime",
              "Type": "DateTimeOffset"
            }
          ]
        },
        {
          "Name": "MoveAppointmentAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "appointment",
              "Type": "Appointment"
            },
            {
              "Name": "destinationCalendar",
              "Type": "AppointmentCalendar"
            }
          ]
        },
        {
          "Name": "ShowAddAppointmentAsync",
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "appointment",
              "Type": "Appointment"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            }
          ]
        },
        {
          "Name": "ShowAppointmentDetailsAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ShowAppointmentDetailsAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localId",
              "Type": "String"
            },
            {
              "Name": "instanceStartDate",
              "Type": "DateTimeOffset"
            }
          ]
        },
        {
          "Name": "ShowEditNewAppointmentAsync",
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "appointment",
              "Type": "Appointment"
            }
          ]
        },
        {
          "Name": "ShowRemoveAppointmentAsync",
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "localId",
              "Type": "String"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            }
          ]
        },
        {
          "Name": "ShowRemoveAppointmentAsync",
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "localId",
              "Type": "String"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            },
            {
              "Name": "instanceStartDate",
              "Type": "DateTimeOffset"
            }
          ]
        },
        {
          "Name": "ShowReplaceAppointmentAsync",
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "localId",
              "Type": "String"
            },
            {
              "Name": "appointment",
              "Type": "Appointment"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            }
          ]
        },
        {
          "Name": "ShowReplaceAppointmentAsync",
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "localId",
              "Type": "String"
            },
            {
              "Name": "appointment",
              "Type": "Appointment"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            },
            {
              "Name": "instanceStartDate",
              "Type": "DateTimeOffset"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentStore"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Appointment",
          "Type": "Appointment",
          "IsGet": true
        },
        {
          "Name": "ChangeType",
          "Type": "AppointmentStoreChangeType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentStoreChange"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "AcceptChanges",
          "ReturnType": "Void"
        },
        {
          "Name": "AcceptChangesThrough",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "lastChangeToAccept",
              "Type": "AppointmentStoreChange"
            }
          ]
        },
        {
          "Name": "ReadBatchAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<AppointmentStoreChange>>"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentStoreChangeReader"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Enable",
          "ReturnType": "Void"
        },
        {
          "Name": "GetChangeReader",
          "ReturnType": "AppointmentStoreChangeReader"
        },
        {
          "Name": "Reset",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentStoreChangeTracker"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CalendarIds",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "FetchProperties",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "IncludeHidden",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaxCount",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.FindAppointmentsOptions"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "RequestAsync",
          "ReturnType": "IAsyncOperation<ApplicationTriggerResult>"
        },
        {
          "Name": "RequestAsync",
          "ReturnType": "IAsyncOperation<ApplicationTriggerResult>",
          "Parameters": [
            {
              "Name": "arguments",
              "Type": "ValueSet"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.ApplicationTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Arguments",
          "Type": "ValueSet",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.ApplicationTriggerDetails"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetAccessStatus",
          "IsStatic": true,
          "ReturnType": "BackgroundAccessStatus"
        },
        {
          "Name": "GetAccessStatus",
          "IsStatic": true,
          "ReturnType": "BackgroundAccessStatus",
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "RemoveAccess",
          "IsStatic": true,
          "ReturnType": "Void"
        },
        {
          "Name": "RemoveAccess",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "RequestAccessAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BackgroundAccessStatus>"
        },
        {
          "Name": "RequestAccessAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BackgroundAccessStatus>",
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.BackgroundExecutionManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CancelOnConditionLoss",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsNetworkRequested",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TaskEntryPoint",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AddCondition",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "condition",
              "Type": "IBackgroundCondition"
            }
          ]
        },
        {
          "Name": "Register",
          "ReturnType": "BackgroundTaskRegistration"
        },
        {
          "Name": "SetTrigger",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "trigger",
              "Type": "IBackgroundTrigger"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.BackgroundTaskBuilder"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "InstanceId",
          "Type": "Guid",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CheckResult",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.BackgroundTaskCompletedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Complete",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.BackgroundTaskDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "InstanceId",
          "Type": "Guid",
          "IsGet": true
        },
        {
          "Name": "Progress",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.BackgroundTaskProgressEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTaskRegistration",
        "IBackgroundTaskRegistration2"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AllTasks",
          "Type": "IReadOnlyDictionary<Guid,IBackgroundTaskRegistration>",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "TaskId",
          "Type": "Guid",
          "IsGet": true
        },
        {
          "Name": "Trigger",
          "Type": "IBackgroundTrigger",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Unregister",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "cancelTask",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "Completed",
          "Type": "BackgroundTaskCompletedEventHandler"
        },
        {
          "Name": "Progress",
          "Type": "BackgroundTaskProgressEventHandler"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.BackgroundTaskRegistration"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CurrentBackgroundWorkCost",
          "Type": "BackgroundWorkCostValue",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.BackgroundWorkCost"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.CachedFileUpdaterTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CanRequestUserInput",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "UpdateRequest",
          "Type": "FileUpdateRequest",
          "IsGet": true
        },
        {
          "Name": "UpdateTarget",
          "Type": "CachedFileTarget",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.CachedFileUpdaterTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CanMaintainConnection",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "DeviceId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "MaintainConnection",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "FromIdAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<DeviceConnectionChangeTrigger>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.DeviceConnectionChangeTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "triggerQualifier",
              "Type": "String"
            },
            {
              "Name": "oneShot",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "OneShot",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "TriggerQualifier",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.DeviceManufacturerNotificationTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "RequestAsync",
          "ReturnType": "IAsyncOperation<DeviceTriggerResult>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            },
            {
              "Name": "expectedDuration",
              "Type": "TimeSpan"
            }
          ]
        },
        {
          "Name": "RequestAsync",
          "ReturnType": "IAsyncOperation<DeviceTriggerResult>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            },
            {
              "Name": "expectedDuration",
              "Type": "TimeSpan"
            },
            {
              "Name": "arguments",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.DeviceServicingTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "RequestAsync",
          "ReturnType": "IAsyncOperation<DeviceTriggerResult>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "RequestAsync",
          "ReturnType": "IAsyncOperation<DeviceTriggerResult>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            },
            {
              "Name": "arguments",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.DeviceUseTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "characteristic",
              "Type": "GattCharacteristic"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Characteristic",
          "Type": "GattCharacteristic",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.GattCharacteristicNotificationTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.ChatMessageNotificationTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "triggerType",
              "Type": "LocationTriggerType"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "TriggerType",
          "Type": "LocationTriggerType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.LocationTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "freshnessTime",
              "Type": "UInt32"
            },
            {
              "Name": "oneShot",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "FreshnessTime",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "OneShot",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.MaintenanceTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.NetworkOperatorHotspotAuthenticationTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "networkAccountId",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "NetworkAccountId",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.NetworkOperatorNotificationTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.PushNotificationTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AllowMultipleConnections",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "InboundConnection",
          "Type": "RfcommInboundConnectionInformation",
          "IsGet": true
        },
        {
          "Name": "OutboundConnection",
          "Type": "RfcommOutboundConnectionInformation",
          "IsGet": true
        },
        {
          "Name": "ProtectionLevel",
          "Type": "SocketProtectionLevel",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RemoteHostName",
          "Type": "HostName",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.RfcommConnectionTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "triggerType",
              "Type": "SmartCardTriggerType"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "TriggerType",
          "Type": "SmartCardTriggerType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.SmartCardTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundCondition"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "conditionType",
              "Type": "SystemConditionType"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "ConditionType",
          "Type": "SystemConditionType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.SystemCondition"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "triggerType",
              "Type": "SystemTriggerType"
            },
            {
              "Name": "oneShot",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "OneShot",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "TriggerType",
          "Type": "SystemTriggerType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.SystemTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "freshnessTime",
              "Type": "UInt32"
            },
            {
              "Name": "oneShot",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "FreshnessTime",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "OneShot",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.TimeTrigger"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "ShowPhoneCallUI",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "phoneNumber",
              "Type": "String"
            },
            {
              "Name": "displayName",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Calls.PhoneCallManager"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "ShowInstalledApplicationsUI",
          "IsStatic": true,
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.CameraApplicationManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Addresses",
          "Type": "IList<ContactAddress>",
          "IsGet": true
        },
        {
          "Name": "ConnectedServiceAccounts",
          "Type": "IList<ContactConnectedServiceAccount>",
          "IsGet": true
        },
        {
          "Name": "DataSuppliers",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Emails",
          "Type": "IList<ContactEmail>",
          "IsGet": true
        },
        {
          "Name": "Fields",
          "Type": "IList<IContactField>",
          "IsGet": true
        },
        {
          "Name": "FirstName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HonorificNamePrefix",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HonorificNameSuffix",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ImportantDates",
          "Type": "IList<ContactDate>",
          "IsGet": true
        },
        {
          "Name": "JobInfo",
          "Type": "IList<ContactJobInfo>",
          "IsGet": true
        },
        {
          "Name": "LastName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MiddleName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Notes",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Phones",
          "Type": "IList<ContactPhone>",
          "IsGet": true
        },
        {
          "Name": "ProviderProperties",
          "Type": "IPropertySet",
          "IsGet": true
        },
        {
          "Name": "SignificantOthers",
          "Type": "IList<ContactSignificantOther>",
          "IsGet": true
        },
        {
          "Name": "Thumbnail",
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Websites",
          "Type": "IList<ContactWebsite>",
          "IsGet": true
        },
        {
          "Name": "YomiDisplayName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "YomiFamilyName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "YomiGivenName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.Contact"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Country",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Description",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Kind",
          "Type": "ContactAddressKind",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Locality",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PostalCode",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Region",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StreetAddress",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactAddress"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "SetData",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "contact",
              "Type": "Contact"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactCardDelayedDataLoader"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ServiceName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactConnectedServiceAccount"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Day",
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Description",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Kind",
          "Type": "ContactDateKind",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Month",
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Year",
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactDate"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Address",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Description",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Kind",
          "Type": "ContactEmailKind",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactEmail"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContactField"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Category",
          "Type": "ContactFieldCategory",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "ContactFieldType",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactField"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContactFieldFactory",
        "IContactInstantMessageFieldFactory",
        "IContactLocationFieldFactory"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateField",
          "ReturnType": "ContactField",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            }
          ]
        },
        {
          "Name": "CreateField",
          "ReturnType": "ContactField",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ]
        },
        {
          "Name": "CreateField",
          "ReturnType": "ContactField",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ]
        },
        {
          "Name": "CreateInstantMessage",
          "ReturnType": "ContactInstantMessageField",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateInstantMessage",
          "ReturnType": "ContactInstantMessageField",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ]
        },
        {
          "Name": "CreateInstantMessage",
          "ReturnType": "ContactInstantMessageField",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            },
            {
              "Name": "service",
              "Type": "String"
            },
            {
              "Name": "displayText",
              "Type": "String"
            },
            {
              "Name": "verb",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "CreateLocation",
          "ReturnType": "ContactLocationField",
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateLocation",
          "ReturnType": "ContactLocationField",
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ]
        },
        {
          "Name": "CreateLocation",
          "ReturnType": "ContactLocationField",
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            },
            {
              "Name": "street",
              "Type": "String"
            },
            {
              "Name": "city",
              "Type": "String"
            },
            {
              "Name": "region",
              "Type": "String"
            },
            {
              "Name": "country",
              "Type": "String"
            },
            {
              "Name": "postalCode",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactFieldFactory"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CustomFields",
          "Type": "IReadOnlyList<ContactField>",
          "IsGet": true
        },
        {
          "Name": "Emails",
          "Type": "IReadOnlyList<ContactField>",
          "IsGet": true
        },
        {
          "Name": "InstantMessages",
          "Type": "IReadOnlyList<ContactInstantMessageField>",
          "IsGet": true
        },
        {
          "Name": "Locations",
          "Type": "IReadOnlyList<ContactLocationField>",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "PhoneNumbers",
          "Type": "IReadOnlyList<ContactField>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetThumbnailAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStreamWithContentType>"
        },
        {
          "Name": "QueryCustomFields",
          "ReturnType": "IReadOnlyList<ContactField>",
          "Parameters": [
            {
              "Name": "customName",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContactField"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            },
            {
              "Name": "service",
              "Type": "String"
            },
            {
              "Name": "displayText",
              "Type": "String"
            },
            {
              "Name": "verb",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Category",
          "Type": "ContactFieldCategory",
          "IsGet": true
        },
        {
          "Name": "DisplayText",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "LaunchUri",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Service",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "ContactFieldType",
          "IsGet": true
        },
        {
          "Name": "UserName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactInstantMessageField"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CompanyAddress",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CompanyName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CompanyYomiName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Department",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Description",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Manager",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Office",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactJobInfo"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContactField"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            },
            {
              "Name": "street",
              "Type": "String"
            },
            {
              "Name": "city",
              "Type": "String"
            },
            {
              "Name": "region",
              "Type": "String"
            },
            {
              "Name": "country",
              "Type": "String"
            },
            {
              "Name": "postalCode",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Category",
          "Type": "ContactFieldCategory",
          "IsGet": true
        },
        {
          "Name": "City",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Country",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "PostalCode",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Region",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Street",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "ContactFieldType",
          "IsGet": true
        },
        {
          "Name": "UnstructuredAddress",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactLocationField"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "RequestStoreAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ContactStore>"
        },
        {
          "Name": "ShowContactCard",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "contact",
              "Type": "Contact"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            }
          ]
        },
        {
          "Name": "ShowContactCard",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "contact",
              "Type": "Contact"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            }
          ]
        },
        {
          "Name": "ShowDelayLoadedContactCard",
          "IsStatic": true,
          "ReturnType": "ContactCardDelayedDataLoader",
          "Parameters": [
            {
              "Name": "contact",
              "Type": "Contact"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Description",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Kind",
          "Type": "ContactPhoneKind",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Number",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactPhone"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CommitButtonText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DesiredFields",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "DesiredFieldsWithContactFieldType",
          "Type": "IList<ContactFieldType>",
          "IsGet": true
        },
        {
          "Name": "SelectionMode",
          "Type": "ContactSelectionMode",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "PickContactAsync",
          "ReturnType": "IAsyncOperation<Contact>"
        },
        {
          "Name": "PickContactsAsync",
          "ReturnType": "IAsyncOperation<IList<Contact>>"
        },
        {
          "Name": "PickMultipleContactsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<ContactInformation>>"
        },
        {
          "Name": "PickSingleContactAsync",
          "ReturnType": "IAsyncOperation<ContactInformation>"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactPicker"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Description",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactSignificantOther"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "FindContactsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<Contact>>"
        },
        {
          "Name": "FindContactsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<Contact>>",
          "Parameters": [
            {
              "Name": "searchText",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetContactAsync",
          "ReturnType": "IAsyncOperation<Contact>",
          "Parameters": [
            {
              "Name": "contactId",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactStore"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Description",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Uri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactWebsite"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Id",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MainView",
          "Type": "CoreApplicationView",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Properties",
          "Type": "IPropertySet",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Views",
          "Type": "IReadOnlyList<CoreApplicationView>",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateNewView",
          "IsStatic": true,
          "ReturnType": "CoreApplicationView",
          "Parameters": [
            {
              "Name": "runtimeType",
              "Type": "String"
            },
            {
              "Name": "entryPoint",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "DecrementApplicationUseCount",
          "IsStatic": true,
          "ReturnType": "Void"
        },
        {
          "Name": "Exit",
          "IsStatic": true,
          "ReturnType": "Void"
        },
        {
          "Name": "GetCurrentView",
          "IsStatic": true,
          "ReturnType": "CoreApplicationView"
        },
        {
          "Name": "IncrementApplicationUseCount",
          "IsStatic": true,
          "ReturnType": "Void"
        },
        {
          "Name": "Run",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "viewSource",
              "Type": "IFrameworkViewSource"
            }
          ]
        },
        {
          "Name": "RunWithActivationFactories",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activationFactoryCallback",
              "Type": "IGetActivationFactory"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "Exiting",
          "Type": "EventHandler<Object>",
          "IsStatic": true
        },
        {
          "Name": "Resuming",
          "Type": "EventHandler<Object>",
          "IsStatic": true
        },
        {
          "Name": "Suspending",
          "Type": "EventHandler<SuspendingEventArgs>",
          "IsStatic": true
        },
        {
          "Name": "UnhandledErrorDetected",
          "Type": "EventHandler<UnhandledErrorDetectedEventArgs>",
          "IsStatic": true
        }
      ],
      "Name": "Windows.ApplicationModel.Core.CoreApplication"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CoreWindow",
          "Type": "CoreWindow",
          "IsGet": true
        },
        {
          "Name": "Dispatcher",
          "Type": "CoreDispatcher",
          "IsGet": true
        },
        {
          "Name": "IsHosted",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsMain",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "Activated",
          "Type": "TypedEventHandler<CoreApplicationView,IActivatedEventArgs>"
        }
      ],
      "Name": "Windows.ApplicationModel.Core.CoreApplicationView"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Propagate",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Core.UnhandledError"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "UnhandledError",
          "Type": "UnhandledError",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Properties",
          "Type": "DataPackagePropertySet",
          "IsGet": true
        },
        {
          "Name": "RequestedOperation",
          "Type": "DataPackageOperation",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ResourceMap",
          "Type": "IDictionary<String,RandomAccessStreamReference>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetView",
          "ReturnType": "DataPackageView"
        },
        {
          "Name": "SetApplicationLink",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "SetBitmap",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "RandomAccessStreamReference"
            }
          ]
        },
        {
          "Name": "SetData",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "formatId",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SetDataProvider",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "formatId",
              "Type": "String"
            },
            {
              "Name": "delayRenderer",
              "Type": "DataProviderHandler"
            }
          ]
        },
        {
          "Name": "SetHtmlFormat",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SetRtf",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SetStorageItems",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "IEnumerable<IStorageItem>"
            }
          ]
        },
        {
          "Name": "SetStorageItems",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "IEnumerable<IStorageItem>"
            },
            {
              "Name": "readOnly",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetText",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SetUri",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "SetWebLink",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "Destroyed",
          "Type": "TypedEventHandler<DataPackage,Object>"
        },
        {
          "Name": "OperationCompleted",
          "Type": "TypedEventHandler<DataPackage,OperationCompletedEventArgs>"
        }
      ],
      "Name": "Windows.ApplicationModel.DataTransfer.DataPackage"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,Object>>",
        "IDictionary<String,Object>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,Object>>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ApplicationListingUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ApplicationName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentSourceApplicationLink",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentSourceWebLink",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Description",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FileTypes",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "LogoBackgroundColor",
          "Type": "Color",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PackageFamilyName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Square30x30Logo",
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Thumbnail",
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.DataPackagePropertySet"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,Object>>",
        "IReadOnlyCollection<KeyValuePair<String,Object>>",
        "IReadOnlyDictionary<String,Object>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ApplicationListingUri",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "ApplicationName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ContentSourceApplicationLink",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "ContentSourceWebLink",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "Description",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "FileTypes",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        },
        {
          "Name": "LogoBackgroundColor",
          "Type": "Color",
          "IsGet": true
        },
        {
          "Name": "PackageFamilyName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Square30x30Logo",
          "Type": "IRandomAccessStreamReference",
          "IsGet": true
        },
        {
          "Name": "Thumbnail",
          "Type": "RandomAccessStreamReference",
          "IsGet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.DataPackagePropertySetView"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AvailableFormats",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        },
        {
          "Name": "Properties",
          "Type": "DataPackagePropertySetView",
          "IsGet": true
        },
        {
          "Name": "RequestedOperation",
          "Type": "DataPackageOperation",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Contains",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "formatId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetApplicationLinkAsync",
          "ReturnType": "IAsyncOperation<Uri>"
        },
        {
          "Name": "GetBitmapAsync",
          "ReturnType": "IAsyncOperation<RandomAccessStreamReference>"
        },
        {
          "Name": "GetDataAsync",
          "ReturnType": "IAsyncOperation<Object>",
          "Parameters": [
            {
              "Name": "formatId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetHtmlFormatAsync",
          "ReturnType": "IAsyncOperation<String>"
        },
        {
          "Name": "GetResourceMapAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyDictionary<String,RandomAccessStreamReference>>"
        },
        {
          "Name": "GetRtfAsync",
          "ReturnType": "IAsyncOperation<String>"
        },
        {
          "Name": "GetStorageItemsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<IStorageItem>>"
        },
        {
          "Name": "GetTextAsync",
          "ReturnType": "IAsyncOperation<String>"
        },
        {
          "Name": "GetTextAsync",
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "formatId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetUriAsync",
          "ReturnType": "IAsyncOperation<Uri>"
        },
        {
          "Name": "GetWebLinkAsync",
          "ReturnType": "IAsyncOperation<Uri>"
        },
        {
          "Name": "ReportOperationCompleted",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "DataPackageOperation"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.DataPackageView"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Complete",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.DataProviderDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Deadline",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "FormatId",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDeferral",
          "ReturnType": "DataProviderDeferral"
        },
        {
          "Name": "SetData",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.DataProviderRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Data",
          "Type": "DataPackage",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Deadline",
          "Type": "DateTimeOffset",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "FailWithDisplayText",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetDeferral",
          "ReturnType": "DataRequestDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.DataRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Complete",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.DataRequestDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Request",
          "Type": "DataRequest",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.DataRequestedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetForCurrentView",
          "IsStatic": true,
          "ReturnType": "DataTransferManager"
        },
        {
          "Name": "ShowShareUI",
          "IsStatic": true,
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "DataRequested",
          "Type": "TypedEventHandler<DataTransferManager,DataRequestedEventArgs>"
        },
        {
          "Name": "TargetApplicationChosen",
          "Type": "TypedEventHandler<DataTransferManager,TargetApplicationChosenEventArgs>"
        }
      ],
      "Name": "Windows.ApplicationModel.DataTransfer.DataTransferManager"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateHtmlFormat",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "htmlFragment",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetStaticFragment",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "htmlFormat",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.HtmlFormatHelper"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Operation",
          "Type": "DataPackageOperation",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.OperationCompletedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SupportedDataFormats",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "SupportedFileTypes",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "Thumbnail",
          "Type": "RandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.ShareTarget.QuickLink"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Data",
          "Type": "DataPackageView",
          "IsGet": true
        },
        {
          "Name": "QuickLinkId",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "RemoveThisQuickLink",
          "ReturnType": "Void"
        },
        {
          "Name": "ReportCompleted",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "quicklink",
              "Type": "QuickLink"
            }
          ]
        },
        {
          "Name": "ReportCompleted",
          "ReturnType": "Void"
        },
        {
          "Name": "ReportDataRetrieved",
          "ReturnType": "Void"
        },
        {
          "Name": "ReportError",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ReportStarted",
          "ReturnType": "Void"
        },
        {
          "Name": "ReportSubmittedBackgroundTask",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.ShareTarget.ShareOperation"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ApplicationLink",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Bitmap",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Html",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Rtf",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StorageItems",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Text",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Uri",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "WebLink",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.StandardDataFormats"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ApplicationName",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.TargetApplicationChosenEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DesignModeEnabled",
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.DesignMode"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "fileName",
              "Type": "String"
            },
            {
              "Name": "data",
              "Type": "IRandomAccessStreamReference"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Data",
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FileName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailAttachment"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "ShowComposeNewEmailAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "message",
              "Type": "EmailMessage"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Attachments",
          "Type": "IList<EmailAttachment>",
          "IsGet": true
        },
        {
          "Name": "Bcc",
          "Type": "IList<EmailRecipient>",
          "IsGet": true
        },
        {
          "Name": "Body",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CC",
          "Type": "IList<EmailRecipient>",
          "IsGet": true
        },
        {
          "Name": "Subject",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "To",
          "Type": "IList<EmailRecipient>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailMessage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "address",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "address",
              "Type": "String"
            },
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Address",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailRecipient"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Attachments",
          "Type": "IList<ChatMessageAttachment>",
          "IsGet": true
        },
        {
          "Name": "Body",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "From",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "IsForwardingDisabled",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsIncoming",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsRead",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "LocalTimestamp",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "NetworkTimestamp",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "Recipients",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "RecipientSendStatuses",
          "Type": "IReadOnlyDictionary<String,ChatMessageStatus>",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "ChatMessageStatus",
          "IsGet": true
        },
        {
          "Name": "Subject",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "TransportFriendlyName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "TransportId",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatMessage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "mimeType",
              "Type": "String"
            },
            {
              "Name": "dataStreamReference",
              "Type": "IRandomAccessStreamReference"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "DataStreamReference",
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GroupId",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MimeType",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Text",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageAttachment"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ChangeType",
          "Type": "ChatMessageChangeType",
          "IsGet": true
        },
        {
          "Name": "Message",
          "Type": "ChatMessage",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageChange"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Complete",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageChangedDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDeferral",
          "ReturnType": "ChatMessageChangedDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "AcceptChanges",
          "ReturnType": "Void"
        },
        {
          "Name": "AcceptChangesThrough",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "lastChangeToAcknowledge",
              "Type": "ChatMessageChange"
            }
          ]
        },
        {
          "Name": "ReadBatchAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<ChatMessageChange>>"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageChangeReader"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Enable",
          "ReturnType": "Void"
        },
        {
          "Name": "GetChangeReader",
          "ReturnType": "ChatMessageChangeReader"
        },
        {
          "Name": "Reset",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageChangeTracker"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetTransportsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<ChatMessageTransport>>"
        },
        {
          "Name": "RequestStoreAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ChatMessageStore>"
        },
        {
          "Name": "ShowComposeSmsMessageAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "message",
              "Type": "ChatMessage"
            }
          ]
        },
        {
          "Name": "ShowSmsSettings",
          "IsStatic": true,
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ChatMessage",
          "Type": "ChatMessage",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageNotificationTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "ReadBatchAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<ChatMessage>>"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageReader"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ChangeTracker",
          "Type": "ChatMessageChangeTracker",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "DeleteMessageAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localMessageId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "DownloadMessageAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localChatMessageId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetMessageAsync",
          "ReturnType": "IAsyncOperation<ChatMessage>",
          "Parameters": [
            {
              "Name": "localChatMessageId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetMessageReader",
          "ReturnType": "ChatMessageReader"
        },
        {
          "Name": "GetMessageReader",
          "ReturnType": "ChatMessageReader",
          "Parameters": [
            {
              "Name": "recentTimeLimit",
              "Type": "TimeSpan"
            }
          ]
        },
        {
          "Name": "MarkMessageReadAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localChatMessageId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "RetrySendMessageAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localChatMessageId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SendMessageAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "chatMessage",
              "Type": "ChatMessage"
            }
          ]
        },
        {
          "Name": "ValidateMessage",
          "ReturnType": "ChatMessageValidationResult",
          "Parameters": [
            {
              "Name": "chatMessage",
              "Type": "ChatMessage"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "MessageChanged",
          "Type": "TypedEventHandler<ChatMessageStore,ChatMessageChangedEventArgs>"
        }
      ],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageStore"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsActive",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsAppSetAsNotificationProvider",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "TransportFriendlyName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "TransportId",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "RequestSetAsNotificationProviderAsync",
          "ReturnType": "IAsyncAction"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageTransport"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "MaxPartCount",
          "Type": "Nullable<UInt32>",
          "IsGet": true
        },
        {
          "Name": "PartCount",
          "Type": "Nullable<UInt32>",
          "IsGet": true
        },
        {
          "Name": "RemainingCharacterCountInPart",
          "Type": "Nullable<UInt32>",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "ChatMessageValidationStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageValidationResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Current",
          "Type": "Package",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Dependencies",
          "Type": "IReadOnlyList<Package>",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "PackageId",
          "IsGet": true
        },
        {
          "Name": "InstallDate",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "InstalledLocation",
          "Type": "StorageFolder",
          "IsGet": true
        },
        {
          "Name": "IsFramework",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetThumbnailToken",
          "ReturnType": "String"
        },
        {
          "Name": "Launch",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "parameters",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Package"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Architecture",
          "Type": "ProcessorArchitecture",
          "IsGet": true
        },
        {
          "Name": "Author",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "FamilyName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "FullName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ProductId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Publisher",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "PublisherId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ResourceId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Version",
          "Type": "PackageVersion",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.PackageId"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Candidates",
          "Type": "IReadOnlyList<ResourceCandidate>",
          "IsGet": true
        },
        {
          "Name": "Uri",
          "Type": "Uri",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Resolve",
          "ReturnType": "ResourceCandidate"
        },
        {
          "Name": "Resolve",
          "ReturnType": "ResourceCandidate",
          "Parameters": [
            {
              "Name": "resourceContext",
              "Type": "ResourceContext"
            }
          ]
        },
        {
          "Name": "ResolveAll",
          "ReturnType": "IReadOnlyList<ResourceCandidate>"
        },
        {
          "Name": "ResolveAll",
          "ReturnType": "IReadOnlyList<ResourceCandidate>",
          "Parameters": [
            {
              "Name": "resourceContext",
              "Type": "ResourceContext"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.NamedResource"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsDefault",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsMatch",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsMatchAsDefault",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Qualifiers",
          "Type": "IReadOnlyList<ResourceQualifier>",
          "IsGet": true
        },
        {
          "Name": "ValueAsString",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetQualifierValue",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "qualifierName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetValueAsFileAsync",
          "ReturnType": "IAsyncOperation<StorageFile>"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceCandidate"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<ResourceCandidate>",
        "IReadOnlyCollection<ResourceCandidate>",
        "IReadOnlyList<ResourceCandidate>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceCandidateVectorView"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Languages",
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "QualifierValues",
          "Type": "IObservableMap<String,String>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Clone",
          "ReturnType": "ResourceContext"
        },
        {
          "Name": "CreateMatchingContext",
          "IsStatic": true,
          "ReturnType": "ResourceContext",
          "Parameters": [
            {
              "Name": "result",
              "Type": "IEnumerable<ResourceQualifier>"
            }
          ]
        },
        {
          "Name": "GetForCurrentView",
          "IsStatic": true,
          "ReturnType": "ResourceContext"
        },
        {
          "Name": "GetForViewIndependentUse",
          "IsStatic": true,
          "ReturnType": "ResourceContext"
        },
        {
          "Name": "OverrideToMatch",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "result",
              "Type": "IEnumerable<ResourceQualifier>"
            }
          ]
        },
        {
          "Name": "Reset",
          "ReturnType": "Void"
        },
        {
          "Name": "Reset",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "qualifierNames",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "ResetGlobalQualifierValues",
          "IsStatic": true,
          "ReturnType": "Void"
        },
        {
          "Name": "ResetGlobalQualifierValues",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "qualifierNames",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "SetGlobalQualifierValue",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "key",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceContext"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<String>",
        "IReadOnlyCollection<String>",
        "IReadOnlyList<String>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceContextLanguagesVectorView"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AllResourceMaps",
          "Type": "IReadOnlyDictionary<String,ResourceMap>",
          "IsGet": true
        },
        {
          "Name": "Current",
          "Type": "ResourceManager",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DefaultContext",
          "Type": "ResourceContext",
          "IsGet": true
        },
        {
          "Name": "MainResourceMap",
          "Type": "ResourceMap",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "IsResourceReference",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "resourceReference",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "LoadPriFiles",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "files",
              "Type": "IEnumerable<IStorageFile>"
            }
          ]
        },
        {
          "Name": "UnloadPriFiles",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "files",
              "Type": "IEnumerable<IStorageFile>"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,NamedResource>>",
        "IReadOnlyCollection<KeyValuePair<String,NamedResource>>",
        "IReadOnlyDictionary<String,NamedResource>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Uri",
          "Type": "Uri",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetSubtree",
          "ReturnType": "ResourceMap",
          "Parameters": [
            {
              "Name": "reference",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetValue",
          "ReturnType": "ResourceCandidate",
          "Parameters": [
            {
              "Name": "resource",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetValue",
          "ReturnType": "ResourceCandidate",
          "Parameters": [
            {
              "Name": "resource",
              "Type": "String"
            },
            {
              "Name": "context",
              "Type": "ResourceContext"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceMap"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IIterator<KeyValuePair<String,NamedResource>>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Current",
          "Type": "KeyValuePair<String,NamedResource>",
          "IsGet": true
        },
        {
          "Name": "HasCurrent",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetMany",
          "ReturnType": "UInt32",
          "Parameters": [
            {
              "Name": "items",
              "Type": "KeyValuePair`2[]",
              "Out": true
            }
          ]
        },
        {
          "Name": "MoveNext",
          "ReturnType": "Boolean"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceMapIterator"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,ResourceMap>>",
        "IReadOnlyCollection<KeyValuePair<String,ResourceMap>>",
        "IReadOnlyDictionary<String,ResourceMap>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceMapMapView"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IIterator<KeyValuePair<String,ResourceMap>>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Current",
          "Type": "KeyValuePair<String,ResourceMap>",
          "IsGet": true
        },
        {
          "Name": "HasCurrent",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetMany",
          "ReturnType": "UInt32",
          "Parameters": [
            {
              "Name": "items",
              "Type": "KeyValuePair`2[]",
              "Out": true
            }
          ]
        },
        {
          "Name": "MoveNext",
          "ReturnType": "Boolean"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceMapMapViewIterator"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsDefault",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsMatch",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "QualifierName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "QualifierValue",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Score",
          "Type": "Double",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceQualifier"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,String>>",
        "IReadOnlyCollection<KeyValuePair<String,String>>",
        "IReadOnlyDictionary<String,String>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceQualifierMapView"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,String>>",
        "IDictionary<String,String>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,String>>",
        "IObservableMap<String,String>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "MapChanged",
          "Type": "MapChangedEventHandler<String,String>"
        }
      ],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceQualifierObservableMap"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<ResourceQualifier>",
        "IReadOnlyCollection<ResourceQualifier>",
        "IReadOnlyList<ResourceQualifier>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceQualifierVectorView"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetForCurrentView",
          "IsStatic": true,
          "ReturnType": "ResourceLoader"
        },
        {
          "Name": "GetForCurrentView",
          "IsStatic": true,
          "ReturnType": "ResourceLoader",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetForViewIndependentUse",
          "IsStatic": true,
          "ReturnType": "ResourceLoader"
        },
        {
          "Name": "GetForViewIndependentUse",
          "IsStatic": true,
          "ReturnType": "ResourceLoader",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetString",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "resource",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetStringForReference",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "GetStringForUri",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.ResourceLoader"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AppId",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LicenseInformation",
          "Type": "LicenseInformation",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LinkUri",
          "Type": "Uri",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetAppReceiptAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>"
        },
        {
          "Name": "GetProductReceiptAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "productId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetUnfulfilledConsumablesAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<UnfulfilledConsumable>>"
        },
        {
          "Name": "LoadListingInformationAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ListingInformation>"
        },
        {
          "Name": "LoadListingInformationByKeywordsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ListingInformation>",
          "Parameters": [
            {
              "Name": "keywords",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "LoadListingInformationByProductIdsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ListingInformation>",
          "Parameters": [
            {
              "Name": "productIds",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "ReportConsumableFulfillmentAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<FulfillmentResult>",
          "Parameters": [
            {
              "Name": "productId",
              "Type": "String"
            },
            {
              "Name": "transactionId",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "ReportProductFulfillment",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "productId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "RequestAppPurchaseAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "includeReceipt",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "RequestProductPurchaseAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PurchaseResults>",
          "Parameters": [
            {
              "Name": "productId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "RequestProductPurchaseAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PurchaseResults>",
          "Parameters": [
            {
              "Name": "productId",
              "Type": "String"
            },
            {
              "Name": "offerId",
              "Type": "String"
            },
            {
              "Name": "displayProperties",
              "Type": "ProductPurchaseDisplayProperties"
            }
          ]
        },
        {
          "Name": "RequestProductPurchaseAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "productId",
              "Type": "String"
            },
            {
              "Name": "includeReceipt",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Store.CurrentApp"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AppId",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LicenseInformation",
          "Type": "LicenseInformation",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LinkUri",
          "Type": "Uri",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetAppReceiptAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>"
        },
        {
          "Name": "GetProductReceiptAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "productId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetUnfulfilledConsumablesAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<UnfulfilledConsumable>>"
        },
        {
          "Name": "LoadListingInformationAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ListingInformation>"
        },
        {
          "Name": "LoadListingInformationByKeywordsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ListingInformation>",
          "Parameters": [
            {
              "Name": "keywords",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "LoadListingInformationByProductIdsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ListingInformation>",
          "Parameters": [
            {
              "Name": "productIds",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "ReloadSimulatorAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "simulatorSettingsFile",
              "Type": "StorageFile"
            }
          ]
        },
        {
          "Name": "ReportConsumableFulfillmentAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<FulfillmentResult>",
          "Parameters": [
            {
              "Name": "productId",
              "Type": "String"
            },
            {
              "Name": "transactionId",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "RequestAppPurchaseAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "includeReceipt",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "RequestProductPurchaseAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PurchaseResults>",
          "Parameters": [
            {
              "Name": "productId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "RequestProductPurchaseAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PurchaseResults>",
          "Parameters": [
            {
              "Name": "productId",
              "Type": "String"
            },
            {
              "Name": "offerId",
              "Type": "String"
            },
            {
              "Name": "displayProperties",
              "Type": "ProductPurchaseDisplayProperties"
            }
          ]
        },
        {
          "Name": "RequestProductPurchaseAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "productId",
              "Type": "String"
            },
            {
              "Name": "includeReceipt",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Store.CurrentAppSimulator"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ExpirationDate",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "IsActive",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsTrial",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "ProductLicenses",
          "Type": "IReadOnlyDictionary<String,ProductLicense>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "LicenseChanged",
          "Type": "LicenseChangedEventHandler"
        }
      ],
      "Name": "Windows.ApplicationModel.Store.LicenseInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AgeRating",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "CurrentMarket",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Description",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "FormattedPrice",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ProductListings",
          "Type": "IReadOnlyDictionary<String,ProductListing>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Store.ListingInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ExpirationDate",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "IsActive",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsConsumable",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "ProductId",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Store.ProductLicense"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Description",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "FormattedPrice",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ImageUri",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "Keywords",
          "Type": "IEnumerable<String>",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ProductId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ProductType",
          "Type": "ProductType",
          "IsGet": true
        },
        {
          "Name": "Tag",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Store.ProductListing"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Description",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Image",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Store.ProductPurchaseDisplayProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "OfferId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ReceiptXml",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "ProductPurchaseStatus",
          "IsGet": true
        },
        {
          "Name": "TransactionId",
          "Type": "Guid",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Store.PurchaseResults"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "OfferId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ProductId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "TransactionId",
          "Type": "Guid",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Store.UnfulfilledConsumable"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISuspendingDeferral"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Complete",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.SuspendingDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISuspendingEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "SuspendingOperation",
          "Type": "SuspendingOperation",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.SuspendingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISuspendingOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Deadline",
          "Type": "DateTimeOffset",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDeferral",
          "ReturnType": "SuspendingDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.SuspendingOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "streamToBarcodeImage",
              "Type": "IRandomAccessStreamReference"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "symbology",
              "Type": "WalletBarcodeSymbology"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Symbology",
          "Type": "WalletBarcodeSymbology",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetImageAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStreamReference>"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Wallet.WalletBarcode"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "kind",
              "Type": "WalletItemKind"
            },
            {
              "Name": "displayName",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Barcode",
          "Type": "WalletBarcode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "BodyBackgroundImage",
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "BodyColor",
          "Type": "Color",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "BodyFontColor",
          "Type": "Color",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisplayMessage",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisplayProperties",
          "Type": "IDictionary<String,WalletItemCustomProperty>",
          "IsGet": true
        },
        {
          "Name": "ExpirationDate",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderBackgroundImage",
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderColor",
          "Type": "Color",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderFontColor",
          "Type": "Color",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "IsAcknowledged",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsDisplayMessageLaunchable",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsMoreTransactionHistoryLaunchable",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IssuerDisplayName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Kind",
          "Type": "WalletItemKind",
          "IsGet": true
        },
        {
          "Name": "LastUpdated",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Logo159x159",
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Logo336x336",
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Logo99x99",
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LogoImage",
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LogoText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PromotionalImage",
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RelevantDate",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RelevantDateDisplayMessage",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RelevantLocations",
          "Type": "IDictionary<String,WalletRelevantLocation>",
          "IsGet": true
        },
        {
          "Name": "TransactionHistory",
          "Type": "IDictionary<String,WalletTransaction>",
          "IsGet": true
        },
        {
          "Name": "Verbs",
          "Type": "IDictionary<String,WalletVerb>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Wallet.WalletItem"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "AutoDetectLinks",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DetailViewPosition",
          "Type": "WalletDetailViewPosition",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SummaryViewPosition",
          "Type": "WalletSummaryViewPosition",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Value",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Wallet.WalletItemCustomProperty"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "AddAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            },
            {
              "Name": "item",
              "Type": "WalletItem"
            }
          ]
        },
        {
          "Name": "ClearAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "DeleteAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetItemsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<WalletItem>>"
        },
        {
          "Name": "GetItemsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<WalletItem>>",
          "Parameters": [
            {
              "Name": "kind",
              "Type": "WalletItemKind"
            }
          ]
        },
        {
          "Name": "GetWalletItemAsync",
          "ReturnType": "IAsyncOperation<WalletItem>",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ImportItemAsync",
          "ReturnType": "IAsyncOperation<WalletItem>",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IRandomAccessStreamReference"
            }
          ]
        },
        {
          "Name": "ShowAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "ShowAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "UpdateAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "item",
              "Type": "WalletItem"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Wallet.WalletItemStore"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "RequestStoreAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<WalletItemStore>"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Wallet.WalletManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DisplayMessage",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Position",
          "Type": "BasicGeoposition",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Wallet.WalletRelevantLocation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Description",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisplayAmount",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisplayLocation",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IgnoreTimeOfDay",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsLaunchable",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TransactionDate",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Wallet.WalletTransaction"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Wallet.WalletVerb"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "ConvertToText",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "html",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Html.HtmlUtilities"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<IJsonValue>",
        "IEnumerable",
        "IEnumerable<IJsonValue>",
        "IJsonValue",
        "IList<IJsonValue>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "ValueType",
          "Type": "JsonValueType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetArray",
          "ReturnType": "JsonArray"
        },
        {
          "Name": "GetArrayAt",
          "ReturnType": "JsonArray",
          "Parameters": [
            {
              "Name": "index",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetBoolean",
          "ReturnType": "Boolean"
        },
        {
          "Name": "GetBooleanAt",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "index",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetNumber",
          "ReturnType": "Double"
        },
        {
          "Name": "GetNumberAt",
          "ReturnType": "Double",
          "Parameters": [
            {
              "Name": "index",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetObject",
          "ReturnType": "JsonObject"
        },
        {
          "Name": "GetObjectAt",
          "ReturnType": "JsonObject",
          "Parameters": [
            {
              "Name": "index",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetString",
          "ReturnType": "String"
        },
        {
          "Name": "GetStringAt",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "index",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "Parse",
          "IsStatic": true,
          "ReturnType": "JsonArray",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "Stringify",
          "ReturnType": "String"
        },
        {
          "Name": "TryParse",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "result",
              "Type": "JsonArray&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Json.JsonArray"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetJsonStatus",
          "IsStatic": true,
          "ReturnType": "JsonErrorStatus",
          "Parameters": [
            {
              "Name": "hresult",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "GetStatus",
          "IsStatic": true,
          "ReturnType": "JsonErrorStatus",
          "Parameters": [
            {
              "Name": "hresult",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Json.JsonError"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,IJsonValue>>",
        "IDictionary<String,IJsonValue>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,IJsonValue>>",
        "IJsonValue"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "ValueType",
          "Type": "JsonValueType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetArray",
          "ReturnType": "JsonArray"
        },
        {
          "Name": "GetBoolean",
          "ReturnType": "Boolean"
        },
        {
          "Name": "GetNamedArray",
          "ReturnType": "JsonArray",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetNamedArray",
          "ReturnType": "JsonArray",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "defaultValue",
              "Type": "JsonArray"
            }
          ]
        },
        {
          "Name": "GetNamedBoolean",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetNamedBoolean",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "defaultValue",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "GetNamedNumber",
          "ReturnType": "Double",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetNamedNumber",
          "ReturnType": "Double",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "defaultValue",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "GetNamedObject",
          "ReturnType": "JsonObject",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetNamedObject",
          "ReturnType": "JsonObject",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "defaultValue",
              "Type": "JsonObject"
            }
          ]
        },
        {
          "Name": "GetNamedString",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetNamedString",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "defaultValue",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetNamedValue",
          "ReturnType": "JsonValue",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetNamedValue",
          "ReturnType": "JsonValue",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "defaultValue",
              "Type": "JsonValue"
            }
          ]
        },
        {
          "Name": "GetNumber",
          "ReturnType": "Double"
        },
        {
          "Name": "GetObject",
          "ReturnType": "JsonObject"
        },
        {
          "Name": "GetString",
          "ReturnType": "String"
        },
        {
          "Name": "Parse",
          "IsStatic": true,
          "ReturnType": "JsonObject",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SetNamedValue",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "IJsonValue"
            }
          ]
        },
        {
          "Name": "Stringify",
          "ReturnType": "String"
        },
        {
          "Name": "TryParse",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "result",
              "Type": "JsonObject&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Json.JsonObject"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IJsonValue"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ValueType",
          "Type": "JsonValueType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateBooleanValue",
          "IsStatic": true,
          "ReturnType": "JsonValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "CreateNumberValue",
          "IsStatic": true,
          "ReturnType": "JsonValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "CreateStringValue",
          "IsStatic": true,
          "ReturnType": "JsonValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetArray",
          "ReturnType": "JsonArray"
        },
        {
          "Name": "GetBoolean",
          "ReturnType": "Boolean"
        },
        {
          "Name": "GetNumber",
          "ReturnType": "Double"
        },
        {
          "Name": "GetObject",
          "ReturnType": "JsonObject"
        },
        {
          "Name": "GetString",
          "ReturnType": "String"
        },
        {
          "Name": "Parse",
          "IsStatic": true,
          "ReturnType": "JsonValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "Stringify",
          "ReturnType": "String"
        },
        {
          "Name": "TryParse",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "result",
              "Type": "JsonValue&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Json.JsonValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "aqsFilter",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "aqsFilter",
              "Type": "String"
            },
            {
              "Name": "filterLanguage",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Find",
          "ReturnType": "IReadOnlyList<TextSegment>",
          "Parameters": [
            {
              "Name": "content",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "FindInProperty",
          "ReturnType": "IReadOnlyList<TextSegment>",
          "Parameters": [
            {
              "Name": "propertyContent",
              "Type": "String"
            },
            {
              "Name": "propertyName",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Text.SemanticTextQuery"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetCodepointFromSurrogatePair",
          "IsStatic": true,
          "ReturnType": "UInt32",
          "Parameters": [
            {
              "Name": "highSurrogate",
              "Type": "UInt32"
            },
            {
              "Name": "lowSurrogate",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetGeneralCategory",
          "IsStatic": true,
          "ReturnType": "UnicodeGeneralCategory",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetNumericType",
          "IsStatic": true,
          "ReturnType": "UnicodeNumericType",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetSurrogatePairFromCodepoint",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            },
            {
              "Name": "highSurrogate",
              "Type": "Char&",
              "Out": true
            },
            {
              "Name": "lowSurrogate",
              "Type": "Char&",
              "Out": true
            }
          ]
        },
        {
          "Name": "IsAlphabetic",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "IsCased",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "IsGraphemeBase",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "IsGraphemeExtend",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "IsHighSurrogate",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "IsIdContinue",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "IsIdStart",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "IsLowercase",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "IsLowSurrogate",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "IsNoncharacter",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "IsSupplementary",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "IsUppercase",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "IsWhitespace",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Text.UnicodeCharacters"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Attributes",
          "Type": "XmlNamedNodeMap",
          "IsGet": true
        },
        {
          "Name": "FirstChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "ChildNodes",
          "Type": "XmlNodeList",
          "IsGet": true
        },
        {
          "Name": "InnerText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LastChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "LocalName",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "NamespaceUri",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "NextSibling",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "NodeType",
          "Type": "NodeType",
          "IsGet": true
        },
        {
          "Name": "NodeValue",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NotationName",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "OwnerDocument",
          "Type": "XmlDocument",
          "IsGet": true
        },
        {
          "Name": "ParentNode",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "Prefix",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PreviousSibling",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "PublicId",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "SystemId",
          "Type": "Object",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AppendChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "CloneNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "GetXml",
          "ReturnType": "String"
        },
        {
          "Name": "HasChildNodes",
          "ReturnType": "Boolean"
        },
        {
          "Name": "InsertBefore",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "Normalize",
          "ReturnType": "Void"
        },
        {
          "Name": "RemoveChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "ReplaceChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "SelectNodes",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectNodesNS",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SelectSingleNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectSingleNodeNS",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.DtdEntity"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Attributes",
          "Type": "XmlNamedNodeMap",
          "IsGet": true
        },
        {
          "Name": "FirstChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "ChildNodes",
          "Type": "XmlNodeList",
          "IsGet": true
        },
        {
          "Name": "InnerText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LastChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "LocalName",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "NamespaceUri",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "NextSibling",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "NodeType",
          "Type": "NodeType",
          "IsGet": true
        },
        {
          "Name": "NodeValue",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OwnerDocument",
          "Type": "XmlDocument",
          "IsGet": true
        },
        {
          "Name": "ParentNode",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "Prefix",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PreviousSibling",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "PublicId",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "SystemId",
          "Type": "Object",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AppendChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "CloneNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "GetXml",
          "ReturnType": "String"
        },
        {
          "Name": "HasChildNodes",
          "ReturnType": "Boolean"
        },
        {
          "Name": "InsertBefore",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "Normalize",
          "ReturnType": "Void"
        },
        {
          "Name": "RemoveChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "ReplaceChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "SelectNodes",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectNodesNS",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SelectSingleNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectSingleNodeNS",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.DtdNotation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Attributes",
          "Type": "XmlNamedNodeMap",
          "IsGet": true
        },
        {
          "Name": "FirstChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "ChildNodes",
          "Type": "XmlNodeList",
          "IsGet": true
        },
        {
          "Name": "InnerText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LastChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "LocalName",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "NamespaceUri",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "NextSibling",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "NodeType",
          "Type": "NodeType",
          "IsGet": true
        },
        {
          "Name": "NodeValue",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OwnerDocument",
          "Type": "XmlDocument",
          "IsGet": true
        },
        {
          "Name": "ParentNode",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "Prefix",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PreviousSibling",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "Specified",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AppendChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "CloneNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "GetXml",
          "ReturnType": "String"
        },
        {
          "Name": "HasChildNodes",
          "ReturnType": "Boolean"
        },
        {
          "Name": "InsertBefore",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "Normalize",
          "ReturnType": "Void"
        },
        {
          "Name": "RemoveChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "ReplaceChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "SelectNodes",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectNodesNS",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SelectSingleNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectSingleNodeNS",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlAttribute"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IXmlCharacterData",
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer",
        "IXmlText"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Attributes",
          "Type": "XmlNamedNodeMap",
          "IsGet": true
        },
        {
          "Name": "Data",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FirstChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "ChildNodes",
          "Type": "XmlNodeList",
          "IsGet": true
        },
        {
          "Name": "InnerText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LastChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "Length",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "LocalName",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "NamespaceUri",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "NextSibling",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "NodeType",
          "Type": "NodeType",
          "IsGet": true
        },
        {
          "Name": "NodeValue",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OwnerDocument",
          "Type": "XmlDocument",
          "IsGet": true
        },
        {
          "Name": "ParentNode",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "Prefix",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PreviousSibling",
          "Type": "IXmlNode",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AppendData",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "data",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "AppendChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "CloneNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "DeleteData",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetXml",
          "ReturnType": "String"
        },
        {
          "Name": "HasChildNodes",
          "ReturnType": "Boolean"
        },
        {
          "Name": "InsertBefore",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "InsertData",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "data",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "Normalize",
          "ReturnType": "Void"
        },
        {
          "Name": "RemoveChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "ReplaceData",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "data",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ReplaceChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "SelectNodes",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectNodesNS",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SelectSingleNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectSingleNodeNS",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SplitText",
          "ReturnType": "IXmlText",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "SubstringData",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlCDataSection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IXmlCharacterData",
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Attributes",
          "Type": "XmlNamedNodeMap",
          "IsGet": true
        },
        {
          "Name": "Data",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FirstChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "ChildNodes",
          "Type": "XmlNodeList",
          "IsGet": true
        },
        {
          "Name": "InnerText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LastChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "Length",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "LocalName",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "NamespaceUri",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "NextSibling",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "NodeType",
          "Type": "NodeType",
          "IsGet": true
        },
        {
          "Name": "NodeValue",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OwnerDocument",
          "Type": "XmlDocument",
          "IsGet": true
        },
        {
          "Name": "ParentNode",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "Prefix",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PreviousSibling",
          "Type": "IXmlNode",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AppendData",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "data",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "AppendChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "CloneNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "DeleteData",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetXml",
          "ReturnType": "String"
        },
        {
          "Name": "HasChildNodes",
          "ReturnType": "Boolean"
        },
        {
          "Name": "InsertBefore",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "InsertData",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "data",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "Normalize",
          "ReturnType": "Void"
        },
        {
          "Name": "RemoveChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "ReplaceData",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "data",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ReplaceChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "SelectNodes",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectNodesNS",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SelectSingleNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectSingleNodeNS",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SubstringData",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlComment"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Attributes",
          "Type": "XmlNamedNodeMap",
          "IsGet": true
        },
        {
          "Name": "Doctype",
          "Type": "XmlDocumentType",
          "IsGet": true
        },
        {
          "Name": "DocumentElement",
          "Type": "XmlElement",
          "IsGet": true
        },
        {
          "Name": "DocumentUri",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "FirstChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "ChildNodes",
          "Type": "XmlNodeList",
          "IsGet": true
        },
        {
          "Name": "Implementation",
          "Type": "XmlDomImplementation",
          "IsGet": true
        },
        {
          "Name": "InnerText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LastChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "LocalName",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "NamespaceUri",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "NextSibling",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "NodeType",
          "Type": "NodeType",
          "IsGet": true
        },
        {
          "Name": "NodeValue",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OwnerDocument",
          "Type": "XmlDocument",
          "IsGet": true
        },
        {
          "Name": "ParentNode",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "Prefix",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PreviousSibling",
          "Type": "IXmlNode",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AppendChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "CloneNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "CreateAttribute",
          "ReturnType": "XmlAttribute",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateAttributeNS",
          "ReturnType": "XmlAttribute",
          "Parameters": [
            {
              "Name": "namespaceUri",
              "Type": "Object"
            },
            {
              "Name": "qualifiedName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateCDataSection",
          "ReturnType": "XmlCDataSection",
          "Parameters": [
            {
              "Name": "data",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateComment",
          "ReturnType": "XmlComment",
          "Parameters": [
            {
              "Name": "data",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateDocumentFragment",
          "ReturnType": "XmlDocumentFragment"
        },
        {
          "Name": "CreateElement",
          "ReturnType": "XmlElement",
          "Parameters": [
            {
              "Name": "tagName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateElementNS",
          "ReturnType": "XmlElement",
          "Parameters": [
            {
              "Name": "namespaceUri",
              "Type": "Object"
            },
            {
              "Name": "qualifiedName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateEntityReference",
          "ReturnType": "XmlEntityReference",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateProcessingInstruction",
          "ReturnType": "XmlProcessingInstruction",
          "Parameters": [
            {
              "Name": "target",
              "Type": "String"
            },
            {
              "Name": "data",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateTextNode",
          "ReturnType": "XmlText",
          "Parameters": [
            {
              "Name": "data",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetElementById",
          "ReturnType": "XmlElement",
          "Parameters": [
            {
              "Name": "elementId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetElementsByTagName",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "tagName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetXml",
          "ReturnType": "String"
        },
        {
          "Name": "HasChildNodes",
          "ReturnType": "Boolean"
        },
        {
          "Name": "ImportNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "node",
              "Type": "IXmlNode"
            },
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "InsertBefore",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "LoadFromFileAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<XmlDocument>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "LoadFromFileAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<XmlDocument>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "loadSettings",
              "Type": "XmlLoadSettings"
            }
          ]
        },
        {
          "Name": "LoadFromUriAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<XmlDocument>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "LoadFromUriAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<XmlDocument>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "loadSettings",
              "Type": "XmlLoadSettings"
            }
          ]
        },
        {
          "Name": "LoadXml",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "xml",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "LoadXml",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "xml",
              "Type": "String"
            },
            {
              "Name": "loadSettings",
              "Type": "XmlLoadSettings"
            }
          ]
        },
        {
          "Name": "Normalize",
          "ReturnType": "Void"
        },
        {
          "Name": "RemoveChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "ReplaceChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "SaveToFileAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "SelectNodes",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectNodesNS",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SelectSingleNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectSingleNodeNS",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlDocument"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Attributes",
          "Type": "XmlNamedNodeMap",
          "IsGet": true
        },
        {
          "Name": "FirstChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "ChildNodes",
          "Type": "XmlNodeList",
          "IsGet": true
        },
        {
          "Name": "InnerText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LastChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "LocalName",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "NamespaceUri",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "NextSibling",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "NodeType",
          "Type": "NodeType",
          "IsGet": true
        },
        {
          "Name": "NodeValue",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OwnerDocument",
          "Type": "XmlDocument",
          "IsGet": true
        },
        {
          "Name": "ParentNode",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "Prefix",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PreviousSibling",
          "Type": "IXmlNode",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AppendChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "CloneNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "GetXml",
          "ReturnType": "String"
        },
        {
          "Name": "HasChildNodes",
          "ReturnType": "Boolean"
        },
        {
          "Name": "InsertBefore",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "Normalize",
          "ReturnType": "Void"
        },
        {
          "Name": "RemoveChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "ReplaceChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "SelectNodes",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectNodesNS",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SelectSingleNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectSingleNodeNS",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlDocumentFragment"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Attributes",
          "Type": "XmlNamedNodeMap",
          "IsGet": true
        },
        {
          "Name": "Entities",
          "Type": "XmlNamedNodeMap",
          "IsGet": true
        },
        {
          "Name": "FirstChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "ChildNodes",
          "Type": "XmlNodeList",
          "IsGet": true
        },
        {
          "Name": "InnerText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LastChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "LocalName",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "NamespaceUri",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "NextSibling",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "NodeType",
          "Type": "NodeType",
          "IsGet": true
        },
        {
          "Name": "NodeValue",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Notations",
          "Type": "XmlNamedNodeMap",
          "IsGet": true
        },
        {
          "Name": "OwnerDocument",
          "Type": "XmlDocument",
          "IsGet": true
        },
        {
          "Name": "ParentNode",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "Prefix",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PreviousSibling",
          "Type": "IXmlNode",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AppendChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "CloneNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "GetXml",
          "ReturnType": "String"
        },
        {
          "Name": "HasChildNodes",
          "ReturnType": "Boolean"
        },
        {
          "Name": "InsertBefore",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "Normalize",
          "ReturnType": "Void"
        },
        {
          "Name": "RemoveChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "ReplaceChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "SelectNodes",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectNodesNS",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SelectSingleNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectSingleNodeNS",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlDocumentType"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "HasFeature",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "feature",
              "Type": "String"
            },
            {
              "Name": "version",
              "Type": "Object"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlDomImplementation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Attributes",
          "Type": "XmlNamedNodeMap",
          "IsGet": true
        },
        {
          "Name": "FirstChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "ChildNodes",
          "Type": "XmlNodeList",
          "IsGet": true
        },
        {
          "Name": "InnerText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LastChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "LocalName",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "NamespaceUri",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "NextSibling",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "NodeType",
          "Type": "NodeType",
          "IsGet": true
        },
        {
          "Name": "NodeValue",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OwnerDocument",
          "Type": "XmlDocument",
          "IsGet": true
        },
        {
          "Name": "ParentNode",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "Prefix",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PreviousSibling",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "TagName",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AppendChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "CloneNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "GetAttribute",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "attributeName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetAttributeNode",
          "ReturnType": "XmlAttribute",
          "Parameters": [
            {
              "Name": "attributeName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetAttributeNodeNS",
          "ReturnType": "XmlAttribute",
          "Parameters": [
            {
              "Name": "namespaceUri",
              "Type": "Object"
            },
            {
              "Name": "localName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetAttributeNS",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "namespaceUri",
              "Type": "Object"
            },
            {
              "Name": "localName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetElementsByTagName",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "tagName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetXml",
          "ReturnType": "String"
        },
        {
          "Name": "HasChildNodes",
          "ReturnType": "Boolean"
        },
        {
          "Name": "InsertBefore",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "Normalize",
          "ReturnType": "Void"
        },
        {
          "Name": "RemoveAttribute",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "attributeName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "RemoveAttributeNode",
          "ReturnType": "XmlAttribute",
          "Parameters": [
            {
              "Name": "attributeNode",
              "Type": "XmlAttribute"
            }
          ]
        },
        {
          "Name": "RemoveAttributeNS",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "namespaceUri",
              "Type": "Object"
            },
            {
              "Name": "localName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "RemoveChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "ReplaceChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "SelectNodes",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectNodesNS",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SelectSingleNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectSingleNodeNS",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SetAttribute",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "attributeName",
              "Type": "String"
            },
            {
              "Name": "attributeValue",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SetAttributeNode",
          "ReturnType": "XmlAttribute",
          "Parameters": [
            {
              "Name": "newAttribute",
              "Type": "XmlAttribute"
            }
          ]
        },
        {
          "Name": "SetAttributeNodeNS",
          "ReturnType": "XmlAttribute",
          "Parameters": [
            {
              "Name": "newAttribute",
              "Type": "XmlAttribute"
            }
          ]
        },
        {
          "Name": "SetAttributeNS",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "namespaceUri",
              "Type": "Object"
            },
            {
              "Name": "qualifiedName",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlElement"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Attributes",
          "Type": "XmlNamedNodeMap",
          "IsGet": true
        },
        {
          "Name": "FirstChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "ChildNodes",
          "Type": "XmlNodeList",
          "IsGet": true
        },
        {
          "Name": "InnerText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LastChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "LocalName",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "NamespaceUri",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "NextSibling",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "NodeType",
          "Type": "NodeType",
          "IsGet": true
        },
        {
          "Name": "NodeValue",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OwnerDocument",
          "Type": "XmlDocument",
          "IsGet": true
        },
        {
          "Name": "ParentNode",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "Prefix",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PreviousSibling",
          "Type": "IXmlNode",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AppendChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "CloneNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "GetXml",
          "ReturnType": "String"
        },
        {
          "Name": "HasChildNodes",
          "ReturnType": "Boolean"
        },
        {
          "Name": "InsertBefore",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "Normalize",
          "ReturnType": "Void"
        },
        {
          "Name": "RemoveChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "ReplaceChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "SelectNodes",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectNodesNS",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SelectSingleNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectSingleNodeNS",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlEntityReference"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ElementContentWhiteSpace",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaxElementDepth",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProhibitDtd",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ResolveExternals",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ValidateOnParse",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlLoadSettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<IXmlNode>",
        "IReadOnlyCollection<IXmlNode>",
        "IReadOnlyList<IXmlNode>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Length",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetNamedItem",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetNamedItemNS",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "namespaceUri",
              "Type": "Object"
            },
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "Item",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "index",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "RemoveNamedItem",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "RemoveNamedItemNS",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "namespaceUri",
              "Type": "Object"
            },
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SetNamedItem",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "node",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "SetNamedItemNS",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "node",
              "Type": "IXmlNode"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlNamedNodeMap"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<IXmlNode>",
        "IReadOnlyCollection<IXmlNode>",
        "IReadOnlyList<IXmlNode>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Length",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Item",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "index",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlNodeList"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Attributes",
          "Type": "XmlNamedNodeMap",
          "IsGet": true
        },
        {
          "Name": "Data",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FirstChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "ChildNodes",
          "Type": "XmlNodeList",
          "IsGet": true
        },
        {
          "Name": "InnerText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LastChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "LocalName",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "NamespaceUri",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "NextSibling",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "NodeType",
          "Type": "NodeType",
          "IsGet": true
        },
        {
          "Name": "NodeValue",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OwnerDocument",
          "Type": "XmlDocument",
          "IsGet": true
        },
        {
          "Name": "ParentNode",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "Prefix",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PreviousSibling",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "Target",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AppendChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "CloneNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "GetXml",
          "ReturnType": "String"
        },
        {
          "Name": "HasChildNodes",
          "ReturnType": "Boolean"
        },
        {
          "Name": "InsertBefore",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "Normalize",
          "ReturnType": "Void"
        },
        {
          "Name": "RemoveChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "ReplaceChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "SelectNodes",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectNodesNS",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SelectSingleNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectSingleNodeNS",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlProcessingInstruction"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IXmlCharacterData",
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer",
        "IXmlText"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Attributes",
          "Type": "XmlNamedNodeMap",
          "IsGet": true
        },
        {
          "Name": "Data",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FirstChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "ChildNodes",
          "Type": "XmlNodeList",
          "IsGet": true
        },
        {
          "Name": "InnerText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LastChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "Length",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "LocalName",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "NamespaceUri",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "NextSibling",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "NodeType",
          "Type": "NodeType",
          "IsGet": true
        },
        {
          "Name": "NodeValue",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OwnerDocument",
          "Type": "XmlDocument",
          "IsGet": true
        },
        {
          "Name": "ParentNode",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "Prefix",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PreviousSibling",
          "Type": "IXmlNode",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AppendData",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "data",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "AppendChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "CloneNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "DeleteData",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetXml",
          "ReturnType": "String"
        },
        {
          "Name": "HasChildNodes",
          "ReturnType": "Boolean"
        },
        {
          "Name": "InsertBefore",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "InsertData",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "data",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "Normalize",
          "ReturnType": "Void"
        },
        {
          "Name": "RemoveChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "ReplaceData",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "data",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ReplaceChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "SelectNodes",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectNodesNS",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SelectSingleNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectSingleNodeNS",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SplitText",
          "ReturnType": "IXmlText",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "SubstringData",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlText"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "document",
              "Type": "XmlDocument"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "TransformToString",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "inputNode",
              "Type": "IXmlNode"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Xsl.XsltProcessor"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Arguments",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DeviceId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ExpectedDuration",
          "Type": "TimeSpan",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Background.DeviceServicingDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Arguments",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DeviceId",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Background.DeviceUseDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Characteristic",
          "Type": "GattCharacteristic",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "IBuffer",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.Background.GattCharacteristicNotificationTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Incoming",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "RemoteDevice",
          "Type": "BluetoothDevice",
          "IsGet": true
        },
        {
          "Name": "Socket",
          "Type": "StreamSocket",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.Background.RfcommConnectionTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "LocalServiceId",
          "Type": "RfcommServiceId",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SdpRecord",
          "Type": "IBuffer",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ServiceCapabilities",
          "Type": "BluetoothServiceCapabilities",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.Background.RfcommInboundConnectionInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "RemoteServiceId",
          "Type": "RfcommServiceId",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.Background.RfcommOutboundConnectionInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "MajorClass",
          "Type": "BluetoothMajorClass",
          "IsGet": true
        },
        {
          "Name": "MinorClass",
          "Type": "BluetoothMinorClass",
          "IsGet": true
        },
        {
          "Name": "RawValue",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "ServiceCapabilities",
          "Type": "BluetoothServiceCapabilities",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "FromParts",
          "IsStatic": true,
          "ReturnType": "BluetoothClassOfDevice",
          "Parameters": [
            {
              "Name": "majorClass",
              "Type": "BluetoothMajorClass"
            },
            {
              "Name": "minorClass",
              "Type": "BluetoothMinorClass"
            },
            {
              "Name": "serviceCapabilities",
              "Type": "BluetoothServiceCapabilities"
            }
          ]
        },
        {
          "Name": "FromRawValue",
          "IsStatic": true,
          "ReturnType": "BluetoothClassOfDevice",
          "Parameters": [
            {
              "Name": "rawValue",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.BluetoothClassOfDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BluetoothAddress",
          "Type": "UInt64",
          "IsGet": true
        },
        {
          "Name": "ClassOfDevice",
          "Type": "BluetoothClassOfDevice",
          "IsGet": true
        },
        {
          "Name": "ConnectionStatus",
          "Type": "BluetoothConnectionStatus",
          "IsGet": true
        },
        {
          "Name": "DeviceId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "HostName",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "RfcommServices",
          "Type": "IReadOnlyList<RfcommDeviceService>",
          "IsGet": true
        },
        {
          "Name": "SdpRecords",
          "Type": "IReadOnlyList<IBuffer>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "FromBluetoothAddressAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BluetoothDevice>",
          "Parameters": [
            {
              "Name": "address",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "FromHostNameAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BluetoothDevice>",
          "Parameters": [
            {
              "Name": "hostName",
              "Type": "HostName"
            }
          ]
        },
        {
          "Name": "FromIdAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BluetoothDevice>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetDeviceSelector",
          "IsStatic": true,
          "ReturnType": "String"
        }
      ],
      "Events": [
        {
          "Name": "ConnectionStatusChanged",
          "Type": "TypedEventHandler<BluetoothDevice,Object>"
        },
        {
          "Name": "NameChanged",
          "Type": "TypedEventHandler<BluetoothDevice,Object>"
        },
        {
          "Name": "SdpRecordsChanged",
          "Type": "TypedEventHandler<BluetoothDevice,Object>"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.BluetoothDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BluetoothAddress",
          "Type": "UInt64",
          "IsGet": true
        },
        {
          "Name": "ConnectionStatus",
          "Type": "BluetoothConnectionStatus",
          "IsGet": true
        },
        {
          "Name": "DeviceId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "GattServices",
          "Type": "IReadOnlyList<GattDeviceService>",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "FromBluetoothAddressAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BluetoothLEDevice>",
          "Parameters": [
            {
              "Name": "bluetoothAddress",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "FromIdAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BluetoothLEDevice>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetDeviceSelector",
          "IsStatic": true,
          "ReturnType": "String"
        },
        {
          "Name": "GetGattService",
          "ReturnType": "GattDeviceService",
          "Parameters": [
            {
              "Name": "serviceUuid",
              "Type": "Guid"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "ConnectionStatusChanged",
          "Type": "TypedEventHandler<BluetoothLEDevice,Object>"
        },
        {
          "Name": "GattServicesChanged",
          "Type": "TypedEventHandler<BluetoothLEDevice,Object>"
        },
        {
          "Name": "NameChanged",
          "Type": "TypedEventHandler<BluetoothLEDevice,Object>"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.BluetoothLEDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AttributeHandle",
          "Type": "UInt16",
          "IsGet": true
        },
        {
          "Name": "ProtectionLevel",
          "Type": "GattProtectionLevel",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Uuid",
          "Type": "Guid",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ConvertShortIdToUuid",
          "IsStatic": true,
          "ReturnType": "Guid",
          "Parameters": [
            {
              "Name": "shortId",
              "Type": "UInt16"
            }
          ]
        },
        {
          "Name": "ReadValueAsync",
          "ReturnType": "IAsyncOperation<GattReadResult>"
        },
        {
          "Name": "ReadValueAsync",
          "ReturnType": "IAsyncOperation<GattReadResult>",
          "Parameters": [
            {
              "Name": "cacheMode",
              "Type": "BluetoothCacheMode"
            }
          ]
        },
        {
          "Name": "WriteValueAsync",
          "ReturnType": "IAsyncOperation<GattCommunicationStatus>",
          "Parameters": [
            {
              "Name": "value",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ClientCharacteristicConfiguration",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CharacteristicAggregateFormat",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CharacteristicExtendedProperties",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CharacteristicPresentationFormat",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CharacteristicUserDescription",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ServerCharacteristicConfiguration",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorUuids"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AttributeHandle",
          "Type": "UInt16",
          "IsGet": true
        },
        {
          "Name": "Device",
          "Type": "BluetoothLEDevice",
          "IsGet": true
        },
        {
          "Name": "DeviceId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ParentServices",
          "Type": "IReadOnlyList<GattDeviceService>",
          "IsGet": true
        },
        {
          "Name": "Uuid",
          "Type": "Guid",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ConvertShortIdToUuid",
          "IsStatic": true,
          "ReturnType": "Guid",
          "Parameters": [
            {
              "Name": "shortId",
              "Type": "UInt16"
            }
          ]
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "FromIdAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<GattDeviceService>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetAllCharacteristics",
          "ReturnType": "IReadOnlyList<GattCharacteristic>"
        },
        {
          "Name": "GetAllIncludedServices",
          "ReturnType": "IReadOnlyList<GattDeviceService>"
        },
        {
          "Name": "GetDeviceSelectorFromShortId",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "serviceShortId",
              "Type": "UInt16"
            }
          ]
        },
        {
          "Name": "GetDeviceSelectorFromUuid",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "serviceUuid",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "GetCharacteristics",
          "ReturnType": "IReadOnlyList<GattCharacteristic>",
          "Parameters": [
            {
              "Name": "characteristicUuid",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "GetIncludedServices",
          "ReturnType": "IReadOnlyList<GattDeviceService>",
          "Parameters": [
            {
              "Name": "serviceUuid",
              "Type": "Guid"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AttributeHandle",
          "Type": "UInt16",
          "IsGet": true
        },
        {
          "Name": "CharacteristicProperties",
          "Type": "GattCharacteristicProperties",
          "IsGet": true
        },
        {
          "Name": "PresentationFormats",
          "Type": "IReadOnlyList<GattPresentationFormat>",
          "IsGet": true
        },
        {
          "Name": "ProtectionLevel",
          "Type": "GattProtectionLevel",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Service",
          "Type": "GattDeviceService",
          "IsGet": true
        },
        {
          "Name": "UserDescription",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Uuid",
          "Type": "Guid",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ConvertShortIdToUuid",
          "IsStatic": true,
          "ReturnType": "Guid",
          "Parameters": [
            {
              "Name": "shortId",
              "Type": "UInt16"
            }
          ]
        },
        {
          "Name": "GetAllDescriptors",
          "ReturnType": "IReadOnlyList<GattDescriptor>"
        },
        {
          "Name": "GetDescriptors",
          "ReturnType": "IReadOnlyList<GattDescriptor>",
          "Parameters": [
            {
              "Name": "descriptorUuid",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "ReadClientCharacteristicConfigurationDescriptorAsync",
          "ReturnType": "IAsyncOperation<GattReadClientCharacteristicConfigurationDescriptorResult>"
        },
        {
          "Name": "ReadValueAsync",
          "ReturnType": "IAsyncOperation<GattReadResult>"
        },
        {
          "Name": "ReadValueAsync",
          "ReturnType": "IAsyncOperation<GattReadResult>",
          "Parameters": [
            {
              "Name": "cacheMode",
              "Type": "BluetoothCacheMode"
            }
          ]
        },
        {
          "Name": "WriteClientCharacteristicConfigurationDescriptorAsync",
          "ReturnType": "IAsyncOperation<GattCommunicationStatus>",
          "Parameters": [
            {
              "Name": "clientCharacteristicConfigurationDescriptorValue",
              "Type": "GattClientCharacteristicConfigurationDescriptorValue"
            }
          ]
        },
        {
          "Name": "WriteValueAsync",
          "ReturnType": "IAsyncOperation<GattCommunicationStatus>",
          "Parameters": [
            {
              "Name": "value",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "WriteValueAsync",
          "ReturnType": "IAsyncOperation<GattCommunicationStatus>",
          "Parameters": [
            {
              "Name": "value",
              "Type": "IBuffer"
            },
            {
              "Name": "writeOption",
              "Type": "GattWriteOption"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "ValueChanged",
          "Type": "TypedEventHandler<GattCharacteristic,GattValueChangedEventArgs>"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AlertCategoryId",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AlertCategoryIdBitMask",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AlertLevel",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AlertNotificationControlPoint",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AlertStatus",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BatteryLevel",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BloodPressureFeature",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BloodPressureMeasurement",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BodySensorLocation",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BootKeyboardInputReport",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BootKeyboardOutputReport",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BootMouseInputReport",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CscFeature",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CscMeasurement",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CurrentTime",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CyclingPowerControlPoint",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CyclingPowerFeature",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CyclingPowerMeasurement",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CyclingPowerVector",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DateTime",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DayDateTime",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DayOfWeek",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DstOffset",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ExactTime256",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FirmwareRevisionString",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GapAppearance",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GapDeviceName",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GapPeripheralPreferredConnectionParameters",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GapPeripheralPrivacyFlag",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GapReconnectionAddress",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GattServiceChanged",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GlucoseFeature",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GlucoseMeasurement",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GlucoseMeasurementContext",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HardwareRevisionString",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HeartRateControlPoint",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HeartRateMeasurement",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HidControlPoint",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HidInformation",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Ieee1107320601RegulatoryCertificationDataList",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IntermediateCuffPressure",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IntermediateTemperature",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LnControlPoint",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LnFeature",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LocalTimeInformation",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LocationAndSpeed",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ManufacturerNameString",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MeasurementInterval",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ModelNumberString",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Navigation",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "NewAlert",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PnpId",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PositionQuality",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ProtocolMode",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RecordAccessControlPoint",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ReferenceTimeInformation",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Report",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ReportMap",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RingerControlPoint",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RingerSetting",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RscFeature",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RscMeasurement",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ScanIntervalWindow",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ScanRefresh",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SCControlPoint",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SensorLocation",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SerialNumberString",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SoftwareRevisionString",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SupportedNewAlertCategory",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SupportUnreadAlertCategory",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SystemId",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TemperatureMeasurement",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TemperatureType",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TimeAccuracy",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TimeSource",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TimeUpdateControlPoint",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TimeUpdateState",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TimeWithDst",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TimeZone",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TxPowerLevel",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "UnreadAlertStatus",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicUuids"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BluetoothSigAssignedNumbers",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Description",
          "Type": "UInt16",
          "IsGet": true
        },
        {
          "Name": "Exponent",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "FormatType",
          "Type": "Byte",
          "IsGet": true
        },
        {
          "Name": "Namespace",
          "Type": "Byte",
          "IsGet": true
        },
        {
          "Name": "Unit",
          "Type": "UInt16",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Bit2",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Boolean",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DUInt16",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Float",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Float32",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Float64",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Nibble",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SFloat",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SInt12",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SInt128",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SInt16",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SInt24",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SInt32",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SInt48",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SInt64",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SInt8",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Struct",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "UInt12",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "UInt128",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "UInt16",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "UInt24",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "UInt32",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "UInt48",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "UInt64",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "UInt8",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Utf16",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Utf8",
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormatTypes"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ClientCharacteristicConfigurationDescriptor",
          "Type": "GattClientCharacteristicConfigurationDescriptorValue",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "GattCommunicationStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Status",
          "Type": "GattCommunicationStatus",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "IBuffer",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CommitAsync",
          "ReturnType": "IAsyncOperation<GattCommunicationStatus>"
        },
        {
          "Name": "WriteValue",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "characteristic",
              "Type": "GattCharacteristic"
            },
            {
              "Name": "value",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattReliableWriteTransaction"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AlertNotification",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Battery",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BloodPressure",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CurrentTime",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CyclingPower",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CyclingSpeedAndCadence",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DeviceInformation",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GenericAccess",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GenericAttribute",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Glucose",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HealthThermometer",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HeartRate",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HumanInterfaceDevice",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ImmediateAlert",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LinkLoss",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LocationAndNavigation",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "NextDstChange",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PhoneAlertStatus",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ReferenceTimeUpdate",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RunningSpeedAndCadence",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ScanParameters",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TxPower",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceUuids"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CharacteristicValue",
          "Type": "IBuffer",
          "IsGet": true
        },
        {
          "Name": "Timestamp",
          "Type": "DateTimeOffset",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ConnectionHostName",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "ConnectionServiceName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Device",
          "Type": "BluetoothDevice",
          "IsGet": true
        },
        {
          "Name": "MaxProtectionLevel",
          "Type": "SocketProtectionLevel",
          "IsGet": true
        },
        {
          "Name": "ProtectionLevel",
          "Type": "SocketProtectionLevel",
          "IsGet": true
        },
        {
          "Name": "ServiceId",
          "Type": "RfcommServiceId",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "FromIdAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<RfcommDeviceService>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetDeviceSelector",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "serviceId",
              "Type": "RfcommServiceId"
            }
          ]
        },
        {
          "Name": "GetSdpRawAttributesAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyDictionary<UInt32,IBuffer>>"
        },
        {
          "Name": "GetSdpRawAttributesAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyDictionary<UInt32,IBuffer>>",
          "Parameters": [
            {
              "Name": "cacheMode",
              "Type": "BluetoothCacheMode"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceService"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "GenericFileTransfer",
          "Type": "RfcommServiceId",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ObexFileTransfer",
          "Type": "RfcommServiceId",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ObexObjectPush",
          "Type": "RfcommServiceId",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PhoneBookAccessPce",
          "Type": "RfcommServiceId",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PhoneBookAccessPse",
          "Type": "RfcommServiceId",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SerialPort",
          "Type": "RfcommServiceId",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Uuid",
          "Type": "Guid",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AsShortId",
          "ReturnType": "UInt32"
        },
        {
          "Name": "AsString",
          "ReturnType": "String"
        },
        {
          "Name": "FromShortId",
          "IsStatic": true,
          "ReturnType": "RfcommServiceId",
          "Parameters": [
            {
              "Name": "shortId",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "FromUuid",
          "IsStatic": true,
          "ReturnType": "RfcommServiceId",
          "Parameters": [
            {
              "Name": "uuid",
              "Type": "Guid"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.Rfcomm.RfcommServiceId"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "SdpRawAttributes",
          "Type": "IDictionary<UInt32,IBuffer>",
          "IsGet": true
        },
        {
          "Name": "ServiceId",
          "Type": "RfcommServiceId",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<RfcommServiceProvider>",
          "Parameters": [
            {
              "Name": "serviceId",
              "Type": "RfcommServiceId"
            }
          ]
        },
        {
          "Name": "StartAdvertising",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "listener",
              "Type": "StreamSocketListener"
            }
          ]
        },
        {
          "Name": "StopAdvertising",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.Rfcomm.RfcommServiceProvider"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Status",
          "Type": "DeviceAccessStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Enumeration.DeviceAccessChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CurrentStatus",
          "Type": "DeviceAccessStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateFromDeviceClass",
          "IsStatic": true,
          "ReturnType": "DeviceAccessInformation",
          "Parameters": [
            {
              "Name": "deviceClass",
              "Type": "DeviceClass"
            }
          ]
        },
        {
          "Name": "CreateFromDeviceClassId",
          "IsStatic": true,
          "ReturnType": "DeviceAccessInformation",
          "Parameters": [
            {
              "Name": "deviceClassId",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "CreateFromId",
          "IsStatic": true,
          "ReturnType": "DeviceAccessInformation",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "AccessChanged",
          "Type": "TypedEventHandler<DeviceAccessInformation,DeviceAccessChangedEventArgs>"
        }
      ],
      "Name": "Windows.Devices.Enumeration.DeviceAccessInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DeviceId",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Enumeration.DeviceConnectionChangeTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "EnclosureLocation",
          "Type": "EnclosureLocation",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "IsDefault",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsEnabled",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Properties",
          "Type": "IReadOnlyDictionary<String,Object>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateFromIdAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<DeviceInformation>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateFromIdAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<DeviceInformation>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            },
            {
              "Name": "additionalProperties",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "CreateWatcher",
          "IsStatic": true,
          "ReturnType": "DeviceWatcher"
        },
        {
          "Name": "CreateWatcher",
          "IsStatic": true,
          "ReturnType": "DeviceWatcher",
          "Parameters": [
            {
              "Name": "deviceClass",
              "Type": "DeviceClass"
            }
          ]
        },
        {
          "Name": "CreateWatcher",
          "IsStatic": true,
          "ReturnType": "DeviceWatcher",
          "Parameters": [
            {
              "Name": "aqsFilter",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateWatcher",
          "IsStatic": true,
          "ReturnType": "DeviceWatcher",
          "Parameters": [
            {
              "Name": "aqsFilter",
              "Type": "String"
            },
            {
              "Name": "additionalProperties",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "FindAllAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<DeviceInformationCollection>"
        },
        {
          "Name": "FindAllAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<DeviceInformationCollection>",
          "Parameters": [
            {
              "Name": "deviceClass",
              "Type": "DeviceClass"
            }
          ]
        },
        {
          "Name": "FindAllAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<DeviceInformationCollection>",
          "Parameters": [
            {
              "Name": "aqsFilter",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "FindAllAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<DeviceInformationCollection>",
          "Parameters": [
            {
              "Name": "aqsFilter",
              "Type": "String"
            },
            {
              "Name": "additionalProperties",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "GetGlyphThumbnailAsync",
          "ReturnType": "IAsyncOperation<DeviceThumbnail>"
        },
        {
          "Name": "GetThumbnailAsync",
          "ReturnType": "IAsyncOperation<DeviceThumbnail>"
        },
        {
          "Name": "Update",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "updateInfo",
              "Type": "DeviceInformationUpdate"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Enumeration.DeviceInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<DeviceInformation>",
        "IReadOnlyCollection<DeviceInformation>",
        "IReadOnlyList<DeviceInformation>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Enumeration.DeviceInformationCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Properties",
          "Type": "IReadOnlyDictionary<String,Object>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Enumeration.DeviceInformationUpdate"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContentTypeProvider",
        "IDisposable",
        "IInputStream",
        "IOutputStream",
        "IRandomAccessStream",
        "IRandomAccessStreamWithContentType"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CanRead",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "CanWrite",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "ContentType",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "UInt64",
          "IsGet": true
        },
        {
          "Name": "Size",
          "Type": "UInt64",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CloneStream",
          "ReturnType": "IRandomAccessStream"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "FlushAsync",
          "ReturnType": "IAsyncOperation<Boolean>"
        },
        {
          "Name": "GetInputStreamAt",
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "GetOutputStreamAt",
          "ReturnType": "IOutputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "ReadAsync",
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "InputStreamOptions"
            }
          ]
        },
        {
          "Name": "Seek",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "WriteAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Enumeration.DeviceThumbnail"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Status",
          "Type": "DeviceWatcherStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Start",
          "ReturnType": "Void"
        },
        {
          "Name": "Stop",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "Added",
          "Type": "TypedEventHandler<DeviceWatcher,DeviceInformation>"
        },
        {
          "Name": "EnumerationCompleted",
          "Type": "TypedEventHandler<DeviceWatcher,Object>"
        },
        {
          "Name": "Removed",
          "Type": "TypedEventHandler<DeviceWatcher,DeviceInformationUpdate>"
        },
        {
          "Name": "Stopped",
          "Type": "TypedEventHandler<DeviceWatcher,Object>"
        },
        {
          "Name": "Updated",
          "Type": "TypedEventHandler<DeviceWatcher,DeviceInformationUpdate>"
        }
      ],
      "Name": "Windows.Devices.Enumeration.DeviceWatcher"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "InDock",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "InLid",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Panel",
          "Type": "Panel",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Enumeration.EnclosureLocation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Properties",
          "Type": "IReadOnlyDictionary<String,Object>",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "PnpObjectType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateFromIdAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PnpObject>",
          "Parameters": [
            {
              "Name": "type",
              "Type": "PnpObjectType"
            },
            {
              "Name": "id",
              "Type": "String"
            },
            {
              "Name": "requestedProperties",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "CreateWatcher",
          "IsStatic": true,
          "ReturnType": "PnpObjectWatcher",
          "Parameters": [
            {
              "Name": "type",
              "Type": "PnpObjectType"
            },
            {
              "Name": "requestedProperties",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "CreateWatcher",
          "IsStatic": true,
          "ReturnType": "PnpObjectWatcher",
          "Parameters": [
            {
              "Name": "type",
              "Type": "PnpObjectType"
            },
            {
              "Name": "requestedProperties",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "aqsFilter",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "FindAllAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PnpObjectCollection>",
          "Parameters": [
            {
              "Name": "type",
              "Type": "PnpObjectType"
            },
            {
              "Name": "requestedProperties",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "FindAllAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PnpObjectCollection>",
          "Parameters": [
            {
              "Name": "type",
              "Type": "PnpObjectType"
            },
            {
              "Name": "requestedProperties",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "aqsFilter",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "Update",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "updateInfo",
              "Type": "PnpObjectUpdate"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Enumeration.Pnp.PnpObject"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<PnpObject>",
        "IReadOnlyCollection<PnpObject>",
        "IReadOnlyList<PnpObject>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Enumeration.Pnp.PnpObjectCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Properties",
          "Type": "IReadOnlyDictionary<String,Object>",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "PnpObjectType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Enumeration.Pnp.PnpObjectUpdate"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Status",
          "Type": "DeviceWatcherStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Start",
          "ReturnType": "Void"
        },
        {
          "Name": "Stop",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "Added",
          "Type": "TypedEventHandler<PnpObjectWatcher,PnpObject>"
        },
        {
          "Name": "EnumerationCompleted",
          "Type": "TypedEventHandler<PnpObjectWatcher,Object>"
        },
        {
          "Name": "Removed",
          "Type": "TypedEventHandler<PnpObjectWatcher,PnpObjectUpdate>"
        },
        {
          "Name": "Stopped",
          "Type": "TypedEventHandler<PnpObjectWatcher,Object>"
        },
        {
          "Name": "Updated",
          "Type": "TypedEventHandler<PnpObjectWatcher,PnpObjectUpdate>"
        }
      ],
      "Name": "Windows.Devices.Enumeration.Pnp.PnpObjectWatcher"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "City",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Country",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "PostalCode",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "State",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Timestamp",
          "Type": "DateTimeOffset",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.CivicAddress"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IGeoshape"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "northwestCorner",
              "Type": "BasicGeoposition"
            },
            {
              "Name": "southeastCorner",
              "Type": "BasicGeoposition"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "northwestCorner",
              "Type": "BasicGeoposition"
            },
            {
              "Name": "southeastCorner",
              "Type": "BasicGeoposition"
            },
            {
              "Name": "altitudeReferenceSystem",
              "Type": "AltitudeReferenceSystem"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "northwestCorner",
              "Type": "BasicGeoposition"
            },
            {
              "Name": "southeastCorner",
              "Type": "BasicGeoposition"
            },
            {
              "Name": "altitudeReferenceSystem",
              "Type": "AltitudeReferenceSystem"
            },
            {
              "Name": "spatialReferenceId",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "AltitudeReferenceSystem",
          "Type": "AltitudeReferenceSystem",
          "IsGet": true
        },
        {
          "Name": "Center",
          "Type": "BasicGeoposition",
          "IsGet": true
        },
        {
          "Name": "GeoshapeType",
          "Type": "GeoshapeType",
          "IsGet": true
        },
        {
          "Name": "MaxAltitude",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "MinAltitude",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "NorthwestCorner",
          "Type": "BasicGeoposition",
          "IsGet": true
        },
        {
          "Name": "SoutheastCorner",
          "Type": "BasicGeoposition",
          "IsGet": true
        },
        {
          "Name": "SpatialReferenceId",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "TryCompute",
          "IsStatic": true,
          "ReturnType": "GeoboundingBox",
          "Parameters": [
            {
              "Name": "positions",
              "Type": "IEnumerable<BasicGeoposition>"
            }
          ]
        },
        {
          "Name": "TryCompute",
          "IsStatic": true,
          "ReturnType": "GeoboundingBox",
          "Parameters": [
            {
              "Name": "positions",
              "Type": "IEnumerable<BasicGeoposition>"
            },
            {
              "Name": "altitudeRefSystem",
              "Type": "AltitudeReferenceSystem"
            }
          ]
        },
        {
          "Name": "TryCompute",
          "IsStatic": true,
          "ReturnType": "GeoboundingBox",
          "Parameters": [
            {
              "Name": "positions",
              "Type": "IEnumerable<BasicGeoposition>"
            },
            {
              "Name": "altitudeRefSystem",
              "Type": "AltitudeReferenceSystem"
            },
            {
              "Name": "spatialReferenceId",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.GeoboundingBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IGeoshape"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "position",
              "Type": "BasicGeoposition"
            },
            {
              "Name": "radius",
              "Type": "Double"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "position",
              "Type": "BasicGeoposition"
            },
            {
              "Name": "radius",
              "Type": "Double"
            },
            {
              "Name": "altitudeReferenceSystem",
              "Type": "AltitudeReferenceSystem"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "position",
              "Type": "BasicGeoposition"
            },
            {
              "Name": "radius",
              "Type": "Double"
            },
            {
              "Name": "altitudeReferenceSystem",
              "Type": "AltitudeReferenceSystem"
            },
            {
              "Name": "spatialReferenceId",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "AltitudeReferenceSystem",
          "Type": "AltitudeReferenceSystem",
          "IsGet": true
        },
        {
          "Name": "Center",
          "Type": "BasicGeoposition",
          "IsGet": true
        },
        {
          "Name": "GeoshapeType",
          "Type": "GeoshapeType",
          "IsGet": true
        },
        {
          "Name": "Radius",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "SpatialReferenceId",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.Geocircle"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Accuracy",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "Altitude",
          "Type": "Nullable<Double>",
          "IsGet": true
        },
        {
          "Name": "AltitudeAccuracy",
          "Type": "Nullable<Double>",
          "IsGet": true
        },
        {
          "Name": "Heading",
          "Type": "Nullable<Double>",
          "IsGet": true
        },
        {
          "Name": "Latitude",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "Longitude",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "Point",
          "Type": "Geopoint",
          "IsGet": true
        },
        {
          "Name": "PositionSource",
          "Type": "PositionSource",
          "IsGet": true
        },
        {
          "Name": "PositionSourceTimestamp",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true
        },
        {
          "Name": "SatelliteData",
          "Type": "GeocoordinateSatelliteData",
          "IsGet": true
        },
        {
          "Name": "Speed",
          "Type": "Nullable<Double>",
          "IsGet": true
        },
        {
          "Name": "Timestamp",
          "Type": "DateTimeOffset",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.Geocoordinate"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "HorizontalDilutionOfPrecision",
          "Type": "Nullable<Double>",
          "IsGet": true
        },
        {
          "Name": "PositionDilutionOfPrecision",
          "Type": "Nullable<Double>",
          "IsGet": true
        },
        {
          "Name": "VerticalDilutionOfPrecision",
          "Type": "Nullable<Double>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.GeocoordinateSatelliteData"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            },
            {
              "Name": "geoshape",
              "Type": "IGeoshape"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            },
            {
              "Name": "geoshape",
              "Type": "IGeoshape"
            },
            {
              "Name": "monitoredStates",
              "Type": "MonitoredGeofenceStates"
            },
            {
              "Name": "singleUse",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            },
            {
              "Name": "geoshape",
              "Type": "IGeoshape"
            },
            {
              "Name": "monitoredStates",
              "Type": "MonitoredGeofenceStates"
            },
            {
              "Name": "singleUse",
              "Type": "Boolean"
            },
            {
              "Name": "dwellTime",
              "Type": "TimeSpan"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            },
            {
              "Name": "geoshape",
              "Type": "IGeoshape"
            },
            {
              "Name": "monitoredStates",
              "Type": "MonitoredGeofenceStates"
            },
            {
              "Name": "singleUse",
              "Type": "Boolean"
            },
            {
              "Name": "dwellTime",
              "Type": "TimeSpan"
            },
            {
              "Name": "startTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "duration",
              "Type": "TimeSpan"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Duration",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "DwellTime",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "Geoshape",
          "Type": "IGeoshape",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "MonitoredStates",
          "Type": "MonitoredGeofenceStates",
          "IsGet": true
        },
        {
          "Name": "SingleUse",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "StartTime",
          "Type": "DateTimeOffset",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.Geofencing.Geofence"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Current",
          "Type": "GeofenceMonitor",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Geofences",
          "Type": "IList<Geofence>",
          "IsGet": true
        },
        {
          "Name": "LastKnownGeoposition",
          "Type": "Geoposition",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "GeofenceMonitorStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ReadReports",
          "ReturnType": "IReadOnlyList<GeofenceStateChangeReport>"
        }
      ],
      "Events": [
        {
          "Name": "GeofenceStateChanged",
          "Type": "TypedEventHandler<GeofenceMonitor,Object>"
        },
        {
          "Name": "StatusChanged",
          "Type": "TypedEventHandler<GeofenceMonitor,Object>"
        }
      ],
      "Name": "Windows.Devices.Geolocation.Geofencing.GeofenceMonitor"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Geofence",
          "Type": "Geofence",
          "IsGet": true
        },
        {
          "Name": "Geoposition",
          "Type": "Geoposition",
          "IsGet": true
        },
        {
          "Name": "NewState",
          "Type": "GeofenceState",
          "IsGet": true
        },
        {
          "Name": "RemovalReason",
          "Type": "GeofenceRemovalReason",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.Geofencing.GeofenceStateChangeReport"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DesiredAccuracy",
          "Type": "PositionAccuracy",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DesiredAccuracyInMeters",
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LocationStatus",
          "Type": "PositionStatus",
          "IsGet": true
        },
        {
          "Name": "MovementThreshold",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ReportInterval",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetGeopositionAsync",
          "ReturnType": "IAsyncOperation<Geoposition>"
        },
        {
          "Name": "GetGeopositionAsync",
          "ReturnType": "IAsyncOperation<Geoposition>",
          "Parameters": [
            {
              "Name": "maximumAge",
              "Type": "TimeSpan"
            },
            {
              "Name": "timeout",
              "Type": "TimeSpan"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "PositionChanged",
          "Type": "TypedEventHandler<Geolocator,PositionChangedEventArgs>"
        },
        {
          "Name": "StatusChanged",
          "Type": "TypedEventHandler<Geolocator,StatusChangedEventArgs>"
        }
      ],
      "Name": "Windows.Devices.Geolocation.Geolocator"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IGeoshape"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "positions",
              "Type": "IEnumerable<BasicGeoposition>"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "positions",
              "Type": "IEnumerable<BasicGeoposition>"
            },
            {
              "Name": "altitudeReferenceSystem",
              "Type": "AltitudeReferenceSystem"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "positions",
              "Type": "IEnumerable<BasicGeoposition>"
            },
            {
              "Name": "altitudeReferenceSystem",
              "Type": "AltitudeReferenceSystem"
            },
            {
              "Name": "spatialReferenceId",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "AltitudeReferenceSystem",
          "Type": "AltitudeReferenceSystem",
          "IsGet": true
        },
        {
          "Name": "GeoshapeType",
          "Type": "GeoshapeType",
          "IsGet": true
        },
        {
          "Name": "Positions",
          "Type": "IReadOnlyList<BasicGeoposition>",
          "IsGet": true
        },
        {
          "Name": "SpatialReferenceId",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.Geopath"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IGeoshape"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "position",
              "Type": "BasicGeoposition"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "position",
              "Type": "BasicGeoposition"
            },
            {
              "Name": "altitudeReferenceSystem",
              "Type": "AltitudeReferenceSystem"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "position",
              "Type": "BasicGeoposition"
            },
            {
              "Name": "altitudeReferenceSystem",
              "Type": "AltitudeReferenceSystem"
            },
            {
              "Name": "spatialReferenceId",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "AltitudeReferenceSystem",
          "Type": "AltitudeReferenceSystem",
          "IsGet": true
        },
        {
          "Name": "GeoshapeType",
          "Type": "GeoshapeType",
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "BasicGeoposition",
          "IsGet": true
        },
        {
          "Name": "SpatialReferenceId",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.Geopoint"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CivicAddress",
          "Type": "CivicAddress",
          "IsGet": true
        },
        {
          "Name": "Coordinate",
          "Type": "Geocoordinate",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.Geoposition"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Position",
          "Type": "Geoposition",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.PositionChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Status",
          "Type": "PositionStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.StatusChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ControlDescription",
          "Type": "HidBooleanControlDescription",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "IsActive",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UsageId",
          "Type": "UInt16",
          "IsGet": true
        },
        {
          "Name": "UsagePage",
          "Type": "UInt16",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.HumanInterfaceDevice.HidBooleanControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Id",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "ParentCollections",
          "Type": "IReadOnlyList<HidCollection>",
          "IsGet": true
        },
        {
          "Name": "ReportId",
          "Type": "UInt16",
          "IsGet": true
        },
        {
          "Name": "ReportType",
          "Type": "HidReportType",
          "IsGet": true
        },
        {
          "Name": "UsageId",
          "Type": "UInt16",
          "IsGet": true
        },
        {
          "Name": "UsagePage",
          "Type": "UInt16",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.HumanInterfaceDevice.HidBooleanControlDescription"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Id",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "HidCollectionType",
          "IsGet": true
        },
        {
          "Name": "UsageId",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "UsagePage",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.HumanInterfaceDevice.HidCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ProductId",
          "Type": "UInt16",
          "IsGet": true
        },
        {
          "Name": "UsageId",
          "Type": "UInt16",
          "IsGet": true
        },
        {
          "Name": "UsagePage",
          "Type": "UInt16",
          "IsGet": true
        },
        {
          "Name": "VendorId",
          "Type": "UInt16",
          "IsGet": true
        },
        {
          "Name": "Version",
          "Type": "UInt16",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateFeatureReport",
          "ReturnType": "HidFeatureReport"
        },
        {
          "Name": "CreateFeatureReport",
          "ReturnType": "HidFeatureReport",
          "Parameters": [
            {
              "Name": "reportId",
              "Type": "UInt16"
            }
          ]
        },
        {
          "Name": "CreateOutputReport",
          "ReturnType": "HidOutputReport"
        },
        {
          "Name": "CreateOutputReport",
          "ReturnType": "HidOutputReport",
          "Parameters": [
            {
              "Name": "reportId",
              "Type": "UInt16"
            }
          ]
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "FromIdAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<HidDevice>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            },
            {
              "Name": "accessMode",
              "Type": "FileAccessMode"
            }
          ]
        },
        {
          "Name": "GetBooleanControlDescriptions",
          "ReturnType": "IReadOnlyList<HidBooleanControlDescription>",
          "Parameters": [
            {
              "Name": "reportType",
              "Type": "HidReportType"
            },
            {
              "Name": "usagePage",
              "Type": "UInt16"
            },
            {
              "Name": "usageId",
              "Type": "UInt16"
            }
          ]
        },
        {
          "Name": "GetDeviceSelector",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "usagePage",
              "Type": "UInt16"
            },
            {
              "Name": "usageId",
              "Type": "UInt16"
            }
          ]
        },
        {
          "Name": "GetDeviceSelector",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "usagePage",
              "Type": "UInt16"
            },
            {
              "Name": "usageId",
              "Type": "UInt16"
            },
            {
              "Name": "vendorId",
              "Type": "UInt16"
            },
            {
              "Name": "productId",
              "Type": "UInt16"
            }
          ]
        },
        {
          "Name": "GetFeatureReportAsync",
          "ReturnType": "IAsyncOperation<HidFeatureReport>"
        },
        {
          "Name": "GetFeatureReportAsync",
          "ReturnType": "IAsyncOperation<HidFeatureReport>",
          "Parameters": [
            {
              "Name": "reportId",
              "Type": "UInt16"
            }
          ]
        },
        {
          "Name": "GetInputReportAsync",
          "ReturnType": "IAsyncOperation<HidInputReport>"
        },
        {
          "Name": "GetInputReportAsync",
          "ReturnType": "IAsyncOperation<HidInputReport>",
          "Parameters": [
            {
              "Name": "reportId",
              "Type": "UInt16"
            }
          ]
        },
        {
          "Name": "GetNumericControlDescriptions",
          "ReturnType": "IReadOnlyList<HidNumericControlDescription>",
          "Parameters": [
            {
              "Name": "reportType",
              "Type": "HidReportType"
            },
            {
              "Name": "usagePage",
              "Type": "UInt16"
            },
            {
              "Name": "usageId",
              "Type": "UInt16"
            }
          ]
        },
        {
          "Name": "SendFeatureReportAsync",
          "ReturnType": "IAsyncOperation<UInt32>",
          "Parameters": [
            {
              "Name": "featureReport",
              "Type": "HidFeatureReport"
            }
          ]
        },
        {
          "Name": "SendOutputReportAsync",
          "ReturnType": "IAsyncOperation<UInt32>",
          "Parameters": [
            {
              "Name": "outputReport",
              "Type": "HidOutputReport"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "InputReportReceived",
          "Type": "TypedEventHandler<HidDevice,HidInputReportReceivedEventArgs>"
        }
      ],
      "Name": "Windows.Devices.HumanInterfaceDevice.HidDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Data",
          "Type": "IBuffer",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Id",
          "Type": "UInt16",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetBooleanControl",
          "ReturnType": "HidBooleanControl",
          "Parameters": [
            {
              "Name": "usagePage",
              "Type": "UInt16"
            },
            {
              "Name": "usageId",
              "Type": "UInt16"
            }
          ]
        },
        {
          "Name": "GetBooleanControlByDescription",
          "ReturnType": "HidBooleanControl",
          "Parameters": [
            {
              "Name": "controlDescription",
              "Type": "HidBooleanControlDescription"
            }
          ]
        },
        {
          "Name": "GetNumericControl",
          "ReturnType": "HidNumericControl",
          "Parameters": [
            {
              "Name": "usagePage",
              "Type": "UInt16"
            },
            {
              "Name": "usageId",
              "Type": "UInt16"
            }
          ]
        },
        {
          "Name": "GetNumericControlByDescription",
          "ReturnType": "HidNumericControl",
          "Parameters": [
            {
              "Name": "controlDescription",
              "Type": "HidNumericControlDescription"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.HumanInterfaceDevice.HidFeatureReport"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ActivatedBooleanControls",
          "Type": "IReadOnlyList<HidBooleanControl>",
          "IsGet": true
        },
        {
          "Name": "Data",
          "Type": "IBuffer",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "UInt16",
          "IsGet": true
        },
        {
          "Name": "TransitionedBooleanControls",
          "Type": "IReadOnlyList<HidBooleanControl>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetBooleanControl",
          "ReturnType": "HidBooleanControl",
          "Parameters": [
            {
              "Name": "usagePage",
              "Type": "UInt16"
            },
            {
              "Name": "usageId",
              "Type": "UInt16"
            }
          ]
        },
        {
          "Name": "GetBooleanControlByDescription",
          "ReturnType": "HidBooleanControl",
          "Parameters": [
            {
              "Name": "controlDescription",
              "Type": "HidBooleanControlDescription"
            }
          ]
        },
        {
          "Name": "GetNumericControl",
          "ReturnType": "HidNumericControl",
          "Parameters": [
            {
              "Name": "usagePage",
              "Type": "UInt16"
            },
            {
              "Name": "usageId",
              "Type": "UInt16"
            }
          ]
        },
        {
          "Name": "GetNumericControlByDescription",
          "ReturnType": "HidNumericControl",
          "Parameters": [
            {
              "Name": "controlDescription",
              "Type": "HidNumericControlDescription"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.HumanInterfaceDevice.HidInputReport"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Report",
          "Type": "HidInputReport",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.HumanInterfaceDevice.HidInputReportReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ControlDescription",
          "Type": "HidNumericControlDescription",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "IsGrouped",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "ScaledValue",
          "Type": "Int64",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UsageId",
          "Type": "UInt16",
          "IsGet": true
        },
        {
          "Name": "UsagePage",
          "Type": "UInt16",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "Int64",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.HumanInterfaceDevice.HidNumericControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "HasNull",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "IsAbsolute",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "LogicalMaximum",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "LogicalMinimum",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "ParentCollections",
          "Type": "IReadOnlyList<HidCollection>",
          "IsGet": true
        },
        {
          "Name": "PhysicalMaximum",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "PhysicalMinimum",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "ReportCount",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "ReportId",
          "Type": "UInt16",
          "IsGet": true
        },
        {
          "Name": "ReportSize",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "ReportType",
          "Type": "HidReportType",
          "IsGet": true
        },
        {
          "Name": "Unit",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "UnitExponent",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "UsageId",
          "Type": "UInt16",
          "IsGet": true
        },
        {
          "Name": "UsagePage",
          "Type": "UInt16",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.HumanInterfaceDevice.HidNumericControlDescription"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Data",
          "Type": "IBuffer",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Id",
          "Type": "UInt16",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetBooleanControl",
          "ReturnType": "HidBooleanControl",
          "Parameters": [
            {
              "Name": "usagePage",
              "Type": "UInt16"
            },
            {
              "Name": "usageId",
              "Type": "UInt16"
            }
          ]
        },
        {
          "Name": "GetBooleanControlByDescription",
          "ReturnType": "HidBooleanControl",
          "Parameters": [
            {
              "Name": "controlDescription",
              "Type": "HidBooleanControlDescription"
            }
          ]
        },
        {
          "Name": "GetNumericControl",
          "ReturnType": "HidNumericControl",
          "Parameters": [
            {
              "Name": "usagePage",
              "Type": "UInt16"
            },
            {
              "Name": "usageId",
              "Type": "UInt16"
            }
          ]
        },
        {
          "Name": "GetNumericControlByDescription",
          "ReturnType": "HidNumericControl",
          "Parameters": [
            {
              "Name": "controlDescription",
              "Type": "HidNumericControlDescription"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.HumanInterfaceDevice.HidOutputReport"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "KeyboardPresent",
          "Type": "Int32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Input.KeyboardCapabilities"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "HorizontalWheelPresent",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "MousePresent",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "NumberOfButtons",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "SwapButtons",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "VerticalWheelPresent",
          "Type": "Int32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Input.MouseCapabilities"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetForCurrentView",
          "IsStatic": true,
          "ReturnType": "MouseDevice"
        }
      ],
      "Events": [
        {
          "Name": "MouseMoved",
          "Type": "TypedEventHandler<MouseDevice,MouseEventArgs>"
        }
      ],
      "Name": "Windows.Devices.Input.MouseDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "MouseDelta",
          "Type": "MouseDelta",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Input.MouseEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsIntegrated",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "MaxContacts",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "MaxPointersWithZDistance",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "PhysicalDeviceRect",
          "Type": "Rect",
          "IsGet": true
        },
        {
          "Name": "PointerDeviceType",
          "Type": "PointerDeviceType",
          "IsGet": true
        },
        {
          "Name": "ScreenRect",
          "Type": "Rect",
          "IsGet": true
        },
        {
          "Name": "SupportedUsages",
          "Type": "IReadOnlyList<PointerDeviceUsage>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetPointerDevice",
          "IsStatic": true,
          "ReturnType": "PointerDevice",
          "Parameters": [
            {
              "Name": "pointerId",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetPointerDevices",
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<PointerDevice>"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Input.PointerDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Contacts",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "TouchPresent",
          "Type": "Int32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Input.TouchCapabilities"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DeviceId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "MinimumReportInterval",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "ReportInterval",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetCurrentReading",
          "ReturnType": "AccelerometerReading"
        },
        {
          "Name": "GetDefault",
          "IsStatic": true,
          "ReturnType": "Accelerometer"
        }
      ],
      "Events": [
        {
          "Name": "ReadingChanged",
          "Type": "TypedEventHandler<Accelerometer,AccelerometerReadingChangedEventArgs>"
        },
        {
          "Name": "Shaken",
          "Type": "TypedEventHandler<Accelerometer,AccelerometerShakenEventArgs>"
        }
      ],
      "Name": "Windows.Devices.Sensors.Accelerometer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AccelerationX",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "AccelerationY",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "AccelerationZ",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "Timestamp",
          "Type": "DateTimeOffset",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.AccelerometerReading"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Reading",
          "Type": "AccelerometerReading",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.AccelerometerReadingChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Timestamp",
          "Type": "DateTimeOffset",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.AccelerometerShakenEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DeviceId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "MinimumReportInterval",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "ReportInterval",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetCurrentReading",
          "ReturnType": "CompassReading"
        },
        {
          "Name": "GetDefault",
          "IsStatic": true,
          "ReturnType": "Compass"
        }
      ],
      "Events": [
        {
          "Name": "ReadingChanged",
          "Type": "TypedEventHandler<Compass,CompassReadingChangedEventArgs>"
        }
      ],
      "Name": "Windows.Devices.Sensors.Compass"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "HeadingAccuracy",
          "Type": "MagnetometerAccuracy",
          "IsGet": true
        },
        {
          "Name": "HeadingMagneticNorth",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "HeadingTrueNorth",
          "Type": "Nullable<Double>",
          "IsGet": true
        },
        {
          "Name": "Timestamp",
          "Type": "DateTimeOffset",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.CompassReading"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Reading",
          "Type": "CompassReading",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.CompassReadingChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DeviceId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "MinimumReportInterval",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "ReportInterval",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetCurrentReading",
          "ReturnType": "GyrometerReading"
        },
        {
          "Name": "GetDefault",
          "IsStatic": true,
          "ReturnType": "Gyrometer"
        }
      ],
      "Events": [
        {
          "Name": "ReadingChanged",
          "Type": "TypedEventHandler<Gyrometer,GyrometerReadingChangedEventArgs>"
        }
      ],
      "Name": "Windows.Devices.Sensors.Gyrometer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AngularVelocityX",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "AngularVelocityY",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "AngularVelocityZ",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "Timestamp",
          "Type": "DateTimeOffset",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.GyrometerReading"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Reading",
          "Type": "GyrometerReading",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.GyrometerReadingChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DeviceId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "MinimumReportInterval",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "ReportInterval",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetCurrentReading",
          "ReturnType": "InclinometerReading"
        },
        {
          "Name": "GetDefault",
          "IsStatic": true,
          "ReturnType": "Inclinometer"
        }
      ],
      "Events": [
        {
          "Name": "ReadingChanged",
          "Type": "TypedEventHandler<Inclinometer,InclinometerReadingChangedEventArgs>"
        }
      ],
      "Name": "Windows.Devices.Sensors.Inclinometer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "PitchDegrees",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "RollDegrees",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "Timestamp",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "YawAccuracy",
          "Type": "MagnetometerAccuracy",
          "IsGet": true
        },
        {
          "Name": "YawDegrees",
          "Type": "Single",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.InclinometerReading"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Reading",
          "Type": "InclinometerReading",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.InclinometerReadingChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DeviceId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "MinimumReportInterval",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "ReportInterval",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetCurrentReading",
          "ReturnType": "LightSensorReading"
        },
        {
          "Name": "GetDefault",
          "IsStatic": true,
          "ReturnType": "LightSensor"
        }
      ],
      "Events": [
        {
          "Name": "ReadingChanged",
          "Type": "TypedEventHandler<LightSensor,LightSensorReadingChangedEventArgs>"
        }
      ],
      "Name": "Windows.Devices.Sensors.LightSensor"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IlluminanceInLux",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "Timestamp",
          "Type": "DateTimeOffset",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.LightSensorReading"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Reading",
          "Type": "LightSensorReading",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.LightSensorReadingChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DeviceId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "MinimumReportInterval",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "ReportInterval",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetCurrentReading",
          "ReturnType": "MagnetometerReading"
        },
        {
          "Name": "GetDefault",
          "IsStatic": true,
          "ReturnType": "Magnetometer"
        }
      ],
      "Events": [
        {
          "Name": "ReadingChanged",
          "Type": "TypedEventHandler<Magnetometer,MagnetometerReadingChangedEventArgs>"
        }
      ],
      "Name": "Windows.Devices.Sensors.Magnetometer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DirectionalAccuracy",
          "Type": "MagnetometerAccuracy",
          "IsGet": true
        },
        {
          "Name": "MagneticFieldX",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "MagneticFieldY",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "MagneticFieldZ",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "Timestamp",
          "Type": "DateTimeOffset",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.MagnetometerReading"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Reading",
          "Type": "MagnetometerReading",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.MagnetometerReadingChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DeviceId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "MinimumReportInterval",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "ReportInterval",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetCurrentReading",
          "ReturnType": "OrientationSensorReading"
        },
        {
          "Name": "GetDefault",
          "IsStatic": true,
          "ReturnType": "OrientationSensor"
        }
      ],
      "Events": [
        {
          "Name": "ReadingChanged",
          "Type": "TypedEventHandler<OrientationSensor,OrientationSensorReadingChangedEventArgs>"
        }
      ],
      "Name": "Windows.Devices.Sensors.OrientationSensor"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Quaternion",
          "Type": "SensorQuaternion",
          "IsGet": true
        },
        {
          "Name": "RotationMatrix",
          "Type": "SensorRotationMatrix",
          "IsGet": true
        },
        {
          "Name": "Timestamp",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "YawAccuracy",
          "Type": "MagnetometerAccuracy",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.OrientationSensorReading"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Reading",
          "Type": "OrientationSensorReading",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.OrientationSensorReadingChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "W",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "X",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "Y",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "Z",
          "Type": "Single",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.SensorQuaternion"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "M11",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "M12",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "M13",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "M21",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "M22",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "M23",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "M31",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "M32",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "M33",
          "Type": "Single",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.SensorRotationMatrix"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DeviceId",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetCurrentOrientation",
          "ReturnType": "SimpleOrientation"
        },
        {
          "Name": "GetDefault",
          "IsStatic": true,
          "ReturnType": "SimpleOrientationSensor"
        }
      ],
      "Events": [
        {
          "Name": "OrientationChanged",
          "Type": "TypedEventHandler<SimpleOrientationSensor,SimpleOrientationSensorOrientationChangedEventArgs>"
        }
      ],
      "Name": "Windows.Devices.Sensors.SimpleOrientationSensor"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Orientation",
          "Type": "SimpleOrientation",
          "IsGet": true
        },
        {
          "Name": "Timestamp",
          "Type": "DateTimeOffset",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.SimpleOrientationSensorOrientationChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "SmartCard",
          "Type": "SmartCard",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.CardAddedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "SmartCard",
          "Type": "SmartCard",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.CardRemovedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Reader",
          "Type": "SmartCardReader",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ConnectAsync",
          "ReturnType": "IAsyncOperation<SmartCardConnection>"
        },
        {
          "Name": "GetAnswerToResetAsync",
          "ReturnType": "IAsyncOperation<IBuffer>"
        },
        {
          "Name": "GetStatusAsync",
          "ReturnType": "IAsyncOperation<SmartCardStatus>"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.SmartCard"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "TransmitAsync",
          "ReturnType": "IAsyncOperation<IBuffer>",
          "Parameters": [
            {
              "Name": "command",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.SmartCardConnection"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "EnablementPolicy",
          "Type": "SmartCardEmulatorEnablementPolicy",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDefaultAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<SmartCardEmulator>"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.SmartCardEmulator"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Challenge",
          "Type": "IBuffer",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "ChangeAdministrativeKeyAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "response",
              "Type": "IBuffer"
            },
            {
              "Name": "newAdministrativeKey",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "ProvisionAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "response",
              "Type": "IBuffer"
            },
            {
              "Name": "formatCard",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "ProvisionAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "response",
              "Type": "IBuffer"
            },
            {
              "Name": "formatCard",
              "Type": "Boolean"
            },
            {
              "Name": "newCardId",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "VerifyResponseAsync",
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "response",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.SmartCardChallengeContext"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Digits",
          "Type": "SmartCardPinCharacterPolicyOption",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LowercaseLetters",
          "Type": "SmartCardPinCharacterPolicyOption",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaxLength",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MinLength",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SpecialCharacters",
          "Type": "SmartCardPinCharacterPolicyOption",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UppercaseLetters",
          "Type": "SmartCardPinCharacterPolicyOption",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.SmartCardPinPolicy"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Complete",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.SmartCardPinResetDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Deadline",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "Challenge",
          "Type": "IBuffer",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDeferral",
          "ReturnType": "SmartCardPinResetDeferral"
        },
        {
          "Name": "SetResponse",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "response",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.SmartCardPinResetRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "SmartCard",
          "Type": "SmartCard",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "FromSmartCardAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<SmartCardProvisioning>",
          "Parameters": [
            {
              "Name": "card",
              "Type": "SmartCard"
            }
          ]
        },
        {
          "Name": "GetChallengeContextAsync",
          "ReturnType": "IAsyncOperation<SmartCardChallengeContext>"
        },
        {
          "Name": "GetIdAsync",
          "ReturnType": "IAsyncOperation<Guid>"
        },
        {
          "Name": "GetNameAsync",
          "ReturnType": "IAsyncOperation<String>"
        },
        {
          "Name": "RequestPinChangeAsync",
          "ReturnType": "IAsyncOperation<Boolean>"
        },
        {
          "Name": "RequestPinResetAsync",
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "handler",
              "Type": "SmartCardPinResetHandler"
            }
          ]
        },
        {
          "Name": "RequestVirtualSmartCardCreationAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<SmartCardProvisioning>",
          "Parameters": [
            {
              "Name": "friendlyName",
              "Type": "String"
            },
            {
              "Name": "administrativeKey",
              "Type": "IBuffer"
            },
            {
              "Name": "pinPolicy",
              "Type": "SmartCardPinPolicy"
            }
          ]
        },
        {
          "Name": "RequestVirtualSmartCardCreationAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<SmartCardProvisioning>",
          "Parameters": [
            {
              "Name": "friendlyName",
              "Type": "String"
            },
            {
              "Name": "administrativeKey",
              "Type": "IBuffer"
            },
            {
              "Name": "pinPolicy",
              "Type": "SmartCardPinPolicy"
            },
            {
              "Name": "cardId",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "RequestVirtualSmartCardDeletionAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "card",
              "Type": "SmartCard"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.SmartCardProvisioning"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DeviceId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "SmartCardReaderKind",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "FindAllCardsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<SmartCard>>"
        },
        {
          "Name": "FromIdAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<SmartCardReader>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetDeviceSelector",
          "IsStatic": true,
          "ReturnType": "String"
        },
        {
          "Name": "GetDeviceSelector",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "kind",
              "Type": "SmartCardReaderKind"
            }
          ]
        },
        {
          "Name": "GetStatusAsync",
          "ReturnType": "IAsyncOperation<SmartCardReaderStatus>"
        }
      ],
      "Events": [
        {
          "Name": "CardAdded",
          "Type": "TypedEventHandler<SmartCardReader,CardAddedEventArgs>"
        },
        {
          "Name": "CardRemoved",
          "Type": "TypedEventHandler<SmartCardReader,CardRemovedEventArgs>"
        }
      ],
      "Name": "Windows.Devices.SmartCards.SmartCardReader"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "SourceAppletId",
          "Type": "IBuffer",
          "IsGet": true
        },
        {
          "Name": "TriggerData",
          "Type": "IBuffer",
          "IsGet": true
        },
        {
          "Name": "TriggerType",
          "Type": "SmartCardTriggerType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.SmartCardTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ConnectionStatus",
          "Type": "WiFiDirectConnectionStatus",
          "IsGet": true
        },
        {
          "Name": "DeviceId",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "FromIdAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<WiFiDirectDevice>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetConnectionEndpointPairs",
          "ReturnType": "IReadOnlyList<EndpointPair>"
        },
        {
          "Name": "GetDeviceSelector",
          "IsStatic": true,
          "ReturnType": "String"
        }
      ],
      "Events": [
        {
          "Name": "ConnectionStatusChanged",
          "Type": "TypedEventHandler<WiFiDirectDevice,Object>"
        }
      ],
      "Name": "Windows.Devices.WiFiDirect.WiFiDirectDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,Object>>",
        "IDictionary<String,Object>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,Object>>",
        "IObservableMap<String,Object>",
        "IPropertySet"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "MapChanged",
          "Type": "MapChangedEventHandler<String,Object>"
        }
      ],
      "Name": "Windows.Foundation.Collections.PropertySet"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,Object>>",
        "IDictionary<String,Object>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,Object>>",
        "IObservableMap<String,Object>",
        "IPropertySet"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "MapChanged",
          "Type": "MapChangedEventHandler<String,Object>"
        }
      ],
      "Name": "Windows.Foundation.Collections.ValueSet"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "TraceOperationCompletion",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "traceLevel",
              "Type": "CausalityTraceLevel"
            },
            {
              "Name": "source",
              "Type": "CausalitySource"
            },
            {
              "Name": "platformId",
              "Type": "Guid"
            },
            {
              "Name": "operationId",
              "Type": "UInt64"
            },
            {
              "Name": "status",
              "Type": "AsyncStatus"
            }
          ]
        },
        {
          "Name": "TraceOperationCreation",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "traceLevel",
              "Type": "CausalityTraceLevel"
            },
            {
              "Name": "source",
              "Type": "CausalitySource"
            },
            {
              "Name": "platformId",
              "Type": "Guid"
            },
            {
              "Name": "operationId",
              "Type": "UInt64"
            },
            {
              "Name": "operationName",
              "Type": "String"
            },
            {
              "Name": "relatedContext",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "TraceOperationRelation",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "traceLevel",
              "Type": "CausalityTraceLevel"
            },
            {
              "Name": "source",
              "Type": "CausalitySource"
            },
            {
              "Name": "platformId",
              "Type": "Guid"
            },
            {
              "Name": "operationId",
              "Type": "UInt64"
            },
            {
              "Name": "relation",
              "Type": "CausalityRelation"
            }
          ]
        },
        {
          "Name": "TraceSynchronousWorkCompletion",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "traceLevel",
              "Type": "CausalityTraceLevel"
            },
            {
              "Name": "source",
              "Type": "CausalitySource"
            },
            {
              "Name": "work",
              "Type": "CausalitySynchronousWork"
            }
          ]
        },
        {
          "Name": "TraceSynchronousWorkStart",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "traceLevel",
              "Type": "CausalityTraceLevel"
            },
            {
              "Name": "source",
              "Type": "CausalitySource"
            },
            {
              "Name": "platformId",
              "Type": "Guid"
            },
            {
              "Name": "operationId",
              "Type": "UInt64"
            },
            {
              "Name": "work",
              "Type": "CausalitySynchronousWork"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "TracingStatusChanged",
          "Type": "EventHandler<TracingStatusChangedEventArgs>",
          "IsStatic": true
        }
      ],
      "Name": "Windows.Foundation.Diagnostics.AsyncCausalityTracer"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IFileLoggingSession"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AddLoggingChannel",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            }
          ]
        },
        {
          "Name": "AddLoggingChannel",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            },
            {
              "Name": "maxLevel",
              "Type": "LoggingLevel"
            }
          ]
        },
        {
          "Name": "CloseAndSaveToFileAsync",
          "ReturnType": "IAsyncOperation<StorageFile>"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "RemoveLoggingChannel",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "LogFileGenerated",
          "Type": "TypedEventHandler<IFileLoggingSession,LogFileGeneratedEventArgs>"
        }
      ],
      "Name": "Windows.Foundation.Diagnostics.FileLoggingSession"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "File",
          "Type": "StorageFile",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Diagnostics.LogFileGeneratedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "activityName",
              "Type": "String"
            },
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "activityName",
              "Type": "String"
            },
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            },
            {
              "Name": "level",
              "Type": "LoggingLevel"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Id",
          "Type": "Guid",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.Diagnostics.LoggingActivity"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "ILoggingChannel"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Enabled",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Level",
          "Type": "LoggingLevel",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "LogMessage",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "eventString",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "LogMessage",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "eventString",
              "Type": "String"
            },
            {
              "Name": "level",
              "Type": "LoggingLevel"
            }
          ]
        },
        {
          "Name": "LogValuePair",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value1",
              "Type": "String"
            },
            {
              "Name": "value2",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "LogValuePair",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value1",
              "Type": "String"
            },
            {
              "Name": "value2",
              "Type": "Int32"
            },
            {
              "Name": "level",
              "Type": "LoggingLevel"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "LoggingEnabled",
          "Type": "TypedEventHandler<ILoggingChannel,Object>"
        }
      ],
      "Name": "Windows.Foundation.Diagnostics.LoggingChannel"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "ILoggingSession"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AddLoggingChannel",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            }
          ]
        },
        {
          "Name": "AddLoggingChannel",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            },
            {
              "Name": "maxLevel",
              "Type": "LoggingLevel"
            }
          ]
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "RemoveLoggingChannel",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            }
          ]
        },
        {
          "Name": "SaveToFileAsync",
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "folder",
              "Type": "IStorageFolder"
            },
            {
              "Name": "fileName",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.Diagnostics.LoggingSession"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IErrorReportingSettings"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetErrorOptions",
          "ReturnType": "ErrorOptions"
        },
        {
          "Name": "SetErrorOptions",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "ErrorOptions"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.Diagnostics.RuntimeBrokerErrorSettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Enabled",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "TraceLevel",
          "Type": "CausalityTraceLevel",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "type",
              "Type": "Type"
            },
            {
              "Name": "version",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "type",
              "Type": "Type"
            },
            {
              "Name": "version",
              "Type": "UInt32"
            },
            {
              "Name": "platform",
              "Type": "Platform"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "version",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "version",
              "Type": "UInt32"
            },
            {
              "Name": "platform",
              "Type": "Platform"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.ActivatableAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.AllowMultipleAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "type",
              "Type": "Type"
            },
            {
              "Name": "compositionType",
              "Type": "CompositionType"
            },
            {
              "Name": "version",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "type",
              "Type": "Type"
            },
            {
              "Name": "compositionType",
              "Type": "CompositionType"
            },
            {
              "Name": "version",
              "Type": "UInt32"
            },
            {
              "Name": "platform",
              "Type": "Platform"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.ComposableAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.DefaultAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.DefaultOverloadAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "message",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "DeprecationType"
            },
            {
              "Name": "version",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "message",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "DeprecationType"
            },
            {
              "Name": "version",
              "Type": "UInt32"
            },
            {
              "Name": "platform",
              "Type": "Platform"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.DeprecatedAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "version",
          "Type": "UInt32"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.DualApiPartitionAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "typeName",
              "Type": "Type"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.ExclusiveToAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "a",
              "Type": "UInt32"
            },
            {
              "Name": "b",
              "Type": "UInt16"
            },
            {
              "Name": "c",
              "Type": "UInt16"
            },
            {
              "Name": "d",
              "Type": "Byte"
            },
            {
              "Name": "e",
              "Type": "Byte"
            },
            {
              "Name": "f",
              "Type": "Byte"
            },
            {
              "Name": "g",
              "Type": "Byte"
            },
            {
              "Name": "h",
              "Type": "Byte"
            },
            {
              "Name": "i",
              "Type": "Byte"
            },
            {
              "Name": "j",
              "Type": "Byte"
            },
            {
              "Name": "k",
              "Type": "Byte"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.GuidAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.HasVariantAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "indexLengthParameter",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.LengthIsAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "behavior",
              "Type": "MarshalingType"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.MarshalingBehaviorAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "Version",
          "Type": "UInt32"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.MuseAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "method",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.OverloadAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.OverridableAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "platform",
              "Type": "Platform"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.PlatformAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.ProtectedAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "minValue",
              "Type": "Int32"
            },
            {
              "Name": "maxValue",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.RangeAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "type",
              "Type": "Type"
            },
            {
              "Name": "version",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "type",
              "Type": "Type"
            },
            {
              "Name": "version",
              "Type": "UInt32"
            },
            {
              "Name": "platform",
              "Type": "Platform"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.StaticAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "model",
              "Type": "ThreadingModel"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.ThreadingAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.VariantAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "version",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "version",
              "Type": "UInt32"
            },
            {
              "Name": "platform",
              "Type": "Platform"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.VersionAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.WebHostHiddenAttribute"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateBoolean",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "CreateBooleanArray",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Boolean[]"
            }
          ]
        },
        {
          "Name": "CreateDateTime",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "DateTimeOffset"
            }
          ]
        },
        {
          "Name": "CreateDateTimeArray",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "DateTimeOffset[]"
            }
          ]
        },
        {
          "Name": "CreateDouble",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "CreateDoubleArray",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double[]"
            }
          ]
        },
        {
          "Name": "CreateEmpty",
          "IsStatic": true,
          "ReturnType": "Object"
        },
        {
          "Name": "CreateGuid",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "CreateGuidArray",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Guid[]"
            }
          ]
        },
        {
          "Name": "CreateChar16",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Char"
            }
          ]
        },
        {
          "Name": "CreateChar16Array",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Char[]"
            }
          ]
        },
        {
          "Name": "CreateInspectable",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "CreateInspectableArray",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object[]"
            }
          ]
        },
        {
          "Name": "CreateInt16",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int16"
            }
          ]
        },
        {
          "Name": "CreateInt16Array",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int16[]"
            }
          ]
        },
        {
          "Name": "CreateInt32",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "CreateInt32Array",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int32[]"
            }
          ]
        },
        {
          "Name": "CreateInt64",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ]
        },
        {
          "Name": "CreateInt64Array",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64[]"
            }
          ]
        },
        {
          "Name": "CreatePoint",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Point"
            }
          ]
        },
        {
          "Name": "CreatePointArray",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Point[]"
            }
          ]
        },
        {
          "Name": "CreateRect",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Rect"
            }
          ]
        },
        {
          "Name": "CreateRectArray",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Rect[]"
            }
          ]
        },
        {
          "Name": "CreateSingle",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Single"
            }
          ]
        },
        {
          "Name": "CreateSingleArray",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Single[]"
            }
          ]
        },
        {
          "Name": "CreateSize",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Size"
            }
          ]
        },
        {
          "Name": "CreateSizeArray",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Size[]"
            }
          ]
        },
        {
          "Name": "CreateString",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateStringArray",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String[]"
            }
          ]
        },
        {
          "Name": "CreateTimeSpan",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "TimeSpan"
            }
          ]
        },
        {
          "Name": "CreateTimeSpanArray",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "TimeSpan[]"
            }
          ]
        },
        {
          "Name": "CreateUInt16",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt16"
            }
          ]
        },
        {
          "Name": "CreateUInt16Array",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt16[]"
            }
          ]
        },
        {
          "Name": "CreateUInt32",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "CreateUInt32Array",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt32[]"
            }
          ]
        },
        {
          "Name": "CreateUInt64",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "CreateUInt64Array",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64[]"
            }
          ]
        },
        {
          "Name": "CreateUInt8",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte"
            }
          ]
        },
        {
          "Name": "CreateUInt8Array",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.PropertyValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<IWwwFormUrlDecoderEntry>",
        "IReadOnlyCollection<IWwwFormUrlDecoderEntry>",
        "IReadOnlyList<IWwwFormUrlDecoderEntry>"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "query",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetFirstValueByName",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.WwwFormUrlDecoder"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Languages",
          "Type": "IReadOnlyList<String>",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ManifestLanguages",
          "Type": "IReadOnlyList<String>",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PrimaryLanguageOverride",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Globalization.ApplicationLanguages"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "languages",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "languages",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "calendar",
              "Type": "String"
            },
            {
              "Name": "clock",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "languages",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "calendar",
              "Type": "String"
            },
            {
              "Name": "clock",
              "Type": "String"
            },
            {
              "Name": "timeZoneId",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Day",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DayOfWeek",
          "Type": "DayOfWeek",
          "IsGet": true
        },
        {
          "Name": "Era",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FirstDayInThisMonth",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "FirstEra",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "FirstHourInThisPeriod",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "FirstMinuteInThisHour",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "FirstMonthInThisYear",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "FirstPeriodInThisDay",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "FirstSecondInThisMinute",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "FirstYearInThisEra",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "Hour",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsDaylightSavingTime",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Languages",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        },
        {
          "Name": "LastDayInThisMonth",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "LastEra",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "LastHourInThisPeriod",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "LastMinuteInThisHour",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "LastMonthInThisYear",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "LastPeriodInThisDay",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "LastSecondInThisMinute",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "LastYearInThisEra",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "Minute",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Month",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Nanosecond",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NumberOfDaysInThisMonth",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "NumberOfEras",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "NumberOfHoursInThisPeriod",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "NumberOfMinutesInThisHour",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "NumberOfMonthsInThisYear",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "NumberOfPeriodsInThisDay",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "NumberOfSecondsInThisMinute",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "NumberOfYearsInThisEra",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "NumeralSystem",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Period",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ResolvedLanguage",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Second",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Year",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AddDays",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "days",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "AddEras",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "eras",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "AddHours",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "hours",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "AddMinutes",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "minutes",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "AddMonths",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "months",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "AddNanoseconds",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "nanoseconds",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "AddPeriods",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "periods",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "AddSeconds",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "seconds",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "AddWeeks",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "weeks",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "AddYears",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "years",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "Clone",
          "ReturnType": "Calendar"
        },
        {
          "Name": "Compare",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "other",
              "Type": "Calendar"
            }
          ]
        },
        {
          "Name": "CompareDateTime",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "other",
              "Type": "DateTimeOffset"
            }
          ]
        },
        {
          "Name": "CopyTo",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "other",
              "Type": "Calendar"
            }
          ]
        },
        {
          "Name": "DayAsPaddedString",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "minDigits",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "DayAsString",
          "ReturnType": "String"
        },
        {
          "Name": "DayOfWeekAsSoloString",
          "ReturnType": "String"
        },
        {
          "Name": "DayOfWeekAsSoloString",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "idealLength",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "DayOfWeekAsString",
          "ReturnType": "String"
        },
        {
          "Name": "DayOfWeekAsString",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "idealLength",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "EraAsString",
          "ReturnType": "String"
        },
        {
          "Name": "EraAsString",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "idealLength",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "GetCalendarSystem",
          "ReturnType": "String"
        },
        {
          "Name": "GetClock",
          "ReturnType": "String"
        },
        {
          "Name": "GetDateTime",
          "ReturnType": "DateTimeOffset"
        },
        {
          "Name": "GetTimeZone",
          "ReturnType": "String"
        },
        {
          "Name": "HourAsPaddedString",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "minDigits",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "HourAsString",
          "ReturnType": "String"
        },
        {
          "Name": "ChangeCalendarSystem",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ChangeClock",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ChangeTimeZone",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "timeZoneId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "MinuteAsPaddedString",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "minDigits",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "MinuteAsString",
          "ReturnType": "String"
        },
        {
          "Name": "MonthAsNumericString",
          "ReturnType": "String"
        },
        {
          "Name": "MonthAsPaddedNumericString",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "minDigits",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "MonthAsSoloString",
          "ReturnType": "String"
        },
        {
          "Name": "MonthAsSoloString",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "idealLength",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "MonthAsString",
          "ReturnType": "String"
        },
        {
          "Name": "MonthAsString",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "idealLength",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "NanosecondAsPaddedString",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "minDigits",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "NanosecondAsString",
          "ReturnType": "String"
        },
        {
          "Name": "PeriodAsString",
          "ReturnType": "String"
        },
        {
          "Name": "PeriodAsString",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "idealLength",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "SecondAsPaddedString",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "minDigits",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "SecondAsString",
          "ReturnType": "String"
        },
        {
          "Name": "SetDateTime",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "DateTimeOffset"
            }
          ]
        },
        {
          "Name": "SetToMax",
          "ReturnType": "Void"
        },
        {
          "Name": "SetToMin",
          "ReturnType": "Void"
        },
        {
          "Name": "SetToNow",
          "ReturnType": "Void"
        },
        {
          "Name": "TimeZoneAsString",
          "ReturnType": "String"
        },
        {
          "Name": "TimeZoneAsString",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "idealLength",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "YearAsPaddedString",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "minDigits",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "YearAsString",
          "ReturnType": "String"
        },
        {
          "Name": "YearAsTruncatedString",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "remainingDigits",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.Calendar"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Gregorian",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Hebrew",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Hijri",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Japanese",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Julian",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Korean",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Taiwan",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Thai",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "UmAlQura",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Globalization.CalendarIdentifiers"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "TwelveHour",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TwentyFourHour",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Globalization.ClockIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "First",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Label",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Globalization.Collation.CharacterGrouping"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<CharacterGrouping>",
        "IReadOnlyCollection<CharacterGrouping>",
        "IReadOnlyList<CharacterGrouping>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Lookup",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.Collation.CharacterGroupings"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AED",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AFN",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ALL",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AMD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ANG",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AOA",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ARS",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AUD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AWG",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AZN",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BAM",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BBD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BDT",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BGN",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BHD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BIF",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BMD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BND",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BOB",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BRL",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BSD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BTN",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BWP",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BYR",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BZD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CAD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CDF",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CLP",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CNY",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "COP",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CRC",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CUP",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CVE",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CZK",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DJF",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DKK",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DOP",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DZD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "EGP",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ERN",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ETB",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "EUR",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FJD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FKP",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GBP",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GEL",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GHS",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GIP",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GMD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GNF",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GTQ",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GYD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HKD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HNL",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HRK",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HTG",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HUF",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CHF",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IDR",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ILS",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "INR",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IQD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IRR",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ISK",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "JMD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "JOD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "JPY",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "KES",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "KGS",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "KHR",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "KMF",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "KPW",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "KRW",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "KWD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "KYD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "KZT",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LAK",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LBP",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LKR",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LRD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LSL",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LTL",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LVL",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LYD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MAD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MDL",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MGA",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MKD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MMK",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MNT",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MOP",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MRO",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MUR",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MVR",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MWK",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MXN",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MYR",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MZN",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "NAD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "NGN",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "NIO",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "NOK",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "NPR",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "NZD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OMR",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PAB",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PEN",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PGK",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PHP",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PKR",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PLN",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PYG",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "QAR",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RON",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RSD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RUB",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RWF",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SAR",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SBD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SCR",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SDG",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SEK",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SGD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SHP",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SLL",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SOS",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SRD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "STD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SYP",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SZL",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "THB",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TJS",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TMT",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TND",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TOP",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TRY",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TTD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TWD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TZS",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "UAH",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "UGX",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "USD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "UYU",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "UZS",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "VEF",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "VND",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "VUV",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "WST",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "XAF",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "XCD",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "XOF",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "XPF",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "XXX",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "YER",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ZAR",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ZMW",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ZWL",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Globalization.CurrencyIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "hourFormat",
              "Type": "HourFormat"
            },
            {
              "Name": "minuteFormat",
              "Type": "MinuteFormat"
            },
            {
              "Name": "secondFormat",
              "Type": "SecondFormat"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "formatTemplate",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "formatTemplate",
              "Type": "String"
            },
            {
              "Name": "languages",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "formatTemplate",
              "Type": "String"
            },
            {
              "Name": "languages",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "geographicRegion",
              "Type": "String"
            },
            {
              "Name": "calendar",
              "Type": "String"
            },
            {
              "Name": "clock",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "yearFormat",
              "Type": "YearFormat"
            },
            {
              "Name": "monthFormat",
              "Type": "MonthFormat"
            },
            {
              "Name": "dayFormat",
              "Type": "DayFormat"
            },
            {
              "Name": "dayOfWeekFormat",
              "Type": "DayOfWeekFormat"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "yearFormat",
              "Type": "YearFormat"
            },
            {
              "Name": "monthFormat",
              "Type": "MonthFormat"
            },
            {
              "Name": "dayFormat",
              "Type": "DayFormat"
            },
            {
              "Name": "dayOfWeekFormat",
              "Type": "DayOfWeekFormat"
            },
            {
              "Name": "hourFormat",
              "Type": "HourFormat"
            },
            {
              "Name": "minuteFormat",
              "Type": "MinuteFormat"
            },
            {
              "Name": "secondFormat",
              "Type": "SecondFormat"
            },
            {
              "Name": "languages",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "yearFormat",
              "Type": "YearFormat"
            },
            {
              "Name": "monthFormat",
              "Type": "MonthFormat"
            },
            {
              "Name": "dayFormat",
              "Type": "DayFormat"
            },
            {
              "Name": "dayOfWeekFormat",
              "Type": "DayOfWeekFormat"
            },
            {
              "Name": "hourFormat",
              "Type": "HourFormat"
            },
            {
              "Name": "minuteFormat",
              "Type": "MinuteFormat"
            },
            {
              "Name": "secondFormat",
              "Type": "SecondFormat"
            },
            {
              "Name": "languages",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "geographicRegion",
              "Type": "String"
            },
            {
              "Name": "calendar",
              "Type": "String"
            },
            {
              "Name": "clock",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Calendar",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Clock",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "GeographicRegion",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "IncludeDay",
          "Type": "DayFormat",
          "IsGet": true
        },
        {
          "Name": "IncludeDayOfWeek",
          "Type": "DayOfWeekFormat",
          "IsGet": true
        },
        {
          "Name": "IncludeHour",
          "Type": "HourFormat",
          "IsGet": true
        },
        {
          "Name": "IncludeMinute",
          "Type": "MinuteFormat",
          "IsGet": true
        },
        {
          "Name": "IncludeMonth",
          "Type": "MonthFormat",
          "IsGet": true
        },
        {
          "Name": "IncludeSecond",
          "Type": "SecondFormat",
          "IsGet": true
        },
        {
          "Name": "IncludeYear",
          "Type": "YearFormat",
          "IsGet": true
        },
        {
          "Name": "Languages",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        },
        {
          "Name": "LongDate",
          "Type": "DateTimeFormatter",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LongTime",
          "Type": "DateTimeFormatter",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "NumeralSystem",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Patterns",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        },
        {
          "Name": "ResolvedGeographicRegion",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ResolvedLanguage",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ShortDate",
          "Type": "DateTimeFormatter",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ShortTime",
          "Type": "DateTimeFormatter",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Template",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Format",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "DateTimeOffset"
            }
          ]
        },
        {
          "Name": "Format",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "datetime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "timeZoneId",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.DateTimeFormatting.DateTimeFormatter"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FontFamily",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "FontStretch",
          "Type": "FontStretch",
          "IsGet": true
        },
        {
          "Name": "FontStyle",
          "Type": "FontStyle",
          "IsGet": true
        },
        {
          "Name": "FontWeight",
          "Type": "FontWeight",
          "IsGet": true
        },
        {
          "Name": "ScaleFactor",
          "Type": "Double",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Globalization.Fonts.LanguageFont"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "languageTag",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "DocumentAlternate1Font",
          "Type": "LanguageFont",
          "IsGet": true
        },
        {
          "Name": "DocumentAlternate2Font",
          "Type": "LanguageFont",
          "IsGet": true
        },
        {
          "Name": "DocumentHeadingFont",
          "Type": "LanguageFont",
          "IsGet": true
        },
        {
          "Name": "FixedWidthTextFont",
          "Type": "LanguageFont",
          "IsGet": true
        },
        {
          "Name": "ModernDocumentFont",
          "Type": "LanguageFont",
          "IsGet": true
        },
        {
          "Name": "TraditionalDocumentFont",
          "Type": "LanguageFont",
          "IsGet": true
        },
        {
          "Name": "UICaptionFont",
          "Type": "LanguageFont",
          "IsGet": true
        },
        {
          "Name": "UIHeadingFont",
          "Type": "LanguageFont",
          "IsGet": true
        },
        {
          "Name": "UINotificationHeadingFont",
          "Type": "LanguageFont",
          "IsGet": true
        },
        {
          "Name": "UITextFont",
          "Type": "LanguageFont",
          "IsGet": true
        },
        {
          "Name": "UITitleFont",
          "Type": "LanguageFont",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Globalization.Fonts.LanguageFontGroup"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "geographicRegionCode",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Code",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "CodeThreeDigit",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "CodeThreeLetter",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "CodeTwoLetter",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "CurrenciesInUse",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "NativeName",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "IsSupported",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "geographicRegionCode",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.GeographicRegion"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "languageTag",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "CurrentInputMethodLanguageTag",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "LanguageTag",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "NativeName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Script",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetExtensionSubtags",
          "ReturnType": "IReadOnlyList<String>",
          "Parameters": [
            {
              "Name": "singleton",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "IsWellFormed",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "languageTag",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.Language"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "INumberFormatter",
        "INumberFormatter2",
        "INumberFormatterOptions",
        "INumberParser",
        "INumberRounderOption",
        "ISignedZeroOption",
        "ISignificantDigitsOption"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "currencyCode",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "currencyCode",
              "Type": "String"
            },
            {
              "Name": "languages",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "geographicRegion",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Currency",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FractionDigits",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GeographicRegion",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "IntegerDigits",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsDecimalPointAlwaysDisplayed",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsGrouped",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsZeroSigned",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Languages",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        },
        {
          "Name": "Mode",
          "Type": "CurrencyFormatterMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NumberRounder",
          "Type": "INumberRounder",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NumeralSystem",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ResolvedGeographicRegion",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ResolvedLanguage",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SignificantDigits",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ApplyRoundingForCurrency",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "roundingAlgorithm",
              "Type": "RoundingAlgorithm"
            }
          ]
        },
        {
          "Name": "Format",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ]
        },
        {
          "Name": "Format",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "Format",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "FormatDouble",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "FormatInt",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ]
        },
        {
          "Name": "FormatUInt",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "ParseDouble",
          "ReturnType": "Nullable<Double>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ParseInt",
          "ReturnType": "Nullable<Int64>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ParseUInt",
          "ReturnType": "Nullable<UInt64>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.CurrencyFormatter"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "INumberFormatter",
        "INumberFormatter2",
        "INumberFormatterOptions",
        "INumberParser",
        "INumberRounderOption",
        "ISignedZeroOption",
        "ISignificantDigitsOption"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "languages",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "geographicRegion",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "FractionDigits",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GeographicRegion",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "IntegerDigits",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsDecimalPointAlwaysDisplayed",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsGrouped",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsZeroSigned",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Languages",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        },
        {
          "Name": "NumberRounder",
          "Type": "INumberRounder",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NumeralSystem",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ResolvedGeographicRegion",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ResolvedLanguage",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SignificantDigits",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Format",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ]
        },
        {
          "Name": "Format",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "Format",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "FormatDouble",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "FormatInt",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ]
        },
        {
          "Name": "FormatUInt",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "ParseDouble",
          "ReturnType": "Nullable<Double>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ParseInt",
          "ReturnType": "Nullable<Int64>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ParseUInt",
          "ReturnType": "Nullable<UInt64>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.DecimalFormatter"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "INumberRounder"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Increment",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RoundingAlgorithm",
          "Type": "RoundingAlgorithm",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "RoundDouble",
          "ReturnType": "Double",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "RoundInt32",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "RoundInt64",
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ]
        },
        {
          "Name": "RoundSingle",
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Single"
            }
          ]
        },
        {
          "Name": "RoundUInt32",
          "ReturnType": "UInt32",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "RoundUInt64",
          "ReturnType": "UInt64",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.IncrementNumberRounder"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "languages",
              "Type": "IEnumerable<String>"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Languages",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        },
        {
          "Name": "NumeralSystem",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ResolvedLanguage",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "TranslateNumerals",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.NumeralSystemTranslator"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "INumberFormatter",
        "INumberFormatter2",
        "INumberFormatterOptions",
        "INumberParser",
        "INumberRounderOption",
        "ISignedZeroOption",
        "ISignificantDigitsOption"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "languages",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "geographicRegion",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "FractionDigits",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GeographicRegion",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "IntegerDigits",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsDecimalPointAlwaysDisplayed",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsGrouped",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsZeroSigned",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Languages",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        },
        {
          "Name": "NumberRounder",
          "Type": "INumberRounder",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NumeralSystem",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ResolvedGeographicRegion",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ResolvedLanguage",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SignificantDigits",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Format",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ]
        },
        {
          "Name": "Format",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "Format",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "FormatDouble",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "FormatInt",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ]
        },
        {
          "Name": "FormatUInt",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "ParseDouble",
          "ReturnType": "Nullable<Double>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ParseInt",
          "ReturnType": "Nullable<Int64>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ParseUInt",
          "ReturnType": "Nullable<UInt64>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.PercentFormatter"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "INumberFormatter",
        "INumberFormatter2",
        "INumberFormatterOptions",
        "INumberParser",
        "INumberRounderOption",
        "ISignedZeroOption",
        "ISignificantDigitsOption"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "languages",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "geographicRegion",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "FractionDigits",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GeographicRegion",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "IntegerDigits",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsDecimalPointAlwaysDisplayed",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsGrouped",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsZeroSigned",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Languages",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        },
        {
          "Name": "NumberRounder",
          "Type": "INumberRounder",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NumeralSystem",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ResolvedGeographicRegion",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ResolvedLanguage",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SignificantDigits",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Format",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ]
        },
        {
          "Name": "Format",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "Format",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "FormatDouble",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "FormatInt",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ]
        },
        {
          "Name": "FormatUInt",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "ParseDouble",
          "ReturnType": "Nullable<Double>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ParseInt",
          "ReturnType": "Nullable<Int64>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ParseUInt",
          "ReturnType": "Nullable<UInt64>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.PermilleFormatter"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "INumberRounder"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "RoundingAlgorithm",
          "Type": "RoundingAlgorithm",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SignificantDigits",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "RoundDouble",
          "ReturnType": "Double",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "RoundInt32",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "RoundInt64",
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ]
        },
        {
          "Name": "RoundSingle",
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Single"
            }
          ]
        },
        {
          "Name": "RoundUInt32",
          "ReturnType": "UInt32",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "RoundUInt64",
          "ReturnType": "UInt64",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.SignificantDigitsNumberRounder"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Arab",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ArabExt",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Bali",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Beng",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Deva",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FullWide",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Gujr",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Guru",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HaniDec",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Cham",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Java",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Kali",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Khmr",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Knda",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Lana",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LanaTham",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Laoo",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Latn",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Lepc",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Limb",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Mlym",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Mong",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Mtei",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Mymr",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MymrShan",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Nkoo",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Olck",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Orya",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Saur",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Sund",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Talu",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TamlDec",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Telu",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Thai",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Tibt",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Vaii",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Globalization.NumeralSystemIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AutoRotationPreferences",
          "Type": "DisplayOrientations",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CurrentOrientation",
          "Type": "DisplayOrientations",
          "IsGet": true
        },
        {
          "Name": "LogicalDpi",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "NativeOrientation",
          "Type": "DisplayOrientations",
          "IsGet": true
        },
        {
          "Name": "RawDpiX",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "RawDpiY",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "RawPixelsPerViewPixel",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ResolutionScale",
          "Type": "ResolutionScale",
          "IsGet": true
        },
        {
          "Name": "StereoEnabled",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetColorProfileAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStream>"
        },
        {
          "Name": "GetForCurrentView",
          "IsStatic": true,
          "ReturnType": "DisplayInformation"
        }
      ],
      "Events": [
        {
          "Name": "ColorProfileChanged",
          "Type": "TypedEventHandler<DisplayInformation,Object>"
        },
        {
          "Name": "DisplayContentsInvalidated",
          "Type": "TypedEventHandler<DisplayInformation,Object>",
          "IsStatic": true
        },
        {
          "Name": "DpiChanged",
          "Type": "TypedEventHandler<DisplayInformation,Object>"
        },
        {
          "Name": "OrientationChanged",
          "Type": "TypedEventHandler<DisplayInformation,Object>"
        },
        {
          "Name": "StereoEnabledChanged",
          "Type": "TypedEventHandler<DisplayInformation,Object>"
        }
      ],
      "Name": "Windows.Graphics.Display.DisplayInformation"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AutoRotationPreferences",
          "Type": "DisplayOrientations",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CurrentOrientation",
          "Type": "DisplayOrientations",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LogicalDpi",
          "Type": "Single",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "NativeOrientation",
          "Type": "DisplayOrientations",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ResolutionScale",
          "Type": "ResolutionScale",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StereoEnabled",
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetColorProfileAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IRandomAccessStream>"
        }
      ],
      "Events": [
        {
          "Name": "ColorProfileChanged",
          "Type": "DisplayPropertiesEventHandler",
          "IsStatic": true
        },
        {
          "Name": "DisplayContentsInvalidated",
          "Type": "DisplayPropertiesEventHandler",
          "IsStatic": true
        },
        {
          "Name": "LogicalDpiChanged",
          "Type": "DisplayPropertiesEventHandler",
          "IsStatic": true
        },
        {
          "Name": "OrientationChanged",
          "Type": "DisplayPropertiesEventHandler",
          "IsStatic": true
        },
        {
          "Name": "StereoEnabledChanged",
          "Type": "DisplayPropertiesEventHandler",
          "IsStatic": true
        }
      ],
      "Name": "Windows.Graphics.Display.DisplayProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CodecId",
          "Type": "Guid",
          "IsGet": true
        },
        {
          "Name": "FileExtensions",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        },
        {
          "Name": "FriendlyName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "MimeTypes",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.BitmapCodecInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBitmapFrame"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BitmapAlphaMode",
          "Type": "BitmapAlphaMode",
          "IsGet": true
        },
        {
          "Name": "BitmapContainerProperties",
          "Type": "BitmapPropertiesView",
          "IsGet": true
        },
        {
          "Name": "BitmapPixelFormat",
          "Type": "BitmapPixelFormat",
          "IsGet": true
        },
        {
          "Name": "BitmapProperties",
          "Type": "BitmapPropertiesView",
          "IsGet": true
        },
        {
          "Name": "BmpDecoderId",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DecoderInformation",
          "Type": "BitmapCodecInformation",
          "IsGet": true
        },
        {
          "Name": "DpiX",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "DpiY",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "FrameCount",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "GifDecoderId",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IcoDecoderId",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "JpegDecoderId",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "JpegXRDecoderId",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OrientedPixelHeight",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "OrientedPixelWidth",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "PixelHeight",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "PixelWidth",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "PngDecoderId",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TiffDecoderId",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BitmapDecoder>",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            }
          ]
        },
        {
          "Name": "CreateAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BitmapDecoder>",
          "Parameters": [
            {
              "Name": "decoderId",
              "Type": "Guid"
            },
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            }
          ]
        },
        {
          "Name": "GetDecoderInformationEnumerator",
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<BitmapCodecInformation>"
        },
        {
          "Name": "GetFrameAsync",
          "ReturnType": "IAsyncOperation<BitmapFrame>",
          "Parameters": [
            {
              "Name": "frameIndex",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetPixelDataAsync",
          "ReturnType": "IAsyncOperation<PixelDataProvider>"
        },
        {
          "Name": "GetPixelDataAsync",
          "ReturnType": "IAsyncOperation<PixelDataProvider>",
          "Parameters": [
            {
              "Name": "pixelFormat",
              "Type": "BitmapPixelFormat"
            },
            {
              "Name": "alphaMode",
              "Type": "BitmapAlphaMode"
            },
            {
              "Name": "transform",
              "Type": "BitmapTransform"
            },
            {
              "Name": "exifOrientationMode",
              "Type": "ExifOrientationMode"
            },
            {
              "Name": "colorManagementMode",
              "Type": "ColorManagementMode"
            }
          ]
        },
        {
          "Name": "GetPreviewAsync",
          "ReturnType": "IAsyncOperation<ImageStream>"
        },
        {
          "Name": "GetThumbnailAsync",
          "ReturnType": "IAsyncOperation<ImageStream>"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.BitmapDecoder"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BitmapContainerProperties",
          "Type": "BitmapProperties",
          "IsGet": true
        },
        {
          "Name": "BitmapProperties",
          "Type": "BitmapProperties",
          "IsGet": true
        },
        {
          "Name": "BitmapTransform",
          "Type": "BitmapTransform",
          "IsGet": true
        },
        {
          "Name": "BmpEncoderId",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "EncoderInformation",
          "Type": "BitmapCodecInformation",
          "IsGet": true
        },
        {
          "Name": "GeneratedThumbnailHeight",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GeneratedThumbnailWidth",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GifEncoderId",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsThumbnailGenerated",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "JpegEncoderId",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "JpegXREncoderId",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PngEncoderId",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TiffEncoderId",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BitmapEncoder>",
          "Parameters": [
            {
              "Name": "encoderId",
              "Type": "Guid"
            },
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            }
          ]
        },
        {
          "Name": "CreateAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BitmapEncoder>",
          "Parameters": [
            {
              "Name": "encoderId",
              "Type": "Guid"
            },
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            },
            {
              "Name": "encodingOptions",
              "Type": "IEnumerable<KeyValuePair<String,BitmapTypedValue>>"
            }
          ]
        },
        {
          "Name": "CreateForInPlacePropertyEncodingAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BitmapEncoder>",
          "Parameters": [
            {
              "Name": "bitmapDecoder",
              "Type": "BitmapDecoder"
            }
          ]
        },
        {
          "Name": "CreateForTranscodingAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BitmapEncoder>",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            },
            {
              "Name": "bitmapDecoder",
              "Type": "BitmapDecoder"
            }
          ]
        },
        {
          "Name": "FlushAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "GetEncoderInformationEnumerator",
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<BitmapCodecInformation>"
        },
        {
          "Name": "GoToNextFrameAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "GoToNextFrameAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "encodingOptions",
              "Type": "IEnumerable<KeyValuePair<String,BitmapTypedValue>>"
            }
          ]
        },
        {
          "Name": "SetPixelData",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pixelFormat",
              "Type": "BitmapPixelFormat"
            },
            {
              "Name": "alphaMode",
              "Type": "BitmapAlphaMode"
            },
            {
              "Name": "width",
              "Type": "UInt32"
            },
            {
              "Name": "height",
              "Type": "UInt32"
            },
            {
              "Name": "dpiX",
              "Type": "Double"
            },
            {
              "Name": "dpiY",
              "Type": "Double"
            },
            {
              "Name": "pixels",
              "Type": "Byte[]"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.BitmapEncoder"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBitmapFrame"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BitmapAlphaMode",
          "Type": "BitmapAlphaMode",
          "IsGet": true
        },
        {
          "Name": "BitmapPixelFormat",
          "Type": "BitmapPixelFormat",
          "IsGet": true
        },
        {
          "Name": "BitmapProperties",
          "Type": "BitmapPropertiesView",
          "IsGet": true
        },
        {
          "Name": "DpiX",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "DpiY",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "OrientedPixelHeight",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "OrientedPixelWidth",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "PixelHeight",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "PixelWidth",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetPixelDataAsync",
          "ReturnType": "IAsyncOperation<PixelDataProvider>"
        },
        {
          "Name": "GetPixelDataAsync",
          "ReturnType": "IAsyncOperation<PixelDataProvider>",
          "Parameters": [
            {
              "Name": "pixelFormat",
              "Type": "BitmapPixelFormat"
            },
            {
              "Name": "alphaMode",
              "Type": "BitmapAlphaMode"
            },
            {
              "Name": "transform",
              "Type": "BitmapTransform"
            },
            {
              "Name": "exifOrientationMode",
              "Type": "ExifOrientationMode"
            },
            {
              "Name": "colorManagementMode",
              "Type": "ColorManagementMode"
            }
          ]
        },
        {
          "Name": "GetThumbnailAsync",
          "ReturnType": "IAsyncOperation<ImageStream>"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.BitmapFrame"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBitmapPropertiesView"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetPropertiesAsync",
          "ReturnType": "IAsyncOperation<BitmapPropertySet>",
          "Parameters": [
            {
              "Name": "propertiesToRetrieve",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "SetPropertiesAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "propertiesToSet",
              "Type": "IEnumerable<KeyValuePair<String,BitmapTypedValue>>"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.BitmapProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBitmapPropertiesView"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetPropertiesAsync",
          "ReturnType": "IAsyncOperation<BitmapPropertySet>",
          "Parameters": [
            {
              "Name": "propertiesToRetrieve",
              "Type": "IEnumerable<String>"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.BitmapPropertiesView"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,BitmapTypedValue>>",
        "IDictionary<String,BitmapTypedValue>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,BitmapTypedValue>>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.BitmapPropertySet"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Bounds",
          "Type": "BitmapBounds",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Flip",
          "Type": "BitmapFlip",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "InterpolationMode",
          "Type": "BitmapInterpolationMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Rotation",
          "Type": "BitmapRotation",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ScaledHeight",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ScaledWidth",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.BitmapTransform"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            },
            {
              "Name": "type",
              "Type": "PropertyType"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Type",
          "Type": "PropertyType",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "Object",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.BitmapTypedValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContentTypeProvider",
        "IDisposable",
        "IInputStream",
        "IOutputStream",
        "IRandomAccessStream",
        "IRandomAccessStreamWithContentType"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CanRead",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "CanWrite",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "ContentType",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "UInt64",
          "IsGet": true
        },
        {
          "Name": "Size",
          "Type": "UInt64",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CloneStream",
          "ReturnType": "IRandomAccessStream"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "FlushAsync",
          "ReturnType": "IAsyncOperation<Boolean>"
        },
        {
          "Name": "GetInputStreamAt",
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "GetOutputStreamAt",
          "ReturnType": "IOutputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "ReadAsync",
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "InputStreamOptions"
            }
          ]
        },
        {
          "Name": "Seek",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "WriteAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.ImageStream"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "DetachPixelData",
          "ReturnType": "Byte[]"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.PixelDataProvider"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContentTypeProvider",
        "IDisposable",
        "IInputStream",
        "IOutputStream",
        "IRandomAccessStream",
        "IRandomAccessStreamWithContentType"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CanRead",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "CanWrite",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "ContentType",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Height",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "UInt64",
          "IsGet": true
        },
        {
          "Name": "Size",
          "Type": "UInt64",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Width",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CloneStream",
          "ReturnType": "IRandomAccessStream"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "FlushAsync",
          "ReturnType": "IAsyncOperation<Boolean>"
        },
        {
          "Name": "GetInputStreamAt",
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "GetOutputStreamAt",
          "ReturnType": "IOutputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "ReadAsync",
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "InputStreamOptions"
            }
          ]
        },
        {
          "Name": "Seek",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "WriteAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Capture.CapturedFrame"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Exposure",
          "Type": "Nullable<TimeSpan>",
          "IsGet": true
        },
        {
          "Name": "ExposureCompensation",
          "Type": "Nullable<Single>",
          "IsGet": true
        },
        {
          "Name": "Flashed",
          "Type": "Nullable<Boolean>",
          "IsGet": true
        },
        {
          "Name": "FlashPowerPercent",
          "Type": "Nullable<Single>",
          "IsGet": true
        },
        {
          "Name": "Focus",
          "Type": "Nullable<UInt32>",
          "IsGet": true
        },
        {
          "Name": "IsoSpeed",
          "Type": "Nullable<UInt32>",
          "IsGet": true
        },
        {
          "Name": "SceneMode",
          "Type": "Nullable<CaptureSceneMode>",
          "IsGet": true
        },
        {
          "Name": "WhiteBalance",
          "Type": "Nullable<UInt32>",
          "IsGet": true
        },
        {
          "Name": "ZoomFactor",
          "Type": "Nullable<Single>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Capture.CapturedFrameControlValues"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Frame",
          "Type": "CapturedFrame",
          "IsGet": true
        },
        {
          "Name": "Thumbnail",
          "Type": "CapturedFrame",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Capture.CapturedPhoto"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CapturedFrameControlValues",
          "Type": "CapturedFrameControlValues",
          "IsGet": true
        },
        {
          "Name": "CaptureTimeOffset",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "Frame",
          "Type": "CapturedFrame",
          "IsGet": true
        },
        {
          "Name": "UsedFrameControllerIndex",
          "Type": "Nullable<UInt32>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Capture.Core.VariablePhotoCapturedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "FinishAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "StartAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "StopAsync",
          "ReturnType": "IAsyncAction"
        }
      ],
      "Events": [
        {
          "Name": "PhotoCaptured",
          "Type": "TypedEventHandler<VariablePhotoSequenceCapture,VariablePhotoCapturedEventArgs>"
        },
        {
          "Name": "Stopped",
          "Type": "TypedEventHandler<VariablePhotoSequenceCapture,Object>"
        }
      ],
      "Name": "Windows.Media.Capture.Core.VariablePhotoSequenceCapture"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "FinishAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "StartAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "StopAsync",
          "ReturnType": "IAsyncAction"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Capture.LowLagMediaRecording"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CaptureAsync",
          "ReturnType": "IAsyncOperation<CapturedPhoto>"
        },
        {
          "Name": "FinishAsync",
          "ReturnType": "IAsyncAction"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Capture.LowLagPhotoCapture"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "FinishAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "StartAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "StopAsync",
          "ReturnType": "IAsyncAction"
        }
      ],
      "Events": [
        {
          "Name": "PhotoCaptured",
          "Type": "TypedEventHandler<LowLagPhotoSequenceCapture,PhotoCapturedEventArgs>"
        }
      ],
      "Name": "Windows.Media.Capture.LowLagPhotoSequenceCapture"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AudioDeviceController",
          "Type": "AudioDeviceController",
          "IsGet": true
        },
        {
          "Name": "MediaCaptureSettings",
          "Type": "MediaCaptureSettings",
          "IsGet": true
        },
        {
          "Name": "VideoDeviceController",
          "Type": "VideoDeviceController",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AddEffectAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            },
            {
              "Name": "effectActivationID",
              "Type": "String"
            },
            {
              "Name": "effectSettings",
              "Type": "IPropertySet"
            }
          ]
        },
        {
          "Name": "CapturePhotoToStorageFileAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "type",
              "Type": "ImageEncodingProperties"
            },
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "CapturePhotoToStreamAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "type",
              "Type": "ImageEncodingProperties"
            },
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            }
          ]
        },
        {
          "Name": "ClearEffectsAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            }
          ]
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "GetEncoderProperty",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            },
            {
              "Name": "propertyId",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "GetPreviewMirroring",
          "ReturnType": "Boolean"
        },
        {
          "Name": "GetPreviewRotation",
          "ReturnType": "VideoRotation"
        },
        {
          "Name": "GetRecordRotation",
          "ReturnType": "VideoRotation"
        },
        {
          "Name": "InitializeAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "InitializeAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "mediaCaptureInitializationSettings",
              "Type": "MediaCaptureInitializationSettings"
            }
          ]
        },
        {
          "Name": "PrepareLowLagPhotoCaptureAsync",
          "ReturnType": "IAsyncOperation<LowLagPhotoCapture>",
          "Parameters": [
            {
              "Name": "type",
              "Type": "ImageEncodingProperties"
            }
          ]
        },
        {
          "Name": "PrepareLowLagPhotoSequenceCaptureAsync",
          "ReturnType": "IAsyncOperation<LowLagPhotoSequenceCapture>",
          "Parameters": [
            {
              "Name": "type",
              "Type": "ImageEncodingProperties"
            }
          ]
        },
        {
          "Name": "PrepareLowLagRecordToCustomSinkAsync",
          "ReturnType": "IAsyncOperation<LowLagMediaRecording>",
          "Parameters": [
            {
              "Name": "encodingProfile",
              "Type": "MediaEncodingProfile"
            },
            {
              "Name": "customMediaSink",
              "Type": "IMediaExtension"
            }
          ]
        },
        {
          "Name": "PrepareLowLagRecordToCustomSinkAsync",
          "ReturnType": "IAsyncOperation<LowLagMediaRecording>",
          "Parameters": [
            {
              "Name": "encodingProfile",
              "Type": "MediaEncodingProfile"
            },
            {
              "Name": "customSinkActivationId",
              "Type": "String"
            },
            {
              "Name": "customSinkSettings",
              "Type": "IPropertySet"
            }
          ]
        },
        {
          "Name": "PrepareLowLagRecordToStorageFileAsync",
          "ReturnType": "IAsyncOperation<LowLagMediaRecording>",
          "Parameters": [
            {
              "Name": "encodingProfile",
              "Type": "MediaEncodingProfile"
            },
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "PrepareLowLagRecordToStreamAsync",
          "ReturnType": "IAsyncOperation<LowLagMediaRecording>",
          "Parameters": [
            {
              "Name": "encodingProfile",
              "Type": "MediaEncodingProfile"
            },
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            }
          ]
        },
        {
          "Name": "PrepareVariablePhotoSequenceCaptureAsync",
          "ReturnType": "IAsyncOperation<VariablePhotoSequenceCapture>",
          "Parameters": [
            {
              "Name": "type",
              "Type": "ImageEncodingProperties"
            }
          ]
        },
        {
          "Name": "SetEncoderProperty",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            },
            {
              "Name": "propertyId",
              "Type": "Guid"
            },
            {
              "Name": "propertyValue",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SetEncodingPropertiesAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            },
            {
              "Name": "mediaEncodingProperties",
              "Type": "IMediaEncodingProperties"
            },
            {
              "Name": "encoderProperties",
              "Type": "MediaPropertySet"
            }
          ]
        },
        {
          "Name": "SetPreviewMirroring",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetPreviewRotation",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "VideoRotation"
            }
          ]
        },
        {
          "Name": "SetRecordRotation",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "VideoRotation"
            }
          ]
        },
        {
          "Name": "StartPreviewAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "StartPreviewToCustomSinkAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "encodingProfile",
              "Type": "MediaEncodingProfile"
            },
            {
              "Name": "customMediaSink",
              "Type": "IMediaExtension"
            }
          ]
        },
        {
          "Name": "StartPreviewToCustomSinkAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "encodingProfile",
              "Type": "MediaEncodingProfile"
            },
            {
              "Name": "customSinkActivationId",
              "Type": "String"
            },
            {
              "Name": "customSinkSettings",
              "Type": "IPropertySet"
            }
          ]
        },
        {
          "Name": "StartRecordToCustomSinkAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "encodingProfile",
              "Type": "MediaEncodingProfile"
            },
            {
              "Name": "customMediaSink",
              "Type": "IMediaExtension"
            }
          ]
        },
        {
          "Name": "StartRecordToCustomSinkAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "encodingProfile",
              "Type": "MediaEncodingProfile"
            },
            {
              "Name": "customSinkActivationId",
              "Type": "String"
            },
            {
              "Name": "customSinkSettings",
              "Type": "IPropertySet"
            }
          ]
        },
        {
          "Name": "StartRecordToStorageFileAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "encodingProfile",
              "Type": "MediaEncodingProfile"
            },
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "StartRecordToStreamAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "encodingProfile",
              "Type": "MediaEncodingProfile"
            },
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            }
          ]
        },
        {
          "Name": "StopPreviewAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "StopRecordAsync",
          "ReturnType": "IAsyncAction"
        }
      ],
      "Events": [
        {
          "Name": "Failed",
          "Type": "MediaCaptureFailedEventHandler"
        },
        {
          "Name": "FocusChanged",
          "Type": "TypedEventHandler<MediaCapture,MediaCaptureFocusChangedEventArgs>"
        },
        {
          "Name": "PhotoConfirmationCaptured",
          "Type": "TypedEventHandler<MediaCapture,PhotoConfirmationCapturedEventArgs>"
        },
        {
          "Name": "RecordLimitationExceeded",
          "Type": "RecordLimitationExceededEventHandler"
        }
      ],
      "Name": "Windows.Media.Capture.MediaCapture"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Code",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Message",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Capture.MediaCaptureFailedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FocusState",
          "Type": "MediaCaptureFocusState",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Capture.MediaCaptureFocusChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AudioDeviceId",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AudioProcessing",
          "Type": "AudioProcessing",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AudioSource",
          "Type": "IMediaSource",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MediaCategory",
          "Type": "MediaCategory",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PhotoCaptureSource",
          "Type": "PhotoCaptureSource",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StreamingCaptureMode",
          "Type": "StreamingCaptureMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VideoDeviceId",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VideoSource",
          "Type": "IMediaSource",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Capture.MediaCaptureInitializationSettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AudioDeviceId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "AudioProcessing",
          "Type": "AudioProcessing",
          "IsGet": true
        },
        {
          "Name": "CameraSoundRequiredForRegion",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "ConcurrentRecordAndPhotoSequenceSupported",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "ConcurrentRecordAndPhotoSupported",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Horizontal35mmEquivalentFocalLength",
          "Type": "Nullable<UInt32>",
          "IsGet": true
        },
        {
          "Name": "MediaCategory",
          "Type": "MediaCategory",
          "IsGet": true
        },
        {
          "Name": "PhotoCaptureSource",
          "Type": "PhotoCaptureSource",
          "IsGet": true
        },
        {
          "Name": "PitchOffsetDegrees",
          "Type": "Nullable<Int32>",
          "IsGet": true
        },
        {
          "Name": "StreamingCaptureMode",
          "Type": "StreamingCaptureMode",
          "IsGet": true
        },
        {
          "Name": "Vertical35mmEquivalentFocalLength",
          "Type": "Nullable<UInt32>",
          "IsGet": true
        },
        {
          "Name": "VideoDeviceCharacteristic",
          "Type": "VideoDeviceCharacteristic",
          "IsGet": true
        },
        {
          "Name": "VideoDeviceId",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Capture.MediaCaptureSettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CaptureTimeOffset",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "Frame",
          "Type": "CapturedFrame",
          "IsGet": true
        },
        {
          "Name": "Thumbnail",
          "Type": "CapturedFrame",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Capture.PhotoCapturedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CaptureTimeOffset",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "Frame",
          "Type": "CapturedFrame",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Capture.PhotoConfirmationCapturedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AudioSource",
          "Type": "IMediaSource",
          "IsGet": true
        },
        {
          "Name": "IsAudioSuspended",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsVideoSuspended",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "VideoSource",
          "Type": "IMediaSource",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetForCurrentView",
          "IsStatic": true,
          "ReturnType": "ScreenCapture"
        }
      ],
      "Events": [
        {
          "Name": "SourceSuspensionChanged",
          "Type": "TypedEventHandler<ScreenCapture,SourceSuspensionChangedEventArgs>"
        }
      ],
      "Name": "Windows.Media.Capture.ScreenCapture"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsAudioSuspended",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsVideoSuspended",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Capture.SourceSuspensionChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IMediaStreamDescriptor"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "encodingProperties",
              "Type": "AudioEncodingProperties"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "EncodingProperties",
          "Type": "AudioEncodingProperties",
          "IsGet": true
        },
        {
          "Name": "IsSelected",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.AudioStreamDescriptor"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Buffer",
          "Type": "Buffer",
          "IsGet": true
        },
        {
          "Name": "DecodeTimestamp",
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Discontinuous",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Duration",
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ExtendedProperties",
          "Type": "MediaStreamSamplePropertySet",
          "IsGet": true
        },
        {
          "Name": "KeyFrame",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Protection",
          "Type": "MediaStreamSampleProtectionProperties",
          "IsGet": true
        },
        {
          "Name": "Timestamp",
          "Type": "TimeSpan",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateFromBuffer",
          "IsStatic": true,
          "ReturnType": "MediaStreamSample",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "timestamp",
              "Type": "TimeSpan"
            }
          ]
        },
        {
          "Name": "CreateFromStreamAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MediaStreamSample>",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IInputStream"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "timestamp",
              "Type": "TimeSpan"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "Processed",
          "Type": "TypedEventHandler<MediaStreamSample,Object>"
        }
      ],
      "Name": "Windows.Media.Core.MediaStreamSample"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<Guid,Object>>",
        "IDictionary<Guid,Object>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<Guid,Object>>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSamplePropertySet"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetInitializationVector",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]&",
              "Out": true
            }
          ]
        },
        {
          "Name": "GetKeyIdentifier",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]&",
              "Out": true
            }
          ]
        },
        {
          "Name": "GetSubSampleMapping",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]&",
              "Out": true
            }
          ]
        },
        {
          "Name": "SetInitializationVector",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]"
            }
          ]
        },
        {
          "Name": "SetKeyIdentifier",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]"
            }
          ]
        },
        {
          "Name": "SetSubSampleMapping",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSampleProtectionProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IMediaSource"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "descriptor",
              "Type": "IMediaStreamDescriptor"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "descriptor",
              "Type": "IMediaStreamDescriptor"
            },
            {
              "Name": "descriptor2",
              "Type": "IMediaStreamDescriptor"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "BufferTime",
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CanSeek",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Duration",
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MediaProtectionManager",
          "Type": "MediaProtectionManager",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MusicProperties",
          "Type": "MusicProperties",
          "IsGet": true
        },
        {
          "Name": "Thumbnail",
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VideoProperties",
          "Type": "VideoProperties",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AddProtectionKey",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "streamDescriptor",
              "Type": "IMediaStreamDescriptor"
            },
            {
              "Name": "keyIdentifier",
              "Type": "Byte[]"
            },
            {
              "Name": "licenseData",
              "Type": "Byte[]"
            }
          ]
        },
        {
          "Name": "AddStreamDescriptor",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "descriptor",
              "Type": "IMediaStreamDescriptor"
            }
          ]
        },
        {
          "Name": "NotifyError",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "errorStatus",
              "Type": "MediaStreamSourceErrorStatus"
            }
          ]
        },
        {
          "Name": "SetBufferedRange",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "startOffset",
              "Type": "TimeSpan"
            },
            {
              "Name": "endOffset",
              "Type": "TimeSpan"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "Closed",
          "Type": "TypedEventHandler<MediaStreamSource,MediaStreamSourceClosedEventArgs>"
        },
        {
          "Name": "Paused",
          "Type": "TypedEventHandler<MediaStreamSource,Object>"
        },
        {
          "Name": "SampleRequested",
          "Type": "TypedEventHandler<MediaStreamSource,MediaStreamSourceSampleRequestedEventArgs>"
        },
        {
          "Name": "Starting",
          "Type": "TypedEventHandler<MediaStreamSource,MediaStreamSourceStartingEventArgs>"
        },
        {
          "Name": "SwitchStreamsRequested",
          "Type": "TypedEventHandler<MediaStreamSource,MediaStreamSourceSwitchStreamsRequestedEventArgs>"
        }
      ],
      "Name": "Windows.Media.Core.MediaStreamSource"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Request",
          "Type": "MediaStreamSourceClosedRequest",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSourceClosedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Reason",
          "Type": "MediaStreamSourceClosedReason",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSourceClosedRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Sample",
          "Type": "MediaStreamSample",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StreamDescriptor",
          "Type": "IMediaStreamDescriptor",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDeferral",
          "ReturnType": "MediaStreamSourceSampleRequestDeferral"
        },
        {
          "Name": "ReportSampleProgress",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "progress",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSourceSampleRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Complete",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSourceSampleRequestDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Request",
          "Type": "MediaStreamSourceSampleRequest",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSourceSampleRequestedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Request",
          "Type": "MediaStreamSourceStartingRequest",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSourceStartingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "StartPosition",
          "Type": "Nullable<TimeSpan>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDeferral",
          "ReturnType": "MediaStreamSourceStartingRequestDeferral"
        },
        {
          "Name": "SetActualStartPosition",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "TimeSpan"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSourceStartingRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Complete",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSourceStartingRequestDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NewStreamDescriptor",
          "Type": "IMediaStreamDescriptor",
          "IsGet": true
        },
        {
          "Name": "OldStreamDescriptor",
          "Type": "IMediaStreamDescriptor",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDeferral",
          "ReturnType": "MediaStreamSourceSwitchStreamsRequestDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSourceSwitchStreamsRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Complete",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSourceSwitchStreamsRequestDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Request",
          "Type": "MediaStreamSourceSwitchStreamsRequest",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSourceSwitchStreamsRequestedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IMediaStreamDescriptor"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "encodingProperties",
              "Type": "VideoEncodingProperties"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "EncodingProperties",
          "Type": "VideoEncodingProperties",
          "IsGet": true
        },
        {
          "Name": "IsSelected",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.VideoStreamDescriptor"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IMediaDeviceController"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Muted",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VolumePercent",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetAvailableMediaStreamProperties",
          "ReturnType": "IReadOnlyList<IMediaEncodingProperties>",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            }
          ]
        },
        {
          "Name": "GetMediaStreamProperties",
          "ReturnType": "IMediaEncodingProperties",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            }
          ]
        },
        {
          "Name": "SetMediaStreamPropertiesAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            },
            {
              "Name": "mediaEncodingProperties",
              "Type": "IMediaEncodingProperties"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.AudioDeviceController"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Exposure",
          "Type": "FrameExposureCapabilities",
          "IsGet": true
        },
        {
          "Name": "ExposureCompensation",
          "Type": "FrameExposureCompensationCapabilities",
          "IsGet": true
        },
        {
          "Name": "Focus",
          "Type": "FrameFocusCapabilities",
          "IsGet": true
        },
        {
          "Name": "IsoSpeed",
          "Type": "FrameIsoSpeedCapabilities",
          "IsGet": true
        },
        {
          "Name": "PhotoConfirmationSupported",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.Core.FrameControlCapabilities"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ExposureCompensationControl",
          "Type": "FrameExposureCompensationControl",
          "IsGet": true
        },
        {
          "Name": "ExposureControl",
          "Type": "FrameExposureControl",
          "IsGet": true
        },
        {
          "Name": "FocusControl",
          "Type": "FrameFocusControl",
          "IsGet": true
        },
        {
          "Name": "IsoSpeedControl",
          "Type": "FrameIsoSpeedControl",
          "IsGet": true
        },
        {
          "Name": "PhotoConfirmationEnabled",
          "Type": "Nullable<Boolean>",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.Core.FrameController"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Max",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "Min",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "Step",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "Supported",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.Core.FrameExposureCapabilities"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Max",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "Min",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "Step",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "Supported",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.Core.FrameExposureCompensationCapabilities"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Value",
          "Type": "Nullable<Single>",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.Core.FrameExposureCompensationControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Auto",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Value",
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.Core.FrameExposureControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Max",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Min",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Step",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Supported",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.Core.FrameFocusCapabilities"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Value",
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.Core.FrameFocusControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Max",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Min",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Step",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Supported",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.Core.FrameIsoSpeedCapabilities"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Auto",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Value",
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.Core.FrameIsoSpeedControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DesiredFrameControllers",
          "Type": "IList<FrameController>",
          "IsGet": true
        },
        {
          "Name": "FrameCapabilities",
          "Type": "FrameControlCapabilities",
          "IsGet": true
        },
        {
          "Name": "MaxPhotosPerSecond",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "PhotosPerSecondLimit",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Supported",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetCurrentFrameRate",
          "ReturnType": "MediaRatio"
        },
        {
          "Name": "GetHighestConcurrentFrameRate",
          "ReturnType": "MediaRatio",
          "Parameters": [
            {
              "Name": "captureProperties",
              "Type": "IMediaEncodingProperties"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.Core.VariablePhotoSequenceController"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDefaultAudioDeviceChangedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Role",
          "Type": "AudioDeviceRole",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.DefaultAudioCaptureDeviceChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDefaultAudioDeviceChangedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Role",
          "Type": "AudioDeviceRole",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.DefaultAudioRenderDeviceChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Max",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "Min",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "Step",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "Supported",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "Single",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "SetValueAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Single"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.ExposureCompensationControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Auto",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Max",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "Min",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "Step",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "Supported",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "TimeSpan",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "SetAutoAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetValueAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "shutterDuration",
              "Type": "TimeSpan"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.ExposureControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AssistantLightEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AssistantLightSupported",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Auto",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Enabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PowerPercent",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PowerSupported",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "RedEyeReduction",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RedEyeReductionSupported",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Supported",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.FlashControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FocusChangedSupported",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "FocusState",
          "Type": "MediaCaptureFocusState",
          "IsGet": true
        },
        {
          "Name": "Max",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Min",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Mode",
          "Type": "FocusMode",
          "IsGet": true
        },
        {
          "Name": "Preset",
          "Type": "FocusPreset",
          "IsGet": true
        },
        {
          "Name": "Step",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Supported",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "SupportedFocusDistances",
          "Type": "IReadOnlyList<ManualFocusDistance>",
          "IsGet": true
        },
        {
          "Name": "SupportedFocusModes",
          "Type": "IReadOnlyList<FocusMode>",
          "IsGet": true
        },
        {
          "Name": "SupportedFocusRanges",
          "Type": "IReadOnlyList<AutoFocusRange>",
          "IsGet": true
        },
        {
          "Name": "SupportedPresets",
          "Type": "IReadOnlyList<FocusPreset>",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "WaitForFocusSupported",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Configure",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "settings",
              "Type": "FocusSettings"
            }
          ]
        },
        {
          "Name": "FocusAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "LockAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "SetPresetAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "preset",
              "Type": "FocusPreset"
            }
          ]
        },
        {
          "Name": "SetPresetAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "preset",
              "Type": "FocusPreset"
            },
            {
              "Name": "completeBeforeFocus",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetValueAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "focus",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "UnlockAsync",
          "ReturnType": "IAsyncAction"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.FocusControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AutoFocusRange",
          "Type": "AutoFocusRange",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisableDriverFallback",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Distance",
          "Type": "Nullable<ManualFocusDistance>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Mode",
          "Type": "FocusMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Value",
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "WaitForFocus",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.FocusSettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Auto",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Max",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Min",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Preset",
          "Type": "IsoSpeedPreset",
          "IsGet": true
        },
        {
          "Name": "Step",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Supported",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "SupportedPresets",
          "Type": "IReadOnlyList<IsoSpeedPreset>",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "SetAutoAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "SetPresetAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "preset",
              "Type": "IsoSpeedPreset"
            }
          ]
        },
        {
          "Name": "SetValueAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "isoSpeed",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.IsoSpeedControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DesiredThumbnailSize",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HardwareAcceleratedThumbnailSupported",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "ThumbnailEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ThumbnailFormat",
          "Type": "MediaThumbnailFormat",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetCurrentFrameRate",
          "ReturnType": "MediaRatio"
        },
        {
          "Name": "GetHighestConcurrentFrameRate",
          "ReturnType": "MediaRatio",
          "Parameters": [
            {
              "Name": "captureProperties",
              "Type": "IMediaEncodingProperties"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.LowLagPhotoControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DesiredThumbnailSize",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HardwareAcceleratedThumbnailSupported",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "MaxPastPhotos",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "MaxPhotosPerSecond",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "PastPhotoLimit",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PhotosPerSecondLimit",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Supported",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "ThumbnailEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ThumbnailFormat",
          "Type": "MediaThumbnailFormat",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetCurrentFrameRate",
          "ReturnType": "MediaRatio"
        },
        {
          "Name": "GetHighestConcurrentFrameRate",
          "ReturnType": "MediaRatio",
          "Parameters": [
            {
              "Name": "captureProperties",
              "Type": "IMediaEncodingProperties"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.LowLagPhotoSequenceControl"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetAudioCaptureSelector",
          "IsStatic": true,
          "ReturnType": "String"
        },
        {
          "Name": "GetAudioRenderSelector",
          "IsStatic": true,
          "ReturnType": "String"
        },
        {
          "Name": "GetDefaultAudioCaptureId",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "role",
              "Type": "AudioDeviceRole"
            }
          ]
        },
        {
          "Name": "GetDefaultAudioRenderId",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "role",
              "Type": "AudioDeviceRole"
            }
          ]
        },
        {
          "Name": "GetVideoCaptureSelector",
          "IsStatic": true,
          "ReturnType": "String"
        }
      ],
      "Events": [
        {
          "Name": "DefaultAudioCaptureDeviceChanged",
          "Type": "TypedEventHandler<Object,DefaultAudioCaptureDeviceChangedEventArgs>",
          "IsStatic": true
        },
        {
          "Name": "DefaultAudioRenderDeviceChanged",
          "Type": "TypedEventHandler<Object,DefaultAudioRenderDeviceChangedEventArgs>",
          "IsStatic": true
        }
      ],
      "Name": "Windows.Media.Devices.MediaDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Capabilities",
          "Type": "MediaDeviceControlCapabilities",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "TryGetAuto",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Boolean&",
              "Out": true
            }
          ]
        },
        {
          "Name": "TryGetValue",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double&",
              "Out": true
            }
          ]
        },
        {
          "Name": "TrySetAuto",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "TrySetValue",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.MediaDeviceControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AutoModeSupported",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Default",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "Max",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "Min",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "Step",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "Supported",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.MediaDeviceControlCapabilities"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Enabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PixelFormat",
          "Type": "MediaPixelFormat",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Supported",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.PhotoConfirmationControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AutoExposureEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AutoFocusEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AutoWhiteBalanceEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Bounds",
          "Type": "Rect",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "BoundsNormalized",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Type",
          "Type": "RegionOfInterestType",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Weight",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.RegionOfInterest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AutoExposureSupported",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "AutoFocusSupported",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "AutoWhiteBalanceSupported",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "MaxRegions",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ClearRegionsAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "SetRegionsAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "regions",
              "Type": "IEnumerable<RegionOfInterest>"
            }
          ]
        },
        {
          "Name": "SetRegionsAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "regions",
              "Type": "IEnumerable<RegionOfInterest>"
            },
            {
              "Name": "lockValues",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.RegionsOfInterestControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "SupportedModes",
          "Type": "IReadOnlyList<CaptureSceneMode>",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "CaptureSceneMode",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "SetValueAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "sceneMode",
              "Type": "CaptureSceneMode"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.SceneModeControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Enabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PowerPercent",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PowerSupported",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Supported",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.TorchControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IMediaDeviceController"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BacklightCompensation",
          "Type": "MediaDeviceControl",
          "IsGet": true
        },
        {
          "Name": "Brightness",
          "Type": "MediaDeviceControl",
          "IsGet": true
        },
        {
          "Name": "Contrast",
          "Type": "MediaDeviceControl",
          "IsGet": true
        },
        {
          "Name": "Exposure",
          "Type": "MediaDeviceControl",
          "IsGet": true
        },
        {
          "Name": "ExposureCompensationControl",
          "Type": "ExposureCompensationControl",
          "IsGet": true
        },
        {
          "Name": "ExposureControl",
          "Type": "ExposureControl",
          "IsGet": true
        },
        {
          "Name": "FlashControl",
          "Type": "FlashControl",
          "IsGet": true
        },
        {
          "Name": "Focus",
          "Type": "MediaDeviceControl",
          "IsGet": true
        },
        {
          "Name": "FocusControl",
          "Type": "FocusControl",
          "IsGet": true
        },
        {
          "Name": "Hue",
          "Type": "MediaDeviceControl",
          "IsGet": true
        },
        {
          "Name": "IsoSpeedControl",
          "Type": "IsoSpeedControl",
          "IsGet": true
        },
        {
          "Name": "LowLagPhoto",
          "Type": "LowLagPhotoControl",
          "IsGet": true
        },
        {
          "Name": "LowLagPhotoSequence",
          "Type": "LowLagPhotoSequenceControl",
          "IsGet": true
        },
        {
          "Name": "Pan",
          "Type": "MediaDeviceControl",
          "IsGet": true
        },
        {
          "Name": "PhotoConfirmationControl",
          "Type": "PhotoConfirmationControl",
          "IsGet": true
        },
        {
          "Name": "PrimaryUse",
          "Type": "CaptureUse",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RegionsOfInterestControl",
          "Type": "RegionsOfInterestControl",
          "IsGet": true
        },
        {
          "Name": "Roll",
          "Type": "MediaDeviceControl",
          "IsGet": true
        },
        {
          "Name": "SceneModeControl",
          "Type": "SceneModeControl",
          "IsGet": true
        },
        {
          "Name": "Tilt",
          "Type": "MediaDeviceControl",
          "IsGet": true
        },
        {
          "Name": "TorchControl",
          "Type": "TorchControl",
          "IsGet": true
        },
        {
          "Name": "VariablePhotoSequenceController",
          "Type": "VariablePhotoSequenceController",
          "IsGet": true
        },
        {
          "Name": "WhiteBalance",
          "Type": "MediaDeviceControl",
          "IsGet": true
        },
        {
          "Name": "WhiteBalanceControl",
          "Type": "WhiteBalanceControl",
          "IsGet": true
        },
        {
          "Name": "Zoom",
          "Type": "MediaDeviceControl",
          "IsGet": true
        },
        {
          "Name": "ZoomControl",
          "Type": "ZoomControl",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetAvailableMediaStreamProperties",
          "ReturnType": "IReadOnlyList<IMediaEncodingProperties>",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            }
          ]
        },
        {
          "Name": "GetDeviceProperty",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "propertyId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetMediaStreamProperties",
          "ReturnType": "IMediaEncodingProperties",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            }
          ]
        },
        {
          "Name": "SetDeviceProperty",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "propertyId",
              "Type": "String"
            },
            {
              "Name": "propertyValue",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SetMediaStreamPropertiesAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            },
            {
              "Name": "mediaEncodingProperties",
              "Type": "IMediaEncodingProperties"
            }
          ]
        },
        {
          "Name": "TryGetPowerlineFrequency",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "PowerlineFrequency&",
              "Out": true
            }
          ]
        },
        {
          "Name": "TrySetPowerlineFrequency",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "PowerlineFrequency"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.VideoDeviceController"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Max",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Min",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Preset",
          "Type": "ColorTemperaturePreset",
          "IsGet": true
        },
        {
          "Name": "Step",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Supported",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "SetPresetAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "preset",
              "Type": "ColorTemperaturePreset"
            }
          ]
        },
        {
          "Name": "SetValueAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "temperature",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.WhiteBalanceControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Max",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "Min",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "Step",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "Supported",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.ZoomControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AudioEffectDefinitions",
          "Type": "IList<IAudioEffectDefinition>",
          "IsGet": true
        },
        {
          "Name": "Delay",
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OriginalDuration",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "TrimmedDuration",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "TrimTimeFromEnd",
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TrimTimeFromStart",
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UserData",
          "Type": "IDictionary<String,String>",
          "IsGet": true
        },
        {
          "Name": "Volume",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Clone",
          "ReturnType": "BackgroundAudioTrack"
        },
        {
          "Name": "CreateFromEmbeddedAudioTrack",
          "IsStatic": true,
          "ReturnType": "BackgroundAudioTrack",
          "Parameters": [
            {
              "Name": "embeddedAudioTrack",
              "Type": "EmbeddedAudioTrack"
            }
          ]
        },
        {
          "Name": "CreateFromFileAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BackgroundAudioTrack>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "GetAudioEncodingProperties",
          "ReturnType": "AudioEncodingProperties"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Editing.BackgroundAudioTrack"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetAudioEncodingProperties",
          "ReturnType": "AudioEncodingProperties"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Editing.EmbeddedAudioTrack"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AudioEffectDefinitions",
          "Type": "IList<IAudioEffectDefinition>",
          "IsGet": true
        },
        {
          "Name": "EmbeddedAudioTracks",
          "Type": "IReadOnlyList<EmbeddedAudioTrack>",
          "IsGet": true
        },
        {
          "Name": "EndTimeInComposition",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "OriginalDuration",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "SelectedEmbeddedAudioTrackIndex",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StartTimeInComposition",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "TrimmedDuration",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "TrimTimeFromEnd",
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TrimTimeFromStart",
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UserData",
          "Type": "IDictionary<String,String>",
          "IsGet": true
        },
        {
          "Name": "VideoEffectDefinitions",
          "Type": "IList<IVideoEffectDefinition>",
          "IsGet": true
        },
        {
          "Name": "Volume",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Clone",
          "ReturnType": "MediaClip"
        },
        {
          "Name": "CreateFromColor",
          "IsStatic": true,
          "ReturnType": "MediaClip",
          "Parameters": [
            {
              "Name": "color",
              "Type": "Color"
            },
            {
              "Name": "originalDuration",
              "Type": "TimeSpan"
            }
          ]
        },
        {
          "Name": "CreateFromFileAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MediaClip>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "CreateFromImageFileAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MediaClip>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "originalDuration",
              "Type": "TimeSpan"
            }
          ]
        },
        {
          "Name": "GetVideoEncodingProperties",
          "ReturnType": "VideoEncodingProperties"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Editing.MediaClip"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BackgroundAudioTracks",
          "Type": "IList<BackgroundAudioTrack>",
          "IsGet": true
        },
        {
          "Name": "Clips",
          "Type": "IList<MediaClip>",
          "IsGet": true
        },
        {
          "Name": "Duration",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "UserData",
          "Type": "IDictionary<String,String>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Clone",
          "ReturnType": "MediaComposition"
        },
        {
          "Name": "CreateDefaultEncodingProfile",
          "ReturnType": "MediaEncodingProfile"
        },
        {
          "Name": "GenerateMediaStreamSource",
          "ReturnType": "MediaStreamSource"
        },
        {
          "Name": "GenerateMediaStreamSource",
          "ReturnType": "MediaStreamSource",
          "Parameters": [
            {
              "Name": "encodingProfile",
              "Type": "MediaEncodingProfile"
            }
          ]
        },
        {
          "Name": "GeneratePreviewMediaStreamSource",
          "ReturnType": "MediaStreamSource",
          "Parameters": [
            {
              "Name": "scaledWidth",
              "Type": "Int32"
            },
            {
              "Name": "scaledHeight",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "GetThumbnailAsync",
          "ReturnType": "IAsyncOperation<ImageStream>",
          "Parameters": [
            {
              "Name": "timeFromStart",
              "Type": "TimeSpan"
            },
            {
              "Name": "scaledWidth",
              "Type": "Int32"
            },
            {
              "Name": "scaledHeight",
              "Type": "Int32"
            },
            {
              "Name": "framePrecision",
              "Type": "VideoFramePrecision"
            }
          ]
        },
        {
          "Name": "GetThumbnailsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<ImageStream>>",
          "Parameters": [
            {
              "Name": "timesFromStart",
              "Type": "IEnumerable<TimeSpan>"
            },
            {
              "Name": "scaledWidth",
              "Type": "Int32"
            },
            {
              "Name": "scaledHeight",
              "Type": "Int32"
            },
            {
              "Name": "framePrecision",
              "Type": "VideoFramePrecision"
            }
          ]
        },
        {
          "Name": "LoadAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MediaComposition>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "StorageFile"
            }
          ]
        },
        {
          "Name": "RenderToFileAsync",
          "ReturnType": "IAsyncOperationWithProgress<TranscodeFailureReason,Double>",
          "Parameters": [
            {
              "Name": "destination",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "RenderToFileAsync",
          "ReturnType": "IAsyncOperationWithProgress<TranscodeFailureReason,Double>",
          "Parameters": [
            {
              "Name": "destination",
              "Type": "IStorageFile"
            },
            {
              "Name": "trimmingPreference",
              "Type": "MediaTrimmingPreference"
            }
          ]
        },
        {
          "Name": "RenderToFileAsync",
          "ReturnType": "IAsyncOperationWithProgress<TranscodeFailureReason,Double>",
          "Parameters": [
            {
              "Name": "destination",
              "Type": "IStorageFile"
            },
            {
              "Name": "trimmingPreference",
              "Type": "MediaTrimmingPreference"
            },
            {
              "Name": "encodingProfile",
              "Type": "MediaEncodingProfile"
            }
          ]
        },
        {
          "Name": "SaveAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Editing.MediaComposition"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetAudioCaptureEffects",
          "ReturnType": "IReadOnlyList<AudioEffect>"
        }
      ],
      "Events": [
        {
          "Name": "AudioCaptureEffectsChanged",
          "Type": "TypedEventHandler<AudioCaptureEffectsManager,Object>"
        }
      ],
      "Name": "Windows.Media.Effects.AudioCaptureEffectsManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AudioEffectType",
          "Type": "AudioEffectType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Effects.AudioEffect"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IAudioEffectDefinition"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "props",
              "Type": "IPropertySet"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "ActivatableClassId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Properties",
          "Type": "IPropertySet",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Effects.AudioEffectDefinition"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateAudioCaptureEffectsManager",
          "IsStatic": true,
          "ReturnType": "AudioCaptureEffectsManager",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "MediaCategory"
            }
          ]
        },
        {
          "Name": "CreateAudioCaptureEffectsManager",
          "IsStatic": true,
          "ReturnType": "AudioCaptureEffectsManager",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "MediaCategory"
            },
            {
              "Name": "mode",
              "Type": "AudioProcessing"
            }
          ]
        },
        {
          "Name": "CreateAudioRenderEffectsManager",
          "IsStatic": true,
          "ReturnType": "AudioRenderEffectsManager",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "AudioRenderCategory"
            }
          ]
        },
        {
          "Name": "CreateAudioRenderEffectsManager",
          "IsStatic": true,
          "ReturnType": "AudioRenderEffectsManager",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "AudioRenderCategory"
            },
            {
              "Name": "mode",
              "Type": "AudioProcessing"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Effects.AudioEffectsManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "EffectsProviderSettingsLabel",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "EffectsProviderThumbnail",
          "Type": "IRandomAccessStreamWithContentType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetAudioRenderEffects",
          "ReturnType": "IReadOnlyList<AudioEffect>"
        },
        {
          "Name": "ShowSettingsUI",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "AudioRenderEffectsChanged",
          "Type": "TypedEventHandler<AudioRenderEffectsManager,Object>"
        }
      ],
      "Name": "Windows.Media.Effects.AudioRenderEffectsManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVideoEffectDefinition"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ActivatableClassId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Properties",
          "Type": "IPropertySet",
          "IsGet": true
        },
        {
          "Name": "TimeStretchRate",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Effects.SlowMotionEffectDefinition"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVideoEffectDefinition"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "props",
              "Type": "IPropertySet"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "ActivatableClassId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Properties",
          "Type": "IPropertySet",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Effects.VideoEffectDefinition"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Subtitle",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.ImageDisplayProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "RegisterAudioDecoder",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "inputSubtype",
              "Type": "Guid"
            },
            {
              "Name": "outputSubtype",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "RegisterAudioDecoder",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "inputSubtype",
              "Type": "Guid"
            },
            {
              "Name": "outputSubtype",
              "Type": "Guid"
            },
            {
              "Name": "configuration",
              "Type": "IPropertySet"
            }
          ]
        },
        {
          "Name": "RegisterAudioEncoder",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "inputSubtype",
              "Type": "Guid"
            },
            {
              "Name": "outputSubtype",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "RegisterAudioEncoder",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "inputSubtype",
              "Type": "Guid"
            },
            {
              "Name": "outputSubtype",
              "Type": "Guid"
            },
            {
              "Name": "configuration",
              "Type": "IPropertySet"
            }
          ]
        },
        {
          "Name": "RegisterByteStreamHandler",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "fileExtension",
              "Type": "String"
            },
            {
              "Name": "mimeType",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "RegisterByteStreamHandler",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "fileExtension",
              "Type": "String"
            },
            {
              "Name": "mimeType",
              "Type": "String"
            },
            {
              "Name": "configuration",
              "Type": "IPropertySet"
            }
          ]
        },
        {
          "Name": "RegisterSchemeHandler",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "scheme",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "RegisterSchemeHandler",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "scheme",
              "Type": "String"
            },
            {
              "Name": "configuration",
              "Type": "IPropertySet"
            }
          ]
        },
        {
          "Name": "RegisterVideoDecoder",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "inputSubtype",
              "Type": "Guid"
            },
            {
              "Name": "outputSubtype",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "RegisterVideoDecoder",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "inputSubtype",
              "Type": "Guid"
            },
            {
              "Name": "outputSubtype",
              "Type": "Guid"
            },
            {
              "Name": "configuration",
              "Type": "IPropertySet"
            }
          ]
        },
        {
          "Name": "RegisterVideoEncoder",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "inputSubtype",
              "Type": "Guid"
            },
            {
              "Name": "outputSubtype",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "RegisterVideoEncoder",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "inputSubtype",
              "Type": "Guid"
            },
            {
              "Name": "outputSubtype",
              "Type": "Guid"
            },
            {
              "Name": "configuration",
              "Type": "IPropertySet"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.MediaExtensionManager"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Bookmark",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.MediaMarkerTypes"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IMediaEncodingProperties"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Bitrate",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "BitsPerSample",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ChannelCount",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Properties",
          "Type": "MediaPropertySet",
          "IsGet": true
        },
        {
          "Name": "SampleRate",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Subtype",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Type",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateAac",
          "IsStatic": true,
          "ReturnType": "AudioEncodingProperties",
          "Parameters": [
            {
              "Name": "sampleRate",
              "Type": "UInt32"
            },
            {
              "Name": "channelCount",
              "Type": "UInt32"
            },
            {
              "Name": "bitrate",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "CreateAacAdts",
          "IsStatic": true,
          "ReturnType": "AudioEncodingProperties",
          "Parameters": [
            {
              "Name": "sampleRate",
              "Type": "UInt32"
            },
            {
              "Name": "channelCount",
              "Type": "UInt32"
            },
            {
              "Name": "bitrate",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "CreateMp3",
          "IsStatic": true,
          "ReturnType": "AudioEncodingProperties",
          "Parameters": [
            {
              "Name": "sampleRate",
              "Type": "UInt32"
            },
            {
              "Name": "channelCount",
              "Type": "UInt32"
            },
            {
              "Name": "bitrate",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "CreatePcm",
          "IsStatic": true,
          "ReturnType": "AudioEncodingProperties",
          "Parameters": [
            {
              "Name": "sampleRate",
              "Type": "UInt32"
            },
            {
              "Name": "channelCount",
              "Type": "UInt32"
            },
            {
              "Name": "bitsPerSample",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "CreateWma",
          "IsStatic": true,
          "ReturnType": "AudioEncodingProperties",
          "Parameters": [
            {
              "Name": "sampleRate",
              "Type": "UInt32"
            },
            {
              "Name": "channelCount",
              "Type": "UInt32"
            },
            {
              "Name": "bitrate",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetFormatUserData",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]&",
              "Out": true
            }
          ]
        },
        {
          "Name": "SetFormatUserData",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.MediaProperties.AudioEncodingProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IMediaEncodingProperties"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Properties",
          "Type": "MediaPropertySet",
          "IsGet": true
        },
        {
          "Name": "Subtype",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Type",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.MediaProperties.ContainerEncodingProperties"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Baseline",
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ConstrainedBaseline",
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Extended",
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "High",
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "High10",
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "High422",
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "High444",
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Main",
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MultiviewHigh",
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StereoHigh",
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.MediaProperties.H264ProfileIds"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IMediaEncodingProperties"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Height",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Properties",
          "Type": "MediaPropertySet",
          "IsGet": true
        },
        {
          "Name": "Subtype",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Type",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Width",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateBmp",
          "IsStatic": true,
          "ReturnType": "ImageEncodingProperties"
        },
        {
          "Name": "CreateJpeg",
          "IsStatic": true,
          "ReturnType": "ImageEncodingProperties"
        },
        {
          "Name": "CreateJpegXR",
          "IsStatic": true,
          "ReturnType": "ImageEncodingProperties"
        },
        {
          "Name": "CreatePng",
          "IsStatic": true,
          "ReturnType": "ImageEncodingProperties"
        },
        {
          "Name": "CreateUncompressed",
          "IsStatic": true,
          "ReturnType": "ImageEncodingProperties",
          "Parameters": [
            {
              "Name": "format",
              "Type": "MediaPixelFormat"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.MediaProperties.ImageEncodingProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Audio",
          "Type": "AudioEncodingProperties",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Container",
          "Type": "ContainerEncodingProperties",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Video",
          "Type": "VideoEncodingProperties",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateAvi",
          "IsStatic": true,
          "ReturnType": "MediaEncodingProfile",
          "Parameters": [
            {
              "Name": "quality",
              "Type": "VideoEncodingQuality"
            }
          ]
        },
        {
          "Name": "CreateFromFileAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MediaEncodingProfile>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "CreateFromStreamAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MediaEncodingProfile>",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            }
          ]
        },
        {
          "Name": "CreateM4a",
          "IsStatic": true,
          "ReturnType": "MediaEncodingProfile",
          "Parameters": [
            {
              "Name": "quality",
              "Type": "AudioEncodingQuality"
            }
          ]
        },
        {
          "Name": "CreateMp3",
          "IsStatic": true,
          "ReturnType": "MediaEncodingProfile",
          "Parameters": [
            {
              "Name": "quality",
              "Type": "AudioEncodingQuality"
            }
          ]
        },
        {
          "Name": "CreateMp4",
          "IsStatic": true,
          "ReturnType": "MediaEncodingProfile",
          "Parameters": [
            {
              "Name": "quality",
              "Type": "VideoEncodingQuality"
            }
          ]
        },
        {
          "Name": "CreateWav",
          "IsStatic": true,
          "ReturnType": "MediaEncodingProfile",
          "Parameters": [
            {
              "Name": "quality",
              "Type": "AudioEncodingQuality"
            }
          ]
        },
        {
          "Name": "CreateWma",
          "IsStatic": true,
          "ReturnType": "MediaEncodingProfile",
          "Parameters": [
            {
              "Name": "quality",
              "Type": "AudioEncodingQuality"
            }
          ]
        },
        {
          "Name": "CreateWmv",
          "IsStatic": true,
          "ReturnType": "MediaEncodingProfile",
          "Parameters": [
            {
              "Name": "quality",
              "Type": "VideoEncodingQuality"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.MediaProperties.MediaEncodingProfile"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Aac",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AacAdts",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Ac3",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AmrNb",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AmrWb",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Argb32",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Asf",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Avi",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Bgra8",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Bmp",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Eac3",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Float",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Gif",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "H263",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "H264",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "H264Es",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Hevc",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HevcEs",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Iyuv",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Jpeg",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "JpegXr",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Mjpg",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Mp3",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Mpeg",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Mpeg1",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Mpeg2",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Mpeg4",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Nv12",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Pcm",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Png",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Rgb24",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Rgb32",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Tiff",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Wave",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Wma8",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Wma9",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Wmv3",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Wvc1",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Yuy2",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Yv12",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.MediaProperties.MediaEncodingSubtypes"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<Guid,Object>>",
        "IDictionary<Guid,Object>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<Guid,Object>>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.MediaProperties.MediaPropertySet"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Denominator",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Numerator",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.MediaProperties.MediaRatio"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "High",
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Main",
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SignalNoiseRatioScalable",
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Simple",
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SpatiallyScalable",
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.MediaProperties.Mpeg2ProfileIds"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IMediaEncodingProperties"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Bitrate",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FrameRate",
          "Type": "MediaRatio",
          "IsGet": true
        },
        {
          "Name": "Height",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PixelAspectRatio",
          "Type": "MediaRatio",
          "IsGet": true
        },
        {
          "Name": "ProfileId",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Properties",
          "Type": "MediaPropertySet",
          "IsGet": true
        },
        {
          "Name": "Subtype",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Type",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Width",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateH264",
          "IsStatic": true,
          "ReturnType": "VideoEncodingProperties"
        },
        {
          "Name": "CreateMpeg2",
          "IsStatic": true,
          "ReturnType": "VideoEncodingProperties"
        },
        {
          "Name": "CreateUncompressed",
          "IsStatic": true,
          "ReturnType": "VideoEncodingProperties",
          "Parameters": [
            {
              "Name": "subtype",
              "Type": "String"
            },
            {
              "Name": "width",
              "Type": "UInt32"
            },
            {
              "Name": "height",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetFormatUserData",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]&",
              "Out": true
            }
          ]
        },
        {
          "Name": "SetFormatUserData",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.MediaProperties.VideoEncodingProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AlbumArtist",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Artist",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.MusicDisplayProperties"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Current",
          "Type": "MediaPlayer",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "IsMediaPlaying",
          "IsStatic": true,
          "ReturnType": "Boolean"
        },
        {
          "Name": "SendMessageToBackground",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "ValueSet"
            }
          ]
        },
        {
          "Name": "SendMessageToForeground",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "ValueSet"
            }
          ]
        },
        {
          "Name": "Shutdown",
          "IsStatic": true,
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "MessageReceivedFromBackground",
          "Type": "EventHandler<MediaPlayerDataReceivedEventArgs>",
          "IsStatic": true
        },
        {
          "Name": "MessageReceivedFromForeground",
          "Type": "EventHandler<MediaPlayerDataReceivedEventArgs>",
          "IsStatic": true
        }
      ],
      "Name": "Windows.Media.Playback.BackgroundMediaPlayer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AutoPlay",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "BufferingProgress",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "CanPause",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "CanSeek",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "CurrentState",
          "Type": "MediaPlayerState",
          "IsGet": true
        },
        {
          "Name": "IsLoopingEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsMuted",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsProtected",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "NaturalDuration",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "PlaybackMediaMarkers",
          "Type": "PlaybackMediaMarkerSequence",
          "IsGet": true
        },
        {
          "Name": "PlaybackRate",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Position",
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProtectionManager",
          "Type": "MediaProtectionManager",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Volume",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Pause",
          "ReturnType": "Void"
        },
        {
          "Name": "Play",
          "ReturnType": "Void"
        },
        {
          "Name": "SetFileSource",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "SetMediaSource",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "IMediaSource"
            }
          ]
        },
        {
          "Name": "SetStreamSource",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            }
          ]
        },
        {
          "Name": "SetUriSource",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "BufferingEnded",
          "Type": "TypedEventHandler<MediaPlayer,Object>"
        },
        {
          "Name": "BufferingStarted",
          "Type": "TypedEventHandler<MediaPlayer,Object>"
        },
        {
          "Name": "CurrentStateChanged",
          "Type": "TypedEventHandler<MediaPlayer,Object>"
        },
        {
          "Name": "MediaEnded",
          "Type": "TypedEventHandler<MediaPlayer,Object>"
        },
        {
          "Name": "MediaFailed",
          "Type": "TypedEventHandler<MediaPlayer,MediaPlayerFailedEventArgs>"
        },
        {
          "Name": "MediaOpened",
          "Type": "TypedEventHandler<MediaPlayer,Object>"
        },
        {
          "Name": "MediaPlayerRateChanged",
          "Type": "TypedEventHandler<MediaPlayer,MediaPlayerRateChangedEventArgs>"
        },
        {
          "Name": "PlaybackMediaMarkerReached",
          "Type": "TypedEventHandler<MediaPlayer,PlaybackMediaMarkerReachedEventArgs>"
        },
        {
          "Name": "SeekCompleted",
          "Type": "TypedEventHandler<MediaPlayer,Object>"
        },
        {
          "Name": "VolumeChanged",
          "Type": "TypedEventHandler<MediaPlayer,Object>"
        }
      ],
      "Name": "Windows.Media.Playback.MediaPlayer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Data",
          "Type": "ValueSet",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Playback.MediaPlayerDataReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Error",
          "Type": "MediaPlayerError",
          "IsGet": true
        },
        {
          "Name": "ErrorMessage",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ExtendedErrorCode",
          "Type": "Exception",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Playback.MediaPlayerFailedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NewRate",
          "Type": "Double",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Playback.MediaPlayerRateChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "value",
              "Type": "TimeSpan"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "value",
              "Type": "TimeSpan"
            },
            {
              "Name": "mediaMarketType",
              "Type": "String"
            },
            {
              "Name": "text",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "MediaMarkerType",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Text",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Time",
          "Type": "TimeSpan",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Playback.PlaybackMediaMarker"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "PlaybackMediaMarker",
          "Type": "PlaybackMediaMarker",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Playback.PlaybackMediaMarkerReachedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<PlaybackMediaMarker>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Clear",
          "ReturnType": "Void"
        },
        {
          "Name": "Insert",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "PlaybackMediaMarker"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Playback.PlaybackMediaMarkerSequence"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "State",
          "Type": "PlayToConnectionState",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "Error",
          "Type": "TypedEventHandler<PlayToConnection,PlayToConnectionErrorEventArgs>"
        },
        {
          "Name": "StateChanged",
          "Type": "TypedEventHandler<PlayToConnection,PlayToConnectionStateChangedEventArgs>"
        },
        {
          "Name": "Transferred",
          "Type": "TypedEventHandler<PlayToConnection,PlayToConnectionTransferredEventArgs>"
        }
      ],
      "Name": "Windows.Media.PlayTo.PlayToConnection"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Code",
          "Type": "PlayToConnectionError",
          "IsGet": true
        },
        {
          "Name": "Message",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.PlayTo.PlayToConnectionErrorEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CurrentState",
          "Type": "PlayToConnectionState",
          "IsGet": true
        },
        {
          "Name": "PreviousState",
          "Type": "PlayToConnectionState",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.PlayTo.PlayToConnectionStateChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CurrentSource",
          "Type": "PlayToSource",
          "IsGet": true
        },
        {
          "Name": "PreviousSource",
          "Type": "PlayToSource",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.PlayTo.PlayToConnectionTransferredEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Connection",
          "Type": "PlayToConnection",
          "IsGet": true
        },
        {
          "Name": "Next",
          "Type": "PlayToSource",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "PlayNext",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.PlayTo.PlayToSource"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Completion",
          "Type": "MediaProtectionServiceCompletion",
          "IsGet": true
        },
        {
          "Name": "Information",
          "Type": "RevocationAndRenewalInformation",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Protection.ComponentLoadFailedEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "RenewSystemComponentsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperationWithProgress<RenewalStatus,UInt32>",
          "Parameters": [
            {
              "Name": "information",
              "Type": "RevocationAndRenewalInformation"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Protection.ComponentRenewal"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Properties",
          "Type": "IPropertySet",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "ComponentLoadFailed",
          "Type": "ComponentLoadFailedEventHandler"
        },
        {
          "Name": "RebootNeeded",
          "Type": "RebootNeededEventHandler"
        },
        {
          "Name": "ServiceRequested",
          "Type": "ServiceRequestedEventHandler"
        }
      ],
      "Name": "Windows.Media.Protection.MediaProtectionManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Complete",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "success",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Protection.MediaProtectionServiceCompletion"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Items",
          "Type": "IList<RevocationAndRenewalItem>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Protection.RevocationAndRenewalInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "HeaderHash",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "PublicKeyHash",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Reasons",
          "Type": "RevocationAndRenewalReasons",
          "IsGet": true
        },
        {
          "Name": "RenewalId",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Protection.RevocationAndRenewalItem"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Completion",
          "Type": "MediaProtectionServiceCompletion",
          "IsGet": true
        },
        {
          "Name": "Request",
          "Type": "IMediaProtectionServiceRequest",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Protection.ServiceRequestedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Status",
          "Type": "SpeechRecognitionResultStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionCompilationResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISpeechRecognitionConstraint"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "file",
              "Type": "StorageFile"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "file",
              "Type": "StorageFile"
            },
            {
              "Name": "tag",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "GrammarFile",
          "Type": "StorageFile",
          "IsGet": true
        },
        {
          "Name": "IsEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Probability",
          "Type": "SpeechRecognitionConstraintProbability",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Tag",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Type",
          "Type": "SpeechRecognitionConstraintType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionGrammarFileConstraint"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISpeechRecognitionConstraint"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "commands",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "commands",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "tag",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Commands",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "IsEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Probability",
          "Type": "SpeechRecognitionConstraintProbability",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Tag",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Type",
          "Type": "SpeechRecognitionConstraintType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionListConstraint"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Problem",
          "Type": "SpeechRecognitionAudioProblem",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionQualityDegradingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Confidence",
          "Type": "SpeechRecognitionConfidence",
          "IsGet": true
        },
        {
          "Name": "Constraint",
          "Type": "ISpeechRecognitionConstraint",
          "IsGet": true
        },
        {
          "Name": "RawConfidence",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "RulePath",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        },
        {
          "Name": "SemanticInterpretation",
          "Type": "SpeechRecognitionSemanticInterpretation",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "SpeechRecognitionResultStatus",
          "IsGet": true
        },
        {
          "Name": "Text",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetAlternates",
          "ReturnType": "IReadOnlyList<SpeechRecognitionResult>",
          "Parameters": [
            {
              "Name": "maxAlternates",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Properties",
          "Type": "IReadOnlyDictionary<String,IReadOnlyList<String>>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionSemanticInterpretation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISpeechRecognitionConstraint"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "scenario",
              "Type": "SpeechRecognitionScenario"
            },
            {
              "Name": "topicHint",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "scenario",
              "Type": "SpeechRecognitionScenario"
            },
            {
              "Name": "topicHint",
              "Type": "String"
            },
            {
              "Name": "tag",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "IsEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Probability",
          "Type": "SpeechRecognitionConstraintProbability",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Scenario",
          "Type": "SpeechRecognitionScenario",
          "IsGet": true
        },
        {
          "Name": "Tag",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TopicHint",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "SpeechRecognitionConstraintType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionTopicConstraint"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISpeechRecognitionConstraint"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Probability",
          "Type": "SpeechRecognitionConstraintProbability",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Tag",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Type",
          "Type": "SpeechRecognitionConstraintType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionVoiceCommandDefinitionConstraint"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "language",
              "Type": "Language"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Constraints",
          "Type": "IList<ISpeechRecognitionConstraint>",
          "IsGet": true
        },
        {
          "Name": "CurrentLanguage",
          "Type": "Language",
          "IsGet": true
        },
        {
          "Name": "SupportedGrammarLanguages",
          "Type": "IReadOnlyList<Language>",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SupportedTopicLanguages",
          "Type": "IReadOnlyList<Language>",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SystemSpeechLanguage",
          "Type": "Language",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Timeouts",
          "Type": "SpeechRecognizerTimeouts",
          "IsGet": true
        },
        {
          "Name": "UIOptions",
          "Type": "SpeechRecognizerUIOptions",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CompileConstraintsAsync",
          "ReturnType": "IAsyncOperation<SpeechRecognitionCompilationResult>"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "RecognizeAsync",
          "ReturnType": "IAsyncOperation<SpeechRecognitionResult>"
        },
        {
          "Name": "RecognizeWithUIAsync",
          "ReturnType": "IAsyncOperation<SpeechRecognitionResult>"
        }
      ],
      "Events": [
        {
          "Name": "RecognitionQualityDegrading",
          "Type": "TypedEventHandler<SpeechRecognizer,SpeechRecognitionQualityDegradingEventArgs>"
        },
        {
          "Name": "StateChanged",
          "Type": "TypedEventHandler<SpeechRecognizer,SpeechRecognizerStateChangedEventArgs>"
        }
      ],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognizer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "State",
          "Type": "SpeechRecognizerState",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognizerStateChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BabbleTimeout",
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EndSilenceTimeout",
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "InitialSilenceTimeout",
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognizerTimeouts"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AudiblePrompt",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ExampleText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsReadBackEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ShowConfirmation",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognizerUIOptions"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "InstalledCommandSets",
          "Type": "IReadOnlyDictionary<String,VoiceCommandSet>",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "InstallCommandSetsFromStorageFileAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "StorageFile"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.VoiceCommandManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "SetPhraseListAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "phraseListName",
              "Type": "String"
            },
            {
              "Name": "phraseList",
              "Type": "IEnumerable<String>"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.VoiceCommandSet"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContentTypeProvider",
        "IDisposable",
        "IInputStream",
        "IOutputStream",
        "IRandomAccessStream",
        "IRandomAccessStreamWithContentType"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CanRead",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "CanWrite",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "ContentType",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Markers",
          "Type": "IReadOnlyList<IMediaMarker>",
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "UInt64",
          "IsGet": true
        },
        {
          "Name": "Size",
          "Type": "UInt64",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CloneStream",
          "ReturnType": "IRandomAccessStream"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "FlushAsync",
          "ReturnType": "IAsyncOperation<Boolean>"
        },
        {
          "Name": "GetInputStreamAt",
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "GetOutputStreamAt",
          "ReturnType": "IOutputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "ReadAsync",
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "InputStreamOptions"
            }
          ]
        },
        {
          "Name": "Seek",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "WriteAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.SpeechSynthesis.SpeechSynthesisStream"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AllVoices",
          "Type": "IReadOnlyList<VoiceInformation>",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DefaultVoice",
          "Type": "VoiceInformation",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Voice",
          "Type": "VoiceInformation",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "SynthesizeSsmlToStreamAsync",
          "ReturnType": "IAsyncOperation<SpeechSynthesisStream>",
          "Parameters": [
            {
              "Name": "Ssml",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SynthesizeTextToStreamAsync",
          "ReturnType": "IAsyncOperation<SpeechSynthesisStream>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.SpeechSynthesis.SpeechSynthesizer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Description",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Gender",
          "Type": "VoiceGender",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SpeechSynthesis.VoiceInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DisplayUpdater",
          "Type": "SystemMediaTransportControlsDisplayUpdater",
          "IsGet": true
        },
        {
          "Name": "IsEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsFastForwardEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsChannelDownEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsChannelUpEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsNextEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsPauseEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsPlayEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsPreviousEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsRecordEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsRewindEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsStopEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PlaybackStatus",
          "Type": "MediaPlaybackStatus",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SoundLevel",
          "Type": "SoundLevel",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetForCurrentView",
          "IsStatic": true,
          "ReturnType": "SystemMediaTransportControls"
        }
      ],
      "Events": [
        {
          "Name": "ButtonPressed",
          "Type": "TypedEventHandler<SystemMediaTransportControls,SystemMediaTransportControlsButtonPressedEventArgs>"
        },
        {
          "Name": "PropertyChanged",
          "Type": "TypedEventHandler<SystemMediaTransportControls,SystemMediaTransportControlsPropertyChangedEventArgs>"
        }
      ],
      "Name": "Windows.Media.SystemMediaTransportControls"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Button",
          "Type": "SystemMediaTransportControlsButton",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SystemMediaTransportControlsButtonPressedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AppMediaId",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ImageProperties",
          "Type": "ImageDisplayProperties",
          "IsGet": true
        },
        {
          "Name": "MusicProperties",
          "Type": "MusicDisplayProperties",
          "IsGet": true
        },
        {
          "Name": "Thumbnail",
          "Type": "RandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Type",
          "Type": "MediaPlaybackType",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VideoProperties",
          "Type": "VideoDisplayProperties",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ClearAll",
          "ReturnType": "Void"
        },
        {
          "Name": "CopyFromFileAsync",
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "type",
              "Type": "MediaPlaybackType"
            },
            {
              "Name": "source",
              "Type": "StorageFile"
            }
          ]
        },
        {
          "Name": "Update",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.SystemMediaTransportControlsDisplayUpdater"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Property",
          "Type": "SystemMediaTransportControlsProperty",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SystemMediaTransportControlsPropertyChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AlwaysReencode",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HardwareAccelerationEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TrimStartTime",
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TrimStopTime",
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VideoProcessingAlgorithm",
          "Type": "MediaVideoProcessingAlgorithm",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AddAudioEffect",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "AddAudioEffect",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "effectRequired",
              "Type": "Boolean"
            },
            {
              "Name": "configuration",
              "Type": "IPropertySet"
            }
          ]
        },
        {
          "Name": "AddVideoEffect",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "AddVideoEffect",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "effectRequired",
              "Type": "Boolean"
            },
            {
              "Name": "configuration",
              "Type": "IPropertySet"
            }
          ]
        },
        {
          "Name": "ClearEffects",
          "ReturnType": "Void"
        },
        {
          "Name": "PrepareFileTranscodeAsync",
          "ReturnType": "IAsyncOperation<PrepareTranscodeResult>",
          "Parameters": [
            {
              "Name": "source",
              "Type": "IStorageFile"
            },
            {
              "Name": "destination",
              "Type": "IStorageFile"
            },
            {
              "Name": "profile",
              "Type": "MediaEncodingProfile"
            }
          ]
        },
        {
          "Name": "PrepareMediaStreamSourceTranscodeAsync",
          "ReturnType": "IAsyncOperation<PrepareTranscodeResult>",
          "Parameters": [
            {
              "Name": "source",
              "Type": "IMediaSource"
            },
            {
              "Name": "destination",
              "Type": "IRandomAccessStream"
            },
            {
              "Name": "profile",
              "Type": "MediaEncodingProfile"
            }
          ]
        },
        {
          "Name": "PrepareStreamTranscodeAsync",
          "ReturnType": "IAsyncOperation<PrepareTranscodeResult>",
          "Parameters": [
            {
              "Name": "source",
              "Type": "IRandomAccessStream"
            },
            {
              "Name": "destination",
              "Type": "IRandomAccessStream"
            },
            {
              "Name": "profile",
              "Type": "MediaEncodingProfile"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Transcoding.MediaTranscoder"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CanTranscode",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "FailureReason",
          "Type": "TranscodeFailureReason",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "TranscodeAsync",
          "ReturnType": "IAsyncActionWithProgress<Double>"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Transcoding.PrepareTranscodeResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Subtitle",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.VideoDisplayProperties"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "VideoStabilization",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.VideoEffects"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTransferBase"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CostPolicy",
          "Type": "BackgroundTransferCostPolicy",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FailureTileNotification",
          "Type": "TileNotification",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FailureToastNotification",
          "Type": "ToastNotification",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Group",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Method",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProxyCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ServerCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SuccessTileNotification",
          "Type": "TileNotification",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SuccessToastNotification",
          "Type": "ToastNotification",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TransferGroup",
          "Type": "BackgroundTransferGroup",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateDownload",
          "ReturnType": "DownloadOperation",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "resultFile",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "CreateDownload",
          "ReturnType": "DownloadOperation",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "resultFile",
              "Type": "IStorageFile"
            },
            {
              "Name": "requestBodyFile",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "CreateDownloadAsync",
          "ReturnType": "IAsyncOperation<DownloadOperation>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "resultFile",
              "Type": "IStorageFile"
            },
            {
              "Name": "requestBodyStream",
              "Type": "IInputStream"
            }
          ]
        },
        {
          "Name": "GetCurrentDownloadsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<DownloadOperation>>"
        },
        {
          "Name": "GetCurrentDownloadsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<DownloadOperation>>",
          "Parameters": [
            {
              "Name": "group",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetCurrentDownloadsForTransferGroupAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<DownloadOperation>>",
          "Parameters": [
            {
              "Name": "group",
              "Type": "BackgroundTransferGroup"
            }
          ]
        },
        {
          "Name": "RequestUnconstrainedDownloadsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<UnconstrainedTransferRequestResult>",
          "Parameters": [
            {
              "Name": "operations",
              "Type": "IEnumerable<DownloadOperation>"
            }
          ]
        },
        {
          "Name": "SetRequestHeader",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundDownloader"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "fileName",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "SetFile",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "SetHeader",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SetText",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferContentPart"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetStatus",
          "IsStatic": true,
          "ReturnType": "WebErrorStatus",
          "Parameters": [
            {
              "Name": "hresult",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferError"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "TransferBehavior",
          "Type": "BackgroundTransferBehavior",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateGroup",
          "IsStatic": true,
          "ReturnType": "BackgroundTransferGroup",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferGroup"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTransferBase"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CostPolicy",
          "Type": "BackgroundTransferCostPolicy",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FailureTileNotification",
          "Type": "TileNotification",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FailureToastNotification",
          "Type": "ToastNotification",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Group",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Method",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProxyCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ServerCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SuccessTileNotification",
          "Type": "TileNotification",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SuccessToastNotification",
          "Type": "ToastNotification",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TransferGroup",
          "Type": "BackgroundTransferGroup",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateUpload",
          "ReturnType": "UploadOperation",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "sourceFile",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "CreateUploadAsync",
          "ReturnType": "IAsyncOperation<UploadOperation>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "parts",
              "Type": "IEnumerable<BackgroundTransferContentPart>"
            }
          ]
        },
        {
          "Name": "CreateUploadAsync",
          "ReturnType": "IAsyncOperation<UploadOperation>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "parts",
              "Type": "IEnumerable<BackgroundTransferContentPart>"
            },
            {
              "Name": "subType",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateUploadAsync",
          "ReturnType": "IAsyncOperation<UploadOperation>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "parts",
              "Type": "IEnumerable<BackgroundTransferContentPart>"
            },
            {
              "Name": "subType",
              "Type": "String"
            },
            {
              "Name": "boundary",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateUploadFromStreamAsync",
          "ReturnType": "IAsyncOperation<UploadOperation>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "sourceStream",
              "Type": "IInputStream"
            }
          ]
        },
        {
          "Name": "GetCurrentUploadsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<UploadOperation>>"
        },
        {
          "Name": "GetCurrentUploadsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<UploadOperation>>",
          "Parameters": [
            {
              "Name": "group",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetCurrentUploadsForTransferGroupAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<UploadOperation>>",
          "Parameters": [
            {
              "Name": "group",
              "Type": "BackgroundTransferGroup"
            }
          ]
        },
        {
          "Name": "RequestUnconstrainedUploadsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<UnconstrainedTransferRequestResult>",
          "Parameters": [
            {
              "Name": "operations",
              "Type": "IEnumerable<UploadOperation>"
            }
          ]
        },
        {
          "Name": "SetRequestHeader",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundUploader"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTransferOperation",
        "IBackgroundTransferOperationPriority"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CostPolicy",
          "Type": "BackgroundTransferCostPolicy",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Group",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Guid",
          "Type": "Guid",
          "IsGet": true
        },
        {
          "Name": "Method",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Priority",
          "Type": "BackgroundTransferPriority",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Progress",
          "Type": "BackgroundDownloadProgress",
          "IsGet": true
        },
        {
          "Name": "RequestedUri",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "ResultFile",
          "Type": "IStorageFile",
          "IsGet": true
        },
        {
          "Name": "TransferGroup",
          "Type": "BackgroundTransferGroup",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AttachAsync",
          "ReturnType": "IAsyncOperationWithProgress<DownloadOperation,DownloadOperation>"
        },
        {
          "Name": "GetResponseInformation",
          "ReturnType": "ResponseInformation"
        },
        {
          "Name": "GetResultStreamAt",
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "Pause",
          "ReturnType": "Void"
        },
        {
          "Name": "Resume",
          "ReturnType": "Void"
        },
        {
          "Name": "StartAsync",
          "ReturnType": "IAsyncOperationWithProgress<DownloadOperation,DownloadOperation>"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.DownloadOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ActualUri",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "Headers",
          "Type": "IReadOnlyDictionary<String,String>",
          "IsGet": true
        },
        {
          "Name": "IsResumable",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "StatusCode",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.ResponseInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsUnconstrained",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.UnconstrainedTransferRequestResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTransferOperation",
        "IBackgroundTransferOperationPriority"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CostPolicy",
          "Type": "BackgroundTransferCostPolicy",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Group",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Guid",
          "Type": "Guid",
          "IsGet": true
        },
        {
          "Name": "Method",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Priority",
          "Type": "BackgroundTransferPriority",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Progress",
          "Type": "BackgroundUploadProgress",
          "IsGet": true
        },
        {
          "Name": "RequestedUri",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "SourceFile",
          "Type": "IStorageFile",
          "IsGet": true
        },
        {
          "Name": "TransferGroup",
          "Type": "BackgroundTransferGroup",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AttachAsync",
          "ReturnType": "IAsyncOperationWithProgress<UploadOperation,UploadOperation>"
        },
        {
          "Name": "GetResponseInformation",
          "ReturnType": "ResponseInformation"
        },
        {
          "Name": "GetResultStreamAt",
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "StartAsync",
          "ReturnType": "IAsyncOperationWithProgress<UploadOperation,UploadOperation>"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.UploadOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AttributionId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "AttributionName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "AttributionThumbnail",
          "Type": "IRandomAccessStreamReference",
          "IsGet": true
        },
        {
          "Name": "BytesReceived",
          "Type": "UInt64",
          "IsGet": true
        },
        {
          "Name": "BytesSent",
          "Type": "UInt64",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.AttributedNetworkUsage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AccessPointName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AuthenticationType",
          "Type": "CellularApnAuthenticationType",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsCompressionEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Password",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProviderId",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UserName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.CellularApnContext"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ApproachingDataLimit",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "NetworkCostType",
          "Type": "NetworkCostType",
          "IsGet": true
        },
        {
          "Name": "OverDataLimit",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Roaming",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ConnectionCost"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsWlanConnectionProfile",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsWwanConnectionProfile",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "NetworkAdapter",
          "Type": "NetworkAdapter",
          "IsGet": true
        },
        {
          "Name": "NetworkSecuritySettings",
          "Type": "NetworkSecuritySettings",
          "IsGet": true
        },
        {
          "Name": "ProfileName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ServiceProviderGuid",
          "Type": "Nullable<Guid>",
          "IsGet": true
        },
        {
          "Name": "WlanConnectionProfileDetails",
          "Type": "WlanConnectionProfileDetails",
          "IsGet": true
        },
        {
          "Name": "WwanConnectionProfileDetails",
          "Type": "WwanConnectionProfileDetails",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetAttributedNetworkUsageAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<AttributedNetworkUsage>>",
          "Parameters": [
            {
              "Name": "startTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "endTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "states",
              "Type": "NetworkUsageStates"
            }
          ]
        },
        {
          "Name": "GetConnectionCost",
          "ReturnType": "ConnectionCost"
        },
        {
          "Name": "GetConnectivityIntervalsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<ConnectivityInterval>>",
          "Parameters": [
            {
              "Name": "startTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "endTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "states",
              "Type": "NetworkUsageStates"
            }
          ]
        },
        {
          "Name": "GetDataPlanStatus",
          "ReturnType": "DataPlanStatus"
        },
        {
          "Name": "GetDomainConnectivityLevel",
          "ReturnType": "DomainConnectivityLevel"
        },
        {
          "Name": "GetLocalUsage",
          "ReturnType": "DataUsage",
          "Parameters": [
            {
              "Name": "StartTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "EndTime",
              "Type": "DateTimeOffset"
            }
          ]
        },
        {
          "Name": "GetLocalUsage",
          "ReturnType": "DataUsage",
          "Parameters": [
            {
              "Name": "StartTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "EndTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "States",
              "Type": "RoamingStates"
            }
          ]
        },
        {
          "Name": "GetNetworkConnectivityLevel",
          "ReturnType": "NetworkConnectivityLevel"
        },
        {
          "Name": "GetNetworkNames",
          "ReturnType": "IReadOnlyList<String>"
        },
        {
          "Name": "GetNetworkUsageAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<NetworkUsage>>",
          "Parameters": [
            {
              "Name": "startTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "endTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "granularity",
              "Type": "DataUsageGranularity"
            },
            {
              "Name": "states",
              "Type": "NetworkUsageStates"
            }
          ]
        },
        {
          "Name": "GetSignalBars",
          "ReturnType": "Nullable<Byte>"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ConnectionProfile"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsConnected",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsWlanConnectionProfile",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsWwanConnectionProfile",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NetworkCostType",
          "Type": "NetworkCostType",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ServiceProviderGuid",
          "Type": "Nullable<Guid>",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ConnectionProfileFilter"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ConnectionProfile",
          "Type": "ConnectionProfile",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ConnectionSession"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ConnectionDuration",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "StartTime",
          "Type": "DateTimeOffset",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ConnectivityInterval"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "AcquireConnectionAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ConnectionSession>",
          "Parameters": [
            {
              "Name": "cellularApnContext",
              "Type": "CellularApnContext"
            }
          ]
        },
        {
          "Name": "AddHttpRoutePolicy",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "routePolicy",
              "Type": "RoutePolicy"
            }
          ]
        },
        {
          "Name": "RemoveHttpRoutePolicy",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "routePolicy",
              "Type": "RoutePolicy"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ConnectivityManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DataLimitInMegabytes",
          "Type": "Nullable<UInt32>",
          "IsGet": true
        },
        {
          "Name": "DataPlanUsage",
          "Type": "DataPlanUsage",
          "IsGet": true
        },
        {
          "Name": "InboundBitsPerSecond",
          "Type": "Nullable<UInt64>",
          "IsGet": true
        },
        {
          "Name": "MaxTransferSizeInMegabytes",
          "Type": "Nullable<UInt32>",
          "IsGet": true
        },
        {
          "Name": "NextBillingCycle",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true
        },
        {
          "Name": "OutboundBitsPerSecond",
          "Type": "Nullable<UInt64>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.DataPlanStatus"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "LastSyncTime",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "MegabytesUsed",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.DataPlanUsage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BytesReceived",
          "Type": "UInt64",
          "IsGet": true
        },
        {
          "Name": "BytesSent",
          "Type": "UInt64",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.DataUsage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NetworkAdapter",
          "Type": "NetworkAdapter",
          "IsGet": true
        },
        {
          "Name": "PrefixLength",
          "Type": "Nullable<Byte>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.IPInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "InfrastructureId",
          "Type": "LanIdentifierData",
          "IsGet": true
        },
        {
          "Name": "NetworkAdapterId",
          "Type": "Guid",
          "IsGet": true
        },
        {
          "Name": "PortId",
          "Type": "LanIdentifierData",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.LanIdentifier"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Type",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "IReadOnlyList<Byte>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.LanIdentifierData"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IanaInterfaceType",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "InboundMaxBitsPerSecond",
          "Type": "UInt64",
          "IsGet": true
        },
        {
          "Name": "NetworkAdapterId",
          "Type": "Guid",
          "IsGet": true
        },
        {
          "Name": "NetworkItem",
          "Type": "NetworkItem",
          "IsGet": true
        },
        {
          "Name": "OutboundMaxBitsPerSecond",
          "Type": "UInt64",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetConnectedProfileAsync",
          "ReturnType": "IAsyncOperation<ConnectionProfile>"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.NetworkAdapter"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "FindConnectionProfilesAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<ConnectionProfile>>",
          "Parameters": [
            {
              "Name": "pProfileFilter",
              "Type": "ConnectionProfileFilter"
            }
          ]
        },
        {
          "Name": "GetConnectionProfiles",
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<ConnectionProfile>"
        },
        {
          "Name": "GetHostNames",
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<HostName>"
        },
        {
          "Name": "GetInternetConnectionProfile",
          "IsStatic": true,
          "ReturnType": "ConnectionProfile"
        },
        {
          "Name": "GetLanIdentifiers",
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<LanIdentifier>"
        },
        {
          "Name": "GetProxyConfigurationAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ProxyConfiguration>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "GetSortedEndpointPairs",
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<EndpointPair>",
          "Parameters": [
            {
              "Name": "destinationList",
              "Type": "IEnumerable<EndpointPair>"
            },
            {
              "Name": "sortOptions",
              "Type": "HostNameSortOptions"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "NetworkStatusChanged",
          "Type": "NetworkStatusChangedEventHandler",
          "IsStatic": true
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NetworkId",
          "Type": "Guid",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetNetworkTypes",
          "ReturnType": "NetworkTypes"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.NetworkItem"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NetworkAuthenticationType",
          "Type": "NetworkAuthenticationType",
          "IsGet": true
        },
        {
          "Name": "NetworkEncryptionType",
          "Type": "NetworkEncryptionType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.NetworkSecuritySettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "HasNewConnectionCost",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "HasNewDomainConnectivityLevel",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "HasNewHostNameList",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "HasNewInternetConnectionProfile",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "HasNewNetworkConnectivityLevel",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "HasNewWwanRegistrationState",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.NetworkStateChangeEventDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BytesReceived",
          "Type": "UInt64",
          "IsGet": true
        },
        {
          "Name": "BytesSent",
          "Type": "UInt64",
          "IsGet": true
        },
        {
          "Name": "ConnectionDuration",
          "Type": "TimeSpan",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.NetworkUsage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CanConnectDirectly",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "ProxyUris",
          "Type": "IReadOnlyList<Uri>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ProxyConfiguration"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ConnectionProfile",
          "Type": "ConnectionProfile",
          "IsGet": true
        },
        {
          "Name": "HostName",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "HostNameType",
          "Type": "DomainNameType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.RoutePolicy"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetConnectedSsid",
          "ReturnType": "String"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.WlanConnectionProfileDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AccessPointName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "HomeProviderId",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetCurrentDataClass",
          "ReturnType": "WwanDataClass"
        },
        {
          "Name": "GetNetworkRegistrationState",
          "ReturnType": "WwanNetworkRegistrationState"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.WwanConnectionProfileDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "localHostName",
              "Type": "HostName"
            },
            {
              "Name": "localServiceName",
              "Type": "String"
            },
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "LocalHostName",
          "Type": "HostName",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LocalServiceName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RemoteHostName",
          "Type": "HostName",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RemoteServiceName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.EndpointPair"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "hostName",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "CanonicalName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "IPInformation",
          "Type": "IPInformation",
          "IsGet": true
        },
        {
          "Name": "RawName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "HostNameType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Compare",
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "value1",
              "Type": "String"
            },
            {
              "Name": "value2",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "IsEqual",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "hostName",
              "Type": "HostName"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.HostName"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AuthenticationUrl",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "NetworkAdapter",
          "Type": "NetworkAdapter",
          "IsGet": true
        },
        {
          "Name": "RedirectMessageUrl",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "RedirectMessageXml",
          "Type": "XmlDocument",
          "IsGet": true
        },
        {
          "Name": "WirelessNetworkId",
          "Type": "Byte[]",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AbortAuthentication",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "markAsManual",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "IssueCredentials",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "password",
              "Type": "String"
            },
            {
              "Name": "extraParameters",
              "Type": "String"
            },
            {
              "Name": "markAsManualConnectOnFailure",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "IssueCredentialsAsync",
          "ReturnType": "IAsyncOperation<HotspotCredentialsAuthenticationResult>",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "password",
              "Type": "String"
            },
            {
              "Name": "extraParameters",
              "Type": "String"
            },
            {
              "Name": "markAsManualConnectOnFailure",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SkipAuthentication",
          "ReturnType": "Void"
        },
        {
          "Name": "TriggerAttentionRequired",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "packageRelativeApplicationId",
              "Type": "String"
            },
            {
              "Name": "applicationParameters",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryGetAuthenticationContext",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "evenToken",
              "Type": "String"
            },
            {
              "Name": "context",
              "Type": "HotspotAuthenticationContext&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.HotspotAuthenticationContext"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "EventToken",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.HotspotAuthenticationEventDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AuthenticationReplyXml",
          "Type": "XmlDocument",
          "IsGet": true
        },
        {
          "Name": "HasNetworkErrorOccurred",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "LogoffUrl",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "ResponseCode",
          "Type": "HotspotAuthenticationResponseCode",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.HotspotCredentialsAuthenticationResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "UpdateCost",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "NetworkCostType"
            }
          ]
        },
        {
          "Name": "UpdateUsage",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "ProfileUsage"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.ProvisionedProfile"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AllElementsProvisioned",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "ProvisionResultsXml",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.ProvisionFromXmlDocumentResults"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateFromNetworkAccountId",
          "IsStatic": true,
          "ReturnType": "ProvisioningAgent",
          "Parameters": [
            {
              "Name": "networkAccountId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetProvisionedProfile",
          "ReturnType": "ProvisionedProfile",
          "Parameters": [
            {
              "Name": "mediaType",
              "Type": "ProfileMediaType"
            },
            {
              "Name": "profileName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ProvisionFromXmlDocumentAsync",
          "ReturnType": "IAsyncOperation<ProvisionFromXmlDocumentResults>",
          "Parameters": [
            {
              "Name": "provisioningXmlDocument",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.ProvisioningAgent"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "PeerInformation",
          "Type": "PeerInformation",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Proximity.ConnectionRequestedEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AllowBluetooth",
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AllowInfrastructure",
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AllowWiFiDirect",
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AlternateIdentities",
          "Type": "IDictionary<String,String>",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DiscoveryData",
          "Type": "IBuffer",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Role",
          "Type": "PeerRole",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SupportedDiscoveryTypes",
          "Type": "PeerDiscoveryTypes",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ConnectAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<StreamSocket>",
          "Parameters": [
            {
              "Name": "peerInformation",
              "Type": "PeerInformation"
            }
          ]
        },
        {
          "Name": "CreateWatcher",
          "IsStatic": true,
          "ReturnType": "PeerWatcher"
        },
        {
          "Name": "FindAllPeersAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<PeerInformation>>"
        },
        {
          "Name": "Start",
          "IsStatic": true,
          "ReturnType": "Void"
        },
        {
          "Name": "Start",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "peerMessage",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "Stop",
          "IsStatic": true,
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "ConnectionRequested",
          "Type": "TypedEventHandler<Object,ConnectionRequestedEventArgs>",
          "IsStatic": true
        },
        {
          "Name": "TriggeredConnectionStateChanged",
          "Type": "TypedEventHandler<Object,TriggeredConnectionStateChangedEventArgs>",
          "IsStatic": true
        }
      ],
      "Name": "Windows.Networking.Proximity.PeerFinder"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DiscoveryData",
          "Type": "IBuffer",
          "IsGet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "HostName",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ServiceName",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Proximity.PeerInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Status",
          "Type": "PeerWatcherStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Start",
          "ReturnType": "Void"
        },
        {
          "Name": "Stop",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "Added",
          "Type": "TypedEventHandler<PeerWatcher,PeerInformation>"
        },
        {
          "Name": "EnumerationCompleted",
          "Type": "TypedEventHandler<PeerWatcher,Object>"
        },
        {
          "Name": "Removed",
          "Type": "TypedEventHandler<PeerWatcher,PeerInformation>"
        },
        {
          "Name": "Stopped",
          "Type": "TypedEventHandler<PeerWatcher,Object>"
        },
        {
          "Name": "Updated",
          "Type": "TypedEventHandler<PeerWatcher,PeerInformation>"
        }
      ],
      "Name": "Windows.Networking.Proximity.PeerWatcher"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BitsPerSecond",
          "Type": "UInt64",
          "IsGet": true
        },
        {
          "Name": "DeviceId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "MaxMessageBytes",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "FromId",
          "IsStatic": true,
          "ReturnType": "ProximityDevice",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetDefault",
          "IsStatic": true,
          "ReturnType": "ProximityDevice"
        },
        {
          "Name": "GetDeviceSelector",
          "IsStatic": true,
          "ReturnType": "String"
        },
        {
          "Name": "PublishBinaryMessage",
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "messageType",
              "Type": "String"
            },
            {
              "Name": "message",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "PublishBinaryMessage",
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "messageType",
              "Type": "String"
            },
            {
              "Name": "message",
              "Type": "IBuffer"
            },
            {
              "Name": "messageTransmittedHandler",
              "Type": "MessageTransmittedHandler"
            }
          ]
        },
        {
          "Name": "PublishMessage",
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "messageType",
              "Type": "String"
            },
            {
              "Name": "message",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "PublishMessage",
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "messageType",
              "Type": "String"
            },
            {
              "Name": "message",
              "Type": "String"
            },
            {
              "Name": "messageTransmittedHandler",
              "Type": "MessageTransmittedHandler"
            }
          ]
        },
        {
          "Name": "PublishUriMessage",
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "message",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "PublishUriMessage",
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "message",
              "Type": "Uri"
            },
            {
              "Name": "messageTransmittedHandler",
              "Type": "MessageTransmittedHandler"
            }
          ]
        },
        {
          "Name": "StopPublishingMessage",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "messageId",
              "Type": "Int64"
            }
          ]
        },
        {
          "Name": "StopSubscribingForMessage",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "subscriptionId",
              "Type": "Int64"
            }
          ]
        },
        {
          "Name": "SubscribeForMessage",
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "messageType",
              "Type": "String"
            },
            {
              "Name": "messageReceivedHandler",
              "Type": "MessageReceivedHandler"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "DeviceArrived",
          "Type": "DeviceArrivedEventHandler"
        },
        {
          "Name": "DeviceDeparted",
          "Type": "DeviceDepartedEventHandler"
        }
      ],
      "Name": "Windows.Networking.Proximity.ProximityDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Data",
          "Type": "IBuffer",
          "IsGet": true
        },
        {
          "Name": "DataAsString",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "MessageType",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SubscriptionId",
          "Type": "Int64",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Proximity.ProximityMessage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Id",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Socket",
          "Type": "StreamSocket",
          "IsGet": true
        },
        {
          "Name": "State",
          "Type": "TriggeredConnectState",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Proximity.TriggeredConnectionStateChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ExpirationTime",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "Uri",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Close",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "PushNotificationReceived",
          "Type": "TypedEventHandler<PushNotificationChannel,PushNotificationReceivedEventArgs>"
        }
      ],
      "Name": "Windows.Networking.PushNotifications.PushNotificationChannel"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreatePushNotificationChannelForApplicationAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PushNotificationChannel>"
        },
        {
          "Name": "CreatePushNotificationChannelForApplicationAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PushNotificationChannel>",
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreatePushNotificationChannelForSecondaryTileAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PushNotificationChannel>",
          "Parameters": [
            {
              "Name": "tileId",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.PushNotifications.PushNotificationChannelManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BadgeNotification",
          "Type": "BadgeNotification",
          "IsGet": true
        },
        {
          "Name": "Cancel",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NotificationType",
          "Type": "PushNotificationType",
          "IsGet": true
        },
        {
          "Name": "RawNotification",
          "Type": "RawNotification",
          "IsGet": true
        },
        {
          "Name": "TileNotification",
          "Type": "TileNotification",
          "IsGet": true
        },
        {
          "Name": "ToastNotification",
          "Type": "ToastNotification",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.PushNotifications.PushNotificationReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Content",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.PushNotifications.RawNotification"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "channelId",
              "Type": "String"
            },
            {
              "Name": "serverKeepAliveIntervalInMinutes",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "channelId",
              "Type": "String"
            },
            {
              "Name": "serverKeepAliveIntervalInMinutes",
              "Type": "UInt32"
            },
            {
              "Name": "resourceRequestType",
              "Type": "ControlChannelTriggerResourceType"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "ControlChannelTriggerId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "CurrentKeepAliveIntervalInMinutes",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "KeepAliveTrigger",
          "Type": "IBackgroundTrigger",
          "IsGet": true
        },
        {
          "Name": "PushNotificationTrigger",
          "Type": "IBackgroundTrigger",
          "IsGet": true
        },
        {
          "Name": "ServerKeepAliveIntervalInMinutes",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TransportObject",
          "Type": "Object",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "DecreaseNetworkKeepAliveInterval",
          "ReturnType": "Void"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "FlushTransport",
          "ReturnType": "Void"
        },
        {
          "Name": "UsingTransport",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "transport",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "WaitForPushEnabled",
          "ReturnType": "ControlChannelTriggerStatus"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.ControlChannelTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Control",
          "Type": "DatagramSocketControl",
          "IsGet": true
        },
        {
          "Name": "Information",
          "Type": "DatagramSocketInformation",
          "IsGet": true
        },
        {
          "Name": "OutputStream",
          "Type": "IOutputStream",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "BindEndpointAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localHostName",
              "Type": "HostName"
            },
            {
              "Name": "localServiceName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "BindServiceNameAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localServiceName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "BindServiceNameAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localServiceName",
              "Type": "String"
            },
            {
              "Name": "adapter",
              "Type": "NetworkAdapter"
            }
          ]
        },
        {
          "Name": "ConnectAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ConnectAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "endpointPair",
              "Type": "EndpointPair"
            }
          ]
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "GetEndpointPairsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<EndpointPair>>",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetEndpointPairsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<EndpointPair>>",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            },
            {
              "Name": "sortOptions",
              "Type": "HostNameSortOptions"
            }
          ]
        },
        {
          "Name": "GetOutputStreamAsync",
          "ReturnType": "IAsyncOperation<IOutputStream>",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetOutputStreamAsync",
          "ReturnType": "IAsyncOperation<IOutputStream>",
          "Parameters": [
            {
              "Name": "endpointPair",
              "Type": "EndpointPair"
            }
          ]
        },
        {
          "Name": "JoinMulticastGroup",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "host",
              "Type": "HostName"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "MessageReceived",
          "Type": "TypedEventHandler<DatagramSocket,DatagramSocketMessageReceivedEventArgs>"
        }
      ],
      "Name": "Windows.Networking.Sockets.DatagramSocket"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DontFragment",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "InboundBufferSizeInBytes",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OutboundUnicastHopLimit",
          "Type": "Byte",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "QualityOfService",
          "Type": "SocketQualityOfService",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.DatagramSocketControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "LocalAddress",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "LocalPort",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "RemoteAddress",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "RemotePort",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.DatagramSocketInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "LocalAddress",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "RemoteAddress",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "RemotePort",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDataReader",
          "ReturnType": "DataReader"
        },
        {
          "Name": "GetDataStream",
          "ReturnType": "IInputStream"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.DatagramSocketMessageReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IWebSocket"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Control",
          "Type": "MessageWebSocketControl",
          "IsGet": true
        },
        {
          "Name": "Information",
          "Type": "MessageWebSocketInformation",
          "IsGet": true
        },
        {
          "Name": "OutputStream",
          "Type": "IOutputStream",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Close",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "code",
              "Type": "UInt16"
            },
            {
              "Name": "reason",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ConnectAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "SetRequestHeader",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "Closed",
          "Type": "TypedEventHandler<IWebSocket,WebSocketClosedEventArgs>"
        },
        {
          "Name": "MessageReceived",
          "Type": "TypedEventHandler<MessageWebSocket,MessageWebSocketMessageReceivedEventArgs>"
        }
      ],
      "Name": "Windows.Networking.Sockets.MessageWebSocket"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebSocketControl"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "MaxMessageSize",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MessageType",
          "Type": "SocketMessageType",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OutboundBufferSizeInBytes",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProxyCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ServerCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SupportedProtocols",
          "Type": "IList<String>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.MessageWebSocketControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebSocketInformation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BandwidthStatistics",
          "Type": "BandwidthStatistics",
          "IsGet": true
        },
        {
          "Name": "LocalAddress",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "Protocol",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.MessageWebSocketInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "MessageType",
          "Type": "SocketMessageType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDataReader",
          "ReturnType": "DataReader"
        },
        {
          "Name": "GetDataStream",
          "ReturnType": "IInputStream"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.MessageWebSocketMessageReceivedEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetStatus",
          "IsStatic": true,
          "ReturnType": "SocketErrorStatus",
          "Parameters": [
            {
              "Name": "hresult",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.SocketError"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Control",
          "Type": "StreamSocketControl",
          "IsGet": true
        },
        {
          "Name": "Information",
          "Type": "StreamSocketInformation",
          "IsGet": true
        },
        {
          "Name": "InputStream",
          "Type": "IInputStream",
          "IsGet": true
        },
        {
          "Name": "OutputStream",
          "Type": "IOutputStream",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ConnectAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "endpointPair",
              "Type": "EndpointPair"
            }
          ]
        },
        {
          "Name": "ConnectAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ConnectAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "endpointPair",
              "Type": "EndpointPair"
            },
            {
              "Name": "protectionLevel",
              "Type": "SocketProtectionLevel"
            }
          ]
        },
        {
          "Name": "ConnectAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            },
            {
              "Name": "protectionLevel",
              "Type": "SocketProtectionLevel"
            }
          ]
        },
        {
          "Name": "ConnectAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            },
            {
              "Name": "protectionLevel",
              "Type": "SocketProtectionLevel"
            },
            {
              "Name": "adapter",
              "Type": "NetworkAdapter"
            }
          ]
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "UpgradeToSslAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "protectionLevel",
              "Type": "SocketProtectionLevel"
            },
            {
              "Name": "validationHostName",
              "Type": "HostName"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamSocket"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IgnorableServerCertificateErrors",
          "Type": "IList<ChainValidationResult>",
          "IsGet": true
        },
        {
          "Name": "KeepAlive",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NoDelay",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OutboundBufferSizeInBytes",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OutboundUnicastHopLimit",
          "Type": "Byte",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "QualityOfService",
          "Type": "SocketQualityOfService",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamSocketControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BandwidthStatistics",
          "Type": "BandwidthStatistics",
          "IsGet": true
        },
        {
          "Name": "LocalAddress",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "LocalPort",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ProtectionLevel",
          "Type": "SocketProtectionLevel",
          "IsGet": true
        },
        {
          "Name": "RemoteAddress",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "RemoteHostName",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "RemotePort",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "RemoteServiceName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "RoundTripTimeStatistics",
          "Type": "RoundTripTimeStatistics",
          "IsGet": true
        },
        {
          "Name": "ServerCertificate",
          "Type": "Certificate",
          "IsGet": true
        },
        {
          "Name": "ServerCertificateErrors",
          "Type": "IReadOnlyList<ChainValidationResult>",
          "IsGet": true
        },
        {
          "Name": "ServerCertificateErrorSeverity",
          "Type": "SocketSslErrorSeverity",
          "IsGet": true
        },
        {
          "Name": "ServerIntermediateCertificates",
          "Type": "IReadOnlyList<Certificate>",
          "IsGet": true
        },
        {
          "Name": "SessionKey",
          "Type": "IBuffer",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamSocketInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Control",
          "Type": "StreamSocketListenerControl",
          "IsGet": true
        },
        {
          "Name": "Information",
          "Type": "StreamSocketListenerInformation",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "BindEndpointAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localHostName",
              "Type": "HostName"
            },
            {
              "Name": "localServiceName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "BindServiceNameAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localServiceName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "BindServiceNameAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localServiceName",
              "Type": "String"
            },
            {
              "Name": "protectionLevel",
              "Type": "SocketProtectionLevel"
            }
          ]
        },
        {
          "Name": "BindServiceNameAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localServiceName",
              "Type": "String"
            },
            {
              "Name": "protectionLevel",
              "Type": "SocketProtectionLevel"
            },
            {
              "Name": "adapter",
              "Type": "NetworkAdapter"
            }
          ]
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "ConnectionReceived",
          "Type": "TypedEventHandler<StreamSocketListener,StreamSocketListenerConnectionReceivedEventArgs>"
        }
      ],
      "Name": "Windows.Networking.Sockets.StreamSocketListener"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Socket",
          "Type": "StreamSocket",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamSocketListenerConnectionReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "QualityOfService",
          "Type": "SocketQualityOfService",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamSocketListenerControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "LocalPort",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamSocketListenerInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IWebSocket"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Control",
          "Type": "StreamWebSocketControl",
          "IsGet": true
        },
        {
          "Name": "Information",
          "Type": "StreamWebSocketInformation",
          "IsGet": true
        },
        {
          "Name": "InputStream",
          "Type": "IInputStream",
          "IsGet": true
        },
        {
          "Name": "OutputStream",
          "Type": "IOutputStream",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Close",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "code",
              "Type": "UInt16"
            },
            {
              "Name": "reason",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ConnectAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "SetRequestHeader",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "Closed",
          "Type": "TypedEventHandler<IWebSocket,WebSocketClosedEventArgs>"
        }
      ],
      "Name": "Windows.Networking.Sockets.StreamWebSocket"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebSocketControl"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NoDelay",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OutboundBufferSizeInBytes",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProxyCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ServerCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SupportedProtocols",
          "Type": "IList<String>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamWebSocketControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebSocketInformation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BandwidthStatistics",
          "Type": "BandwidthStatistics",
          "IsGet": true
        },
        {
          "Name": "LocalAddress",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "Protocol",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamWebSocketInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Code",
          "Type": "UInt16",
          "IsGet": true
        },
        {
          "Name": "Reason",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.WebSocketClosedEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetStatus",
          "IsStatic": true,
          "ReturnType": "WebErrorStatus",
          "Parameters": [
            {
              "Name": "hresult",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.WebSocketError"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTask"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Run",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "taskInstance",
              "Type": "IBackgroundTaskInstance"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.WebSocketKeepAlive"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPrompt"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Bordered",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Compulsory",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Label",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OptionsText",
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Selected",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomComboBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPrompt"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Bordered",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Compulsory",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DefaultText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Label",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NoEcho",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Text",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomEditBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPrompt"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Bordered",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Compulsory",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Label",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomErrorBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPrompt"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Bordered",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Compulsory",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Checked",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "InitialCheckState",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Label",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomCheckBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPrompt"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Bordered",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Compulsory",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisplayText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Label",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomTextBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Configuration",
          "Type": "VpnChannelConfiguration",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "PlugInContext",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SystemHealth",
          "Type": "VpnSystemHealth",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AssociateTransport",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "mainOuterTunnelTransport",
              "Type": "Object"
            },
            {
              "Name": "optionalOuterTunnelTransport",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "LogDiagnosticMessage",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "message",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ProcessEventAsync",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "thirdPartyPlugIn",
              "Type": "Object"
            },
            {
              "Name": "event",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "RequestCredentials",
          "ReturnType": "VpnPickedCredential",
          "Parameters": [
            {
              "Name": "credType",
              "Type": "VpnCredentialType"
            },
            {
              "Name": "isRetry",
              "Type": "Boolean"
            },
            {
              "Name": "isSingleSignOnCredential",
              "Type": "Boolean"
            },
            {
              "Name": "certificate",
              "Type": "Certificate"
            }
          ]
        },
        {
          "Name": "RequestCustomPrompt",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "customPrompt",
              "Type": "IReadOnlyList<IVpnCustomPrompt>"
            }
          ]
        },
        {
          "Name": "RequestVpnPacketBuffer",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "type",
              "Type": "VpnDataPathType"
            },
            {
              "Name": "vpnPacketBuffer",
              "Type": "VpnPacketBuffer&",
              "Out": true
            }
          ]
        },
        {
          "Name": "SetAllowedSslTlsVersions",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "tunnelTransport",
              "Type": "Object"
            },
            {
              "Name": "useTls12",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetErrorMessage",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "message",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "Start",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "assignedClientIPv4list",
              "Type": "IReadOnlyList<HostName>"
            },
            {
              "Name": "assignedClientIPv6list",
              "Type": "IReadOnlyList<HostName>"
            },
            {
              "Name": "vpnInterfaceId",
              "Type": "VpnInterfaceId"
            },
            {
              "Name": "routeScope",
              "Type": "VpnRouteAssignment"
            },
            {
              "Name": "namespaceScope",
              "Type": "VpnNamespaceAssignment"
            },
            {
              "Name": "mtuSize",
              "Type": "UInt32"
            },
            {
              "Name": "maxFrameSize",
              "Type": "UInt32"
            },
            {
              "Name": "optimizeForLowCostNetwork",
              "Type": "Boolean"
            },
            {
              "Name": "mainOuterTunnelTransport",
              "Type": "Object"
            },
            {
              "Name": "optionalOuterTunnelTransport",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "Stop",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "ActivityChange",
          "Type": "TypedEventHandler<VpnChannel,VpnChannelActivityEventArgs>"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnChannel"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Type",
          "Type": "VpnChannelActivityEventType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnChannelActivityEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CustomField",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ServerHostNameList",
          "Type": "IReadOnlyList<HostName>",
          "IsGet": true
        },
        {
          "Name": "ServerServiceName",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnChannelConfiguration"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "address",
              "Type": "Byte[]"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetAddressInfo",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "id",
              "Type": "Byte[]&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnInterfaceId"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NamespaceList",
          "Type": "IList<VpnNamespaceInfo>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProxyAutoConfigUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnNamespaceAssignment"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "dnsServerList",
              "Type": "IList<HostName>"
            },
            {
              "Name": "proxyServerList",
              "Type": "IList<HostName>"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "DnsServers",
          "Type": "IList<HostName>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Namespace",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "WebProxyServers",
          "Type": "IList<HostName>",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnNamespaceInfo"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "parentBuffer",
              "Type": "VpnPacketBuffer"
            },
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "length",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Buffer",
          "Type": "Buffer",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "VpnPacketBufferStatus",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TransportAffinity",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnPacketBuffer"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<VpnPacketBuffer>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "VpnPacketBufferStatus",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AddAtBegin",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "nextVpnPacketBuffer",
              "Type": "VpnPacketBuffer"
            }
          ]
        },
        {
          "Name": "Append",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "nextVpnPacketBuffer",
              "Type": "VpnPacketBuffer"
            }
          ]
        },
        {
          "Name": "Clear",
          "ReturnType": "Void"
        },
        {
          "Name": "RemoveAtBegin",
          "ReturnType": "VpnPacketBuffer"
        },
        {
          "Name": "RemoveAtEnd",
          "ReturnType": "VpnPacketBuffer"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnPacketBufferList"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AdditionalPin",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "OldPasswordCredential",
          "Type": "PasswordCredential",
          "IsGet": true
        },
        {
          "Name": "PasskeyCredential",
          "Type": "PasswordCredential",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnPickedCredential"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "address",
              "Type": "HostName"
            },
            {
              "Name": "prefixSize",
              "Type": "Byte"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Address",
          "Type": "HostName",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PrefixSize",
          "Type": "Byte",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnRoute"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ExcludeLocalSubnets",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Ipv4ExclusionRoutes",
          "Type": "IList<VpnRoute>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Ipv4InclusionRoutes",
          "Type": "IList<VpnRoute>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Ipv6ExclusionRoutes",
          "Type": "IList<VpnRoute>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Ipv6InclusionRoutes",
          "Type": "IList<VpnRoute>",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnRouteAssignment"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "StatementOfHealth",
          "Type": "Buffer",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnSystemHealth"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Modes",
          "Type": "ApplicationProfileModes",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.ApplicationModel.ApplicationProfile"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Cancel",
          "ReturnType": "Void"
        },
        {
          "Name": "GetDefault",
          "IsStatic": true,
          "ReturnType": "VibrationDevice"
        },
        {
          "Name": "Vibrate",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "duration",
              "Type": "TimeSpan"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Devices.Notification.VibrationDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "RemainingDischargeTime",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "RemainingChargePercent",
          "Type": "Int32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDefault",
          "IsStatic": true,
          "ReturnType": "Battery"
        }
      ],
      "Events": [
        {
          "Name": "RemainingChargePercentChanged",
          "Type": "EventHandler<Object>"
        }
      ],
      "Name": "Windows.Phone.Devices.Power.Battery"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "PointerEntered",
          "Type": "TypedEventHandler<DrawingSurfaceManipulationHost,PointerEventArgs>"
        },
        {
          "Name": "PointerExited",
          "Type": "TypedEventHandler<DrawingSurfaceManipulationHost,PointerEventArgs>"
        },
        {
          "Name": "PointerMoved",
          "Type": "TypedEventHandler<DrawingSurfaceManipulationHost,PointerEventArgs>"
        },
        {
          "Name": "PointerPressed",
          "Type": "TypedEventHandler<DrawingSurfaceManipulationHost,PointerEventArgs>"
        },
        {
          "Name": "PointerReleased",
          "Type": "TypedEventHandler<DrawingSurfaceManipulationHost,PointerEventArgs>"
        }
      ],
      "Name": "Windows.Phone.Input.Interop.DrawingSurfaceManipulationHost"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "EnrollmentValidFrom",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "EnrollmentValidTo",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "Guid",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "EnterpriseStatus",
          "IsGet": true
        },
        {
          "Name": "WorkplaceId",
          "Type": "Int32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Management.Deployment.Enterprise"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CurrentEnterprise",
          "Type": "Enterprise",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "EnrolledEnterprises",
          "Type": "IReadOnlyList<Enterprise>",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "RequestEnrollmentAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<EnterpriseEnrollmentResult>",
          "Parameters": [
            {
              "Name": "enrollmentToken",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "RequestUnenrollmentAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "enterprise",
              "Type": "Enterprise"
            }
          ]
        },
        {
          "Name": "ValidateEnterprisesAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Management.Deployment.EnterpriseEnrollmentManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "EnrolledEnterprise",
          "Type": "Enterprise",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "EnterpriseEnrollmentStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Management.Deployment.EnterpriseEnrollmentResult"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "AddPackageAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperationWithProgress<PackageInstallResult,UInt32>",
          "Parameters": [
            {
              "Name": "title",
              "Type": "String"
            },
            {
              "Name": "sourceLocation",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "AddPackageAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperationWithProgress<PackageInstallResult,UInt32>",
          "Parameters": [
            {
              "Name": "title",
              "Type": "String"
            },
            {
              "Name": "sourceLocation",
              "Type": "Uri"
            },
            {
              "Name": "instanceId",
              "Type": "String"
            },
            {
              "Name": "offerId",
              "Type": "String"
            },
            {
              "Name": "license",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "FindPackages",
          "IsStatic": true,
          "ReturnType": "IEnumerable<Package>",
          "Parameters": [
            {
              "Name": "packageName",
              "Type": "String"
            },
            {
              "Name": "packagePublisher",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "FindPackages",
          "IsStatic": true,
          "ReturnType": "IEnumerable<Package>"
        },
        {
          "Name": "FindPackagesForCurrentPublisher",
          "IsStatic": true,
          "ReturnType": "IEnumerable<Package>"
        },
        {
          "Name": "GetPendingPackageInstalls",
          "IsStatic": true,
          "ReturnType": "IEnumerable<IAsyncOperationWithProgress<PackageInstallResult,UInt32>>"
        },
        {
          "Name": "RegisterPackageAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperationWithProgress<PackageInstallResult,UInt32>",
          "Parameters": [
            {
              "Name": "manifestUri",
              "Type": "Uri"
            },
            {
              "Name": "dependencyPackageUris",
              "Type": "IEnumerable<Uri>"
            },
            {
              "Name": "deploymentOptions",
              "Type": "DeploymentOptions"
            }
          ]
        },
        {
          "Name": "RemovePackageAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperationWithProgress<PackageInstallResult,UInt32>",
          "Parameters": [
            {
              "Name": "packageFullName",
              "Type": "String"
            },
            {
              "Name": "removalOptions",
              "Type": "RemovalOptions"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Management.Deployment.InstallationManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ErrorText",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "InstallState",
          "Type": "PackageInstallState",
          "IsGet": true
        },
        {
          "Name": "ProductId",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Management.Deployment.PackageInstallResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICameraCaptureDevice",
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AudioEncodingFormat",
          "Type": "CameraCaptureAudioFormat",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AvailableSensorLocations",
          "Type": "IReadOnlyList<CameraSensorLocation>",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CaptureResolution",
          "Type": "Size",
          "IsGet": true
        },
        {
          "Name": "FocusRegion",
          "Type": "Nullable<Rect>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PreviewResolution",
          "Type": "Size",
          "IsGet": true
        },
        {
          "Name": "SensorLocation",
          "Type": "CameraSensorLocation",
          "IsGet": true
        },
        {
          "Name": "SensorRotationInDegrees",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "SupportedAudioEncodingFormats",
          "Type": "IReadOnlyList<CameraCaptureAudioFormat>",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SupportedVideoEncodingFormats",
          "Type": "IReadOnlyList<CameraCaptureVideoFormat>",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "VideoEncodingFormat",
          "Type": "CameraCaptureVideoFormat",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "FocusAsync",
          "ReturnType": "IAsyncOperation<CameraFocusStatus>"
        },
        {
          "Name": "GetAvailableCaptureResolutions",
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<Size>",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            }
          ]
        },
        {
          "Name": "GetAvailablePreviewResolutions",
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<Size>",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            }
          ]
        },
        {
          "Name": "GetPreviewBufferArgb",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pixels",
              "Type": "Int32[]",
              "Out": true
            }
          ]
        },
        {
          "Name": "GetPreviewBufferY",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pixels",
              "Type": "Byte[]",
              "Out": true
            }
          ]
        },
        {
          "Name": "GetPreviewBufferYCbCr",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pixels",
              "Type": "Byte[]",
              "Out": true
            }
          ]
        },
        {
          "Name": "GetProperty",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "propertyId",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "GetSupportedPropertyRange",
          "IsStatic": true,
          "ReturnType": "CameraCapturePropertyRange",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            },
            {
              "Name": "propertyId",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "GetSupportedPropertyValues",
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<Object>",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            },
            {
              "Name": "propertyId",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "OpenAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<AudioVideoCaptureDevice>",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            },
            {
              "Name": "initialResolution",
              "Type": "Size"
            }
          ]
        },
        {
          "Name": "OpenForAudioOnlyAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<AudioVideoCaptureDevice>"
        },
        {
          "Name": "OpenForVideoOnlyAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<AudioVideoCaptureDevice>",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            },
            {
              "Name": "initialResolution",
              "Type": "Size"
            }
          ]
        },
        {
          "Name": "ResetFocusAsync",
          "ReturnType": "IAsyncOperation<CameraFocusStatus>"
        },
        {
          "Name": "SetCaptureResolutionAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Size"
            }
          ]
        },
        {
          "Name": "SetPreviewResolutionAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Size"
            }
          ]
        },
        {
          "Name": "SetProperty",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "propertyId",
              "Type": "Guid"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "StartRecordingToSinkAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "StartRecordingToStreamAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            }
          ]
        },
        {
          "Name": "StopRecordingAsync",
          "ReturnType": "IAsyncAction"
        }
      ],
      "Events": [
        {
          "Name": "PreviewFrameAvailable",
          "Type": "TypedEventHandler<ICameraCaptureDevice,Object>"
        },
        {
          "Name": "RecordingFailed",
          "Type": "TypedEventHandler<AudioVideoCaptureDevice,CaptureFailedEventArgs>"
        },
        {
          "Name": "VendorSpecificDataAvailable",
          "Type": "TypedEventHandler<ICameraCaptureDevice,VendorSpecificDataEventArgs>"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.AudioVideoCaptureDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AppliedProperties",
          "Type": "IReadOnlyDictionary<Guid,Object>",
          "IsGet": true
        },
        {
          "Name": "CaptureStream",
          "Type": "IOutputStream",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DesiredProperties",
          "Type": "IDictionary<Guid,Object>",
          "IsGet": true
        },
        {
          "Name": "ThumbnailStream",
          "Type": "IOutputStream",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetPreviewBufferArgb",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pixels",
              "Type": "Int32[]",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Media.Capture.CameraCaptureFrame"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Max",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "Min",
          "Type": "Object",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Media.Capture.CameraCapturePropertyRange"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Frames",
          "Type": "IReadOnlyList<CameraCaptureFrame>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "StartCaptureAsync",
          "ReturnType": "IAsyncAction"
        }
      ],
      "Events": [
        {
          "Name": "BuffersAvailable",
          "Type": "TypedEventHandler<CameraCaptureSequence,Object>"
        },
        {
          "Name": "FrameAcquired",
          "Type": "TypedEventHandler<CameraCaptureSequence,FrameAcquiredEventArgs>"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.CameraCaptureSequence"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ErrorCode",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Media.Capture.CaptureFailedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Index",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Media.Capture.FrameAcquiredEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "H264EnableKeyframes",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "H264EncodingLevel",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "H264EncodingProfile",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "H264QuantizationParameter",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "H264RequestDropNextNFrames",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "H264RequestIdrFrame",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "UnmuteAudioWhileRecording",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "VideoFrameRate",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "VideoTorchMode",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "VideoTorchPower",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Media.Capture.KnownCameraAudioVideoProperties"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AutoFocusRange",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "EncodeWithOrientation",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsShutterSoundEnabledByUser",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsShutterSoundRequiredForRegion",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ManualFocusPosition",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PlayShutterSoundOnCapture",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SpecifiedCaptureOrientation",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Media.Capture.KnownCameraGeneralProperties"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ExposureCompensation",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ExposureTime",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FlashMode",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FlashPower",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FocusIlluminationMode",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Iso",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LockedAutoFocusParameters",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ManualWhiteBalance",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SceneMode",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "WhiteBalancePreset",
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Media.Capture.KnownCameraPhotoProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IMediaCapturePreviewSink",
        "IMediaExtension"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "connectionPort",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "ConnectionPort",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "SetProperties",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "configuration",
              "Type": "IPropertySet"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Media.Capture.MediaCapturePreviewSink"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICameraCaptureDevice",
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AvailableSensorLocations",
          "Type": "IReadOnlyList<CameraSensorLocation>",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CaptureResolution",
          "Type": "Size",
          "IsGet": true
        },
        {
          "Name": "FocusRegion",
          "Type": "Nullable<Rect>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PreviewResolution",
          "Type": "Size",
          "IsGet": true
        },
        {
          "Name": "SensorLocation",
          "Type": "CameraSensorLocation",
          "IsGet": true
        },
        {
          "Name": "SensorRotationInDegrees",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateCaptureSequence",
          "ReturnType": "CameraCaptureSequence",
          "Parameters": [
            {
              "Name": "numberOfFrames",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "FocusAsync",
          "ReturnType": "IAsyncOperation<CameraFocusStatus>"
        },
        {
          "Name": "GetAvailableCaptureResolutions",
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<Size>",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            }
          ]
        },
        {
          "Name": "GetAvailablePreviewResolutions",
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<Size>",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            }
          ]
        },
        {
          "Name": "GetPreviewBufferArgb",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pixels",
              "Type": "Int32[]",
              "Out": true
            }
          ]
        },
        {
          "Name": "GetPreviewBufferY",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pixels",
              "Type": "Byte[]",
              "Out": true
            }
          ]
        },
        {
          "Name": "GetPreviewBufferYCbCr",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pixels",
              "Type": "Byte[]",
              "Out": true
            }
          ]
        },
        {
          "Name": "GetProperty",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "propertyId",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "GetSupportedPropertyRange",
          "IsStatic": true,
          "ReturnType": "CameraCapturePropertyRange",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            },
            {
              "Name": "propertyId",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "GetSupportedPropertyValues",
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<Object>",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            },
            {
              "Name": "propertyId",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "IsFocusRegionSupported",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            }
          ]
        },
        {
          "Name": "IsFocusSupported",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            }
          ]
        },
        {
          "Name": "OpenAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PhotoCaptureDevice>",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            },
            {
              "Name": "initialResolution",
              "Type": "Size"
            }
          ]
        },
        {
          "Name": "PrepareCaptureSequenceAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "sequence",
              "Type": "CameraCaptureSequence"
            }
          ]
        },
        {
          "Name": "ResetFocusAsync",
          "ReturnType": "IAsyncOperation<CameraFocusStatus>"
        },
        {
          "Name": "SetCaptureResolutionAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Size"
            }
          ]
        },
        {
          "Name": "SetPreviewResolutionAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Size"
            }
          ]
        },
        {
          "Name": "SetProperty",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "propertyId",
              "Type": "Guid"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "PreviewFrameAvailable",
          "Type": "TypedEventHandler<ICameraCaptureDevice,Object>"
        },
        {
          "Name": "VendorSpecificDataAvailable",
          "Type": "TypedEventHandler<ICameraCaptureDevice,VendorSpecificDataEventArgs>"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.PhotoCaptureDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Data",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "EventId",
          "Type": "Guid",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Media.Capture.VendorSpecificDataEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AvailableAudioEndpoints",
          "Type": "AvailableAudioRoutingEndpoints",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetAudioEndpoint",
          "ReturnType": "AudioRoutingEndpoint"
        },
        {
          "Name": "GetDefault",
          "IsStatic": true,
          "ReturnType": "AudioRoutingManager"
        },
        {
          "Name": "SetAudioEndpoint",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "endpoint",
              "Type": "AudioRoutingEndpoint"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "AudioEndpointChanged",
          "Type": "TypedEventHandler<AudioRoutingManager,Object>"
        }
      ],
      "Name": "Windows.Phone.Media.Devices.AudioRoutingManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Body",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ProductId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SenderPhoneNumber",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SmsPrefix",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "TimeStamp",
          "Type": "DateTimeOffset",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Networking.NetworkOperators.InterceptedSmsMessage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Location",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PhoneNumber",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Networking.NetworkOperators.PhoneCallAnnotationEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "AnnotationRequested",
          "Type": "EventHandler<PhoneCallAnnotationEventArgs>"
        }
      ],
      "Name": "Windows.Phone.Networking.NetworkOperators.PhoneCallAnnotationManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "PhoneNumber",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Reason",
          "Type": "PhoneCallBlockedReason",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Networking.NetworkOperators.PhoneCallBlockedEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Status",
          "Type": "PhoneCallFilterStatus",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "EnableFiltering",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "enablePhoneCallFiltering",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetCallBlockingPreferences",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "phoneNumbersToBlock",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "desiredMinimumDigitsToMatch",
              "Type": "UInt32"
            },
            {
              "Name": "categoriesToBlock",
              "Type": "TelephoneNumberCategories"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "PhoneCallBlocked",
          "Type": "EventHandler<PhoneCallBlockedEventArgs>",
          "IsStatic": true
        },
        {
          "Name": "StatusChanged",
          "Type": "EventHandler<Object>",
          "IsStatic": true
        }
      ],
      "Name": "Windows.Phone.Networking.NetworkOperators.PhoneCallFilter"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Status",
          "Type": "SmsFilterStatus",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "EnableFiltering",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "enableSmsFiltering",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "SmsMessageReceived",
          "Type": "EventHandler<SmsFilterMessageReceivedEventArgs>",
          "IsStatic": true
        },
        {
          "Name": "StatusChanged",
          "Type": "EventHandler<Object>",
          "IsStatic": true
        }
      ],
      "Name": "Windows.Phone.Networking.NetworkOperators.SmsFilter"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Action",
          "Type": "SmsFilterAction",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Body",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SenderPhoneNumber",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Networking.NetworkOperators.SmsFilterMessageReceivedEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetQueuedMessages",
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<InterceptedSmsMessage>"
        }
      ],
      "Events": [
        {
          "Name": "SmsReceived",
          "Type": "EventHandler<Object>",
          "IsStatic": true
        }
      ],
      "Name": "Windows.Phone.Networking.NetworkOperators.SmsInterceptor"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AcceptedMedia",
          "Type": "VoipCallMedia",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Networking.Voip.CallAnswerEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "RejectReason",
          "Type": "VoipCallRejectReason",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Networking.Voip.CallRejectEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "State",
          "Type": "VoipCallState",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Networking.Voip.CallStateChangeEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Muted",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Networking.Voip.MuteChangeEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVoipOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Id",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "RemoteId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "VoipOperationType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "NotifyCompletion",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "succeeded",
              "Type": "Boolean"
            },
            {
              "Name": "seamlessCallUpgradeSupport",
              "Type": "SeamlessCallUpgradeSupport"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Networking.Voip.QuerySeamlessUpgradeSupportOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDefault",
          "IsStatic": true,
          "ReturnType": "VoipCallCoordinator"
        },
        {
          "Name": "GetNextOperation",
          "ReturnType": "IVoipOperation"
        },
        {
          "Name": "NotifyMuted",
          "ReturnType": "Void"
        },
        {
          "Name": "NotifyUnmuted",
          "ReturnType": "Void"
        },
        {
          "Name": "RequestIncomingUpgradeToVideoCall",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "context",
              "Type": "String"
            },
            {
              "Name": "contactName",
              "Type": "String"
            },
            {
              "Name": "contactNumber",
              "Type": "String"
            },
            {
              "Name": "contactImage",
              "Type": "Uri"
            },
            {
              "Name": "serviceName",
              "Type": "String"
            },
            {
              "Name": "brandingImage",
              "Type": "Uri"
            },
            {
              "Name": "callDetails",
              "Type": "String"
            },
            {
              "Name": "ringtone",
              "Type": "Uri"
            },
            {
              "Name": "ringTimeout",
              "Type": "TimeSpan"
            },
            {
              "Name": "call",
              "Type": "VoipPhoneCall&",
              "Out": true
            }
          ]
        },
        {
          "Name": "RequestNewIncomingCall",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "context",
              "Type": "String"
            },
            {
              "Name": "contactName",
              "Type": "String"
            },
            {
              "Name": "contactNumber",
              "Type": "String"
            },
            {
              "Name": "contactImage",
              "Type": "Uri"
            },
            {
              "Name": "serviceName",
              "Type": "String"
            },
            {
              "Name": "brandingImage",
              "Type": "Uri"
            },
            {
              "Name": "callDetails",
              "Type": "String"
            },
            {
              "Name": "ringtone",
              "Type": "Uri"
            },
            {
              "Name": "media",
              "Type": "VoipCallMedia"
            },
            {
              "Name": "ringTimeout",
              "Type": "TimeSpan"
            },
            {
              "Name": "call",
              "Type": "VoipPhoneCall&",
              "Out": true
            }
          ]
        },
        {
          "Name": "RequestNewOutgoingCall",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "context",
              "Type": "String"
            },
            {
              "Name": "contactName",
              "Type": "String"
            },
            {
              "Name": "serviceName",
              "Type": "String"
            },
            {
              "Name": "media",
              "Type": "VoipCallMedia"
            },
            {
              "Name": "call",
              "Type": "VoipPhoneCall&",
              "Out": true
            }
          ]
        },
        {
          "Name": "RequestOutgoingUpgradeToVideoCall",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "callUpgradeGuid",
              "Type": "Guid"
            },
            {
              "Name": "context",
              "Type": "String"
            },
            {
              "Name": "contactName",
              "Type": "String"
            },
            {
              "Name": "serviceName",
              "Type": "String"
            },
            {
              "Name": "call",
              "Type": "VoipPhoneCall&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "MuteRequested",
          "Type": "TypedEventHandler<VoipCallCoordinator,MuteChangeEventArgs>"
        },
        {
          "Name": "UnmuteRequested",
          "Type": "TypedEventHandler<VoipCallCoordinator,MuteChangeEventArgs>"
        }
      ],
      "Name": "Windows.Phone.Networking.Voip.VoipCallCoordinator"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CallMedia",
          "Type": "VoipCallMedia",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContactName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StartTime",
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "NotifyCallActive",
          "ReturnType": "Void"
        },
        {
          "Name": "NotifyCallEnded",
          "ReturnType": "Void"
        },
        {
          "Name": "NotifyCallHeld",
          "ReturnType": "Void"
        },
        {
          "Name": "NotifyCallReady",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "AnswerRequested",
          "Type": "TypedEventHandler<VoipPhoneCall,CallAnswerEventArgs>"
        },
        {
          "Name": "EndRequested",
          "Type": "TypedEventHandler<VoipPhoneCall,CallStateChangeEventArgs>"
        },
        {
          "Name": "HoldRequested",
          "Type": "TypedEventHandler<VoipPhoneCall,CallStateChangeEventArgs>"
        },
        {
          "Name": "RejectRequested",
          "Type": "TypedEventHandler<VoipPhoneCall,CallRejectEventArgs>"
        },
        {
          "Name": "ResumeRequested",
          "Type": "TypedEventHandler<VoipPhoneCall,CallStateChangeEventArgs>"
        }
      ],
      "Name": "Windows.Phone.Networking.Voip.VoipPhoneCall"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Images",
          "Type": "IList<ConnectTileImage>",
          "IsGet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.ConnectTileData"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Image",
          "Type": "IRandomAccessStreamReference",
          "IsGet": true
        },
        {
          "Name": "ImageUrl",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetImageAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStream>"
        },
        {
          "Name": "SetImageAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IInputStream"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.ConnectTileImage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Country",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Locality",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PostalCode",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Region",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StreetAddress",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.ContactAddress"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AppBindingAttributes",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EmailAddress1",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EmailAddress2",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EmailAddress3",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FirstName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Identifier",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LastName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PhoneNumber1",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PhoneNumber2",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PhoneNumber3",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RemoteId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "TileData",
          "Type": "ConnectTileData",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "LoadConnectTileDataAsync",
          "ReturnType": "IAsyncOperation<ConnectTileData>"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.ContactBinding"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CallUpgradeIdentifier",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.ContactBindingAttributesConstants"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateContactBinding",
          "ReturnType": "ContactBinding",
          "Parameters": [
            {
              "Name": "RemoteId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateContactBindingTileAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "LocalContext",
              "Type": "String"
            },
            {
              "Name": "binding",
              "Type": "ContactBinding"
            }
          ]
        },
        {
          "Name": "CreateOrOpenMeContactBindingAsync",
          "ReturnType": "IAsyncOperation<ContactBinding>",
          "Parameters": [
            {
              "Name": "RemoteId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "DeleteAllContactBindingsAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "DeleteContactBindingAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "binding",
              "Type": "ContactBinding"
            }
          ]
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "GetContactBindingByRemoteIdAsync",
          "ReturnType": "IAsyncOperation<ContactBinding>",
          "Parameters": [
            {
              "Name": "RemoteId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetContactBindingFromStoredContactAsync",
          "ReturnType": "IAsyncOperation<ContactBinding>",
          "Parameters": [
            {
              "Name": "ContactId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetContactBindingsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<ContactBinding>>"
        },
        {
          "Name": "SaveContactBindingAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "binding",
              "Type": "ContactBinding"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.ContactBindingManager"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetAppContactBindingManagerAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ContactBindingManager>"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.ContactBindings"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ChangeType",
          "Type": "ContactChangeType",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "RemoteId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "RevisionNumber",
          "Type": "UInt64",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.ContactChangeRecord"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContactInformation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisplayPicture",
          "Type": "IRandomAccessStreamReference",
          "IsGet": true
        },
        {
          "Name": "FamilyName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GivenName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HonorificPrefix",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HonorificSuffix",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDisplayPictureAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStream>"
        },
        {
          "Name": "GetPropertiesAsync",
          "ReturnType": "IAsyncOperation<IDictionary<String,Object>>"
        },
        {
          "Name": "ParseVcardAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ContactInformation>",
          "Parameters": [
            {
              "Name": "vcard",
              "Type": "IInputStream"
            }
          ]
        },
        {
          "Name": "SetDisplayPictureAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IInputStream"
            }
          ]
        },
        {
          "Name": "ToVcardAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStream>"
        },
        {
          "Name": "ToVcardAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Parameters": [
            {
              "Name": "format",
              "Type": "VCardFormat"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.ContactInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DesiredFields",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "OrderBy",
          "Type": "ContactQueryResultOrdering",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.ContactQueryOptions"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetContactCountAsync",
          "ReturnType": "IAsyncOperation<UInt32>"
        },
        {
          "Name": "GetContactsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<StoredContact>>"
        },
        {
          "Name": "GetContactsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<StoredContact>>",
          "Parameters": [
            {
              "Name": "startIndex",
              "Type": "UInt32"
            },
            {
              "Name": "maxNumberOfItems",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetCurrentQueryOptions",
          "ReturnType": "ContactQueryOptions"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.ContactQueryResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "RevisionNumber",
          "Type": "UInt64",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateContactQuery",
          "ReturnType": "ContactQueryResult"
        },
        {
          "Name": "CreateContactQuery",
          "ReturnType": "ContactQueryResult",
          "Parameters": [
            {
              "Name": "options",
              "Type": "ContactQueryOptions"
            }
          ]
        },
        {
          "Name": "CreateMeContactAsync",
          "ReturnType": "IAsyncOperation<StoredContact>",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateOrOpenAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ContactStore>"
        },
        {
          "Name": "CreateOrOpenAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ContactStore>",
          "Parameters": [
            {
              "Name": "access",
              "Type": "ContactStoreSystemAccessMode"
            },
            {
              "Name": "sharing",
              "Type": "ContactStoreApplicationAccessMode"
            }
          ]
        },
        {
          "Name": "DeleteAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "DeleteContactAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "FindContactByIdAsync",
          "ReturnType": "IAsyncOperation<StoredContact>",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "FindContactByRemoteIdAsync",
          "ReturnType": "IAsyncOperation<StoredContact>",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetChangesAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<ContactChangeRecord>>",
          "Parameters": [
            {
              "Name": "baseRevisionNumber",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "LoadExtendedPropertiesAsync",
          "ReturnType": "IAsyncOperation<IDictionary<String,Object>>"
        },
        {
          "Name": "SaveExtendedPropertiesAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "data",
              "Type": "IReadOnlyDictionary<String,Object>"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.ContactStore"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AdditionalName",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Address",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AlternateMobileTelephone",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AlternateTelephone",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AlternateWorkTelephone",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Anniversary",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Birthdate",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CompanyName",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CompanyTelephone",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Email",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FamilyName",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GivenName",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HomeFax",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HonorificPrefix",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HonorificSuffix",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Children",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "JobTitle",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Manager",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MobileTelephone",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Nickname",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Notes",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OfficeLocation",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OtherAddress",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OtherEmail",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SignificantOther",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Telephone",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Url",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "WorkAddress",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "WorkEmail",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "WorkFax",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "WorkTelephone",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "YomiCompanyName",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "YomiFamilyName",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "YomiGivenName",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.KnownContactProperties"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "AssociateNetworkAccountAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "store",
              "Type": "ContactStore"
            },
            {
              "Name": "networkName",
              "Type": "String"
            },
            {
              "Name": "networkAccountId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "AssociateSocialNetworkAccountAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "store",
              "Type": "ContactStore"
            },
            {
              "Name": "networkName",
              "Type": "String"
            },
            {
              "Name": "networkAccountId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ImportVcardToSystemAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IInputStream"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.Provisioning.ContactPartnerProvisioningManager"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "ImportMmsToSystemAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "incoming",
              "Type": "Boolean"
            },
            {
              "Name": "read",
              "Type": "Boolean"
            },
            {
              "Name": "subject",
              "Type": "String"
            },
            {
              "Name": "sender",
              "Type": "String"
            },
            {
              "Name": "recipients",
              "Type": "IReadOnlyList<String>"
            },
            {
              "Name": "deliveryTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "attachments",
              "Type": "IReadOnlyList<IReadOnlyDictionary<String,Object>>"
            }
          ]
        },
        {
          "Name": "ImportSmsToSystemAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "incoming",
              "Type": "Boolean"
            },
            {
              "Name": "read",
              "Type": "Boolean"
            },
            {
              "Name": "body",
              "Type": "String"
            },
            {
              "Name": "sender",
              "Type": "String"
            },
            {
              "Name": "recipients",
              "Type": "IReadOnlyList<String>"
            },
            {
              "Name": "deliveryTime",
              "Type": "DateTimeOffset"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.Provisioning.MessagePartnerProvisioningManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContactInformation",
        "IContactInformation2"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "store",
              "Type": "ContactStore"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "store",
              "Type": "ContactStore"
            },
            {
              "Name": "contact",
              "Type": "ContactInformation"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisplayPicture",
          "Type": "IRandomAccessStreamReference",
          "IsGet": true
        },
        {
          "Name": "DisplayPictureDate",
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FamilyName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GivenName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HonorificPrefix",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HonorificSuffix",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "RemoteId",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Store",
          "Type": "ContactStore",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDisplayPictureAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStream>"
        },
        {
          "Name": "GetExtendedPropertiesAsync",
          "ReturnType": "IAsyncOperation<IDictionary<String,Object>>"
        },
        {
          "Name": "GetPropertiesAsync",
          "ReturnType": "IAsyncOperation<IDictionary<String,Object>>"
        },
        {
          "Name": "ReplaceExistingContactAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SaveAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "SetDisplayPictureAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IInputStream"
            }
          ]
        },
        {
          "Name": "ToVcardAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStream>"
        },
        {
          "Name": "ToVcardAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Parameters": [
            {
              "Name": "format",
              "Type": "VCardFormat"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.StoredContact"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RemoteId",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Username",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.Actor"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Content",
          "Type": "FeedContent",
          "IsGet": true
        },
        {
          "Name": "DefaultTarget",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OwnerRemoteId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Thumbnail",
          "Type": "FeedMediaThumbnail",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Timestamp",
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "SaveAsync",
          "ReturnType": "IAsyncAction"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.DashboardItem"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISocialOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AlbumId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "SocialOperationType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "NotifyCompletion",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "success",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "NotifyCompletion",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.DownloadAlbumCoverOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISocialOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Id",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "MaximumItemCount",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "ParentAlbumId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "StartIndex",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "SocialOperationType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "NotifyCompletion",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "success",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "NotifyCompletion",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.DownloadAlbumItemsOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISocialOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FeedOperationDetails",
          "Type": "IList<FeedOperationDetails>",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "SocialOperationType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "NotifyCompletion",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "success",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "NotifyCompletion",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.DownloadDashboardFeedOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISocialOperationFactory"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "ownerRemoteId",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Type",
          "Type": "SocialOperationType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetOperationAsync",
          "ReturnType": "IAsyncOperation<ISocialOperation>"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.DownloadDashboardFeedOperationFactory"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISocialOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FeedOperationDetails",
          "Type": "IList<FeedOperationDetails>",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "SocialOperationType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "NotifyCompletion",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "success",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "NotifyCompletion",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.DownloadFeedOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISocialOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FeedOperationDetails",
          "Type": "FeedOperationDetails",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "SocialOperationType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "NotifyCompletion",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "success",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "NotifyCompletion",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.DownloadHomeFeedOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISocialOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DesiredImageType",
          "Type": "ImageType",
          "IsGet": true
        },
        {
          "Name": "DesiredResolution",
          "Type": "ImageResolution",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "PhotoId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "SocialOperationType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "NotifyCompletion",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "success",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "NotifyCompletion",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.DownloadImageOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISocialOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Id",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Ids",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "SocialOperationType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "NotifyCompletion",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "success",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "NotifyCompletion",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.DownloadRichConnectDataOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Items",
          "Type": "IList<FeedItem>",
          "IsGet": true
        },
        {
          "Name": "OwnerRemoteId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "FeedType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "SaveAsync",
          "ReturnType": "IAsyncAction"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.Feed"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Message",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Target",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.FeedContent"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IFeedItemBase"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Author",
          "Type": "Actor",
          "IsGet": true
        },
        {
          "Name": "DefaultTarget",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PrimaryContent",
          "Type": "FeedContent",
          "IsGet": true
        },
        {
          "Name": "SecondaryContent",
          "Type": "FeedContent",
          "IsGet": true
        },
        {
          "Name": "SharedStory",
          "Type": "FeedItemSharedStory",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Thumbnails",
          "Type": "IList<FeedMediaThumbnail>",
          "IsGet": true
        },
        {
          "Name": "Timestamp",
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.FeedChildItem"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IFeedItemBase"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Author",
          "Type": "Actor",
          "IsGet": true
        },
        {
          "Name": "DefaultTarget",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ChildItem",
          "Type": "FeedChildItem",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PrimaryContent",
          "Type": "FeedContent",
          "IsGet": true
        },
        {
          "Name": "ReactionDisplayCount",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ReactionDisplayKind",
          "Type": "ReactionDisplayKind",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RemoteId",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SecondaryContent",
          "Type": "FeedContent",
          "IsGet": true
        },
        {
          "Name": "SharedStory",
          "Type": "FeedItemSharedStory",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Style",
          "Type": "FeedItemStyle",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Thumbnails",
          "Type": "IList<FeedMediaThumbnail>",
          "IsGet": true
        },
        {
          "Name": "Timestamp",
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.FeedItem"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Content",
          "Type": "FeedContent",
          "IsGet": true
        },
        {
          "Name": "DefaultTarget",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Source",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Thumbnail",
          "Type": "FeedMediaThumbnail",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Timestamp",
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.FeedItemSharedStory"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Image",
          "Type": "IRandomAccessStreamReference",
          "IsGet": true
        },
        {
          "Name": "ImageUrl",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Resolution",
          "Type": "ImageResolution",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Target",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetImageAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStream>"
        },
        {
          "Name": "SetImageAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IInputStream"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.FeedMediaThumbnail"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Direction",
          "Type": "FeedRequestDirection",
          "IsGet": true
        },
        {
          "Name": "FeedItemRemoteId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "FeedItemTimestamp",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "ItemCount",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "OwnerRemoteId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "FeedType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.FeedOperationDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetItemCountAsync",
          "ReturnType": "IAsyncOperation<UInt32>"
        },
        {
          "Name": "GetItemsAsync",
          "ReturnType": "IAsyncOperation<IList<IOnlineMediaItem>>"
        },
        {
          "Name": "GetItemsAsync",
          "ReturnType": "IAsyncOperation<IList<IOnlineMediaItem>>",
          "Parameters": [
            {
              "Name": "count",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.OnlineMedia.OnlineMediaItemQueryResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreatePicture",
          "ReturnType": "OnlinePicture",
          "Parameters": [
            {
              "Name": "remoteId",
              "Type": "String"
            },
            {
              "Name": "parentPictureAlbumId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreatePictureAlbum",
          "ReturnType": "OnlinePictureAlbum",
          "Parameters": [
            {
              "Name": "remoteId",
              "Type": "String"
            },
            {
              "Name": "parentPictureAlbumId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreatePictureAlbumQuery",
          "ReturnType": "OnlinePictureAlbumQueryResult"
        },
        {
          "Name": "CreatePictureQuery",
          "ReturnType": "OnlinePictureQueryResult"
        },
        {
          "Name": "CreateVideo",
          "ReturnType": "OnlineVideo",
          "Parameters": [
            {
              "Name": "remoteId",
              "Type": "String"
            },
            {
              "Name": "parentPictureAlbumId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateVideoQuery",
          "ReturnType": "OnlineVideoQueryResult"
        },
        {
          "Name": "DeleteMediaItemAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "item",
              "Type": "IOnlineMediaItem"
            }
          ]
        },
        {
          "Name": "DeletePictureAlbumAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "item",
              "Type": "OnlinePictureAlbum"
            }
          ]
        },
        {
          "Name": "DeletePictureAlbumContentsAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "item",
              "Type": "OnlinePictureAlbum"
            }
          ]
        },
        {
          "Name": "DeprovisionAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "GetPictureAlbumAsync",
          "ReturnType": "IAsyncOperation<OnlinePictureAlbum>",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetPictureAlbumByRemoteIdAsync",
          "ReturnType": "IAsyncOperation<OnlinePictureAlbum>",
          "Parameters": [
            {
              "Name": "remoteId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetPictureAsync",
          "ReturnType": "IAsyncOperation<OnlinePicture>",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetPictureByRemoteIdAsync",
          "ReturnType": "IAsyncOperation<OnlinePicture>",
          "Parameters": [
            {
              "Name": "remoteId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetRootPictureAlbumAsync",
          "ReturnType": "IAsyncOperation<OnlinePictureAlbum>"
        },
        {
          "Name": "GetVideoAsync",
          "ReturnType": "IAsyncOperation<OnlineVideo>",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetVideoByRemoteIdAsync",
          "ReturnType": "IAsyncOperation<OnlineVideo>",
          "Parameters": [
            {
              "Name": "remoteId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ProvisionAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "RequestMediaManagerAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<OnlineMediaManager>"
        },
        {
          "Name": "SaveMediaItemAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "item",
              "Type": "IOnlineMediaItem"
            }
          ]
        },
        {
          "Name": "SaveMediaItemsAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "videos",
              "Type": "IEnumerable<IOnlineMediaItem>"
            }
          ]
        },
        {
          "Name": "SavePictureAlbumAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "item",
              "Type": "OnlinePictureAlbum"
            }
          ]
        },
        {
          "Name": "SavePictureAlbumsAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pictureAlbums",
              "Type": "IEnumerable<OnlinePictureAlbum>"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.OnlineMedia.OnlineMediaManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IOnlineMediaItem"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ContentUrl",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CreationTime",
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Height",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "RemoteId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ThumbnailLargeUrl",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ThumbnailSmallUrl",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Width",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetContentAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStream>"
        },
        {
          "Name": "GetPictureAlbumAsync",
          "ReturnType": "IAsyncOperation<OnlinePictureAlbum>"
        },
        {
          "Name": "GetThumbnailLargeAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStream>"
        },
        {
          "Name": "GetThumbnailSmallAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStream>"
        },
        {
          "Name": "SetContentAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pValue",
              "Type": "IInputStream"
            }
          ]
        },
        {
          "Name": "SetThumbnailLargeAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pValue",
              "Type": "IInputStream"
            }
          ]
        },
        {
          "Name": "SetThumbnailSmallAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pValue",
              "Type": "IInputStream"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.OnlineMedia.OnlinePicture"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CoverImageUrl",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CreationTime",
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ParentPictureAlbumId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "RemoteId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "RequiresAuthentication",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VersionStamp",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetContentsQuery",
          "ReturnType": "OnlineMediaItemQueryResult"
        },
        {
          "Name": "GetCoverImageAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStream>"
        },
        {
          "Name": "GetPictureAlbumsQuery",
          "ReturnType": "OnlinePictureAlbumQueryResult"
        },
        {
          "Name": "SetCoverImageAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pValue",
              "Type": "IInputStream"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.OnlineMedia.OnlinePictureAlbum"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetPictureAlbumCountAsync",
          "ReturnType": "IAsyncOperation<UInt32>"
        },
        {
          "Name": "GetPictureAlbumsAsync",
          "ReturnType": "IAsyncOperation<IList<OnlinePictureAlbum>>"
        },
        {
          "Name": "GetPictureAlbumsAsync",
          "ReturnType": "IAsyncOperation<IList<OnlinePictureAlbum>>",
          "Parameters": [
            {
              "Name": "count",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.OnlineMedia.OnlinePictureAlbumQueryResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetPictureCountAsync",
          "ReturnType": "IAsyncOperation<UInt32>"
        },
        {
          "Name": "GetPicturesAsync",
          "ReturnType": "IAsyncOperation<IList<OnlinePicture>>"
        },
        {
          "Name": "GetPicturesAsync",
          "ReturnType": "IAsyncOperation<IList<OnlinePicture>>",
          "Parameters": [
            {
              "Name": "count",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.OnlineMedia.OnlinePictureQueryResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IOnlineMediaItem"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ContentUrl",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CreationTime",
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Duration",
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Height",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "RemoteId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ThumbnailLargeUrl",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ThumbnailSmallUrl",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Width",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetContentAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStream>"
        },
        {
          "Name": "GetPictureAlbumAsync",
          "ReturnType": "IAsyncOperation<OnlinePictureAlbum>"
        },
        {
          "Name": "GetThumbnailLargeAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStream>"
        },
        {
          "Name": "GetThumbnailSmallAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStream>"
        },
        {
          "Name": "SetContentAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pValue",
              "Type": "IInputStream"
            }
          ]
        },
        {
          "Name": "SetThumbnailLargeAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pValue",
              "Type": "IInputStream"
            }
          ]
        },
        {
          "Name": "SetThumbnailSmallAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pValue",
              "Type": "IInputStream"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.OnlineMedia.OnlineVideo"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetVideoCountAsync",
          "ReturnType": "IAsyncOperation<UInt32>"
        },
        {
          "Name": "GetVideosAsync",
          "ReturnType": "IAsyncOperation<IList<OnlineVideo>>"
        },
        {
          "Name": "GetVideosAsync",
          "ReturnType": "IAsyncOperation<IList<OnlineVideo>>",
          "Parameters": [
            {
              "Name": "count",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.OnlineMedia.OnlineVideoQueryResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetNextOperationAsync",
          "ReturnType": "IAsyncOperation<ISocialOperation>"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.OperationQueue"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "DeleteAllAppUserDataAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "DeprovisionAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "GetOperationQueueAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<OperationQueue>"
        },
        {
          "Name": "MarkFeedAsStaleAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "ownerRemoteId",
              "Type": "String"
            },
            {
              "Name": "feedType",
              "Type": "FeedType"
            }
          ]
        },
        {
          "Name": "OpenContactDashboardAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<DashboardItem>",
          "Parameters": [
            {
              "Name": "FeedOperationDetails",
              "Type": "FeedOperationDetails"
            }
          ]
        },
        {
          "Name": "OpenContactFeedAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Feed>",
          "Parameters": [
            {
              "Name": "FeedOperationDetails",
              "Type": "FeedOperationDetails"
            }
          ]
        },
        {
          "Name": "OpenHomeFeedAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Feed>",
          "Parameters": [
            {
              "Name": "FeedOperationDetails",
              "Type": "FeedOperationDetails"
            }
          ]
        },
        {
          "Name": "ProvisionAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "UpdateReactionDisplayCountAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "itemRemoteId",
              "Type": "String"
            },
            {
              "Name": "count",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.SocialManager"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "All",
          "Type": "IReadOnlyList<SpeechRecognizerInformation>",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Default",
          "Type": "SpeechRecognizerInformation",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.InstalledSpeechRecognizers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "Object",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetAllValues",
          "ReturnType": "IReadOnlyList<Object>"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.SemanticProperty"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Problem",
          "Type": "SpeechRecognitionAudioProblem",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.SpeechAudioProblemOccurredEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Enabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Probability",
          "Type": "SpeechGrammarProbability",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.SpeechGrammar"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,SpeechGrammar>>",
        "IReadOnlyCollection<KeyValuePair<String,SpeechGrammar>>",
        "IReadOnlyDictionary<String,SpeechGrammar>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AddGrammarFromList",
          "ReturnType": "SpeechGrammar",
          "Parameters": [
            {
              "Name": "key",
              "Type": "String"
            },
            {
              "Name": "phrases",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "AddGrammarFromPredefinedType",
          "ReturnType": "SpeechGrammar",
          "Parameters": [
            {
              "Name": "key",
              "Type": "String"
            },
            {
              "Name": "predefinedGrammarType",
              "Type": "SpeechPredefinedGrammar"
            }
          ]
        },
        {
          "Name": "AddGrammarFromUri",
          "ReturnType": "SpeechGrammar",
          "Parameters": [
            {
              "Name": "key",
              "Type": "String"
            },
            {
              "Name": "grammarUri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "Clear",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.SpeechGrammarSet"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Details",
          "Type": "SpeechRecognitionResultDetail",
          "IsGet": true
        },
        {
          "Name": "RuleName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Semantics",
          "Type": "IReadOnlyDictionary<String,SemanticProperty>",
          "IsGet": true
        },
        {
          "Name": "Text",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "TextConfidence",
          "Type": "SpeechRecognitionConfidence",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetAlternates",
          "ReturnType": "IReadOnlyList<SpeechRecognitionResult>",
          "Parameters": [
            {
              "Name": "maxAlternates",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognitionResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ConfidenceScore",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "RuleStack",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognitionResultDetail"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "RecognitionResult",
          "Type": "SpeechRecognitionResult",
          "IsGet": true
        },
        {
          "Name": "ResultStatus",
          "Type": "SpeechRecognitionUIStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognitionUIResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Grammars",
          "Type": "SpeechGrammarSet",
          "IsGet": true
        },
        {
          "Name": "Settings",
          "Type": "SpeechRecognizerSettings",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "GetRecognizer",
          "ReturnType": "SpeechRecognizerInformation"
        },
        {
          "Name": "PreloadGrammarsAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "RecognizeAsync",
          "ReturnType": "IAsyncOperation<SpeechRecognitionResult>"
        },
        {
          "Name": "SetRecognizer",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "recognizerInformation",
              "Type": "SpeechRecognizerInformation"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "AudioCaptureStateChanged",
          "Type": "TypedEventHandler<SpeechRecognizer,SpeechRecognizerAudioCaptureStateChangedEventArgs>"
        },
        {
          "Name": "AudioProblemOccurred",
          "Type": "TypedEventHandler<SpeechRecognizer,SpeechAudioProblemOccurredEventArgs>"
        }
      ],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognizer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "State",
          "Type": "SpeechRecognizerAudioCaptureState",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognizerAudioCaptureStateChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Description",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognizerInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BabbleTimeout",
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EndSilenceTimeout",
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "InitialSilenceTimeout",
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognizerSettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Recognizer",
          "Type": "SpeechRecognizer",
          "IsGet": true
        },
        {
          "Name": "Settings",
          "Type": "SpeechRecognizerUISettings",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "RecognizeWithUIAsync",
          "ReturnType": "IAsyncOperation<SpeechRecognitionUIResult>"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognizerUI"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ExampleText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ListenText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ReadoutEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ShowConfirmation",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognizerUISettings"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "All",
          "Type": "IReadOnlyList<VoiceInformation>",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Default",
          "Type": "VoiceInformation",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Synthesis.InstalledVoices"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AudioPosition",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "Bookmark",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "UserState",
          "Type": "Object",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Synthesis.SpeechBookmarkReachedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "UserState",
          "Type": "Object",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Synthesis.SpeechStartedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CancelAll",
          "ReturnType": "Void"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "GetVoice",
          "ReturnType": "VoiceInformation"
        },
        {
          "Name": "SetVoice",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "voiceInformation",
              "Type": "VoiceInformation"
            }
          ]
        },
        {
          "Name": "SpeakSsmlAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "content",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SpeakSsmlAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "content",
              "Type": "String"
            },
            {
              "Name": "userState",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SpeakSsmlFromUriAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "content",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "SpeakSsmlFromUriAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "content",
              "Type": "Uri"
            },
            {
              "Name": "userState",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SpeakTextAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "content",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SpeakTextAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "content",
              "Type": "String"
            },
            {
              "Name": "userState",
              "Type": "Object"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "BookmarkReached",
          "Type": "TypedEventHandler<SpeechSynthesizer,SpeechBookmarkReachedEventArgs>"
        },
        {
          "Name": "SpeechStarted",
          "Type": "TypedEventHandler<SpeechSynthesizer,SpeechStartedEventArgs>"
        }
      ],
      "Name": "Windows.Phone.Speech.Synthesis.SpeechSynthesizer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Description",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Gender",
          "Type": "VoiceGender",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Synthesis.VoiceInformation"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "InstalledCommandSets",
          "Type": "IReadOnlyDictionary<String,VoiceCommandSet>",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "InstallCommandSetsFromFileAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "voiceCommandDefinitionUri",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Speech.VoiceCommands.VoiceCommandService"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "UpdatePhraseListAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "phraseListName",
              "Type": "String"
            },
            {
              "Name": "phraseList",
              "Type": "IEnumerable<String>"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Speech.VoiceCommands.VoiceCommandSet"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CopySharedFileAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IStorageFile>",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "StorageFolder"
            },
            {
              "Name": "desiredName",
              "Type": "String"
            },
            {
              "Name": "option",
              "Type": "NameCollisionOption"
            },
            {
              "Name": "fileToken",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetSharedFileName",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "fileToken",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Storage.SharedAccess.SharedStorageAccessManager"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "PublisherHostId",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.System.Analytics.HostInformation"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "BeginUnlock",
          "IsStatic": true,
          "ReturnType": "Void"
        },
        {
          "Name": "EndUnlock",
          "IsStatic": true,
          "ReturnType": "Void"
        },
        {
          "Name": "GetLockPinpadHeight",
          "IsStatic": true,
          "ReturnType": "Int32"
        },
        {
          "Name": "IsLockScreenApplicationRegistered",
          "IsStatic": true,
          "ReturnType": "Boolean"
        },
        {
          "Name": "IsSystemOverlayApplicationRegistered",
          "IsStatic": true,
          "ReturnType": "Boolean"
        },
        {
          "Name": "RaiseToastNotifications",
          "IsStatic": true,
          "ReturnType": "Void"
        },
        {
          "Name": "RegisterLockScreenApplication",
          "IsStatic": true,
          "ReturnType": "Void"
        },
        {
          "Name": "RegisterSystemOverlayApplication",
          "IsStatic": true,
          "ReturnType": "Void"
        },
        {
          "Name": "UnregisterLockScreenApplication",
          "IsStatic": true,
          "ReturnType": "Void"
        },
        {
          "Name": "UnregisterSystemOverlayApplication",
          "IsStatic": true,
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.System.LockScreenExtensibility.ExtensibilityApp"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ProcessCommittedBytes",
          "Type": "UInt64",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ProcessCommittedLimit",
          "Type": "UInt64",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.System.Memory.MemoryManager"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "PowerSavingMode",
          "Type": "PowerSavingMode",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PowerSavingModeEnabled",
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "PowerSavingModeChanged",
          "Type": "EventHandler<Object>",
          "IsStatic": true
        }
      ],
      "Name": "Windows.Phone.System.Power.PowerManager"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "RetailModeEnabled",
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.System.Profile.RetailMode"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ScreenLocked",
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "RequestScreenUnlock",
          "IsStatic": true,
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.System.SystemProtection"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ServiceUri",
          "Type": "Uri",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetAuthenticationStatus",
          "IsStatic": true,
          "ReturnType": "UInt32"
        },
        {
          "Name": "GetGamerProfileAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<GameServicePropertyCollection>"
        },
        {
          "Name": "GetInstalledGameItemsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<GameServicePropertyCollection>"
        },
        {
          "Name": "GetPartnerTokenAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "audienceUri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "GetPrivilegesAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>"
        },
        {
          "Name": "GrantAchievement",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "achievementId",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GrantAvatarAward",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "avatarAwardId",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "NotifyPartnerTokenExpired",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "audienceUri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "PostResult",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "gameVariant",
              "Type": "UInt32"
            },
            {
              "Name": "scoreKind",
              "Type": "GameServiceScoreKind"
            },
            {
              "Name": "scoreValue",
              "Type": "Int64"
            },
            {
              "Name": "gameOutcome",
              "Type": "GameServiceGameOutcome"
            },
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.System.UserProfile.GameServices.Core.GameService"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetPropertyAsync",
          "ReturnType": "IAsyncOperation<Object>",
          "Parameters": [
            {
              "Name": "propertyName",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.System.UserProfile.GameServices.Core.GameServicePropertyCollection"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetImageUri",
          "IsStatic": true,
          "ReturnType": "Uri"
        },
        {
          "Name": "SetImageUri",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.System.UserProfile.LockScreen"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsProvidedByCurrentApplication",
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "RequestAccessAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<LockScreenRequestResult>"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.System.UserProfile.LockScreenManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Length",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Start",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.UI.Core.CoreSelectionChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NewText",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "OldLength",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Start",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.UI.Core.CoreTextChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "InputScope",
          "Type": "CoreInputScope",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SelectionLength",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "SelectionStart",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Text",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Select",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "start",
              "Type": "UInt32"
            },
            {
              "Name": "length",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "SelectFromTap",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "characterIndex",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "SelectionChanged",
          "Type": "TypedEventHandler<KeyboardInputBuffer,CoreSelectionChangedEventArgs>"
        },
        {
          "Name": "TextChanged",
          "Type": "TypedEventHandler<KeyboardInputBuffer,CoreTextChangedEventArgs>"
        }
      ],
      "Name": "Windows.Phone.UI.Core.KeyboardInputBuffer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.UI.Input.BackPressedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.UI.Input.CameraEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "BackPressed",
          "Type": "EventHandler<BackPressedEventArgs>",
          "IsStatic": true
        },
        {
          "Name": "CameraHalfPressed",
          "Type": "EventHandler<CameraEventArgs>",
          "IsStatic": true
        },
        {
          "Name": "CameraPressed",
          "Type": "EventHandler<CameraEventArgs>",
          "IsStatic": true
        },
        {
          "Name": "CameraReleased",
          "Type": "EventHandler<CameraEventArgs>",
          "IsStatic": true
        }
      ],
      "Name": "Windows.Phone.UI.Input.HardwareButtons"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ApplicationId",
          "Type": "Guid",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AuthenticatedSafeCustomerId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "CanSignOut",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AuthenticateUserAsync",
          "ReturnType": "UserAuthenticationOperation",
          "Parameters": [
            {
              "Name": "request",
              "Type": "OnlineIdServiceTicketRequest"
            }
          ]
        },
        {
          "Name": "AuthenticateUserAsync",
          "ReturnType": "UserAuthenticationOperation",
          "Parameters": [
            {
              "Name": "requests",
              "Type": "IEnumerable<OnlineIdServiceTicketRequest>"
            },
            {
              "Name": "credentialPromptType",
              "Type": "CredentialPromptType"
            }
          ]
        },
        {
          "Name": "SignOutUserAsync",
          "ReturnType": "SignOutUserOperation"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Authentication.OnlineId.OnlineIdAuthenticator"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ErrorCode",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "Request",
          "Type": "OnlineIdServiceTicketRequest",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Authentication.OnlineId.OnlineIdServiceTicket"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "service",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "service",
              "Type": "String"
            },
            {
              "Name": "policy",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Policy",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Service",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Authentication.OnlineId.OnlineIdServiceTicketRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IAsyncAction",
        "IAsyncInfo"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Completed",
          "Type": "AsyncActionCompletedHandler",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ErrorCode",
          "Type": "Exception",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "AsyncStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Cancel",
          "ReturnType": "Void"
        },
        {
          "Name": "Close",
          "ReturnType": "Void"
        },
        {
          "Name": "GetResults",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Authentication.OnlineId.SignOutUserOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IAsyncInfo",
        "IAsyncOperation<UserIdentity>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Completed",
          "Type": "AsyncOperationCompletedHandler<UserIdentity>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ErrorCode",
          "Type": "Exception",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "AsyncStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Cancel",
          "ReturnType": "Void"
        },
        {
          "Name": "Close",
          "ReturnType": "Void"
        },
        {
          "Name": "GetResults",
          "ReturnType": "UserIdentity"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Authentication.OnlineId.UserAuthenticationOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FirstName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "IsBetaAccount",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsConfirmedPC",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "LastName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SafeCustomerId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SignInName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Tickets",
          "Type": "IReadOnlyList<OnlineIdServiceTicket>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Authentication.OnlineId.UserIdentity"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "AuthenticateAndContinue",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "requestUri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "AuthenticateAndContinue",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "requestUri",
              "Type": "Uri"
            },
            {
              "Name": "callbackUri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "AuthenticateAndContinue",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "requestUri",
              "Type": "Uri"
            },
            {
              "Name": "callbackUri",
              "Type": "Uri"
            },
            {
              "Name": "continuationData",
              "Type": "ValueSet"
            },
            {
              "Name": "options",
              "Type": "WebAuthenticationOptions"
            }
          ]
        },
        {
          "Name": "AuthenticateAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<WebAuthenticationResult>",
          "Parameters": [
            {
              "Name": "options",
              "Type": "WebAuthenticationOptions"
            },
            {
              "Name": "requestUri",
              "Type": "Uri"
            },
            {
              "Name": "callbackUri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "AuthenticateAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<WebAuthenticationResult>",
          "Parameters": [
            {
              "Name": "options",
              "Type": "WebAuthenticationOptions"
            },
            {
              "Name": "requestUri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "AuthenticateSilentlyAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<WebAuthenticationResult>",
          "Parameters": [
            {
              "Name": "requestUri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "AuthenticateSilentlyAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<WebAuthenticationResult>",
          "Parameters": [
            {
              "Name": "requestUri",
              "Type": "Uri"
            },
            {
              "Name": "options",
              "Type": "WebAuthenticationOptions"
            }
          ]
        },
        {
          "Name": "GetCurrentApplicationCallbackUri",
          "IsStatic": true,
          "ReturnType": "Uri"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.WebAuthenticationBroker"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ResponseData",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ResponseErrorDetail",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "ResponseStatus",
          "Type": "WebAuthenticationStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.WebAuthenticationResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "resource",
              "Type": "String"
            },
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "password",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Password",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Properties",
          "Type": "IPropertySet",
          "IsGet": true
        },
        {
          "Name": "Resource",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UserName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "RetrievePassword",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Credentials.PasswordCredential"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,Object>>",
        "IDictionary<String,Object>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,Object>>",
        "IObservableMap<String,Object>",
        "IPropertySet"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "MapChanged",
          "Type": "MapChangedEventHandler<String,Object>"
        }
      ],
      "Name": "Windows.Security.Credentials.PasswordCredentialPropertyStore"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Add",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "credential",
              "Type": "PasswordCredential"
            }
          ]
        },
        {
          "Name": "FindAllByResource",
          "ReturnType": "IReadOnlyList<PasswordCredential>",
          "Parameters": [
            {
              "Name": "resource",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "FindAllByUserName",
          "ReturnType": "IReadOnlyList<PasswordCredential>",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "Remove",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "credential",
              "Type": "PasswordCredential"
            }
          ]
        },
        {
          "Name": "Retrieve",
          "ReturnType": "PasswordCredential",
          "Parameters": [
            {
              "Name": "resource",
              "Type": "String"
            },
            {
              "Name": "userName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "RetrieveAll",
          "ReturnType": "IReadOnlyList<PasswordCredential>"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Credentials.PasswordVault"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "certBlob",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "EnhancedKeyUsages",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        },
        {
          "Name": "FriendlyName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HasPrivateKey",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsStronglyProtected",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Issuer",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SerialNumber",
          "Type": "Byte[]",
          "IsGet": true
        },
        {
          "Name": "Subject",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ValidFrom",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "ValidTo",
          "Type": "DateTimeOffset",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "BuildChainAsync",
          "ReturnType": "IAsyncOperation<CertificateChain>",
          "Parameters": [
            {
              "Name": "certificates",
              "Type": "IEnumerable<Certificate>"
            }
          ]
        },
        {
          "Name": "BuildChainAsync",
          "ReturnType": "IAsyncOperation<CertificateChain>",
          "Parameters": [
            {
              "Name": "certificates",
              "Type": "IEnumerable<Certificate>"
            },
            {
              "Name": "parameters",
              "Type": "ChainBuildingParameters"
            }
          ]
        },
        {
          "Name": "GetCertificateBlob",
          "ReturnType": "IBuffer"
        },
        {
          "Name": "GetHashValue",
          "ReturnType": "Byte[]"
        },
        {
          "Name": "GetHashValue",
          "ReturnType": "Byte[]",
          "Parameters": [
            {
              "Name": "hashAlgorithmName",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.Certificate"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "UserCertificateEnrollmentManager",
          "Type": "UserCertificateEnrollmentManager",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateRequestAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "request",
              "Type": "CertificateRequestProperties"
            }
          ]
        },
        {
          "Name": "ImportPfxDataAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pfxData",
              "Type": "String"
            },
            {
              "Name": "password",
              "Type": "String"
            },
            {
              "Name": "exportable",
              "Type": "ExportOption"
            },
            {
              "Name": "keyProtectionLevel",
              "Type": "KeyProtectionLevel"
            },
            {
              "Name": "installOption",
              "Type": "InstallOptions"
            },
            {
              "Name": "friendlyName",
              "Type": "String"
            },
            {
              "Name": "keyStorageProvider",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ImportPfxDataAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pfxData",
              "Type": "String"
            },
            {
              "Name": "password",
              "Type": "String"
            },
            {
              "Name": "exportable",
              "Type": "ExportOption"
            },
            {
              "Name": "keyProtectionLevel",
              "Type": "KeyProtectionLevel"
            },
            {
              "Name": "installOption",
              "Type": "InstallOptions"
            },
            {
              "Name": "friendlyName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "InstallCertificateAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "certificate",
              "Type": "String"
            },
            {
              "Name": "installOption",
              "Type": "InstallOptions"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.CertificateEnrollmentManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetCertificates",
          "ReturnType": "IReadOnlyList<Certificate>",
          "Parameters": [
            {
              "Name": "includeRoot",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "Validate",
          "ReturnType": "ChainValidationResult"
        },
        {
          "Name": "Validate",
          "ReturnType": "ChainValidationResult",
          "Parameters": [
            {
              "Name": "parameter",
              "Type": "ChainValidationParameters"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.CertificateChain"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "EnhancedKeyUsages",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "FriendlyName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HardwareOnly",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IssuerName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Thumbprint",
          "Type": "Byte[]",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.CertificateQuery"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AttestationCredentialCertificate",
          "Type": "Certificate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Exportable",
          "Type": "ExportOption",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FriendlyName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HashAlgorithmName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "KeyAlgorithmName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "KeyProtectionLevel",
          "Type": "KeyProtectionLevel",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "KeySize",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "KeyStorageProviderName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "KeyUsages",
          "Type": "EnrollKeyUsages",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SigningCertificate",
          "Type": "Certificate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SmartcardReaderName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Subject",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.CertificateRequestProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Add",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "certificate",
              "Type": "Certificate"
            }
          ]
        },
        {
          "Name": "Delete",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "certificate",
              "Type": "Certificate"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.CertificateStore"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IntermediateCertificationAuthorities",
          "Type": "CertificateStore",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TrustedRootCertificationAuthorities",
          "Type": "CertificateStore",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "FindAllAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<Certificate>>"
        },
        {
          "Name": "FindAllAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<Certificate>>",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CertificateQuery"
            }
          ]
        },
        {
          "Name": "GetStoreByName",
          "IsStatic": true,
          "ReturnType": "CertificateStore",
          "Parameters": [
            {
              "Name": "storeName",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.CertificateStores"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "inputBlob",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Certificates",
          "Type": "IReadOnlyList<Certificate>",
          "IsGet": true
        },
        {
          "Name": "Content",
          "Type": "Byte[]",
          "IsGet": true
        },
        {
          "Name": "Signers",
          "Type": "IReadOnlyList<CmsSignerInfo>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GenerateSignatureAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IBuffer>",
          "Parameters": [
            {
              "Name": "data",
              "Type": "IBuffer"
            },
            {
              "Name": "signers",
              "Type": "IEnumerable<CmsSignerInfo>"
            },
            {
              "Name": "certificates",
              "Type": "IEnumerable<Certificate>"
            }
          ]
        },
        {
          "Name": "VerifySignature",
          "ReturnType": "SignatureValidationResult"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.CmsAttachedSignature"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "inputBlob",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Certificates",
          "Type": "IReadOnlyList<Certificate>",
          "IsGet": true
        },
        {
          "Name": "Signers",
          "Type": "IReadOnlyList<CmsSignerInfo>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GenerateSignatureAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IBuffer>",
          "Parameters": [
            {
              "Name": "data",
              "Type": "IInputStream"
            },
            {
              "Name": "signers",
              "Type": "IEnumerable<CmsSignerInfo>"
            },
            {
              "Name": "certificates",
              "Type": "IEnumerable<Certificate>"
            }
          ]
        },
        {
          "Name": "VerifySignatureAsync",
          "ReturnType": "IAsyncOperation<SignatureValidationResult>",
          "Parameters": [
            {
              "Name": "data",
              "Type": "IInputStream"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.CmsDetachedSignature"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Certificate",
          "Type": "Certificate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HashAlgorithmName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TimestampInfo",
          "Type": "CmsTimestampInfo",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.CmsSignerInfo"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Certificates",
          "Type": "IReadOnlyList<Certificate>",
          "IsGet": true
        },
        {
          "Name": "SigningCertificate",
          "Type": "Certificate",
          "IsGet": true
        },
        {
          "Name": "Timestamp",
          "Type": "DateTimeOffset",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.CmsTimestampInfo"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AuthorityInformationAccessEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CurrentTimeValidationEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EnhancedKeyUsages",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "ExclusiveTrustRoots",
          "Type": "IList<Certificate>",
          "IsGet": true
        },
        {
          "Name": "NetworkRetrievalEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RevocationCheckEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ValidationTimestamp",
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.ChainBuildingParameters"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CertificateChainPolicy",
          "Type": "CertificateChainPolicy",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ServerDnsName",
          "Type": "HostName",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.ChainValidationParameters"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Dsa",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Ecdh256",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Ecdh384",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Ecdh521",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Ecdsa256",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Ecdsa384",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Ecdsa521",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Rsa",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.KeyAlgorithmNames"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "DecryptTpmAttestationCredentialAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "credential",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetTpmAttestationCredentialId",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "credential",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.KeyAttestationHelper"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "PlatformKeyStorageProvider",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SmartcardKeyStorageProvider",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SoftwareKeyStorageProvider",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.KeyStorageProviderNames"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateRequestAsync",
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "request",
              "Type": "CertificateRequestProperties"
            }
          ]
        },
        {
          "Name": "ImportPfxDataAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pfxData",
              "Type": "String"
            },
            {
              "Name": "password",
              "Type": "String"
            },
            {
              "Name": "exportable",
              "Type": "ExportOption"
            },
            {
              "Name": "keyProtectionLevel",
              "Type": "KeyProtectionLevel"
            },
            {
              "Name": "installOption",
              "Type": "InstallOptions"
            },
            {
              "Name": "friendlyName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ImportPfxDataAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pfxData",
              "Type": "String"
            },
            {
              "Name": "password",
              "Type": "String"
            },
            {
              "Name": "exportable",
              "Type": "ExportOption"
            },
            {
              "Name": "keyProtectionLevel",
              "Type": "KeyProtectionLevel"
            },
            {
              "Name": "installOption",
              "Type": "InstallOptions"
            },
            {
              "Name": "friendlyName",
              "Type": "String"
            },
            {
              "Name": "keyStorageProvider",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "InstallCertificateAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "certificate",
              "Type": "String"
            },
            {
              "Name": "installOption",
              "Type": "InstallOptions"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.UserCertificateEnrollmentManager"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DsaSha1",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DsaSha256",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "EcdsaP256Sha256",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "EcdsaP384Sha384",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "EcdsaP521Sha512",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RsaOaepSha1",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RsaOaepSha256",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RsaOaepSha384",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RsaOaepSha512",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RsaPkcs1",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RsaSignPkcs1Sha1",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RsaSignPkcs1Sha256",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RsaSignPkcs1Sha384",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RsaSignPkcs1Sha512",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RsaSignPssSha1",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RsaSignPssSha256",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RsaSignPssSha384",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RsaSignPssSha512",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.AsymmetricAlgorithmNames"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AlgorithmName",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateKeyPair",
          "ReturnType": "CryptographicKey",
          "Parameters": [
            {
              "Name": "keySize",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "ImportKeyPair",
          "ReturnType": "CryptographicKey",
          "Parameters": [
            {
              "Name": "keyBlob",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "ImportKeyPair",
          "ReturnType": "CryptographicKey",
          "Parameters": [
            {
              "Name": "keyBlob",
              "Type": "IBuffer"
            },
            {
              "Name": "BlobType",
              "Type": "CryptographicPrivateKeyBlobType"
            }
          ]
        },
        {
          "Name": "ImportPublicKey",
          "ReturnType": "CryptographicKey",
          "Parameters": [
            {
              "Name": "keyBlob",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "ImportPublicKey",
          "ReturnType": "CryptographicKey",
          "Parameters": [
            {
              "Name": "keyBlob",
              "Type": "IBuffer"
            },
            {
              "Name": "BlobType",
              "Type": "CryptographicPublicKeyBlobType"
            }
          ]
        },
        {
          "Name": "OpenAlgorithm",
          "IsStatic": true,
          "ReturnType": "AsymmetricKeyAlgorithmProvider",
          "Parameters": [
            {
              "Name": "algorithm",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.AsymmetricKeyAlgorithmProvider"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Decrypt",
          "IsStatic": true,
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "key",
              "Type": "CryptographicKey"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            },
            {
              "Name": "iv",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "DecryptAndAuthenticate",
          "IsStatic": true,
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "key",
              "Type": "CryptographicKey"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            },
            {
              "Name": "nonce",
              "Type": "IBuffer"
            },
            {
              "Name": "authenticationTag",
              "Type": "IBuffer"
            },
            {
              "Name": "authenticatedData",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "DecryptAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IBuffer>",
          "Parameters": [
            {
              "Name": "key",
              "Type": "CryptographicKey"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            },
            {
              "Name": "iv",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "DeriveKeyMaterial",
          "IsStatic": true,
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "key",
              "Type": "CryptographicKey"
            },
            {
              "Name": "parameters",
              "Type": "KeyDerivationParameters"
            },
            {
              "Name": "desiredKeySize",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "Encrypt",
          "IsStatic": true,
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "key",
              "Type": "CryptographicKey"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            },
            {
              "Name": "iv",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "EncryptAndAuthenticate",
          "IsStatic": true,
          "ReturnType": "EncryptedAndAuthenticatedData",
          "Parameters": [
            {
              "Name": "key",
              "Type": "CryptographicKey"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            },
            {
              "Name": "nonce",
              "Type": "IBuffer"
            },
            {
              "Name": "authenticatedData",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "Sign",
          "IsStatic": true,
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "key",
              "Type": "CryptographicKey"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "SignAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IBuffer>",
          "Parameters": [
            {
              "Name": "key",
              "Type": "CryptographicKey"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "SignHashedData",
          "IsStatic": true,
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "key",
              "Type": "CryptographicKey"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "SignHashedDataAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IBuffer>",
          "Parameters": [
            {
              "Name": "key",
              "Type": "CryptographicKey"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "VerifySignature",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "key",
              "Type": "CryptographicKey"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            },
            {
              "Name": "signature",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "VerifySignatureWithHashInput",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "key",
              "Type": "CryptographicKey"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            },
            {
              "Name": "signature",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.CryptographicEngine"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Append",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "GetValueAndReset",
          "ReturnType": "IBuffer"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.CryptographicHash"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "KeySize",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Export",
          "ReturnType": "IBuffer"
        },
        {
          "Name": "Export",
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "BlobType",
              "Type": "CryptographicPrivateKeyBlobType"
            }
          ]
        },
        {
          "Name": "ExportPublicKey",
          "ReturnType": "IBuffer"
        },
        {
          "Name": "ExportPublicKey",
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "BlobType",
              "Type": "CryptographicPublicKeyBlobType"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.CryptographicKey"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AuthenticationTag",
          "Type": "IBuffer",
          "IsGet": true
        },
        {
          "Name": "EncryptedData",
          "Type": "IBuffer",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.EncryptedAndAuthenticatedData"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Md5",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Sha1",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Sha256",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Sha384",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Sha512",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.HashAlgorithmNames"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AlgorithmName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "HashLength",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateHash",
          "ReturnType": "CryptographicHash"
        },
        {
          "Name": "HashData",
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "OpenAlgorithm",
          "IsStatic": true,
          "ReturnType": "HashAlgorithmProvider",
          "Parameters": [
            {
              "Name": "algorithm",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.HashAlgorithmProvider"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Pbkdf2Md5",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Pbkdf2Sha1",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Pbkdf2Sha256",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Pbkdf2Sha384",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Pbkdf2Sha512",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Sp800108CtrHmacMd5",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Sp800108CtrHmacSha1",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Sp800108CtrHmacSha256",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Sp800108CtrHmacSha384",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Sp800108CtrHmacSha512",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Sp80056aConcatMd5",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Sp80056aConcatSha1",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Sp80056aConcatSha256",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Sp80056aConcatSha384",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Sp80056aConcatSha512",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.KeyDerivationAlgorithmNames"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AlgorithmName",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateKey",
          "ReturnType": "CryptographicKey",
          "Parameters": [
            {
              "Name": "keyMaterial",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "OpenAlgorithm",
          "IsStatic": true,
          "ReturnType": "KeyDerivationAlgorithmProvider",
          "Parameters": [
            {
              "Name": "algorithm",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.KeyDerivationAlgorithmProvider"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IterationCount",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "KdfGenericBinary",
          "Type": "IBuffer",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "BuildForPbkdf2",
          "IsStatic": true,
          "ReturnType": "KeyDerivationParameters",
          "Parameters": [
            {
              "Name": "pbkdf2Salt",
              "Type": "IBuffer"
            },
            {
              "Name": "iterationCount",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "BuildForSP800108",
          "IsStatic": true,
          "ReturnType": "KeyDerivationParameters",
          "Parameters": [
            {
              "Name": "label",
              "Type": "IBuffer"
            },
            {
              "Name": "context",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "BuildForSP80056a",
          "IsStatic": true,
          "ReturnType": "KeyDerivationParameters",
          "Parameters": [
            {
              "Name": "algorithmId",
              "Type": "IBuffer"
            },
            {
              "Name": "partyUInfo",
              "Type": "IBuffer"
            },
            {
              "Name": "partyVInfo",
              "Type": "IBuffer"
            },
            {
              "Name": "suppPubInfo",
              "Type": "IBuffer"
            },
            {
              "Name": "suppPrivInfo",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.KeyDerivationParameters"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AesCmac",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HmacMd5",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HmacSha1",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HmacSha256",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HmacSha384",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HmacSha512",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.MacAlgorithmNames"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AlgorithmName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "MacLength",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateHash",
          "ReturnType": "CryptographicHash",
          "Parameters": [
            {
              "Name": "keyMaterial",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "CreateKey",
          "ReturnType": "CryptographicKey",
          "Parameters": [
            {
              "Name": "keyMaterial",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "OpenAlgorithm",
          "IsStatic": true,
          "ReturnType": "MacAlgorithmProvider",
          "Parameters": [
            {
              "Name": "algorithm",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.MacAlgorithmProvider"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "OpenKeyPairFromCertificateAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<CryptographicKey>",
          "Parameters": [
            {
              "Name": "certificate",
              "Type": "Certificate"
            },
            {
              "Name": "hashAlgorithmName",
              "Type": "String"
            },
            {
              "Name": "padding",
              "Type": "CryptographicPadding"
            }
          ]
        },
        {
          "Name": "OpenPublicKeyFromCertificate",
          "IsStatic": true,
          "ReturnType": "CryptographicKey",
          "Parameters": [
            {
              "Name": "certificate",
              "Type": "Certificate"
            },
            {
              "Name": "hashAlgorithmName",
              "Type": "String"
            },
            {
              "Name": "padding",
              "Type": "CryptographicPadding"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.PersistedKeyProvider"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AesCbc",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AesCbcPkcs7",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AesCcm",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AesEcb",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AesEcbPkcs7",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AesGcm",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DesCbc",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DesCbcPkcs7",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DesEcb",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DesEcbPkcs7",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Rc2Cbc",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Rc2CbcPkcs7",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Rc2Ecb",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Rc2EcbPkcs7",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Rc4",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TripleDesCbc",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TripleDesCbcPkcs7",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TripleDesEcb",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TripleDesEcbPkcs7",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.SymmetricAlgorithmNames"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AlgorithmName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "BlockLength",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateSymmetricKey",
          "ReturnType": "CryptographicKey",
          "Parameters": [
            {
              "Name": "keyMaterial",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "OpenAlgorithm",
          "IsStatic": true,
          "ReturnType": "SymmetricKeyAlgorithmProvider",
          "Parameters": [
            {
              "Name": "algorithm",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.SymmetricKeyAlgorithmProvider"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Compare",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "object1",
              "Type": "IBuffer"
            },
            {
              "Name": "object2",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "ConvertBinaryToString",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "encoding",
              "Type": "BinaryStringEncoding"
            },
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "ConvertStringToBinary",
          "IsStatic": true,
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "encoding",
              "Type": "BinaryStringEncoding"
            }
          ]
        },
        {
          "Name": "CopyToByteArray",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "value",
              "Type": "Byte[]&",
              "Out": true
            }
          ]
        },
        {
          "Name": "CreateFromByteArray",
          "IsStatic": true,
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]"
            }
          ]
        },
        {
          "Name": "DecodeFromBase64String",
          "IsStatic": true,
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "DecodeFromHexString",
          "IsStatic": true,
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "EncodeToBase64String",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "EncodeToHexString",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "GenerateRandom",
          "IsStatic": true,
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "length",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GenerateRandomNumber",
          "IsStatic": true,
          "ReturnType": "UInt32"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.CryptographicBuffer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "protectionDescriptor",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "ProtectAsync",
          "ReturnType": "IAsyncOperation<IBuffer>",
          "Parameters": [
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "ProtectStreamAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "src",
              "Type": "IInputStream"
            },
            {
              "Name": "dest",
              "Type": "IOutputStream"
            }
          ]
        },
        {
          "Name": "UnprotectAsync",
          "ReturnType": "IAsyncOperation<IBuffer>",
          "Parameters": [
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "UnprotectStreamAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "src",
              "Type": "IInputStream"
            },
            {
              "Name": "dest",
              "Type": "IOutputStream"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.DataProtection.DataProtectionProvider"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FriendlyName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "Guid",
          "IsGet": true
        },
        {
          "Name": "OperatingSystem",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SystemFirmwareVersion",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SystemHardwareVersion",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SystemManufacturer",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SystemProductName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SystemSku",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.ExchangeActiveSyncProvisioning.EasClientDeviceInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BuildingFloor",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "BuildingName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "BuildingRoom",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "BuildingWing",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Continent",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Country",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "CountryCode",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "District",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Neighborhood",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "PostCode",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Region",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "RegionCode",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Street",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "StreetNumber",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Town",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.MapAddress"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Address",
          "Type": "MapAddress",
          "IsGet": true
        },
        {
          "Name": "Description",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Point",
          "Type": "Geopoint",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.MapLocation"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "FindLocationsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapLocationFinderResult>",
          "Parameters": [
            {
              "Name": "searchText",
              "Type": "String"
            },
            {
              "Name": "referencePoint",
              "Type": "Geopoint"
            }
          ]
        },
        {
          "Name": "FindLocationsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapLocationFinderResult>",
          "Parameters": [
            {
              "Name": "searchText",
              "Type": "String"
            },
            {
              "Name": "referencePoint",
              "Type": "Geopoint"
            },
            {
              "Name": "maxCount",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "FindLocationsAtAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapLocationFinderResult>",
          "Parameters": [
            {
              "Name": "queryPoint",
              "Type": "Geopoint"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Services.Maps.MapLocationFinder"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Locations",
          "Type": "IReadOnlyList<MapLocation>",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "MapLocationFinderStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.MapLocationFinderResult"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "ShowDownloadedMapsUI",
          "IsStatic": true,
          "ReturnType": "Void"
        },
        {
          "Name": "ShowMapsUpdateUI",
          "IsStatic": true,
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Services.Maps.MapManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BoundingBox",
          "Type": "GeoboundingBox",
          "IsGet": true
        },
        {
          "Name": "EstimatedDuration",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "IsTrafficBased",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Legs",
          "Type": "IReadOnlyList<MapRouteLeg>",
          "IsGet": true
        },
        {
          "Name": "LengthInMeters",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "Path",
          "Type": "Geopath",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.MapRoute"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDrivingRouteAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "startPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "endPoint",
              "Type": "Geopoint"
            }
          ]
        },
        {
          "Name": "GetDrivingRouteAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "startPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "endPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "optimization",
              "Type": "MapRouteOptimization"
            }
          ]
        },
        {
          "Name": "GetDrivingRouteAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "startPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "endPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "optimization",
              "Type": "MapRouteOptimization"
            },
            {
              "Name": "restrictions",
              "Type": "MapRouteRestrictions"
            }
          ]
        },
        {
          "Name": "GetDrivingRouteAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "startPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "endPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "optimization",
              "Type": "MapRouteOptimization"
            },
            {
              "Name": "restrictions",
              "Type": "MapRouteRestrictions"
            },
            {
              "Name": "headingInDegrees",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "GetDrivingRouteFromWaypointsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "wayPoints",
              "Type": "IEnumerable<Geopoint>"
            }
          ]
        },
        {
          "Name": "GetDrivingRouteFromWaypointsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "wayPoints",
              "Type": "IEnumerable<Geopoint>"
            },
            {
              "Name": "optimization",
              "Type": "MapRouteOptimization"
            }
          ]
        },
        {
          "Name": "GetDrivingRouteFromWaypointsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "wayPoints",
              "Type": "IEnumerable<Geopoint>"
            },
            {
              "Name": "optimization",
              "Type": "MapRouteOptimization"
            },
            {
              "Name": "restrictions",
              "Type": "MapRouteRestrictions"
            }
          ]
        },
        {
          "Name": "GetDrivingRouteFromWaypointsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "wayPoints",
              "Type": "IEnumerable<Geopoint>"
            },
            {
              "Name": "optimization",
              "Type": "MapRouteOptimization"
            },
            {
              "Name": "restrictions",
              "Type": "MapRouteRestrictions"
            },
            {
              "Name": "headingInDegrees",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "GetWalkingRouteAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "startPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "endPoint",
              "Type": "Geopoint"
            }
          ]
        },
        {
          "Name": "GetWalkingRouteFromWaypointsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "wayPoints",
              "Type": "IEnumerable<Geopoint>"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Services.Maps.MapRouteFinder"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Route",
          "Type": "MapRoute",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "MapRouteFinderStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.MapRouteFinderResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BoundingBox",
          "Type": "GeoboundingBox",
          "IsGet": true
        },
        {
          "Name": "EstimatedDuration",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "LengthInMeters",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "Maneuvers",
          "Type": "IReadOnlyList<MapRouteManeuver>",
          "IsGet": true
        },
        {
          "Name": "Path",
          "Type": "Geopath",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.MapRouteLeg"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ExitNumber",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "InstructionText",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "MapRouteManeuverKind",
          "IsGet": true
        },
        {
          "Name": "LengthInMeters",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ManeuverNotices",
          "Type": "MapManeuverNotices",
          "IsGet": true
        },
        {
          "Name": "StartingPoint",
          "Type": "Geopoint",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.MapRouteManeuver"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ServiceToken",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.MapService"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<AccessListEntry>",
        "IReadOnlyCollection<AccessListEntry>",
        "IReadOnlyList<AccessListEntry>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.AccessCache.AccessListEntryView"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "RemovedEntry",
          "Type": "AccessListEntry",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.AccessCache.ItemRemovedEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FutureAccessList",
          "Type": "StorageItemAccessList",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MostRecentlyUsedList",
          "Type": "StorageItemMostRecentlyUsedList",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.AccessCache.StorageApplicationPermissions"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStorageItemAccessList"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Entries",
          "Type": "AccessListEntryView",
          "IsGet": true
        },
        {
          "Name": "MaximumItemsAllowed",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Add",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageItem"
            }
          ]
        },
        {
          "Name": "Add",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageItem"
            },
            {
              "Name": "metadata",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "AddOrReplace",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "file",
              "Type": "IStorageItem"
            }
          ]
        },
        {
          "Name": "AddOrReplace",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "file",
              "Type": "IStorageItem"
            },
            {
              "Name": "metadata",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "Clear",
          "ReturnType": "Void"
        },
        {
          "Name": "ContainsItem",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetFileAsync",
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetFileAsync",
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "AccessCacheOptions"
            }
          ]
        },
        {
          "Name": "GetFolderAsync",
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetFolderAsync",
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "AccessCacheOptions"
            }
          ]
        },
        {
          "Name": "GetItemAsync",
          "ReturnType": "IAsyncOperation<IStorageItem>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetItemAsync",
          "ReturnType": "IAsyncOperation<IStorageItem>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "AccessCacheOptions"
            }
          ]
        },
        {
          "Name": "CheckAccess",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageItem"
            }
          ]
        },
        {
          "Name": "Remove",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.AccessCache.StorageItemAccessList"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStorageItemAccessList"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Entries",
          "Type": "AccessListEntryView",
          "IsGet": true
        },
        {
          "Name": "MaximumItemsAllowed",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Add",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageItem"
            }
          ]
        },
        {
          "Name": "Add",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageItem"
            },
            {
              "Name": "metadata",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "AddOrReplace",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "file",
              "Type": "IStorageItem"
            }
          ]
        },
        {
          "Name": "AddOrReplace",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "file",
              "Type": "IStorageItem"
            },
            {
              "Name": "metadata",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "Clear",
          "ReturnType": "Void"
        },
        {
          "Name": "ContainsItem",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetFileAsync",
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetFileAsync",
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "AccessCacheOptions"
            }
          ]
        },
        {
          "Name": "GetFolderAsync",
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetFolderAsync",
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "AccessCacheOptions"
            }
          ]
        },
        {
          "Name": "GetItemAsync",
          "ReturnType": "IAsyncOperation<IStorageItem>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetItemAsync",
          "ReturnType": "IAsyncOperation<IStorageItem>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "AccessCacheOptions"
            }
          ]
        },
        {
          "Name": "CheckAccess",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageItem"
            }
          ]
        },
        {
          "Name": "Remove",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "ItemRemoved",
          "Type": "TypedEventHandler<StorageItemMostRecentlyUsedList,ItemRemovedEventArgs>"
        }
      ],
      "Name": "Windows.Storage.AccessCache.StorageItemMostRecentlyUsedList"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Current",
          "Type": "ApplicationData",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LocalCacheFolder",
          "Type": "StorageFolder",
          "IsGet": true
        },
        {
          "Name": "LocalFolder",
          "Type": "StorageFolder",
          "IsGet": true
        },
        {
          "Name": "LocalSettings",
          "Type": "ApplicationDataContainer",
          "IsGet": true
        },
        {
          "Name": "RoamingFolder",
          "Type": "StorageFolder",
          "IsGet": true
        },
        {
          "Name": "RoamingSettings",
          "Type": "ApplicationDataContainer",
          "IsGet": true
        },
        {
          "Name": "RoamingStorageQuota",
          "Type": "UInt64",
          "IsGet": true
        },
        {
          "Name": "TemporaryFolder",
          "Type": "StorageFolder",
          "IsGet": true
        },
        {
          "Name": "Version",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ClearAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "ClearAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "locality",
              "Type": "ApplicationDataLocality"
            }
          ]
        },
        {
          "Name": "SetVersionAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "desiredVersion",
              "Type": "UInt32"
            },
            {
              "Name": "handler",
              "Type": "ApplicationDataSetVersionHandler"
            }
          ]
        },
        {
          "Name": "SignalDataChanged",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "DataChanged",
          "Type": "TypedEventHandler<ApplicationData,Object>"
        }
      ],
      "Name": "Windows.Storage.ApplicationData"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,Object>>",
        "IDictionary<String,Object>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,Object>>",
        "IObservableMap<String,Object>",
        "IPropertySet"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "MapChanged",
          "Type": "MapChangedEventHandler<String,Object>"
        }
      ],
      "Name": "Windows.Storage.ApplicationDataCompositeValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Containers",
          "Type": "IReadOnlyDictionary<String,ApplicationDataContainer>",
          "IsGet": true
        },
        {
          "Name": "Locality",
          "Type": "ApplicationDataLocality",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Values",
          "Type": "IPropertySet",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateContainer",
          "ReturnType": "ApplicationDataContainer",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "disposition",
              "Type": "ApplicationDataCreateDisposition"
            }
          ]
        },
        {
          "Name": "DeleteContainer",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.ApplicationDataContainer"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,Object>>",
        "IDictionary<String,Object>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,Object>>",
        "IObservableMap<String,Object>",
        "IPropertySet"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "MapChanged",
          "Type": "MapChangedEventHandler<String,Object>"
        }
      ],
      "Name": "Windows.Storage.ApplicationDataContainerSettings"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CompleteUpdatesAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<FileUpdateStatus>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "DeferUpdates",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.CachedFileManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IOutputStream"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "underlyingStream",
              "Type": "IOutputStream"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "underlyingStream",
              "Type": "IOutputStream"
            },
            {
              "Name": "algorithm",
              "Type": "CompressAlgorithm"
            },
            {
              "Name": "blockSize",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "DetachStream",
          "ReturnType": "IOutputStream"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "FinishAsync",
          "ReturnType": "IAsyncOperation<Boolean>"
        },
        {
          "Name": "FlushAsync",
          "ReturnType": "IAsyncOperation<Boolean>"
        },
        {
          "Name": "WriteAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Compression.Compressor"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IInputStream"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "underlyingStream",
              "Type": "IInputStream"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "DetachStream",
          "ReturnType": "IInputStream"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "ReadAsync",
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "InputStreamOptions"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Compression.Decompressor"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "AppendLinesAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "lines",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "AppendLinesAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "lines",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ]
        },
        {
          "Name": "AppendTextAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "contents",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "AppendTextAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "contents",
              "Type": "String"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ]
        },
        {
          "Name": "ReadBufferAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IBuffer>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "ReadLinesAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IList<String>>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "ReadLinesAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IList<String>>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ]
        },
        {
          "Name": "ReadTextAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "ReadTextAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ]
        },
        {
          "Name": "WriteBufferAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "WriteBytesAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "buffer",
              "Type": "Byte[]"
            }
          ]
        },
        {
          "Name": "WriteLinesAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "lines",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "WriteLinesAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "lines",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ]
        },
        {
          "Name": "WriteTextAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "contents",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "WriteTextAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "contents",
              "Type": "String"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.FileIO"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStorageItemExtraProperties"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DateModified",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "ItemDate",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "Size",
          "Type": "UInt64",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "RetrievePropertiesAsync",
          "ReturnType": "IAsyncOperation<IDictionary<String,Object>>",
          "Parameters": [
            {
              "Name": "propertiesToRetrieve",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "SavePropertiesAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "propertiesToSave",
              "Type": "IEnumerable<KeyValuePair<String,Object>>"
            }
          ]
        },
        {
          "Name": "SavePropertiesAsync",
          "ReturnType": "IAsyncAction"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.FileProperties.BasicProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStorageItemExtraProperties"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Author",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "Comment",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Keywords",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "RetrievePropertiesAsync",
          "ReturnType": "IAsyncOperation<IDictionary<String,Object>>",
          "Parameters": [
            {
              "Name": "propertiesToRetrieve",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "SavePropertiesAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "propertiesToSave",
              "Type": "IEnumerable<KeyValuePair<String,Object>>"
            }
          ]
        },
        {
          "Name": "SavePropertiesAsync",
          "ReturnType": "IAsyncAction"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.FileProperties.DocumentProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStorageItemExtraProperties"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CameraManufacturer",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CameraModel",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DateTaken",
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Height",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Keywords",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "Latitude",
          "Type": "Nullable<Double>",
          "IsGet": true
        },
        {
          "Name": "Longitude",
          "Type": "Nullable<Double>",
          "IsGet": true
        },
        {
          "Name": "Orientation",
          "Type": "PhotoOrientation",
          "IsGet": true
        },
        {
          "Name": "PeopleNames",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        },
        {
          "Name": "Rating",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Width",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "RetrievePropertiesAsync",
          "ReturnType": "IAsyncOperation<IDictionary<String,Object>>",
          "Parameters": [
            {
              "Name": "propertiesToRetrieve",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "SavePropertiesAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "propertiesToSave",
              "Type": "IEnumerable<KeyValuePair<String,Object>>"
            }
          ]
        },
        {
          "Name": "SavePropertiesAsync",
          "ReturnType": "IAsyncAction"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.FileProperties.ImageProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStorageItemExtraProperties"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Album",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AlbumArtist",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Artist",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Bitrate",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Composers",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "Conductors",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "Duration",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "Genre",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "Producers",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "Publisher",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Rating",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Subtitle",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TrackNumber",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Writers",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "Year",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "RetrievePropertiesAsync",
          "ReturnType": "IAsyncOperation<IDictionary<String,Object>>",
          "Parameters": [
            {
              "Name": "propertiesToRetrieve",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "SavePropertiesAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "propertiesToSave",
              "Type": "IEnumerable<KeyValuePair<String,Object>>"
            }
          ]
        },
        {
          "Name": "SavePropertiesAsync",
          "ReturnType": "IAsyncAction"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.FileProperties.MusicProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStorageItemExtraProperties"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDocumentPropertiesAsync",
          "ReturnType": "IAsyncOperation<DocumentProperties>"
        },
        {
          "Name": "GetImagePropertiesAsync",
          "ReturnType": "IAsyncOperation<ImageProperties>"
        },
        {
          "Name": "GetMusicPropertiesAsync",
          "ReturnType": "IAsyncOperation<MusicProperties>"
        },
        {
          "Name": "GetVideoPropertiesAsync",
          "ReturnType": "IAsyncOperation<VideoProperties>"
        },
        {
          "Name": "RetrievePropertiesAsync",
          "ReturnType": "IAsyncOperation<IDictionary<String,Object>>",
          "Parameters": [
            {
              "Name": "propertiesToRetrieve",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "SavePropertiesAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "propertiesToSave",
              "Type": "IEnumerable<KeyValuePair<String,Object>>"
            }
          ]
        },
        {
          "Name": "SavePropertiesAsync",
          "ReturnType": "IAsyncAction"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.FileProperties.StorageItemContentProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContentTypeProvider",
        "IDisposable",
        "IInputStream",
        "IOutputStream",
        "IRandomAccessStream",
        "IRandomAccessStreamWithContentType"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CanRead",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "CanWrite",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "ContentType",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "OriginalHeight",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "OriginalWidth",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "UInt64",
          "IsGet": true
        },
        {
          "Name": "ReturnedSmallerCachedSize",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Size",
          "Type": "UInt64",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Type",
          "Type": "ThumbnailType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CloneStream",
          "ReturnType": "IRandomAccessStream"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "FlushAsync",
          "ReturnType": "IAsyncOperation<Boolean>"
        },
        {
          "Name": "GetInputStreamAt",
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "GetOutputStreamAt",
          "ReturnType": "IOutputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "ReadAsync",
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "InputStreamOptions"
            }
          ]
        },
        {
          "Name": "Seek",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "WriteAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.FileProperties.StorageItemThumbnail"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStorageItemExtraProperties"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Bitrate",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Directors",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "Duration",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "Height",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Keywords",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "Latitude",
          "Type": "Nullable<Double>",
          "IsGet": true
        },
        {
          "Name": "Longitude",
          "Type": "Nullable<Double>",
          "IsGet": true
        },
        {
          "Name": "Orientation",
          "Type": "VideoOrientation",
          "IsGet": true
        },
        {
          "Name": "Producers",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "Publisher",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Rating",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Subtitle",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Width",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Writers",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "Year",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "RetrievePropertiesAsync",
          "ReturnType": "IAsyncOperation<IDictionary<String,Object>>",
          "Parameters": [
            {
              "Name": "propertiesToRetrieve",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "SavePropertiesAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "propertiesToSave",
              "Type": "IEnumerable<KeyValuePair<String,Object>>"
            }
          ]
        },
        {
          "Name": "SavePropertiesAsync",
          "ReturnType": "IAsyncAction"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.FileProperties.VideoProperties"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CameraRoll",
          "Type": "StorageFolder",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DocumentsLibrary",
          "Type": "StorageFolder",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HomeGroup",
          "Type": "StorageFolder",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MediaServerDevices",
          "Type": "StorageFolder",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MusicLibrary",
          "Type": "StorageFolder",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PicturesLibrary",
          "Type": "StorageFolder",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RemovableDevices",
          "Type": "StorageFolder",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SavedPictures",
          "Type": "StorageFolder",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "VideosLibrary",
          "Type": "StorageFolder",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.KnownFolders"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "AppendLinesAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            },
            {
              "Name": "lines",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "AppendLinesAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            },
            {
              "Name": "lines",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ]
        },
        {
          "Name": "AppendTextAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            },
            {
              "Name": "contents",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "AppendTextAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            },
            {
              "Name": "contents",
              "Type": "String"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ]
        },
        {
          "Name": "ReadBufferAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IBuffer>",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ReadLinesAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IList<String>>",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ReadLinesAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IList<String>>",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ]
        },
        {
          "Name": "ReadTextAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ReadTextAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ]
        },
        {
          "Name": "WriteBufferAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            },
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "WriteBytesAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            },
            {
              "Name": "buffer",
              "Type": "Byte[]"
            }
          ]
        },
        {
          "Name": "WriteLinesAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            },
            {
              "Name": "lines",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "WriteLinesAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            },
            {
              "Name": "lines",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ]
        },
        {
          "Name": "WriteTextAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            },
            {
              "Name": "contents",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "WriteTextAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            },
            {
              "Name": "contents",
              "Type": "String"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.PathIO"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<String>",
        "IEnumerable",
        "IEnumerable<String>",
        "IList<String>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Pickers.FileExtensionVector"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CommitButtonText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContinuationData",
          "Type": "ValueSet",
          "IsGet": true
        },
        {
          "Name": "FileTypeFilter",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "SettingsIdentifier",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SuggestedStartLocation",
          "Type": "PickerLocationId",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ViewMode",
          "Type": "PickerViewMode",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "PickMultipleFilesAndContinue",
          "ReturnType": "Void"
        },
        {
          "Name": "PickMultipleFilesAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFile>>"
        },
        {
          "Name": "PickSingleFileAndContinue",
          "ReturnType": "Void"
        },
        {
          "Name": "PickSingleFileAsync",
          "ReturnType": "IAsyncOperation<StorageFile>"
        },
        {
          "Name": "PickSingleFileAsync",
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "pickerOperationId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ResumePickSingleFileAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<StorageFile>"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Pickers.FileOpenPicker"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,IList<String>>>",
        "IDictionary<String,IList<String>>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,IList<String>>>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Pickers.FilePickerFileTypesOrderedMap"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<StorageFile>",
        "IReadOnlyCollection<StorageFile>",
        "IReadOnlyList<StorageFile>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Pickers.FilePickerSelectedFilesArray"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CommitButtonText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContinuationData",
          "Type": "ValueSet",
          "IsGet": true
        },
        {
          "Name": "DefaultFileExtension",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FileTypeChoices",
          "Type": "IDictionary<String,IList<String>>",
          "IsGet": true
        },
        {
          "Name": "SettingsIdentifier",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SuggestedFileName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SuggestedSaveFile",
          "Type": "StorageFile",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SuggestedStartLocation",
          "Type": "PickerLocationId",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "PickSaveFileAndContinue",
          "ReturnType": "Void"
        },
        {
          "Name": "PickSaveFileAsync",
          "ReturnType": "IAsyncOperation<StorageFile>"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Pickers.FileSavePicker"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CommitButtonText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContinuationData",
          "Type": "ValueSet",
          "IsGet": true
        },
        {
          "Name": "FileTypeFilter",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "SettingsIdentifier",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SuggestedStartLocation",
          "Type": "PickerLocationId",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ViewMode",
          "Type": "PickerViewMode",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "PickFolderAndContinue",
          "ReturnType": "Void"
        },
        {
          "Name": "PickSingleFolderAsync",
          "ReturnType": "IAsyncOperation<StorageFolder>"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Pickers.FolderPicker"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AllowedFileTypes",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        },
        {
          "Name": "SelectionMode",
          "Type": "FileSelectionMode",
          "IsGet": true
        },
        {
          "Name": "SettingsIdentifier",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AddFile",
          "ReturnType": "AddFileResult",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            },
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "CanAddFile",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "ContainsFile",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "RemoveFile",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "Closing",
          "Type": "TypedEventHandler<FileOpenPickerUI,PickerClosingEventArgs>"
        },
        {
          "Name": "FileRemoved",
          "Type": "TypedEventHandler<FileOpenPickerUI,FileRemovedEventArgs>"
        }
      ],
      "Name": "Windows.Storage.Pickers.Provider.FileOpenPickerUI"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Pickers.Provider.FileRemovedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AllowedFileTypes",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        },
        {
          "Name": "FileName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SettingsIdentifier",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "TrySetFileName",
          "ReturnType": "SetFileNameResult",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "FileNameChanged",
          "Type": "TypedEventHandler<FileSavePickerUI,Object>"
        },
        {
          "Name": "TargetFileRequested",
          "Type": "TypedEventHandler<FileSavePickerUI,TargetFileRequestedEventArgs>"
        }
      ],
      "Name": "Windows.Storage.Pickers.Provider.FileSavePickerUI"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Complete",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Pickers.Provider.PickerClosingDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ClosingOperation",
          "Type": "PickerClosingOperation",
          "IsGet": true
        },
        {
          "Name": "IsCanceled",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Pickers.Provider.PickerClosingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Deadline",
          "Type": "DateTimeOffset",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDeferral",
          "ReturnType": "PickerClosingDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Pickers.Provider.PickerClosingOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "TargetFile",
          "Type": "IStorageFile",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDeferral",
          "ReturnType": "TargetFileRequestDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Pickers.Provider.TargetFileRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Complete",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Pickers.Provider.TargetFileRequestDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Request",
          "Type": "TargetFileRequest",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Pickers.Provider.TargetFileRequestedEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "SetUpdateInformation",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "contentId",
              "Type": "String"
            },
            {
              "Name": "readMode",
              "Type": "ReadActivationMode"
            },
            {
              "Name": "writeMode",
              "Type": "WriteActivationMode"
            },
            {
              "Name": "options",
              "Type": "CachedFileOptions"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Provider.CachedFileUpdater"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UIStatus",
          "Type": "UIStatus",
          "IsGet": true
        },
        {
          "Name": "UpdateRequest",
          "Type": "FileUpdateRequest",
          "IsGet": true
        },
        {
          "Name": "UpdateTarget",
          "Type": "CachedFileTarget",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDeferral",
          "ReturnType": "FileUpdateRequestDeferral"
        }
      ],
      "Events": [
        {
          "Name": "FileUpdateRequested",
          "Type": "TypedEventHandler<CachedFileUpdaterUI,FileUpdateRequestedEventArgs>"
        },
        {
          "Name": "UIRequested",
          "Type": "TypedEventHandler<CachedFileUpdaterUI,Object>"
        }
      ],
      "Name": "Windows.Storage.Provider.CachedFileUpdaterUI"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ContentId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "File",
          "Type": "StorageFile",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "FileUpdateStatus",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UserInputNeededMessage",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDeferral",
          "ReturnType": "FileUpdateRequestDeferral"
        },
        {
          "Name": "UpdateLocalFile",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "IStorageFile"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Provider.FileUpdateRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Complete",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Provider.FileUpdateRequestDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Request",
          "Type": "FileUpdateRequest",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Provider.FileUpdateRequestedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFileQuery"
            },
            {
              "Name": "fileTypeFilter",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFolderQuery"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "ApplicationSearchFilter",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DateStackOption",
          "Type": "DateStackOption",
          "IsGet": true
        },
        {
          "Name": "FileTypeFilter",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "FolderDepth",
          "Type": "FolderDepth",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GroupPropertyName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "IndexerOption",
          "Type": "IndexerOption",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SortOrder",
          "Type": "IList<SortEntry>",
          "IsGet": true
        },
        {
          "Name": "UserSearchFilter",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "LoadFromString",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SaveToString",
          "ReturnType": "String"
        },
        {
          "Name": "SetPropertyPrefetch",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "options",
              "Type": "PropertyPrefetchOptions"
            },
            {
              "Name": "propertiesToRetrieve",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "SetThumbnailPrefetch",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "ThumbnailOptions"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Search.QueryOptions"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<SortEntry>",
        "IEnumerable",
        "IEnumerable<SortEntry>",
        "IList<SortEntry>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Search.SortEntryVector"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStorageQueryResultBase"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Folder",
          "Type": "StorageFolder",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ApplyNewQueryOptions",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "newQueryOptions",
              "Type": "QueryOptions"
            }
          ]
        },
        {
          "Name": "FindStartIndexAsync",
          "ReturnType": "IAsyncOperation<UInt32>",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "GetCurrentQueryOptions",
          "ReturnType": "QueryOptions"
        },
        {
          "Name": "GetFilesAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFile>>",
          "Parameters": [
            {
              "Name": "startIndex",
              "Type": "UInt32"
            },
            {
              "Name": "maxNumberOfItems",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetFilesAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFile>>"
        },
        {
          "Name": "GetItemCountAsync",
          "ReturnType": "IAsyncOperation<UInt32>"
        }
      ],
      "Events": [
        {
          "Name": "ContentsChanged",
          "Type": "TypedEventHandler<IStorageQueryResultBase,Object>"
        },
        {
          "Name": "OptionsChanged",
          "Type": "TypedEventHandler<IStorageQueryResultBase,Object>"
        }
      ],
      "Name": "Windows.Storage.Search.StorageFileQueryResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStorageQueryResultBase"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Folder",
          "Type": "StorageFolder",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ApplyNewQueryOptions",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "newQueryOptions",
              "Type": "QueryOptions"
            }
          ]
        },
        {
          "Name": "FindStartIndexAsync",
          "ReturnType": "IAsyncOperation<UInt32>",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "GetCurrentQueryOptions",
          "ReturnType": "QueryOptions"
        },
        {
          "Name": "GetFoldersAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFolder>>",
          "Parameters": [
            {
              "Name": "startIndex",
              "Type": "UInt32"
            },
            {
              "Name": "maxNumberOfItems",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetFoldersAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFolder>>"
        },
        {
          "Name": "GetItemCountAsync",
          "ReturnType": "IAsyncOperation<UInt32>"
        }
      ],
      "Events": [
        {
          "Name": "ContentsChanged",
          "Type": "TypedEventHandler<IStorageQueryResultBase,Object>"
        },
        {
          "Name": "OptionsChanged",
          "Type": "TypedEventHandler<IStorageQueryResultBase,Object>"
        }
      ],
      "Name": "Windows.Storage.Search.StorageFolderQueryResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStorageQueryResultBase"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Folder",
          "Type": "StorageFolder",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ApplyNewQueryOptions",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "newQueryOptions",
              "Type": "QueryOptions"
            }
          ]
        },
        {
          "Name": "FindStartIndexAsync",
          "ReturnType": "IAsyncOperation<UInt32>",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "GetCurrentQueryOptions",
          "ReturnType": "QueryOptions"
        },
        {
          "Name": "GetItemCountAsync",
          "ReturnType": "IAsyncOperation<UInt32>"
        },
        {
          "Name": "GetItemsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<IStorageItem>>",
          "Parameters": [
            {
              "Name": "startIndex",
              "Type": "UInt32"
            },
            {
              "Name": "maxNumberOfItems",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetItemsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<IStorageItem>>"
        }
      ],
      "Events": [
        {
          "Name": "ContentsChanged",
          "Type": "TypedEventHandler<IStorageQueryResultBase,Object>"
        },
        {
          "Name": "OptionsChanged",
          "Type": "TypedEventHandler<IStorageQueryResultBase,Object>"
        }
      ],
      "Name": "Windows.Storage.Search.StorageItemQueryResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Complete",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.SetVersionDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CurrentVersion",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "DesiredVersion",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDeferral",
          "ReturnType": "SetVersionDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.SetVersionRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IInputStreamReference",
        "IRandomAccessStreamReference",
        "IStorageFile",
        "IStorageItem",
        "IStorageItemProperties",
        "IStorageItemProperties2"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Attributes",
          "Type": "FileAttributes",
          "IsGet": true
        },
        {
          "Name": "ContentType",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DateCreated",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DisplayType",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "FileType",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "FolderRelativeId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Path",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Properties",
          "Type": "StorageItemContentProperties",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CopyAndReplaceAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "fileToReplace",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "CopyAsync",
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "IStorageFolder"
            }
          ]
        },
        {
          "Name": "CopyAsync",
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "IStorageFolder"
            },
            {
              "Name": "desiredNewName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CopyAsync",
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "IStorageFolder"
            },
            {
              "Name": "desiredNewName",
              "Type": "String"
            },
            {
              "Name": "option",
              "Type": "NameCollisionOption"
            }
          ]
        },
        {
          "Name": "CreateStreamedFileAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "displayNameWithExtension",
              "Type": "String"
            },
            {
              "Name": "dataRequested",
              "Type": "StreamedFileDataRequestedHandler"
            },
            {
              "Name": "thumbnail",
              "Type": "IRandomAccessStreamReference"
            }
          ]
        },
        {
          "Name": "CreateStreamedFileFromUriAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "displayNameWithExtension",
              "Type": "String"
            },
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "thumbnail",
              "Type": "IRandomAccessStreamReference"
            }
          ]
        },
        {
          "Name": "DeleteAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "DeleteAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "option",
              "Type": "StorageDeleteOption"
            }
          ]
        },
        {
          "Name": "GetBasicPropertiesAsync",
          "ReturnType": "IAsyncOperation<BasicProperties>"
        },
        {
          "Name": "GetFileFromApplicationUriAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "GetFileFromPathAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "path",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetScaledImageAsThumbnailAsync",
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            }
          ]
        },
        {
          "Name": "GetScaledImageAsThumbnailAsync",
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetScaledImageAsThumbnailAsync",
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "ThumbnailOptions"
            }
          ]
        },
        {
          "Name": "GetThumbnailAsync",
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            }
          ]
        },
        {
          "Name": "GetThumbnailAsync",
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetThumbnailAsync",
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "ThumbnailOptions"
            }
          ]
        },
        {
          "Name": "IsOfType",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "type",
              "Type": "StorageItemTypes"
            }
          ]
        },
        {
          "Name": "MoveAndReplaceAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "fileToReplace",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "MoveAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "IStorageFolder"
            }
          ]
        },
        {
          "Name": "MoveAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "IStorageFolder"
            },
            {
              "Name": "desiredNewName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "MoveAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "IStorageFolder"
            },
            {
              "Name": "desiredNewName",
              "Type": "String"
            },
            {
              "Name": "option",
              "Type": "NameCollisionOption"
            }
          ]
        },
        {
          "Name": "OpenAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Parameters": [
            {
              "Name": "accessMode",
              "Type": "FileAccessMode"
            }
          ]
        },
        {
          "Name": "OpenReadAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStreamWithContentType>"
        },
        {
          "Name": "OpenSequentialReadAsync",
          "ReturnType": "IAsyncOperation<IInputStream>"
        },
        {
          "Name": "OpenTransactedWriteAsync",
          "ReturnType": "IAsyncOperation<StorageStreamTransaction>"
        },
        {
          "Name": "RenameAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "RenameAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            },
            {
              "Name": "option",
              "Type": "NameCollisionOption"
            }
          ]
        },
        {
          "Name": "ReplaceWithStreamedFileAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "fileToReplace",
              "Type": "IStorageFile"
            },
            {
              "Name": "dataRequested",
              "Type": "StreamedFileDataRequestedHandler"
            },
            {
              "Name": "thumbnail",
              "Type": "IRandomAccessStreamReference"
            }
          ]
        },
        {
          "Name": "ReplaceWithStreamedFileFromUriAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "fileToReplace",
              "Type": "IStorageFile"
            },
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "thumbnail",
              "Type": "IRandomAccessStreamReference"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.StorageFile"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStorageFolder",
        "IStorageFolderQueryOperations",
        "IStorageItem",
        "IStorageItemProperties",
        "IStorageItemProperties2"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Attributes",
          "Type": "FileAttributes",
          "IsGet": true
        },
        {
          "Name": "DateCreated",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DisplayType",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "FolderRelativeId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Path",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Properties",
          "Type": "StorageItemContentProperties",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AreQueryOptionsSupported",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "queryOptions",
              "Type": "QueryOptions"
            }
          ]
        },
        {
          "Name": "CreateFileAsync",
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateFileAsync",
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "CreationCollisionOption"
            }
          ]
        },
        {
          "Name": "CreateFileQuery",
          "ReturnType": "StorageFileQueryResult"
        },
        {
          "Name": "CreateFileQuery",
          "ReturnType": "StorageFileQueryResult",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFileQuery"
            }
          ]
        },
        {
          "Name": "CreateFileQueryWithOptions",
          "ReturnType": "StorageFileQueryResult",
          "Parameters": [
            {
              "Name": "queryOptions",
              "Type": "QueryOptions"
            }
          ]
        },
        {
          "Name": "CreateFolderAsync",
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateFolderAsync",
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "CreationCollisionOption"
            }
          ]
        },
        {
          "Name": "CreateFolderQuery",
          "ReturnType": "StorageFolderQueryResult"
        },
        {
          "Name": "CreateFolderQuery",
          "ReturnType": "StorageFolderQueryResult",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFolderQuery"
            }
          ]
        },
        {
          "Name": "CreateFolderQueryWithOptions",
          "ReturnType": "StorageFolderQueryResult",
          "Parameters": [
            {
              "Name": "queryOptions",
              "Type": "QueryOptions"
            }
          ]
        },
        {
          "Name": "CreateItemQuery",
          "ReturnType": "StorageItemQueryResult"
        },
        {
          "Name": "CreateItemQueryWithOptions",
          "ReturnType": "StorageItemQueryResult",
          "Parameters": [
            {
              "Name": "queryOptions",
              "Type": "QueryOptions"
            }
          ]
        },
        {
          "Name": "DeleteAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "DeleteAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "option",
              "Type": "StorageDeleteOption"
            }
          ]
        },
        {
          "Name": "GetBasicPropertiesAsync",
          "ReturnType": "IAsyncOperation<BasicProperties>"
        },
        {
          "Name": "GetFileAsync",
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetFilesAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFile>>"
        },
        {
          "Name": "GetFilesAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFile>>",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFileQuery"
            },
            {
              "Name": "startIndex",
              "Type": "UInt32"
            },
            {
              "Name": "maxItemsToRetrieve",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetFilesAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFile>>",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFileQuery"
            }
          ]
        },
        {
          "Name": "GetFolderAsync",
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetFolderFromPathAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "path",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetFoldersAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFolder>>"
        },
        {
          "Name": "GetFoldersAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFolder>>",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFolderQuery"
            },
            {
              "Name": "startIndex",
              "Type": "UInt32"
            },
            {
              "Name": "maxItemsToRetrieve",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetFoldersAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFolder>>",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFolderQuery"
            }
          ]
        },
        {
          "Name": "GetIndexedStateAsync",
          "ReturnType": "IAsyncOperation<IndexedState>"
        },
        {
          "Name": "GetItemAsync",
          "ReturnType": "IAsyncOperation<IStorageItem>",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetItemsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<IStorageItem>>"
        },
        {
          "Name": "GetItemsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<IStorageItem>>",
          "Parameters": [
            {
              "Name": "startIndex",
              "Type": "UInt32"
            },
            {
              "Name": "maxItemsToRetrieve",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetScaledImageAsThumbnailAsync",
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            }
          ]
        },
        {
          "Name": "GetScaledImageAsThumbnailAsync",
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetScaledImageAsThumbnailAsync",
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "ThumbnailOptions"
            }
          ]
        },
        {
          "Name": "GetThumbnailAsync",
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            }
          ]
        },
        {
          "Name": "GetThumbnailAsync",
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetThumbnailAsync",
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "ThumbnailOptions"
            }
          ]
        },
        {
          "Name": "IsCommonFileQuerySupported",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFileQuery"
            }
          ]
        },
        {
          "Name": "IsCommonFolderQuerySupported",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFolderQuery"
            }
          ]
        },
        {
          "Name": "IsOfType",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "type",
              "Type": "StorageItemTypes"
            }
          ]
        },
        {
          "Name": "RenameAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "RenameAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            },
            {
              "Name": "option",
              "Type": "NameCollisionOption"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.StorageFolder"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Stream",
          "Type": "IRandomAccessStream",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CommitAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.StorageStreamTransaction"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IOutputStream",
        "IStreamedFileDataRequest"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "FailAndClose",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "failureMode",
              "Type": "StreamedFileFailureMode"
            }
          ]
        },
        {
          "Name": "FlushAsync",
          "ReturnType": "IAsyncOperation<Boolean>"
        },
        {
          "Name": "WriteAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.StreamedFileDataRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBuffer"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "capacity",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Capacity",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Length",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Streams.Buffer"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDataReader",
        "IDisposable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "inputStream",
              "Type": "IInputStream"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "ByteOrder",
          "Type": "ByteOrder",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "InputStreamOptions",
          "Type": "InputStreamOptions",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UnconsumedBufferLength",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "UnicodeEncoding",
          "Type": "UnicodeEncoding",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "DetachBuffer",
          "ReturnType": "IBuffer"
        },
        {
          "Name": "DetachStream",
          "ReturnType": "IInputStream"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "FromBuffer",
          "IsStatic": true,
          "ReturnType": "DataReader",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "LoadAsync",
          "ReturnType": "DataReaderLoadOperation",
          "Parameters": [
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "ReadBoolean",
          "ReturnType": "Boolean"
        },
        {
          "Name": "ReadBuffer",
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "length",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "ReadByte",
          "ReturnType": "Byte"
        },
        {
          "Name": "ReadBytes",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]",
              "Out": true
            }
          ]
        },
        {
          "Name": "ReadDateTime",
          "ReturnType": "DateTimeOffset"
        },
        {
          "Name": "ReadDouble",
          "ReturnType": "Double"
        },
        {
          "Name": "ReadGuid",
          "ReturnType": "Guid"
        },
        {
          "Name": "ReadInt16",
          "ReturnType": "Int16"
        },
        {
          "Name": "ReadInt32",
          "ReturnType": "Int32"
        },
        {
          "Name": "ReadInt64",
          "ReturnType": "Int64"
        },
        {
          "Name": "ReadSingle",
          "ReturnType": "Single"
        },
        {
          "Name": "ReadString",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "codeUnitCount",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "ReadTimeSpan",
          "ReturnType": "TimeSpan"
        },
        {
          "Name": "ReadUInt16",
          "ReturnType": "UInt16"
        },
        {
          "Name": "ReadUInt32",
          "ReturnType": "UInt32"
        },
        {
          "Name": "ReadUInt64",
          "ReturnType": "UInt64"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.DataReader"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IAsyncInfo",
        "IAsyncOperation<UInt32>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Completed",
          "Type": "AsyncOperationCompletedHandler<UInt32>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ErrorCode",
          "Type": "Exception",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "AsyncStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Cancel",
          "ReturnType": "Void"
        },
        {
          "Name": "Close",
          "ReturnType": "Void"
        },
        {
          "Name": "GetResults",
          "ReturnType": "UInt32"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.DataReaderLoadOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDataWriter",
        "IDisposable"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "outputStream",
              "Type": "IOutputStream"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "ByteOrder",
          "Type": "ByteOrder",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UnicodeEncoding",
          "Type": "UnicodeEncoding",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UnstoredBufferLength",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "DetachBuffer",
          "ReturnType": "IBuffer"
        },
        {
          "Name": "DetachStream",
          "ReturnType": "IOutputStream"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "FlushAsync",
          "ReturnType": "IAsyncOperation<Boolean>"
        },
        {
          "Name": "MeasureString",
          "ReturnType": "UInt32",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "StoreAsync",
          "ReturnType": "DataWriterStoreOperation"
        },
        {
          "Name": "WriteBoolean",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "WriteBuffer",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "WriteBuffer",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "start",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "WriteByte",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte"
            }
          ]
        },
        {
          "Name": "WriteBytes",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]"
            }
          ]
        },
        {
          "Name": "WriteDateTime",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "DateTimeOffset"
            }
          ]
        },
        {
          "Name": "WriteDouble",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "WriteGuid",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "WriteInt16",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int16"
            }
          ]
        },
        {
          "Name": "WriteInt32",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "WriteInt64",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ]
        },
        {
          "Name": "WriteSingle",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Single"
            }
          ]
        },
        {
          "Name": "WriteString",
          "ReturnType": "UInt32",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "WriteTimeSpan",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "TimeSpan"
            }
          ]
        },
        {
          "Name": "WriteUInt16",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt16"
            }
          ]
        },
        {
          "Name": "WriteUInt32",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "WriteUInt64",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.DataWriter"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IAsyncInfo",
        "IAsyncOperation<UInt32>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Completed",
          "Type": "AsyncOperationCompletedHandler<UInt32>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ErrorCode",
          "Type": "Exception",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "AsyncStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Cancel",
          "ReturnType": "Void"
        },
        {
          "Name": "Close",
          "ReturnType": "Void"
        },
        {
          "Name": "GetResults",
          "ReturnType": "UInt32"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.DataWriterStoreOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IInputStream"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "ReadAsync",
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "InputStreamOptions"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.FileInputStream"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IOutputStream"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "FlushAsync",
          "ReturnType": "IAsyncOperation<Boolean>"
        },
        {
          "Name": "WriteAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.FileOutputStream"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IInputStream",
        "IOutputStream",
        "IRandomAccessStream"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CanRead",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "CanWrite",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "UInt64",
          "IsGet": true
        },
        {
          "Name": "Size",
          "Type": "UInt64",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CloneStream",
          "ReturnType": "IRandomAccessStream"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "FlushAsync",
          "ReturnType": "IAsyncOperation<Boolean>"
        },
        {
          "Name": "GetInputStreamAt",
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "GetOutputStreamAt",
          "ReturnType": "IOutputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "ReadAsync",
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "InputStreamOptions"
            }
          ]
        },
        {
          "Name": "Seek",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "WriteAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.FileRandomAccessStream"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IInputStream",
        "IOutputStream",
        "IRandomAccessStream"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CanRead",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "CanWrite",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "UInt64",
          "IsGet": true
        },
        {
          "Name": "Size",
          "Type": "UInt64",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CloneStream",
          "ReturnType": "IRandomAccessStream"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "FlushAsync",
          "ReturnType": "IAsyncOperation<Boolean>"
        },
        {
          "Name": "GetInputStreamAt",
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "GetOutputStreamAt",
          "ReturnType": "IOutputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "ReadAsync",
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "InputStreamOptions"
            }
          ]
        },
        {
          "Name": "Seek",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "WriteAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.InMemoryRandomAccessStream"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IInputStream"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "ReadAsync",
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "InputStreamOptions"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.InputStreamOverStream"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IOutputStream"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "FlushAsync",
          "ReturnType": "IAsyncOperation<Boolean>"
        },
        {
          "Name": "WriteAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.OutputStreamOverStream"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CopyAndCloseAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Parameters": [
            {
              "Name": "source",
              "Type": "IInputStream"
            },
            {
              "Name": "destination",
              "Type": "IOutputStream"
            }
          ]
        },
        {
          "Name": "CopyAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Parameters": [
            {
              "Name": "source",
              "Type": "IInputStream"
            },
            {
              "Name": "destination",
              "Type": "IOutputStream"
            }
          ]
        },
        {
          "Name": "CopyAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Parameters": [
            {
              "Name": "source",
              "Type": "IInputStream"
            },
            {
              "Name": "destination",
              "Type": "IOutputStream"
            },
            {
              "Name": "bytesToCopy",
              "Type": "UInt64"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.RandomAccessStream"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IInputStream",
        "IOutputStream",
        "IRandomAccessStream"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CanRead",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "CanWrite",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "UInt64",
          "IsGet": true
        },
        {
          "Name": "Size",
          "Type": "UInt64",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CloneStream",
          "ReturnType": "IRandomAccessStream"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "FlushAsync",
          "ReturnType": "IAsyncOperation<Boolean>"
        },
        {
          "Name": "GetInputStreamAt",
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "GetOutputStreamAt",
          "ReturnType": "IOutputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "ReadAsync",
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "InputStreamOptions"
            }
          ]
        },
        {
          "Name": "Seek",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "WriteAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.RandomAccessStreamOverStream"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IRandomAccessStreamReference"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateFromFile",
          "IsStatic": true,
          "ReturnType": "RandomAccessStreamReference",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "CreateFromStream",
          "IsStatic": true,
          "ReturnType": "RandomAccessStreamReference",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            }
          ]
        },
        {
          "Name": "CreateFromUri",
          "IsStatic": true,
          "ReturnType": "RandomAccessStreamReference",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "OpenReadAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStreamWithContentType>"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.RandomAccessStreamReference"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "EncodingBitrate",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.SystemAudioProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "LatitudeDecimal",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "LongitudeDecimal",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.SystemGPSProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "HorizontalSize",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "VerticalSize",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.SystemImageProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Duration",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Producer",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Publisher",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SubTitle",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Writer",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Year",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.SystemMediaProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AlbumArtist",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "AlbumTitle",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Artist",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Composer",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Conductor",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DisplayArtist",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Genre",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "TrackNumber",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.SystemMusicProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CameraManufacturer",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "CameraModel",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DateTaken",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Orientation",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "PeopleNames",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.SystemPhotoProperties"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Audio",
          "Type": "SystemAudioProperties",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Author",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Comment",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GPS",
          "Type": "SystemGPSProperties",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Image",
          "Type": "SystemImageProperties",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ItemNameDisplay",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Keywords",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Media",
          "Type": "SystemMediaProperties",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Music",
          "Type": "SystemMusicProperties",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Photo",
          "Type": "SystemPhotoProperties",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Rating",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Video",
          "Type": "SystemVideoProperties",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.SystemProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Director",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "FrameHeight",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "FrameWidth",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Orientation",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "TotalBitrate",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.SystemVideoProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NewLimit",
          "Type": "UInt64",
          "IsGet": true
        },
        {
          "Name": "OldLimit",
          "Type": "UInt64",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.System.AppMemoryUsageLimitChangingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "RequestActive",
          "ReturnType": "Void"
        },
        {
          "Name": "RequestRelease",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.System.Display.DisplayRequest"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "LaunchFileAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "LaunchFileAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "options",
              "Type": "LauncherOptions"
            }
          ]
        },
        {
          "Name": "LaunchUriAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "LaunchUriAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "options",
              "Type": "LauncherOptions"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.System.Launcher"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ContentType",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisplayApplicationPicker",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FallbackUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PreferredApplicationDisplayName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PreferredApplicationPackageFamilyName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TreatAsUntrusted",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UI",
          "Type": "LauncherUIOptions",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.System.LauncherOptions"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "InvocationPoint",
          "Type": "Nullable<Point>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PreferredPlacement",
          "Type": "Placement",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SelectionRect",
          "Type": "Nullable<Rect>",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.System.LauncherUIOptions"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AppMemoryUsage",
          "Type": "UInt64",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AppMemoryUsageLevel",
          "Type": "AppMemoryUsageLevel",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AppMemoryUsageLimit",
          "Type": "UInt64",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "AppMemoryUsageDecreased",
          "Type": "EventHandler<Object>",
          "IsStatic": true
        },
        {
          "Name": "AppMemoryUsageIncreased",
          "Type": "EventHandler<Object>",
          "IsStatic": true
        },
        {
          "Name": "AppMemoryUsageLimitChanging",
          "Type": "EventHandler<AppMemoryUsageLimitChangingEventArgs>",
          "IsStatic": true
        }
      ],
      "Name": "Windows.System.MemoryManager"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetPackageSpecificToken",
          "IsStatic": true,
          "ReturnType": "HardwareToken",
          "Parameters": [
            {
              "Name": "nonce",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.System.Profile.HardwareIdentification"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Certificate",
          "Type": "IBuffer",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "IBuffer",
          "IsGet": true
        },
        {
          "Name": "Signature",
          "Type": "IBuffer",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.System.Profile.HardwareToken"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsRemote",
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.System.RemoteDesktop.InteractiveSession"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "handler",
              "Type": "WorkItemHandler"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "handler",
              "Type": "WorkItemHandler"
            },
            {
              "Name": "priority",
              "Type": "WorkItemPriority"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "handler",
              "Type": "WorkItemHandler"
            },
            {
              "Name": "priority",
              "Type": "WorkItemPriority"
            },
            {
              "Name": "options",
              "Type": "WorkItemOptions"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "RunAsync",
          "ReturnType": "IAsyncAction"
        }
      ],
      "Events": [],
      "Name": "Windows.System.Threading.Core.PreallocatedWorkItem"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "AttachToEvent",
          "IsStatic": true,
          "ReturnType": "SignalNotifier",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "handler",
              "Type": "SignalHandler"
            }
          ]
        },
        {
          "Name": "AttachToEvent",
          "IsStatic": true,
          "ReturnType": "SignalNotifier",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "handler",
              "Type": "SignalHandler"
            },
            {
              "Name": "timeout",
              "Type": "TimeSpan"
            }
          ]
        },
        {
          "Name": "AttachToSemaphore",
          "IsStatic": true,
          "ReturnType": "SignalNotifier",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "handler",
              "Type": "SignalHandler"
            }
          ]
        },
        {
          "Name": "AttachToSemaphore",
          "IsStatic": true,
          "ReturnType": "SignalNotifier",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "handler",
              "Type": "SignalHandler"
            },
            {
              "Name": "timeout",
              "Type": "TimeSpan"
            }
          ]
        },
        {
          "Name": "Enable",
          "ReturnType": "Void"
        },
        {
          "Name": "Terminate",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.System.Threading.Core.SignalNotifier"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "RunAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "handler",
              "Type": "WorkItemHandler"
            }
          ]
        },
        {
          "Name": "RunAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "handler",
              "Type": "WorkItemHandler"
            },
            {
              "Name": "priority",
              "Type": "WorkItemPriority"
            }
          ]
        },
        {
          "Name": "RunAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "handler",
              "Type": "WorkItemHandler"
            },
            {
              "Name": "priority",
              "Type": "WorkItemPriority"
            },
            {
              "Name": "options",
              "Type": "WorkItemOptions"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.System.Threading.ThreadPool"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Delay",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "Period",
          "Type": "TimeSpan",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Cancel",
          "ReturnType": "Void"
        },
        {
          "Name": "CreatePeriodicTimer",
          "IsStatic": true,
          "ReturnType": "ThreadPoolTimer",
          "Parameters": [
            {
              "Name": "handler",
              "Type": "TimerElapsedHandler"
            },
            {
              "Name": "period",
              "Type": "TimeSpan"
            }
          ]
        },
        {
          "Name": "CreatePeriodicTimer",
          "IsStatic": true,
          "ReturnType": "ThreadPoolTimer",
          "Parameters": [
            {
              "Name": "handler",
              "Type": "TimerElapsedHandler"
            },
            {
              "Name": "period",
              "Type": "TimeSpan"
            },
            {
              "Name": "destroyed",
              "Type": "TimerDestroyedHandler"
            }
          ]
        },
        {
          "Name": "CreateTimer",
          "IsStatic": true,
          "ReturnType": "ThreadPoolTimer",
          "Parameters": [
            {
              "Name": "handler",
              "Type": "TimerElapsedHandler"
            },
            {
              "Name": "delay",
              "Type": "TimeSpan"
            }
          ]
        },
        {
          "Name": "CreateTimer",
          "IsStatic": true,
          "ReturnType": "ThreadPoolTimer",
          "Parameters": [
            {
              "Name": "handler",
              "Type": "TimerElapsedHandler"
            },
            {
              "Name": "delay",
              "Type": "TimeSpan"
            },
            {
              "Name": "destroyed",
              "Type": "TimerDestroyedHandler"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.System.Threading.ThreadPoolTimer"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AdvertisingId",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.System.UserProfile.AdvertisingManager"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Calendars",
          "Type": "IReadOnlyList<String>",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Clocks",
          "Type": "IReadOnlyList<String>",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Currencies",
          "Type": "IReadOnlyList<String>",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HomeGeographicRegion",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Languages",
          "Type": "IReadOnlyList<String>",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "WeekStartsOn",
          "Type": "DayOfWeek",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.System.UserProfile.GlobalizationPreferences"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AccountPictureChangeEnabled",
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "NameAccessAllowed",
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetAccountPicture",
          "IsStatic": true,
          "ReturnType": "IStorageFile",
          "Parameters": [
            {
              "Name": "kind",
              "Type": "AccountPictureKind"
            }
          ]
        },
        {
          "Name": "GetDisplayNameAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>"
        },
        {
          "Name": "GetDomainNameAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>"
        },
        {
          "Name": "GetFirstNameAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>"
        },
        {
          "Name": "GetLastNameAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>"
        },
        {
          "Name": "GetPrincipalNameAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>"
        },
        {
          "Name": "GetSessionInitiationProtocolUriAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Uri>"
        },
        {
          "Name": "SetAccountPictureAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<SetAccountPictureResult>",
          "Parameters": [
            {
              "Name": "image",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "SetAccountPictureFromStreamAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<SetAccountPictureResult>",
          "Parameters": [
            {
              "Name": "image",
              "Type": "IRandomAccessStream"
            }
          ]
        },
        {
          "Name": "SetAccountPicturesAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<SetAccountPictureResult>",
          "Parameters": [
            {
              "Name": "smallImage",
              "Type": "IStorageFile"
            },
            {
              "Name": "largeImage",
              "Type": "IStorageFile"
            },
            {
              "Name": "video",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "SetAccountPicturesFromStreamsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<SetAccountPictureResult>",
          "Parameters": [
            {
              "Name": "smallImage",
              "Type": "IRandomAccessStream"
            },
            {
              "Name": "largeImage",
              "Type": "IRandomAccessStream"
            },
            {
              "Name": "video",
              "Type": "IRandomAccessStream"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "AccountPictureChanged",
          "Type": "EventHandler<Object>",
          "IsStatic": true
        }
      ],
      "Name": "Windows.System.UserProfile.UserInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "FromArgb",
          "IsStatic": true,
          "ReturnType": "Color",
          "Parameters": [
            {
              "Name": "a",
              "Type": "Byte"
            },
            {
              "Name": "r",
              "Type": "Byte"
            },
            {
              "Name": "g",
              "Type": "Byte"
            },
            {
              "Name": "b",
              "Type": "Byte"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.ColorHelper"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AliceBlue",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AntiqueWhite",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Aqua",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Aquamarine",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Azure",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Beige",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Bisque",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Black",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BlanchedAlmond",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Blue",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BlueViolet",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Brown",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BurlyWood",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CadetBlue",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Coral",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CornflowerBlue",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Cornsilk",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Crimson",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Cyan",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DarkBlue",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DarkCyan",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DarkGoldenrod",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DarkGray",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DarkGreen",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DarkKhaki",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DarkMagenta",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DarkOliveGreen",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DarkOrange",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DarkOrchid",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DarkRed",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DarkSalmon",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DarkSeaGreen",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DarkSlateBlue",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DarkSlateGray",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DarkTurquoise",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DarkViolet",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DeepPink",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DeepSkyBlue",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DimGray",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DodgerBlue",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Firebrick",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FloralWhite",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ForestGreen",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Fuchsia",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Gainsboro",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GhostWhite",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Gold",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Goldenrod",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Gray",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Green",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GreenYellow",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Honeydew",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HotPink",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Chartreuse",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Chocolate",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IndianRed",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Indigo",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Ivory",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Khaki",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Lavender",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LavenderBlush",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LawnGreen",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LemonChiffon",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LightBlue",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LightCoral",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LightCyan",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LightGoldenrodYellow",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LightGray",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LightGreen",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LightPink",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LightSalmon",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LightSeaGreen",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LightSkyBlue",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LightSlateGray",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LightSteelBlue",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LightYellow",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Lime",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LimeGreen",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Linen",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Magenta",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Maroon",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MediumAquamarine",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MediumBlue",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MediumOrchid",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MediumPurple",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MediumSeaGreen",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MediumSlateBlue",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MediumSpringGreen",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MediumTurquoise",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MediumVioletRed",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MidnightBlue",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MintCream",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MistyRose",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Moccasin",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "NavajoWhite",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Navy",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OldLace",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Olive",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OliveDrab",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Orange",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OrangeRed",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Orchid",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PaleGoldenrod",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PaleGreen",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PaleTurquoise",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PaleVioletRed",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PapayaWhip",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PeachPuff",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Peru",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Pink",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Plum",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PowderBlue",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Purple",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Red",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RosyBrown",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RoyalBlue",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SaddleBrown",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Salmon",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SandyBrown",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SeaGreen",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SeaShell",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Sienna",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Silver",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SkyBlue",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SlateBlue",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SlateGray",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Snow",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SpringGreen",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SteelBlue",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Tan",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Teal",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Thistle",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Tomato",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Transparent",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Turquoise",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Violet",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Wheat",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "White",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "WhiteSmoke",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Yellow",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "YellowGreen",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Colors"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreWindowEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "EventType",
          "Type": "CoreAcceleratorKeyEventType",
          "IsGet": true
        },
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "KeyStatus",
          "Type": "CorePhysicalKeyStatus",
          "IsGet": true
        },
        {
          "Name": "VirtualKey",
          "Type": "VirtualKey",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.AcceleratorKeyEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreWindowEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AutomationProvider",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.AutomationProviderRequestedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreAcceleratorKeys"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "AcceleratorKeyActivated",
          "Type": "TypedEventHandler<CoreDispatcher,AcceleratorKeyEventArgs>"
        }
      ],
      "Name": "Windows.UI.Core.CoreAcceleratorKeys"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreInputSourceBase",
        "ICorePointerInputSource"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Dispatcher",
          "Type": "CoreDispatcher",
          "IsGet": true
        },
        {
          "Name": "HasCapture",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "HasFocus",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsInputEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PointerCursor",
          "Type": "CoreCursor",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PointerPosition",
          "Type": "Point",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetCurrentKeyState",
          "ReturnType": "CoreVirtualKeyStates",
          "Parameters": [
            {
              "Name": "virtualKey",
              "Type": "VirtualKey"
            }
          ]
        },
        {
          "Name": "ReleasePointerCapture",
          "ReturnType": "Void"
        },
        {
          "Name": "SetPointerCapture",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "GotFocus",
          "Type": "TypedEventHandler<Object,CoreWindowEventArgs>"
        },
        {
          "Name": "CharacterReceived",
          "Type": "TypedEventHandler<Object,CharacterReceivedEventArgs>"
        },
        {
          "Name": "InputEnabled",
          "Type": "TypedEventHandler<Object,InputEnabledEventArgs>"
        },
        {
          "Name": "KeyDown",
          "Type": "TypedEventHandler<Object,KeyEventArgs>"
        },
        {
          "Name": "KeyUp",
          "Type": "TypedEventHandler<Object,KeyEventArgs>"
        },
        {
          "Name": "LostFocus",
          "Type": "TypedEventHandler<Object,CoreWindowEventArgs>"
        },
        {
          "Name": "PointerCaptureLost",
          "Type": "TypedEventHandler<Object,PointerEventArgs>"
        },
        {
          "Name": "PointerEntered",
          "Type": "TypedEventHandler<Object,PointerEventArgs>"
        },
        {
          "Name": "PointerExited",
          "Type": "TypedEventHandler<Object,PointerEventArgs>"
        },
        {
          "Name": "PointerMoved",
          "Type": "TypedEventHandler<Object,PointerEventArgs>"
        },
        {
          "Name": "PointerPressed",
          "Type": "TypedEventHandler<Object,PointerEventArgs>"
        },
        {
          "Name": "PointerReleased",
          "Type": "TypedEventHandler<Object,PointerEventArgs>"
        },
        {
          "Name": "PointerWheelChanged",
          "Type": "TypedEventHandler<Object,PointerEventArgs>"
        },
        {
          "Name": "TouchHitTesting",
          "Type": "TypedEventHandler<Object,TouchHitTestingEventArgs>"
        }
      ],
      "Name": "Windows.UI.Core.CoreComponentInputSource"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "type",
              "Type": "CoreCursorType"
            },
            {
              "Name": "id",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Id",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "CoreCursorType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.CoreCursor"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreAcceleratorKeys"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CurrentPriority",
          "Type": "CoreDispatcherPriority",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HasThreadAccess",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ProcessEvents",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "options",
              "Type": "CoreProcessEventsOption"
            }
          ]
        },
        {
          "Name": "RunAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "priority",
              "Type": "CoreDispatcherPriority"
            },
            {
              "Name": "agileCallback",
              "Type": "DispatchedHandler"
            }
          ]
        },
        {
          "Name": "RunIdleAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "agileCallback",
              "Type": "IdleDispatchedHandler"
            }
          ]
        },
        {
          "Name": "ShouldYield",
          "ReturnType": "Boolean"
        },
        {
          "Name": "ShouldYield",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "priority",
              "Type": "CoreDispatcherPriority"
            }
          ]
        },
        {
          "Name": "StopProcessEvents",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "AcceleratorKeyActivated",
          "Type": "TypedEventHandler<CoreDispatcher,AcceleratorKeyEventArgs>"
        }
      ],
      "Name": "Windows.UI.Core.CoreDispatcher"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreInputSourceBase",
        "ICorePointerInputSource"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Dispatcher",
          "Type": "CoreDispatcher",
          "IsGet": true
        },
        {
          "Name": "HasCapture",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsInputEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PointerCursor",
          "Type": "CoreCursor",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PointerPosition",
          "Type": "Point",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ReleasePointerCapture",
          "ReturnType": "Void"
        },
        {
          "Name": "SetPointerCapture",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "InputEnabled",
          "Type": "TypedEventHandler<Object,InputEnabledEventArgs>"
        },
        {
          "Name": "PointerCaptureLost",
          "Type": "TypedEventHandler<Object,PointerEventArgs>"
        },
        {
          "Name": "PointerEntered",
          "Type": "TypedEventHandler<Object,PointerEventArgs>"
        },
        {
          "Name": "PointerExited",
          "Type": "TypedEventHandler<Object,PointerEventArgs>"
        },
        {
          "Name": "PointerMoved",
          "Type": "TypedEventHandler<Object,PointerEventArgs>"
        },
        {
          "Name": "PointerPressed",
          "Type": "TypedEventHandler<Object,PointerEventArgs>"
        },
        {
          "Name": "PointerReleased",
          "Type": "TypedEventHandler<Object,PointerEventArgs>"
        },
        {
          "Name": "PointerWheelChanged",
          "Type": "TypedEventHandler<Object,PointerEventArgs>"
        }
      ],
      "Name": "Windows.UI.Core.CoreIndependentInputSource"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreWindow"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AutomationHostProvider",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "Bounds",
          "Type": "Rect",
          "IsGet": true
        },
        {
          "Name": "CustomProperties",
          "Type": "IPropertySet",
          "IsGet": true
        },
        {
          "Name": "Dispatcher",
          "Type": "CoreDispatcher",
          "IsGet": true
        },
        {
          "Name": "FlowDirection",
          "Type": "CoreWindowFlowDirection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsInputEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsKeyboardInputEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "KeyboardInputBuffer",
          "Type": "KeyboardInputBuffer",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PointerCursor",
          "Type": "CoreCursor",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PointerPosition",
          "Type": "Point",
          "IsGet": true
        },
        {
          "Name": "Visible",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Activate",
          "ReturnType": "Void"
        },
        {
          "Name": "Close",
          "ReturnType": "Void"
        },
        {
          "Name": "GetAsyncKeyState",
          "ReturnType": "CoreVirtualKeyStates",
          "Parameters": [
            {
              "Name": "virtualKey",
              "Type": "VirtualKey"
            }
          ]
        },
        {
          "Name": "GetForCurrentThread",
          "IsStatic": true,
          "ReturnType": "CoreWindow"
        },
        {
          "Name": "GetKeyState",
          "ReturnType": "CoreVirtualKeyStates",
          "Parameters": [
            {
              "Name": "virtualKey",
              "Type": "VirtualKey"
            }
          ]
        },
        {
          "Name": "ReleasePointerCapture",
          "ReturnType": "Void"
        },
        {
          "Name": "SetPointerCapture",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "Activated",
          "Type": "TypedEventHandler<CoreWindow,WindowActivatedEventArgs>"
        },
        {
          "Name": "AutomationProviderRequested",
          "Type": "TypedEventHandler<CoreWindow,AutomationProviderRequestedEventArgs>"
        },
        {
          "Name": "Closed",
          "Type": "TypedEventHandler<CoreWindow,CoreWindowEventArgs>"
        },
        {
          "Name": "CharacterReceived",
          "Type": "TypedEventHandler<CoreWindow,CharacterReceivedEventArgs>"
        },
        {
          "Name": "InputEnabled",
          "Type": "TypedEventHandler<CoreWindow,InputEnabledEventArgs>"
        },
        {
          "Name": "KeyDown",
          "Type": "TypedEventHandler<CoreWindow,KeyEventArgs>"
        },
        {
          "Name": "KeyUp",
          "Type": "TypedEventHandler<CoreWindow,KeyEventArgs>"
        },
        {
          "Name": "PointerCaptureLost",
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>"
        },
        {
          "Name": "PointerEntered",
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>"
        },
        {
          "Name": "PointerExited",
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>"
        },
        {
          "Name": "PointerMoved",
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>"
        },
        {
          "Name": "PointerPressed",
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>"
        },
        {
          "Name": "PointerReleased",
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>"
        },
        {
          "Name": "PointerWheelChanged",
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>"
        },
        {
          "Name": "SizeChanged",
          "Type": "TypedEventHandler<CoreWindow,WindowSizeChangedEventArgs>"
        },
        {
          "Name": "TouchHitTesting",
          "Type": "TypedEventHandler<CoreWindow,TouchHitTestingEventArgs>"
        },
        {
          "Name": "VisibilityChanged",
          "Type": "TypedEventHandler<CoreWindow,VisibilityChangedEventArgs>"
        }
      ],
      "Name": "Windows.UI.Core.CoreWindow"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreWindowEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.CoreWindowEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ShouldWaitForLayoutCompletion",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetForCurrentView",
          "IsStatic": true,
          "ReturnType": "CoreWindowResizeManager"
        },
        {
          "Name": "NotifyLayoutCompleted",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Core.CoreWindowResizeManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreWindowEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "KeyCode",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "KeyStatus",
          "Type": "CorePhysicalKeyStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.CharacterReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsDispatcherIdle",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.IdleDispatchedHandlerArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreWindowEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "InputEnabled",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.InputEnabledEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreWindowEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "KeyStatus",
          "Type": "CorePhysicalKeyStatus",
          "IsGet": true
        },
        {
          "Name": "VirtualKey",
          "Type": "VirtualKey",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.KeyEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreWindowEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CurrentPoint",
          "Type": "PointerPoint",
          "IsGet": true
        },
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "KeyModifiers",
          "Type": "VirtualKeyModifiers",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetIntermediatePoints",
          "ReturnType": "IList<PointerPoint>"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Core.PointerEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreWindowEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BoundingBox",
          "Type": "Rect",
          "IsGet": true
        },
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Point",
          "Type": "Point",
          "IsGet": true
        },
        {
          "Name": "ProximityEvaluation",
          "Type": "CoreProximityEvaluation",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "EvaluateProximity",
          "ReturnType": "CoreProximityEvaluation",
          "Parameters": [
            {
              "Name": "controlBoundingBox",
              "Type": "Rect"
            }
          ]
        },
        {
          "Name": "EvaluateProximity",
          "ReturnType": "CoreProximityEvaluation",
          "Parameters": [
            {
              "Name": "controlVertices",
              "Type": "Point[]"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Core.TouchHitTestingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreWindowEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Visible",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.VisibilityChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreWindowEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "WindowActivationState",
          "Type": "CoreWindowActivationState",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.WindowActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreWindowEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Size",
          "Type": "Size",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.WindowSizeChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CrossSlidingState",
          "Type": "CrossSlidingState",
          "IsGet": true
        },
        {
          "Name": "PointerDeviceType",
          "Type": "PointerDeviceType",
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "Point",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.CrossSlidingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DraggingState",
          "Type": "DraggingState",
          "IsGet": true
        },
        {
          "Name": "PointerDeviceType",
          "Type": "PointerDeviceType",
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "Point",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.DraggingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetForCurrentView",
          "IsStatic": true,
          "ReturnType": "EdgeGesture"
        }
      ],
      "Events": [
        {
          "Name": "Canceled",
          "Type": "TypedEventHandler<EdgeGesture,EdgeGestureEventArgs>"
        },
        {
          "Name": "Completed",
          "Type": "TypedEventHandler<EdgeGesture,EdgeGestureEventArgs>"
        },
        {
          "Name": "Starting",
          "Type": "TypedEventHandler<EdgeGesture,EdgeGestureEventArgs>"
        }
      ],
      "Name": "Windows.UI.Input.EdgeGesture"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Kind",
          "Type": "EdgeGestureKind",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.EdgeGestureEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AutoProcessInertia",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CrossSlideExact",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CrossSlideHorizontally",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CrossSlideThresholds",
          "Type": "CrossSlideThresholds",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GestureSettings",
          "Type": "GestureSettings",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "InertiaExpansion",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "InertiaExpansionDeceleration",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "InertiaRotationAngle",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "InertiaRotationDeceleration",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "InertiaTranslationDeceleration",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "InertiaTranslationDisplacement",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsActive",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsInertial",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "ManipulationExact",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MouseWheelParameters",
          "Type": "MouseWheelParameters",
          "IsGet": true
        },
        {
          "Name": "PivotCenter",
          "Type": "Point",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PivotRadius",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ShowGestureFeedback",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CanBeDoubleTap",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "PointerPoint"
            }
          ]
        },
        {
          "Name": "CompleteGesture",
          "ReturnType": "Void"
        },
        {
          "Name": "ProcessDownEvent",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "PointerPoint"
            }
          ]
        },
        {
          "Name": "ProcessInertia",
          "ReturnType": "Void"
        },
        {
          "Name": "ProcessMouseWheelEvent",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "PointerPoint"
            },
            {
              "Name": "isShiftKeyDown",
              "Type": "Boolean"
            },
            {
              "Name": "isControlKeyDown",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "ProcessMoveEvents",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "IList<PointerPoint>"
            }
          ]
        },
        {
          "Name": "ProcessUpEvent",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "PointerPoint"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "CrossSliding",
          "Type": "TypedEventHandler<GestureRecognizer,CrossSlidingEventArgs>"
        },
        {
          "Name": "Dragging",
          "Type": "TypedEventHandler<GestureRecognizer,DraggingEventArgs>"
        },
        {
          "Name": "Holding",
          "Type": "TypedEventHandler<GestureRecognizer,HoldingEventArgs>"
        },
        {
          "Name": "ManipulationCompleted",
          "Type": "TypedEventHandler<GestureRecognizer,ManipulationCompletedEventArgs>"
        },
        {
          "Name": "ManipulationInertiaStarting",
          "Type": "TypedEventHandler<GestureRecognizer,ManipulationInertiaStartingEventArgs>"
        },
        {
          "Name": "ManipulationStarted",
          "Type": "TypedEventHandler<GestureRecognizer,ManipulationStartedEventArgs>"
        },
        {
          "Name": "ManipulationUpdated",
          "Type": "TypedEventHandler<GestureRecognizer,ManipulationUpdatedEventArgs>"
        },
        {
          "Name": "RightTapped",
          "Type": "TypedEventHandler<GestureRecognizer,RightTappedEventArgs>"
        },
        {
          "Name": "Tapped",
          "Type": "TypedEventHandler<GestureRecognizer,TappedEventArgs>"
        }
      ],
      "Name": "Windows.UI.Input.GestureRecognizer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "HoldingState",
          "Type": "HoldingState",
          "IsGet": true
        },
        {
          "Name": "PointerDeviceType",
          "Type": "PointerDeviceType",
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "Point",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.HoldingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Cumulative",
          "Type": "ManipulationDelta",
          "IsGet": true
        },
        {
          "Name": "PointerDeviceType",
          "Type": "PointerDeviceType",
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "Point",
          "IsGet": true
        },
        {
          "Name": "Velocities",
          "Type": "ManipulationVelocities",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.ManipulationCompletedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Cumulative",
          "Type": "ManipulationDelta",
          "IsGet": true
        },
        {
          "Name": "Delta",
          "Type": "ManipulationDelta",
          "IsGet": true
        },
        {
          "Name": "PointerDeviceType",
          "Type": "PointerDeviceType",
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "Point",
          "IsGet": true
        },
        {
          "Name": "Velocities",
          "Type": "ManipulationVelocities",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.ManipulationInertiaStartingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Cumulative",
          "Type": "ManipulationDelta",
          "IsGet": true
        },
        {
          "Name": "PointerDeviceType",
          "Type": "PointerDeviceType",
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "Point",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.ManipulationStartedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Cumulative",
          "Type": "ManipulationDelta",
          "IsGet": true
        },
        {
          "Name": "Delta",
          "Type": "ManipulationDelta",
          "IsGet": true
        },
        {
          "Name": "PointerDeviceType",
          "Type": "PointerDeviceType",
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "Point",
          "IsGet": true
        },
        {
          "Name": "Velocities",
          "Type": "ManipulationVelocities",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.ManipulationUpdatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DeltaRotationAngle",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DeltaScale",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CharTranslation",
          "Type": "Point",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PageTranslation",
          "Type": "Point",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.MouseWheelParameters"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FrameId",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "IsInContact",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "PointerDevice",
          "Type": "PointerDevice",
          "IsGet": true
        },
        {
          "Name": "PointerId",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "Point",
          "IsGet": true
        },
        {
          "Name": "Properties",
          "Type": "PointerPointProperties",
          "IsGet": true
        },
        {
          "Name": "RawPosition",
          "Type": "Point",
          "IsGet": true
        },
        {
          "Name": "Timestamp",
          "Type": "UInt64",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetCurrentPoint",
          "IsStatic": true,
          "ReturnType": "PointerPoint",
          "Parameters": [
            {
              "Name": "pointerId",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetCurrentPoint",
          "IsStatic": true,
          "ReturnType": "PointerPoint",
          "Parameters": [
            {
              "Name": "pointerId",
              "Type": "UInt32"
            },
            {
              "Name": "transform",
              "Type": "IPointerPointTransform"
            }
          ]
        },
        {
          "Name": "GetIntermediatePoints",
          "IsStatic": true,
          "ReturnType": "IList<PointerPoint>",
          "Parameters": [
            {
              "Name": "pointerId",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetIntermediatePoints",
          "IsStatic": true,
          "ReturnType": "IList<PointerPoint>",
          "Parameters": [
            {
              "Name": "pointerId",
              "Type": "UInt32"
            },
            {
              "Name": "transform",
              "Type": "IPointerPointTransform"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Input.PointerPoint"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ContactRect",
          "Type": "Rect",
          "IsGet": true
        },
        {
          "Name": "ContactRectRaw",
          "Type": "Rect",
          "IsGet": true
        },
        {
          "Name": "IsBarrelButtonPressed",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsCanceled",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsEraser",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsHorizontalMouseWheel",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsInRange",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsInverted",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsLeftButtonPressed",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsMiddleButtonPressed",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsPrimary",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsRightButtonPressed",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsXButton1Pressed",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsXButton2Pressed",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "MouseWheelDelta",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "Orientation",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "PointerUpdateKind",
          "Type": "PointerUpdateKind",
          "IsGet": true
        },
        {
          "Name": "Pressure",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "TouchConfidence",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Twist",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "XTilt",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "YTilt",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "ZDistance",
          "Type": "Nullable<Single>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetUsageValue",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "usagePage",
              "Type": "UInt32"
            },
            {
              "Name": "usageId",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "HasUsage",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "usagePage",
              "Type": "UInt32"
            },
            {
              "Name": "usageId",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Input.PointerPointProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsBarrelButtonFeedbackEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsContactFeedbackEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetForCurrentView",
          "IsStatic": true,
          "ReturnType": "PointerVisualizationSettings"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Input.PointerVisualizationSettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "PointerDeviceType",
          "Type": "PointerDeviceType",
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "Point",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.RightTappedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "PointerDeviceType",
          "Type": "PointerDeviceType",
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "Point",
          "IsGet": true
        },
        {
          "Name": "TapCount",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.TappedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "XmlDocument"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Content",
          "Type": "XmlDocument",
          "IsGet": true
        },
        {
          "Name": "ExpirationTime",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Notifications.BadgeNotification"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateBadgeUpdaterForApplication",
          "IsStatic": true,
          "ReturnType": "BadgeUpdater"
        },
        {
          "Name": "CreateBadgeUpdaterForApplication",
          "IsStatic": true,
          "ReturnType": "BadgeUpdater",
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateBadgeUpdaterForSecondaryTile",
          "IsStatic": true,
          "ReturnType": "BadgeUpdater",
          "Parameters": [
            {
              "Name": "tileId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetTemplateContent",
          "IsStatic": true,
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "type",
              "Type": "BadgeTemplateType"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Notifications.BadgeUpdateManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Clear",
          "ReturnType": "Void"
        },
        {
          "Name": "StartPeriodicUpdate",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "badgeContent",
              "Type": "Uri"
            },
            {
              "Name": "requestedInterval",
              "Type": "PeriodicUpdateRecurrence"
            }
          ]
        },
        {
          "Name": "StartPeriodicUpdate",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "badgeContent",
              "Type": "Uri"
            },
            {
              "Name": "startTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "requestedInterval",
              "Type": "PeriodicUpdateRecurrence"
            }
          ]
        },
        {
          "Name": "StopPeriodicUpdate",
          "ReturnType": "Void"
        },
        {
          "Name": "Update",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "notification",
              "Type": "BadgeNotification"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Notifications.BadgeUpdater"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "XmlDocument"
            },
            {
              "Name": "deliveryTime",
              "Type": "DateTimeOffset"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Content",
          "Type": "XmlDocument",
          "IsGet": true
        },
        {
          "Name": "DeliveryTime",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "ExpirationTime",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Tag",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Notifications.ScheduledTileNotification"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "XmlDocument"
            },
            {
              "Name": "deliveryTime",
              "Type": "DateTimeOffset"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "XmlDocument"
            },
            {
              "Name": "deliveryTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "snoozeInterval",
              "Type": "TimeSpan"
            },
            {
              "Name": "maximumSnoozeCount",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Content",
          "Type": "XmlDocument",
          "IsGet": true
        },
        {
          "Name": "DeliveryTime",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "Group",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaximumSnoozeCount",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "SnoozeInterval",
          "Type": "Nullable<TimeSpan>",
          "IsGet": true
        },
        {
          "Name": "SuppressPopup",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Tag",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Notifications.ScheduledToastNotification"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "XmlDocument"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Content",
          "Type": "XmlDocument",
          "IsGet": true
        },
        {
          "Name": "ExpirationTime",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Notifications.TileFlyoutNotification"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateTileFlyoutUpdaterForApplication",
          "IsStatic": true,
          "ReturnType": "TileFlyoutUpdater"
        },
        {
          "Name": "CreateTileFlyoutUpdaterForApplication",
          "IsStatic": true,
          "ReturnType": "TileFlyoutUpdater",
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateTileFlyoutUpdaterForSecondaryTile",
          "IsStatic": true,
          "ReturnType": "TileFlyoutUpdater",
          "Parameters": [
            {
              "Name": "tileId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetTemplateContent",
          "IsStatic": true,
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "type",
              "Type": "TileFlyoutTemplateType"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Notifications.TileFlyoutUpdateManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Setting",
          "Type": "NotificationSetting",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Clear",
          "ReturnType": "Void"
        },
        {
          "Name": "StartPeriodicUpdate",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "tileFlyoutContent",
              "Type": "Uri"
            },
            {
              "Name": "requestedInterval",
              "Type": "PeriodicUpdateRecurrence"
            }
          ]
        },
        {
          "Name": "StartPeriodicUpdate",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "tileFlyoutContent",
              "Type": "Uri"
            },
            {
              "Name": "startTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "requestedInterval",
              "Type": "PeriodicUpdateRecurrence"
            }
          ]
        },
        {
          "Name": "StopPeriodicUpdate",
          "ReturnType": "Void"
        },
        {
          "Name": "Update",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "notification",
              "Type": "TileFlyoutNotification"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Notifications.TileFlyoutUpdater"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "XmlDocument"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Content",
          "Type": "XmlDocument",
          "IsGet": true
        },
        {
          "Name": "ExpirationTime",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Tag",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Notifications.TileNotification"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateTileUpdaterForApplication",
          "IsStatic": true,
          "ReturnType": "TileUpdater"
        },
        {
          "Name": "CreateTileUpdaterForApplication",
          "IsStatic": true,
          "ReturnType": "TileUpdater",
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateTileUpdaterForSecondaryTile",
          "IsStatic": true,
          "ReturnType": "TileUpdater",
          "Parameters": [
            {
              "Name": "tileId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetTemplateContent",
          "IsStatic": true,
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "type",
              "Type": "TileTemplateType"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Notifications.TileUpdateManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Setting",
          "Type": "NotificationSetting",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AddToSchedule",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "scheduledTile",
              "Type": "ScheduledTileNotification"
            }
          ]
        },
        {
          "Name": "Clear",
          "ReturnType": "Void"
        },
        {
          "Name": "EnableNotificationQueue",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "enable",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "EnableNotificationQueueForSquare150x150",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "enable",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "EnableNotificationQueueForSquare310x310",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "enable",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "EnableNotificationQueueForWide310x150",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "enable",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "GetScheduledTileNotifications",
          "ReturnType": "IReadOnlyList<ScheduledTileNotification>"
        },
        {
          "Name": "RemoveFromSchedule",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "scheduledTile",
              "Type": "ScheduledTileNotification"
            }
          ]
        },
        {
          "Name": "StartPeriodicUpdate",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "tileContent",
              "Type": "Uri"
            },
            {
              "Name": "requestedInterval",
              "Type": "PeriodicUpdateRecurrence"
            }
          ]
        },
        {
          "Name": "StartPeriodicUpdate",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "tileContent",
              "Type": "Uri"
            },
            {
              "Name": "startTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "requestedInterval",
              "Type": "PeriodicUpdateRecurrence"
            }
          ]
        },
        {
          "Name": "StartPeriodicUpdateBatch",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "tileContents",
              "Type": "IEnumerable<Uri>"
            },
            {
              "Name": "requestedInterval",
              "Type": "PeriodicUpdateRecurrence"
            }
          ]
        },
        {
          "Name": "StartPeriodicUpdateBatch",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "tileContents",
              "Type": "IEnumerable<Uri>"
            },
            {
              "Name": "startTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "requestedInterval",
              "Type": "PeriodicUpdateRecurrence"
            }
          ]
        },
        {
          "Name": "StopPeriodicUpdate",
          "ReturnType": "Void"
        },
        {
          "Name": "Update",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "notification",
              "Type": "TileNotification"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Notifications.TileUpdater"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Arguments",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Notifications.ToastActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Reason",
          "Type": "ToastDismissalReason",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Notifications.ToastDismissedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ErrorCode",
          "Type": "Exception",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Notifications.ToastFailedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "XmlDocument"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Content",
          "Type": "XmlDocument",
          "IsGet": true
        },
        {
          "Name": "ExpirationTime",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Group",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SuppressPopup",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Tag",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "Activated",
          "Type": "TypedEventHandler<ToastNotification,Object>"
        },
        {
          "Name": "Dismissed",
          "Type": "TypedEventHandler<ToastNotification,ToastDismissedEventArgs>"
        },
        {
          "Name": "Failed",
          "Type": "TypedEventHandler<ToastNotification,ToastFailedEventArgs>"
        }
      ],
      "Name": "Windows.UI.Notifications.ToastNotification"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Clear",
          "ReturnType": "Void"
        },
        {
          "Name": "Clear",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "Remove",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "tag",
              "Type": "String"
            },
            {
              "Name": "group",
              "Type": "String"
            },
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "Remove",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "tag",
              "Type": "String"
            },
            {
              "Name": "group",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "Remove",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "tag",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "RemoveGroup",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "group",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "RemoveGroup",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "group",
              "Type": "String"
            },
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Notifications.ToastNotificationHistory"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "History",
          "Type": "ToastNotificationHistory",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateToastNotifier",
          "IsStatic": true,
          "ReturnType": "ToastNotifier"
        },
        {
          "Name": "CreateToastNotifier",
          "IsStatic": true,
          "ReturnType": "ToastNotifier",
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetTemplateContent",
          "IsStatic": true,
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "type",
              "Type": "ToastTemplateType"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Notifications.ToastNotificationManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Setting",
          "Type": "NotificationSetting",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AddToSchedule",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "scheduledToast",
              "Type": "ScheduledToastNotification"
            }
          ]
        },
        {
          "Name": "GetScheduledToastNotifications",
          "ReturnType": "IReadOnlyList<ScheduledToastNotification>"
        },
        {
          "Name": "Hide",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "notification",
              "Type": "ToastNotification"
            }
          ]
        },
        {
          "Name": "RemoveFromSchedule",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "scheduledToast",
              "Type": "ScheduledToastNotification"
            }
          ]
        },
        {
          "Name": "Show",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "notification",
              "Type": "ToastNotification"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Notifications.ToastNotifier"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "String"
            },
            {
              "Name": "title",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "CancelCommandIndex",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Commands",
          "Type": "IList<IUICommand>",
          "IsGet": true
        },
        {
          "Name": "Content",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DefaultCommandIndex",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Options",
          "Type": "MessageDialogOptions",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ShowAsync",
          "ReturnType": "IAsyncOperation<IUICommand>"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Popups.MessageDialog"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Commands",
          "Type": "IList<IUICommand>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ShowAsync",
          "ReturnType": "IAsyncOperation<IUICommand>",
          "Parameters": [
            {
              "Name": "invocationPoint",
              "Type": "Point"
            }
          ]
        },
        {
          "Name": "ShowForSelectionAsync",
          "ReturnType": "IAsyncOperation<IUICommand>",
          "Parameters": [
            {
              "Name": "selection",
              "Type": "Rect"
            }
          ]
        },
        {
          "Name": "ShowForSelectionAsync",
          "ReturnType": "IAsyncOperation<IUICommand>",
          "Parameters": [
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Popups.PopupMenu"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IUICommand"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "label",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "label",
              "Type": "String"
            },
            {
              "Name": "action",
              "Type": "UICommandInvokedHandler"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "label",
              "Type": "String"
            },
            {
              "Name": "action",
              "Type": "UICommandInvokedHandler"
            },
            {
              "Name": "commandId",
              "Type": "Object"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Id",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Invoked",
          "Type": "UICommandInvokedHandler",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Label",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Popups.UICommand"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IUICommand"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Id",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Invoked",
          "Type": "UICommandInvokedHandler",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Label",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Popups.UICommandSeparator"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "tileId",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "tileId",
              "Type": "String"
            },
            {
              "Name": "displayName",
              "Type": "String"
            },
            {
              "Name": "arguments",
              "Type": "String"
            },
            {
              "Name": "square150x150Logo",
              "Type": "Uri"
            },
            {
              "Name": "desiredSize",
              "Type": "TileSize"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "tileId",
              "Type": "String"
            },
            {
              "Name": "shortName",
              "Type": "String"
            },
            {
              "Name": "displayName",
              "Type": "String"
            },
            {
              "Name": "arguments",
              "Type": "String"
            },
            {
              "Name": "tileOptions",
              "Type": "TileOptions"
            },
            {
              "Name": "logoReference",
              "Type": "Uri"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "tileId",
              "Type": "String"
            },
            {
              "Name": "shortName",
              "Type": "String"
            },
            {
              "Name": "displayName",
              "Type": "String"
            },
            {
              "Name": "arguments",
              "Type": "String"
            },
            {
              "Name": "tileOptions",
              "Type": "TileOptions"
            },
            {
              "Name": "logoReference",
              "Type": "Uri"
            },
            {
              "Name": "wideLogoReference",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Arguments",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "BackgroundColor",
          "Type": "Color",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ForegroundText",
          "Type": "ForegroundText",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LockScreenBadgeLogo",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LockScreenDisplayBadgeAndTileText",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Logo",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PhoneticName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RoamingEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ShortName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SmallLogo",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TileId",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TileOptions",
          "Type": "TileOptions",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VisualElements",
          "Type": "SecondaryTileVisualElements",
          "IsGet": true
        },
        {
          "Name": "WideLogo",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Exists",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "tileId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "FindAllAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<SecondaryTile>>"
        },
        {
          "Name": "FindAllAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<SecondaryTile>>",
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "FindAllForPackageAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<SecondaryTile>>"
        },
        {
          "Name": "RequestCreateAsync",
          "ReturnType": "IAsyncOperation<Boolean>"
        },
        {
          "Name": "RequestCreateAsync",
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "invocationPoint",
              "Type": "Point"
            }
          ]
        },
        {
          "Name": "RequestCreateForSelectionAsync",
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "selection",
              "Type": "Rect"
            }
          ]
        },
        {
          "Name": "RequestCreateForSelectionAsync",
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            }
          ]
        },
        {
          "Name": "RequestDeleteAsync",
          "ReturnType": "IAsyncOperation<Boolean>"
        },
        {
          "Name": "RequestDeleteAsync",
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "invocationPoint",
              "Type": "Point"
            }
          ]
        },
        {
          "Name": "RequestDeleteForSelectionAsync",
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "selection",
              "Type": "Rect"
            }
          ]
        },
        {
          "Name": "RequestDeleteForSelectionAsync",
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            }
          ]
        },
        {
          "Name": "UpdateAsync",
          "ReturnType": "IAsyncOperation<Boolean>"
        }
      ],
      "Events": [
        {
          "Name": "VisualElementsRequested",
          "Type": "TypedEventHandler<SecondaryTile,VisualElementsRequestedEventArgs>"
        }
      ],
      "Name": "Windows.UI.StartScreen.SecondaryTile"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BackgroundColor",
          "Type": "Color",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ForegroundText",
          "Type": "ForegroundText",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ShowNameOnSquare150x150Logo",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ShowNameOnSquare310x310Logo",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ShowNameOnWide310x150Logo",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Square150x150Logo",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Square30x30Logo",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Square310x310Logo",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Square70x70Logo",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Square71x71Logo",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Wide310x150Logo",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.StartScreen.SecondaryTileVisualElements"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AlternateVisualElements",
          "Type": "IReadOnlyList<SecondaryTileVisualElements>",
          "IsGet": true
        },
        {
          "Name": "Deadline",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "VisualElements",
          "Type": "SecondaryTileVisualElements",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDeferral",
          "ReturnType": "VisualElementsRequestDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.StartScreen.VisualElementsRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Complete",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.StartScreen.VisualElementsRequestDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Request",
          "Type": "VisualElementsRequest",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.StartScreen.VisualElementsRequestedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Black",
          "Type": "FontWeight",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Bold",
          "Type": "FontWeight",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ExtraBlack",
          "Type": "FontWeight",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ExtraBold",
          "Type": "FontWeight",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ExtraLight",
          "Type": "FontWeight",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Light",
          "Type": "FontWeight",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Medium",
          "Type": "FontWeight",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Normal",
          "Type": "FontWeight",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SemiBold",
          "Type": "FontWeight",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SemiLight",
          "Type": "FontWeight",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Thin",
          "Type": "FontWeight",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Text.FontWeights"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AutoColor",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MaxUnitCount",
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MinUnitCount",
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "UndefinedColor",
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "UndefinedFloatValue",
          "Type": "Single",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "UndefinedFontStretch",
          "Type": "FontStretch",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "UndefinedFontStyle",
          "Type": "FontStyle",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "UndefinedInt32Value",
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Text.TextConstants"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "HighContrast",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "HighContrastScheme",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "HighContrastChanged",
          "Type": "TypedEventHandler<AccessibilitySettings,Object>"
        }
      ],
      "Name": "Windows.UI.ViewManagement.AccessibilitySettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AdjacentToLeftDisplayEdge",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "AdjacentToRightDisplayEdge",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "DesiredBoundsMode",
          "Type": "ApplicationViewBoundsMode",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "IsFullScreen",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsOnLockScreen",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsScreenCaptureEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Orientation",
          "Type": "ApplicationViewOrientation",
          "IsGet": true
        },
        {
          "Name": "SuppressSystemOverlays",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TerminateAppOnFinalViewClose",
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VisibleBounds",
          "Type": "Rect",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetApplicationViewIdForWindow",
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "window",
              "Type": "ICoreWindow"
            }
          ]
        },
        {
          "Name": "GetForCurrentView",
          "IsStatic": true,
          "ReturnType": "ApplicationView"
        },
        {
          "Name": "SetDesiredBoundsMode",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "boundsMode",
              "Type": "ApplicationViewBoundsMode"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "Consolidated",
          "Type": "TypedEventHandler<ApplicationView,ApplicationViewConsolidatedEventArgs>"
        },
        {
          "Name": "VisibleBoundsChanged",
          "Type": "TypedEventHandler<ApplicationView,Object>"
        }
      ],
      "Name": "Windows.UI.ViewManagement.ApplicationView"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsUserInitiated",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.ViewManagement.ApplicationViewConsolidatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "OccludedRect",
          "Type": "Rect",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetForCurrentView",
          "IsStatic": true,
          "ReturnType": "InputPane"
        },
        {
          "Name": "TryHide",
          "ReturnType": "Boolean"
        },
        {
          "Name": "TryShow",
          "ReturnType": "Boolean"
        }
      ],
      "Events": [
        {
          "Name": "Hiding",
          "Type": "TypedEventHandler<InputPane,InputPaneVisibilityEventArgs>"
        },
        {
          "Name": "Showing",
          "Type": "TypedEventHandler<InputPane,InputPaneVisibilityEventArgs>"
        }
      ],
      "Name": "Windows.UI.ViewManagement.InputPane"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "EnsuredFocusedElementInView",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OccludedRect",
          "Type": "Rect",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.ViewManagement.InputPaneVisibilityEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BackgroundColor",
          "Type": "Nullable<Color>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "BackgroundOpacity",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ForegroundColor",
          "Type": "Nullable<Color>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OccludedRect",
          "Type": "Rect",
          "IsGet": true
        },
        {
          "Name": "ProgressIndicator",
          "Type": "StatusBarProgressIndicator",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetForCurrentView",
          "IsStatic": true,
          "ReturnType": "StatusBar"
        },
        {
          "Name": "HideAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "ShowAsync",
          "ReturnType": "IAsyncAction"
        }
      ],
      "Events": [
        {
          "Name": "Hiding",
          "Type": "TypedEventHandler<StatusBar,Object>"
        },
        {
          "Name": "Showing",
          "Type": "TypedEventHandler<StatusBar,Object>"
        }
      ],
      "Name": "Windows.UI.ViewManagement.StatusBar"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ProgressValue",
          "Type": "Nullable<Double>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Text",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "HideAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "ShowAsync",
          "ReturnType": "IAsyncAction"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.ViewManagement.StatusBarProgressIndicator"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AnimationsEnabled",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "CaretBlinkRate",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "CaretBrowsingEnabled",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "CaretWidth",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "CursorSize",
          "Type": "Size",
          "IsGet": true
        },
        {
          "Name": "DoubleClickTime",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "HandPreference",
          "Type": "HandPreference",
          "IsGet": true
        },
        {
          "Name": "MessageDuration",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "MouseHoverTime",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "ScrollBarArrowSize",
          "Type": "Size",
          "IsGet": true
        },
        {
          "Name": "ScrollBarSize",
          "Type": "Size",
          "IsGet": true
        },
        {
          "Name": "ScrollBarThumbBoxSize",
          "Type": "Size",
          "IsGet": true
        },
        {
          "Name": "TextScaleFactor",
          "Type": "Double",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "UIElementColor",
          "ReturnType": "Color",
          "Parameters": [
            {
              "Name": "desiredElement",
              "Type": "UIElementType"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "TextScaleFactorChanged",
          "Type": "TypedEventHandler<UISettings,Object>"
        }
      ],
      "Name": "Windows.UI.ViewManagement.UISettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Complete",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.WebUI.ActivatedDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDeferral",
          "ReturnType": "ActivatedDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.WebUI.ActivatedOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BackgroundColor",
          "Type": "Color",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ClosedDisplayMode",
          "Type": "WebUICommandBarClosedDisplayMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ForegroundColor",
          "Type": "Color",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsOpen",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Opacity",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PrimaryCommands",
          "Type": "IObservableVector<IWebUICommandBarElement>",
          "IsGet": true
        },
        {
          "Name": "SecondaryCommands",
          "Type": "IObservableVector<IWebUICommandBarElement>",
          "IsGet": true
        },
        {
          "Name": "Size",
          "Type": "Size",
          "IsGet": true
        },
        {
          "Name": "Visible",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetForCurrentView",
          "IsStatic": true,
          "ReturnType": "WebUICommandBar"
        }
      ],
      "Events": [
        {
          "Name": "MenuClosed",
          "Type": "MenuClosedEventHandler"
        },
        {
          "Name": "MenuOpened",
          "Type": "MenuOpenedEventHandler"
        },
        {
          "Name": "SizeChanged",
          "Type": "SizeChangedEventHandler"
        }
      ],
      "Name": "Windows.UI.WebUI.Core.WebUICommandBar"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebUICommandBarIcon"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Uri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.Core.WebUICommandBarBitmapIcon"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebUICommandBarElement"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Text",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "ItemInvoked",
          "Type": "TypedEventHandler<WebUICommandBarConfirmationButton,WebUICommandBarItemInvokedEventArgs>"
        }
      ],
      "Name": "Windows.UI.WebUI.Core.WebUICommandBarConfirmationButton"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebUICommandBarElement"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Enabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Icon",
          "Type": "IWebUICommandBarIcon",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsChecked",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsToggleButton",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Label",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "ItemInvoked",
          "Type": "TypedEventHandler<WebUICommandBarIconButton,WebUICommandBarItemInvokedEventArgs>"
        }
      ],
      "Name": "Windows.UI.WebUI.Core.WebUICommandBarIconButton"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsPrimaryCommand",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.Core.WebUICommandBarItemInvokedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "Size",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.Core.WebUICommandBarSizeChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebUICommandBarIcon"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "symbol",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Symbol",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.Core.WebUICommandBarSymbolIcon"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISuspendingDeferral"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Complete",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.WebUI.SuspendingDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISuspendingEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "SuspendingOperation",
          "Type": "SuspendingOperation",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.SuspendingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISuspendingOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Deadline",
          "Type": "DateTimeOffset",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDeferral",
          "ReturnType": "SuspendingDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.WebUI.SuspendingOperation"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "Activated",
          "Type": "ActivatedEventHandler",
          "IsStatic": true
        },
        {
          "Name": "Navigated",
          "Type": "NavigatedEventHandler",
          "IsStatic": true
        },
        {
          "Name": "Resuming",
          "Type": "ResumingEventHandler",
          "IsStatic": true
        },
        {
          "Name": "Suspending",
          "Type": "SuspendingEventHandler",
          "IsStatic": true
        }
      ],
      "Name": "Windows.UI.WebUI.WebUIApplication"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IAppointmentsProviderActivatedEventArgs",
        "IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ActivatedOperation",
          "Type": "ActivatedOperation",
          "IsGet": true
        },
        {
          "Name": "InstanceStartDate",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "LocalId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "RoamingId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        },
        {
          "Name": "Verb",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIAppointmentsProviderShowAppointmentDetailsActivatedEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Current",
          "Type": "IWebUIBackgroundTaskInstance",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIBackgroundTaskInstance"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTaskInstance",
        "IWebUIBackgroundTaskInstance"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "InstanceId",
          "Type": "Guid",
          "IsGet": true
        },
        {
          "Name": "Progress",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Succeeded",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SuspendedCount",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Task",
          "Type": "BackgroundTaskRegistration",
          "IsGet": true
        },
        {
          "Name": "TriggerDetails",
          "Type": "Object",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDeferral",
          "ReturnType": "BackgroundTaskDeferral"
        }
      ],
      "Events": [
        {
          "Name": "Canceled",
          "Type": "BackgroundTaskCanceledEventHandler"
        }
      ],
      "Name": "Windows.UI.WebUI.WebUIBackgroundTaskInstanceRuntimeClass"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "ICachedFileUpdaterActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ActivatedOperation",
          "Type": "ActivatedOperation",
          "IsGet": true
        },
        {
          "Name": "CachedFileUpdaterUI",
          "Type": "CachedFileUpdaterUI",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUICachedFileUpdaterActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IFileActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ActivatedOperation",
          "Type": "ActivatedOperation",
          "IsGet": true
        },
        {
          "Name": "Files",
          "Type": "IReadOnlyList<IStorageItem>",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        },
        {
          "Name": "Verb",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIFileActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IFileOpenPickerActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ActivatedOperation",
          "Type": "ActivatedOperation",
          "IsGet": true
        },
        {
          "Name": "FileOpenPickerUI",
          "Type": "FileOpenPickerUI",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIFileOpenPickerActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IContinuationActivatedEventArgs",
        "IFileOpenPickerContinuationEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ActivatedOperation",
          "Type": "ActivatedOperation",
          "IsGet": true
        },
        {
          "Name": "ContinuationData",
          "Type": "ValueSet",
          "IsGet": true
        },
        {
          "Name": "Files",
          "Type": "IReadOnlyList<StorageFile>",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIFileOpenPickerContinuationEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IFileSavePickerActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ActivatedOperation",
          "Type": "ActivatedOperation",
          "IsGet": true
        },
        {
          "Name": "FileSavePickerUI",
          "Type": "FileSavePickerUI",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIFileSavePickerActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IContinuationActivatedEventArgs",
        "IFileSavePickerContinuationEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ActivatedOperation",
          "Type": "ActivatedOperation",
          "IsGet": true
        },
        {
          "Name": "ContinuationData",
          "Type": "ValueSet",
          "IsGet": true
        },
        {
          "Name": "File",
          "Type": "StorageFile",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIFileSavePickerContinuationEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IContinuationActivatedEventArgs",
        "IFolderPickerContinuationEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ActivatedOperation",
          "Type": "ActivatedOperation",
          "IsGet": true
        },
        {
          "Name": "ContinuationData",
          "Type": "ValueSet",
          "IsGet": true
        },
        {
          "Name": "Folder",
          "Type": "StorageFolder",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIFolderPickerContinuationEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "ILaunchActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ActivatedOperation",
          "Type": "ActivatedOperation",
          "IsGet": true
        },
        {
          "Name": "Arguments",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        },
        {
          "Name": "TileId",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUILaunchActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Complete",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUINavigatedDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebUINavigatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NavigatedOperation",
          "Type": "WebUINavigatedOperation",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUINavigatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDeferral",
          "ReturnType": "WebUINavigatedDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUINavigatedOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IProtocolActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ActivatedOperation",
          "Type": "ActivatedOperation",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        },
        {
          "Name": "Uri",
          "Type": "Uri",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIProtocolActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "ISearchActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ActivatedOperation",
          "Type": "ActivatedOperation",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "QueryText",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUISearchActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IShareTargetActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ActivatedOperation",
          "Type": "ActivatedOperation",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "ShareOperation",
          "Type": "ShareOperation",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIShareTargetActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IVoiceCommandActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ActivatedOperation",
          "Type": "ActivatedOperation",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "Result",
          "Type": "SpeechRecognitionResult",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIVoiceCommandActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IWalletActionActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ActionId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ActionKind",
          "Type": "WalletActionKind",
          "IsGet": true
        },
        {
          "Name": "ActivatedOperation",
          "Type": "ActivatedOperation",
          "IsGet": true
        },
        {
          "Name": "ItemId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIWalletActionActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IContinuationActivatedEventArgs",
        "IWebAuthenticationBrokerContinuationEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ActivatedOperation",
          "Type": "ActivatedOperation",
          "IsGet": true
        },
        {
          "Name": "ContinuationData",
          "Type": "ValueSet",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        },
        {
          "Name": "WebAuthenticationResult",
          "Type": "WebAuthenticationResult",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIWebAuthenticationBrokerContinuationEventArgs"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Current",
          "Type": "Application",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DebugSettings",
          "Type": "DebugSettings",
          "IsGet": true
        },
        {
          "Name": "RequestedTheme",
          "Type": "ApplicationTheme",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Resources",
          "Type": "ResourceDictionary",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Exit",
          "ReturnType": "Void"
        },
        {
          "Name": "LoadComponent",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "component",
              "Type": "Object"
            },
            {
              "Name": "resourceLocator",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "LoadComponent",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "component",
              "Type": "Object"
            },
            {
              "Name": "resourceLocator",
              "Type": "Uri"
            },
            {
              "Name": "componentResourceLocation",
              "Type": "ComponentResourceLocation"
            }
          ]
        },
        {
          "Name": "Start",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "callback",
              "Type": "ApplicationInitializationCallback"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "Resuming",
          "Type": "EventHandler<Object>"
        },
        {
          "Name": "Suspending",
          "Type": "SuspendingEventHandler"
        },
        {
          "Name": "UnhandledException",
          "Type": "UnhandledExceptionEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Application"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.ApplicationInitializationCallbackParams"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AnnotationTypeIdProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AnnotationTypeNameProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AuthorProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DateTimeProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TargetProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.AnnotationPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AcceleratorKeyProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AccessKeyProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AutomationIdProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BoundingRectangleProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ClassNameProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ClickablePointProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ControlledPeersProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ControlTypeProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HasKeyboardFocusProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HelpTextProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsContentElementProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsControlElementProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsEnabledProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsKeyboardFocusableProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsOffscreenProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsPasswordProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsRequiredForFormProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ItemStatusProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ItemTypeProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LabeledByProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LiveSettingProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LocalizedControlTypeProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "NameProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OrientationProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.AutomationElementIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AcceleratorKeyProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AccessibilityViewProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AccessKeyProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AutomationIdProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ControlledPeersProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HelpTextProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsRequiredForFormProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ItemStatusProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ItemTypeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LabeledByProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LiveSettingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "NameProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetAcceleratorKey",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetAccessibilityView",
          "IsStatic": true,
          "ReturnType": "AccessibilityView",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetAccessKey",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetAutomationId",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetControlledPeers",
          "IsStatic": true,
          "ReturnType": "IList<UIElement>",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetHelpText",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetIsRequiredForForm",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetItemStatus",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetItemType",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetLabeledBy",
          "IsStatic": true,
          "ReturnType": "UIElement",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetLiveSetting",
          "IsStatic": true,
          "ReturnType": "AutomationLiveSetting",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetName",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "SetAcceleratorKey",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SetAccessibilityView",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "AccessibilityView"
            }
          ]
        },
        {
          "Name": "SetAccessKey",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SetAutomationId",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SetHelpText",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SetIsRequiredForForm",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetItemStatus",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SetItemType",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SetLabeledBy",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "UIElement"
            }
          ]
        },
        {
          "Name": "SetLiveSetting",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "AutomationLiveSetting"
            }
          ]
        },
        {
          "Name": "SetName",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.AutomationProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.AutomationProperty"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DockPositionProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.DockPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DropEffectProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DropEffectsProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GrabbedItemsProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsGrabbedProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.DragPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DropTargetEffectProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DropTargetEffectsProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.DropTargetPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ExpandCollapseStateProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ColumnProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ColumnSpanProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ContainingGridProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RowProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RowSpanProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.GridItemPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ColumnCountProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RowCountProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.GridPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CurrentViewProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SupportedViewsProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.MultipleViewPatternIdentifiers"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [
        "IExpandCollapseProvider",
        "IToggleProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "AppBar"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "ExpandCollapseState",
          "Type": "ExpandCollapseState",
          "IsGet": true
        },
        {
          "Name": "ToggleState",
          "Type": "ToggleState",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Collapse",
          "ReturnType": "Void"
        },
        {
          "Name": "Expand",
          "ReturnType": "Void"
        },
        {
          "Name": "Toggle",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.AppBarAutomationPeer"
    },
    {
      "BaseType": "ButtonAutomationPeer",
      "Interfaces": [
        "IInvokeProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "AppBarButton"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer"
    },
    {
      "BaseType": "ToggleButtonAutomationPeer",
      "Interfaces": [
        "IToggleProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "AppBarToggleButton"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "EventsSource",
          "Type": "AutomationPeer",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetAcceleratorKey",
          "ReturnType": "String"
        },
        {
          "Name": "GetAccessKey",
          "ReturnType": "String"
        },
        {
          "Name": "GetAutomationControlType",
          "ReturnType": "AutomationControlType"
        },
        {
          "Name": "GetAutomationId",
          "ReturnType": "String"
        },
        {
          "Name": "GetBoundingRectangle",
          "ReturnType": "Rect"
        },
        {
          "Name": "GetClassName",
          "ReturnType": "String"
        },
        {
          "Name": "GetClickablePoint",
          "ReturnType": "Point"
        },
        {
          "Name": "GetControlledPeers",
          "ReturnType": "IReadOnlyList<AutomationPeer>"
        },
        {
          "Name": "GetHelpText",
          "ReturnType": "String"
        },
        {
          "Name": "GetChildren",
          "ReturnType": "IList<AutomationPeer>"
        },
        {
          "Name": "GetItemStatus",
          "ReturnType": "String"
        },
        {
          "Name": "GetItemType",
          "ReturnType": "String"
        },
        {
          "Name": "GetLabeledBy",
          "ReturnType": "AutomationPeer"
        },
        {
          "Name": "GetLiveSetting",
          "ReturnType": "AutomationLiveSetting"
        },
        {
          "Name": "GetLocalizedControlType",
          "ReturnType": "String"
        },
        {
          "Name": "GetName",
          "ReturnType": "String"
        },
        {
          "Name": "GetOrientation",
          "ReturnType": "AutomationOrientation"
        },
        {
          "Name": "GetParent",
          "ReturnType": "AutomationPeer"
        },
        {
          "Name": "GetPattern",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "patternInterface",
              "Type": "PatternInterface"
            }
          ]
        },
        {
          "Name": "GetPeerFromPoint",
          "ReturnType": "AutomationPeer",
          "Parameters": [
            {
              "Name": "point",
              "Type": "Point"
            }
          ]
        },
        {
          "Name": "HasKeyboardFocus",
          "ReturnType": "Boolean"
        },
        {
          "Name": "InvalidatePeer",
          "ReturnType": "Void"
        },
        {
          "Name": "IsContentElement",
          "ReturnType": "Boolean"
        },
        {
          "Name": "IsControlElement",
          "ReturnType": "Boolean"
        },
        {
          "Name": "IsEnabled",
          "ReturnType": "Boolean"
        },
        {
          "Name": "IsKeyboardFocusable",
          "ReturnType": "Boolean"
        },
        {
          "Name": "IsOffscreen",
          "ReturnType": "Boolean"
        },
        {
          "Name": "IsPassword",
          "ReturnType": "Boolean"
        },
        {
          "Name": "IsRequiredForForm",
          "ReturnType": "Boolean"
        },
        {
          "Name": "ListenerExists",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "eventId",
              "Type": "AutomationEvents"
            }
          ]
        },
        {
          "Name": "RaiseAutomationEvent",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "eventId",
              "Type": "AutomationEvents"
            }
          ]
        },
        {
          "Name": "RaisePropertyChangedEvent",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "automationProperty",
              "Type": "AutomationProperty"
            },
            {
              "Name": "oldValue",
              "Type": "Object"
            },
            {
              "Name": "newValue",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SetFocus",
          "ReturnType": "Void"
        },
        {
          "Name": "SetParent",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "peer",
              "Type": "AutomationPeer"
            }
          ]
        },
        {
          "Name": "ShowContextMenu",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.AutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "AutoSuggestBox"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer"
    },
    {
      "BaseType": "ButtonBaseAutomationPeer",
      "Interfaces": [
        "IInvokeProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "Button"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Invoke",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ButtonAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "CaptureElement"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.CaptureElementAutomationPeer"
    },
    {
      "BaseType": "SelectorAutomationPeer",
      "Interfaces": [
        "IExpandCollapseProvider",
        "IItemContainerProvider",
        "ISelectionProvider",
        "IValueProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ComboBox"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "ExpandCollapseState",
          "Type": "ExpandCollapseState",
          "IsGet": true
        },
        {
          "Name": "IsReadOnly",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Collapse",
          "ReturnType": "Void"
        },
        {
          "Name": "Expand",
          "ReturnType": "Void"
        },
        {
          "Name": "SetValue",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ComboBoxItem"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer"
    },
    {
      "BaseType": "SelectorItemAutomationPeer",
      "Interfaces": [
        "IScrollItemProvider",
        "ISelectionItemProvider",
        "IVirtualizedItemProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            },
            {
              "Name": "parent",
              "Type": "ComboBoxAutomationPeer"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "ScrollIntoView",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "DatePicker"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.DatePickerAutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer"
    },
    {
      "BaseType": "SelectorAutomationPeer",
      "Interfaces": [
        "IItemContainerProvider",
        "ISelectionProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "FlipView"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.FlipViewAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "FlipViewItem"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer"
    },
    {
      "BaseType": "SelectorItemAutomationPeer",
      "Interfaces": [
        "IScrollItemProvider",
        "ISelectionItemProvider",
        "IVirtualizedItemProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            },
            {
              "Name": "parent",
              "Type": "FlipViewAutomationPeer"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "ScrollIntoView",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "FlyoutPresenter"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer"
    },
    {
      "BaseType": "AutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "FrameworkElement"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Owner",
          "Type": "UIElement",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreatePeerForElement",
          "IsStatic": true,
          "ReturnType": "AutomationPeer",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ]
        },
        {
          "Name": "FromElement",
          "IsStatic": true,
          "ReturnType": "AutomationPeer",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer"
    },
    {
      "BaseType": "ListViewBaseAutomationPeer",
      "Interfaces": [
        "IDropTargetProvider",
        "IItemContainerProvider",
        "ISelectionProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "GridView"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.GridViewAutomationPeer"
    },
    {
      "BaseType": "ListViewBaseHeaderItemAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "GridViewHeaderItem"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "GridViewItem"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer"
    },
    {
      "BaseType": "SelectorItemAutomationPeer",
      "Interfaces": [
        "IScrollItemProvider",
        "ISelectionItemProvider",
        "IVirtualizedItemProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            },
            {
              "Name": "parent",
              "Type": "GridViewAutomationPeer"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "ScrollIntoView",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "GroupItem"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.GroupItemAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "Hub"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.HubAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [
        "IScrollItemProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "HubSection"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "ScrollIntoView",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.HubSectionAutomationPeer"
    },
    {
      "BaseType": "ButtonBaseAutomationPeer",
      "Interfaces": [
        "IInvokeProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "HyperlinkButton"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Invoke",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer"
    },
    {
      "BaseType": "ToggleButtonAutomationPeer",
      "Interfaces": [
        "IToggleProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "CheckBox"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "Image"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ImageAutomationPeer"
    },
    {
      "BaseType": "AutomationPeer",
      "Interfaces": [
        "IVirtualizedItemProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            },
            {
              "Name": "parent",
              "Type": "ItemsControlAutomationPeer"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Item",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "ItemsControlAutomationPeer",
          "Type": "ItemsControlAutomationPeer",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Realize",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ItemAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [
        "IItemContainerProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ItemsControl"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateItemAutomationPeer",
          "ReturnType": "ItemAutomationPeer",
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "FindItemByProperty",
          "ReturnType": "IRawElementProviderSimple",
          "Parameters": [
            {
              "Name": "startAfter",
              "Type": "IRawElementProviderSimple"
            },
            {
              "Name": "automationProperty",
              "Type": "AutomationProperty"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer"
    },
    {
      "BaseType": "SelectorAutomationPeer",
      "Interfaces": [
        "IItemContainerProvider",
        "ISelectionProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ListBox"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ListBoxAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ListBoxItem"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer"
    },
    {
      "BaseType": "SelectorItemAutomationPeer",
      "Interfaces": [
        "IScrollItemProvider",
        "ISelectionItemProvider",
        "IVirtualizedItemProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            },
            {
              "Name": "parent",
              "Type": "ListBoxAutomationPeer"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "ScrollIntoView",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer"
    },
    {
      "BaseType": "ListViewBaseAutomationPeer",
      "Interfaces": [
        "IDropTargetProvider",
        "IItemContainerProvider",
        "ISelectionProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ListView"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ListViewAutomationPeer"
    },
    {
      "BaseType": "SelectorAutomationPeer",
      "Interfaces": [
        "IDropTargetProvider",
        "IItemContainerProvider",
        "ISelectionProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ListViewBase"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "DropEffect",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DropEffects",
          "Type": "String[]",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer"
    },
    {
      "BaseType": "ListViewBaseHeaderItemAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ListViewHeaderItem"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ListViewItem"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer"
    },
    {
      "BaseType": "SelectorItemAutomationPeer",
      "Interfaces": [
        "IScrollItemProvider",
        "ISelectionItemProvider",
        "IVirtualizedItemProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            },
            {
              "Name": "parent",
              "Type": "ListViewBaseAutomationPeer"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "ScrollIntoView",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [
        "IExpandCollapseProvider",
        "IItemContainerProvider",
        "IScrollProvider",
        "ISelectionProvider"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CanSelectMultiple",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "ExpandCollapseState",
          "Type": "ExpandCollapseState",
          "IsGet": true
        },
        {
          "Name": "HorizontallyScrollable",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "HorizontalScrollPercent",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "HorizontalViewSize",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "IsSelectionRequired",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "VerticallyScrollable",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "VerticalScrollPercent",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "VerticalViewSize",
          "Type": "Double",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Collapse",
          "ReturnType": "Void"
        },
        {
          "Name": "Expand",
          "ReturnType": "Void"
        },
        {
          "Name": "FindItemByProperty",
          "ReturnType": "IRawElementProviderSimple",
          "Parameters": [
            {
              "Name": "startAfter",
              "Type": "IRawElementProviderSimple"
            },
            {
              "Name": "automationProperty",
              "Type": "AutomationProperty"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "GetSelection",
          "ReturnType": "IRawElementProviderSimple[]"
        },
        {
          "Name": "Scroll",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "horizontalAmount",
              "Type": "ScrollAmount"
            },
            {
              "Name": "verticalAmount",
              "Type": "ScrollAmount"
            }
          ]
        },
        {
          "Name": "SetScrollPercent",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "horizontalPercent",
              "Type": "Double"
            },
            {
              "Name": "verticalPercent",
              "Type": "Double"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [
        "IScrollItemProvider",
        "ISelectionItemProvider"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsSelected",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "SelectionContainer",
          "Type": "IRawElementProviderSimple",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AddToSelection",
          "ReturnType": "Void"
        },
        {
          "Name": "RemoveFromSelection",
          "ReturnType": "Void"
        },
        {
          "Name": "ScrollIntoView",
          "ReturnType": "Void"
        },
        {
          "Name": "Select",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "AutomationPeer",
      "Interfaces": [
        "IVirtualizedItemProvider"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Realize",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.MapControlAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "MediaElement"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.MediaElementAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [
        "IInvokeProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "MenuFlyoutItem"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Invoke",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer"
    },
    {
      "BaseType": "ItemsControlAutomationPeer",
      "Interfaces": [
        "IItemContainerProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "MenuFlyoutPresenter"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "PasswordBox"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "ItemsControlAutomationPeer",
      "Interfaces": [
        "IItemContainerProvider",
        "IScrollProvider",
        "ISelectionProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "Pivot"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "CanSelectMultiple",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "HorizontallyScrollable",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "HorizontalScrollPercent",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "HorizontalViewSize",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "IsSelectionRequired",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "VerticallyScrollable",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "VerticalScrollPercent",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "VerticalViewSize",
          "Type": "Double",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetSelection",
          "ReturnType": "IRawElementProviderSimple[]"
        },
        {
          "Name": "Scroll",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "horizontalAmount",
              "Type": "ScrollAmount"
            },
            {
              "Name": "verticalAmount",
              "Type": "ScrollAmount"
            }
          ]
        },
        {
          "Name": "SetScrollPercent",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "horizontalPercent",
              "Type": "Double"
            },
            {
              "Name": "verticalPercent",
              "Type": "Double"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.PivotAutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "PivotItem"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.PivotItemAutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "ItemAutomationPeer",
      "Interfaces": [
        "IScrollItemProvider",
        "ISelectionItemProvider",
        "IVirtualizedItemProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            },
            {
              "Name": "parent",
              "Type": "PivotAutomationPeer"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "IsSelected",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "SelectionContainer",
          "Type": "IRawElementProviderSimple",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AddToSelection",
          "ReturnType": "Void"
        },
        {
          "Name": "Realize",
          "ReturnType": "Void"
        },
        {
          "Name": "RemoveFromSelection",
          "ReturnType": "Void"
        },
        {
          "Name": "ScrollIntoView",
          "ReturnType": "Void"
        },
        {
          "Name": "Select",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer"
    },
    {
      "BaseType": "RangeBaseAutomationPeer",
      "Interfaces": [
        "IRangeValueProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ProgressBar"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ProgressRing"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer"
    },
    {
      "BaseType": "ToggleButtonAutomationPeer",
      "Interfaces": [
        "ISelectionItemProvider",
        "IToggleProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "RadioButton"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "IsSelected",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "SelectionContainer",
          "Type": "IRawElementProviderSimple",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AddToSelection",
          "ReturnType": "Void"
        },
        {
          "Name": "RemoveFromSelection",
          "ReturnType": "Void"
        },
        {
          "Name": "Select",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [
        "IRangeValueProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "RangeBase"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "IsReadOnly",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "LargeChange",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "Maximum",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "Minimum",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "SmallChange",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "Double",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "SetValue",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer"
    },
    {
      "BaseType": "ButtonBaseAutomationPeer",
      "Interfaces": [
        "IInvokeProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "RepeatButton"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Invoke",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "RichEditBox"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "RichTextBlock"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "RichTextBlockOverflow"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer"
    },
    {
      "BaseType": "RangeBaseAutomationPeer",
      "Interfaces": [
        "IRangeValueProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ScrollBar"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [
        "IScrollProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ScrollViewer"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "HorizontallyScrollable",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "HorizontalScrollPercent",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "HorizontalViewSize",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "VerticallyScrollable",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "VerticalScrollPercent",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "VerticalViewSize",
          "Type": "Double",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Scroll",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "horizontalAmount",
              "Type": "ScrollAmount"
            },
            {
              "Name": "verticalAmount",
              "Type": "ScrollAmount"
            }
          ]
        },
        {
          "Name": "SetScrollPercent",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "horizontalPercent",
              "Type": "Double"
            },
            {
              "Name": "verticalPercent",
              "Type": "Double"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer"
    },
    {
      "BaseType": "ItemsControlAutomationPeer",
      "Interfaces": [
        "IItemContainerProvider",
        "ISelectionProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "Selector"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "CanSelectMultiple",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsSelectionRequired",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetSelection",
          "ReturnType": "IRawElementProviderSimple[]"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.SelectorAutomationPeer"
    },
    {
      "BaseType": "ItemAutomationPeer",
      "Interfaces": [
        "ISelectionItemProvider",
        "IVirtualizedItemProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            },
            {
              "Name": "parent",
              "Type": "SelectorAutomationPeer"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "IsSelected",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "SelectionContainer",
          "Type": "IRawElementProviderSimple",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AddToSelection",
          "ReturnType": "Void"
        },
        {
          "Name": "RemoveFromSelection",
          "ReturnType": "Void"
        },
        {
          "Name": "Select",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [
        "IToggleProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "SemanticZoom"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "ToggleState",
          "Type": "ToggleState",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Toggle",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "SettingsFlyout"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.SettingsFlyoutAutomationPeer"
    },
    {
      "BaseType": "RangeBaseAutomationPeer",
      "Interfaces": [
        "IRangeValueProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "Slider"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.SliderAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "TextBlock"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.TextBlockAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "TextBox"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.TextBoxAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "Thumb"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ThumbAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "TimePicker"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.TimePickerAutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer"
    },
    {
      "BaseType": "ButtonBaseAutomationPeer",
      "Interfaces": [
        "IToggleProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ToggleButton"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "ToggleState",
          "Type": "ToggleState",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Toggle",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [
        "IToggleProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ToggleMenuFlyoutItem"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "ToggleState",
          "Type": "ToggleState",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Toggle",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [
        "IToggleProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ToggleSwitch"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "ToggleState",
          "Type": "ToggleState",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Toggle",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsReadOnlyProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LargeChangeProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MaximumProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MinimumProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SmallChangeProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ValueProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.RangeValuePatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "HorizontallyScrollableProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HorizontalScrollPercentProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HorizontalViewSizeProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "NoScroll",
          "Type": "Double",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "VerticallyScrollableProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "VerticalScrollPercentProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "VerticalViewSizeProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.ScrollPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsSelectedProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectionContainerProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.SelectionItemPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CanSelectMultipleProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsSelectionRequiredProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectionProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.SelectionPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FormulaProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ExtendedPropertiesProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FillColorProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FillPatternColorProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FillPatternStyleProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ShapeProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StyleIdProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StyleNameProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.StylesPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ColumnHeaderItemsProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RowHeaderItemsProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.TableItemPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ColumnHeadersProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RowHeadersProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RowOrColumnMajorProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.TablePatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ToggleStateProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.TogglePatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CanZoomProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MaxZoomProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MinZoomProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ZoomLevelProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.TransformPattern2Identifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CanMoveProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CanResizeProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CanRotateProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.TransformPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsReadOnlyProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ValueProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.ValuePatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CanMaximizeProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CanMinimizeProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsModalProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsTopmostProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "WindowInteractionStateProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "WindowVisualStateProperty",
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.WindowPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Message",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.BindingFailedEventArgs"
    },
    {
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ClosedDisplayMode",
          "Type": "AppBarClosedDisplayMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ClosedDisplayModeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsOpen",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsOpenProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsSticky",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsStickyProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "Closed",
          "Type": "EventHandler<Object>"
        },
        {
          "Name": "Opened",
          "Type": "EventHandler<Object>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.AppBar"
    },
    {
      "BaseType": "Button",
      "Interfaces": [
        "ICommandBarElement"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Icon",
          "Type": "IconElement",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IconProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsCompact",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsCompactProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Label",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LabelProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.AppBarButton"
    },
    {
      "BaseType": "Control",
      "Interfaces": [
        "ICommandBarElement"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsCompact",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsCompactProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.AppBarSeparator"
    },
    {
      "BaseType": "ToggleButton",
      "Interfaces": [
        "ICommandBarElement"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Icon",
          "Type": "IconElement",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IconProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsCompact",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsCompactProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Label",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LabelProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.AppBarToggleButton"
    },
    {
      "IsSealed": true,
      "BaseType": "ItemsControl",
      "Interfaces": [
        "IItemContainerMapping"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AutoMaximizeSuggestionArea",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AutoMaximizeSuggestionAreaProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Header",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsSuggestionListOpen",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsSuggestionListOpenProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MaxSuggestionListHeight",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaxSuggestionListHeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PlaceholderText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PlaceholderTextProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Text",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextBoxStyle",
          "Type": "Style",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextBoxStyleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TextMemberPath",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextMemberPathProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TextProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "UpdateTextOnSelect",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UpdateTextOnSelectProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "SuggestionChosen",
          "Type": "TypedEventHandler<AutoSuggestBox,AutoSuggestBoxSuggestionChosenEventArgs>"
        },
        {
          "Name": "TextChanged",
          "Type": "TypedEventHandler<AutoSuggestBox,AutoSuggestBoxTextChangedEventArgs>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.AutoSuggestBox"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "SelectedItem",
          "Type": "Object",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Reason",
          "Type": "AutoSuggestionBoxTextChangeReason",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ReasonProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CheckCurrent",
          "ReturnType": "Boolean"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.BackClickEventArgs"
    },
    {
      "BaseType": "IconElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "UriSource",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UriSourceProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.BitmapIcon"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Background",
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "BackgroundProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BorderBrush",
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "BorderBrushProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BorderThickness",
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "BorderThicknessProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CornerRadius",
          "Type": "CornerRadius",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CornerRadiusProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Child",
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ChildTransitions",
          "Type": "TransitionCollection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ChildTransitionsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Padding",
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PaddingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Border"
    },
    {
      "BaseType": "ButtonBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Flyout",
          "Type": "FlyoutBase",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FlyoutProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Button"
    },
    {
      "BaseType": "Panel",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "LeftProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TopProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ZIndexProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetLeft",
          "IsStatic": true,
          "ReturnType": "Double",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ]
        },
        {
          "Name": "GetTop",
          "IsStatic": true,
          "ReturnType": "Double",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ]
        },
        {
          "Name": "GetZIndex",
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ]
        },
        {
          "Name": "SetLeft",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "length",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "SetTop",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "length",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "SetZIndex",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Canvas"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Source",
          "Type": "MediaCapture",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SourceProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Stretch",
          "Type": "Stretch",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StretchProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.CaptureElement"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Cancel",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UIElement",
          "Type": "UIElement",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "Object",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ActualWidth",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "MaxWidth",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaxWidthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MinWidth",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MinWidthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Width",
          "Type": "GridLength",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "WidthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ColumnDefinition"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<ColumnDefinition>",
        "IEnumerable",
        "IEnumerable<ColumnDefinition>",
        "IList<ColumnDefinition>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ColumnDefinitionCollection"
    },
    {
      "BaseType": "Selector",
      "Interfaces": [
        "IItemContainerMapping"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Header",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HeaderTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsDropDownOpen",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsDropDownOpenProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsEditable",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsSelectionBoxHighlighted",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "MaxDropDownHeight",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaxDropDownHeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PlaceholderText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PlaceholderTextProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectionBoxItem",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "SelectionBoxItemTemplate",
          "Type": "DataTemplate",
          "IsGet": true
        },
        {
          "Name": "TemplateSettings",
          "Type": "ComboBoxTemplateSettings",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "DropDownClosed",
          "Type": "EventHandler<Object>"
        },
        {
          "Name": "DropDownOpened",
          "Type": "EventHandler<Object>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ComboBox"
    },
    {
      "BaseType": "SelectorItem",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ComboBoxItem"
    },
    {
      "BaseType": "AppBar",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "PrimaryCommands",
          "Type": "IObservableVector<ICommandBarElement>",
          "IsGet": true
        },
        {
          "Name": "PrimaryCommandsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SecondaryCommands",
          "Type": "IObservableVector<ICommandBarElement>",
          "IsGet": true
        },
        {
          "Name": "SecondaryCommandsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.CommandBar"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "InRecycleQueue",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Item",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "ItemContainer",
          "Type": "SelectorItem",
          "IsGet": true
        },
        {
          "Name": "ItemIndex",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "Phase",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "RegisterUpdateCallback",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "callback",
              "Type": "TypedEventHandler<ListViewBase,ContainerContentChangingEventArgs>"
            }
          ]
        },
        {
          "Name": "RegisterUpdateCallback",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "callbackPhase",
              "Type": "UInt32"
            },
            {
              "Name": "callback",
              "Type": "TypedEventHandler<ListViewBase,ContainerContentChangingEventArgs>"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs"
    },
    {
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Content",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ContentTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ContentTemplateRoot",
          "Type": "UIElement",
          "IsGet": true
        },
        {
          "Name": "ContentTemplateSelector",
          "Type": "DataTemplateSelector",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentTemplateSelectorProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ContentTransitions",
          "Type": "TransitionCollection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentTransitionsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ContentControl"
    },
    {
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FullSizeDesired",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FullSizeDesiredProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsPrimaryButtonEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsPrimaryButtonEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsSecondaryButtonEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsSecondaryButtonEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PrimaryButtonCommand",
          "Type": "ICommand",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PrimaryButtonCommandParameter",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PrimaryButtonCommandParameterProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PrimaryButtonCommandProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PrimaryButtonText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PrimaryButtonTextProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SecondaryButtonCommand",
          "Type": "ICommand",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SecondaryButtonCommandParameter",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SecondaryButtonCommandParameterProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SecondaryButtonCommandProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SecondaryButtonText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SecondaryButtonTextProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Title",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TitleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TitleTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TitleTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Hide",
          "ReturnType": "Void"
        },
        {
          "Name": "ShowAsync",
          "ReturnType": "IAsyncOperation<ContentDialogResult>"
        }
      ],
      "Events": [
        {
          "Name": "Closed",
          "Type": "TypedEventHandler<ContentDialog,ContentDialogClosedEventArgs>"
        },
        {
          "Name": "Closing",
          "Type": "TypedEventHandler<ContentDialog,ContentDialogClosingEventArgs>"
        },
        {
          "Name": "Opened",
          "Type": "TypedEventHandler<ContentDialog,ContentDialogOpenedEventArgs>"
        },
        {
          "Name": "PrimaryButtonClick",
          "Type": "TypedEventHandler<ContentDialog,ContentDialogButtonClickEventArgs>"
        },
        {
          "Name": "SecondaryButtonClick",
          "Type": "TypedEventHandler<ContentDialog,ContentDialogButtonClickEventArgs>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ContentDialog"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Complete",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ContentDialogButtonClickDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Cancel",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDeferral",
          "ReturnType": "ContentDialogButtonClickDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ContentDialogButtonClickEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Result",
          "Type": "ContentDialogResult",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ContentDialogClosedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Complete",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ContentDialogClosingDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Cancel",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Result",
          "Type": "ContentDialogResult",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDeferral",
          "ReturnType": "ContentDialogClosingDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ContentDialogClosingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ContentDialogOpenedEventArgs"
    },
    {
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Content",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ContentTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ContentTemplateSelector",
          "Type": "DataTemplateSelector",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentTemplateSelectorProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ContentTransitions",
          "Type": "TransitionCollection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentTransitionsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontFamily",
          "Type": "FontFamily",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontFamilyProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontSize",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontSizeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontStretch",
          "Type": "FontStretch",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontStretchProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontStyle",
          "Type": "FontStyle",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontStyleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontWeight",
          "Type": "FontWeight",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontWeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Foreground",
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ForegroundProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CharacterSpacing",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CharacterSpacingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsTextScaleFactorEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsTextScaleFactorEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OpticalMarginAlignment",
          "Type": "OpticalMarginAlignment",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OpticalMarginAlignmentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TextLineBounds",
          "Type": "TextLineBounds",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextLineBoundsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ContentPresenter"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CursorLeft",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "CursorTop",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ContextMenuEventArgs"
    },
    {
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Background",
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "BackgroundProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BorderBrush",
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "BorderBrushProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BorderThickness",
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "BorderThicknessProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DefaultStyleKey",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DefaultStyleKeyProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FocusState",
          "Type": "FocusState",
          "IsGet": true
        },
        {
          "Name": "FocusStateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontFamily",
          "Type": "FontFamily",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontFamilyProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontSize",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontSizeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontStretch",
          "Type": "FontStretch",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontStretchProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontStyle",
          "Type": "FontStyle",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontStyleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontWeight",
          "Type": "FontWeight",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontWeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Foreground",
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ForegroundProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HorizontalContentAlignment",
          "Type": "HorizontalAlignment",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HorizontalContentAlignmentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CharacterSpacing",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CharacterSpacingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsTabStop",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsTabStopProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsTextScaleFactorEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsTextScaleFactorEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Padding",
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PaddingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TabIndex",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TabIndexProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TabNavigation",
          "Type": "KeyboardNavigationMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TabNavigationProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Template",
          "Type": "ControlTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "VerticalContentAlignment",
          "Type": "VerticalAlignment",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VerticalContentAlignmentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ApplyTemplate",
          "ReturnType": "Boolean"
        },
        {
          "Name": "Focus",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "FocusState"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "IsEnabledChanged",
          "Type": "DependencyPropertyChangedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Control"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkTemplate",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "TargetType",
          "Type": "Type",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ControlTemplate"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "SelectTemplate",
          "ReturnType": "DataTemplate",
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            },
            {
              "Name": "container",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "SelectTemplate",
          "ReturnType": "DataTemplate",
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.DataTemplateSelector"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NewDate",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "OldDate",
          "Type": "DateTimeOffset",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.DatePickedEventArgs"
    },
    {
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CalendarIdentifier",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CalendarIdentifierProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Date",
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DayFormat",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DayFormatProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DayVisible",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DayVisibleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Header",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HeaderTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MaxYear",
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaxYearProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MinYear",
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MinYearProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MonthFormat",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MonthFormatProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MonthVisible",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MonthVisibleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Orientation",
          "Type": "Orientation",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OrientationProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "YearFormat",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "YearFormatProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "YearVisible",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "YearVisibleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "DateChanged",
          "Type": "EventHandler<DatePickerValueChangedEventArgs>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.DatePicker"
    },
    {
      "IsSealed": true,
      "BaseType": "PickerFlyoutBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CalendarIdentifier",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CalendarIdentifierProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Date",
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DayVisible",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DayVisibleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MaxYear",
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaxYearProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MinYear",
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MinYearProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MonthVisible",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MonthVisibleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "YearVisible",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "YearVisibleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ShowAtAsync",
          "ReturnType": "IAsyncOperation<Nullable<DateTimeOffset>>",
          "Parameters": [
            {
              "Name": "target",
              "Type": "FrameworkElement"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "DatePicked",
          "Type": "TypedEventHandler<DatePickerFlyout,DatePickedEventArgs>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.DatePickerFlyout"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [
        "ICustomPropertyProvider"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "PrimaryText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PrimaryTextProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SecondaryText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SecondaryTextProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "Type",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetCustomProperty",
          "ReturnType": "ICustomProperty",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetIndexedProperty",
          "ReturnType": "ICustomProperty",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "Type"
            }
          ]
        },
        {
          "Name": "GetStringRepresentation",
          "ReturnType": "String"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.DatePickerFlyoutItem"
    },
    {
      "IsSealed": true,
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.DatePickerFlyoutPresenter"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NewDate",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "OldDate",
          "Type": "DateTimeOffset",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.DatePickerValueChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Cancel",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Data",
          "Type": "DataPackage",
          "IsGet": true
        },
        {
          "Name": "Items",
          "Type": "IList<Object>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.DragItemsStartingEventArgs"
    },
    {
      "BaseType": "Selector",
      "Interfaces": [
        "IItemContainerMapping"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "UseTouchAnimationsForAllNavigation",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UseTouchAnimationsForAllNavigationProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.FlipView"
    },
    {
      "BaseType": "SelectorItem",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.FlipViewItem"
    },
    {
      "BaseType": "FlyoutBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Content",
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FlyoutPresenterStyle",
          "Type": "Style",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FlyoutPresenterStyleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Flyout"
    },
    {
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.FlyoutPresenter"
    },
    {
      "BaseType": "IconElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FontFamily",
          "Type": "FontFamily",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontFamilyProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontSize",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontSizeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontStyle",
          "Type": "FontStyle",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontStyleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontWeight",
          "Type": "FontWeight",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontWeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Glyph",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GlyphProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsTextScaleFactorEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsTextScaleFactorEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.FontIcon"
    },
    {
      "BaseType": "ContentControl",
      "Interfaces": [
        "INavigate"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BackStack",
          "Type": "IList<PageStackEntry>",
          "IsGet": true
        },
        {
          "Name": "BackStackDepth",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "BackStackDepthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BackStackProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CacheSize",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CacheSizeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CanGoBack",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "CanGoBackProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CanGoForward",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "CanGoForwardProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CurrentSourcePageType",
          "Type": "Type",
          "IsGet": true
        },
        {
          "Name": "CurrentSourcePageTypeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ForwardStack",
          "Type": "IList<PageStackEntry>",
          "IsGet": true
        },
        {
          "Name": "ForwardStackProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SourcePageType",
          "Type": "Type",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SourcePageTypeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetNavigationState",
          "ReturnType": "String"
        },
        {
          "Name": "GoBack",
          "ReturnType": "Void"
        },
        {
          "Name": "GoForward",
          "ReturnType": "Void"
        },
        {
          "Name": "Navigate",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "sourcePageType",
              "Type": "Type"
            },
            {
              "Name": "parameter",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "Navigate",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "sourcePageType",
              "Type": "Type"
            },
            {
              "Name": "parameter",
              "Type": "Object"
            },
            {
              "Name": "infoOverride",
              "Type": "NavigationTransitionInfo"
            }
          ]
        },
        {
          "Name": "Navigate",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "sourcePageType",
              "Type": "Type"
            }
          ]
        },
        {
          "Name": "SetNavigationState",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "navigationState",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "Navigated",
          "Type": "NavigatedEventHandler"
        },
        {
          "Name": "Navigating",
          "Type": "NavigatingCancelEventHandler"
        },
        {
          "Name": "NavigationFailed",
          "Type": "NavigationFailedEventHandler"
        },
        {
          "Name": "NavigationStopped",
          "Type": "NavigationStoppedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Frame"
    },
    {
      "BaseType": "Panel",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ColumnDefinitions",
          "Type": "ColumnDefinitionCollection",
          "IsGet": true
        },
        {
          "Name": "ColumnProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ColumnSpanProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RowDefinitions",
          "Type": "RowDefinitionCollection",
          "IsGet": true
        },
        {
          "Name": "RowProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RowSpanProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetColumn",
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            }
          ]
        },
        {
          "Name": "GetColumnSpan",
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            }
          ]
        },
        {
          "Name": "GetRow",
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            }
          ]
        },
        {
          "Name": "GetRowSpan",
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            }
          ]
        },
        {
          "Name": "SetColumn",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            },
            {
              "Name": "value",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "SetColumnSpan",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            },
            {
              "Name": "value",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "SetRow",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            },
            {
              "Name": "value",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "SetRowSpan",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            },
            {
              "Name": "value",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Grid"
    },
    {
      "BaseType": "ListViewBase",
      "Interfaces": [
        "IItemContainerMapping",
        "ISemanticZoomInformation"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.GridView"
    },
    {
      "BaseType": "ListViewBaseHeaderItem",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.GridViewHeaderItem"
    },
    {
      "BaseType": "SelectorItem",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "TemplateSettings",
          "Type": "GridViewItemTemplateSettings",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.GridViewItem"
    },
    {
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.GroupItem"
    },
    {
      "Interfaces": [
        "INotifyPropertyChanged"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ContainerStyle",
          "Type": "Style",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContainerStyleSelector",
          "Type": "StyleSelector",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderContainerStyle",
          "Type": "Style",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderTemplateSelector",
          "Type": "DataTemplateSelector",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HidesIfEmpty",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Panel",
          "Type": "ItemsPanelTemplate",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "PropertyChanged",
          "Type": "PropertyChangedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.GroupStyle"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "SelectGroupStyle",
          "ReturnType": "GroupStyle",
          "Parameters": [
            {
              "Name": "group",
              "Type": "Object"
            },
            {
              "Name": "level",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.GroupStyleSelector"
    },
    {
      "BaseType": "Control",
      "Interfaces": [
        "ISemanticZoomInformation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DefaultSectionIndex",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DefaultSectionIndexProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Header",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HeaderTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsActiveView",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsActiveViewProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsZoomedInView",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsZoomedInViewProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Orientation",
          "Type": "Orientation",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OrientationProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SectionHeaders",
          "Type": "IObservableVector<Object>",
          "IsGet": true
        },
        {
          "Name": "Sections",
          "Type": "IList<HubSection>",
          "IsGet": true
        },
        {
          "Name": "SectionsInView",
          "Type": "IList<HubSection>",
          "IsGet": true
        },
        {
          "Name": "SemanticZoomOwner",
          "Type": "SemanticZoom",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SemanticZoomOwnerProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CompleteViewChange",
          "ReturnType": "Void"
        },
        {
          "Name": "CompleteViewChangeFrom",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SemanticZoomLocation"
            },
            {
              "Name": "destination",
              "Type": "SemanticZoomLocation"
            }
          ]
        },
        {
          "Name": "CompleteViewChangeTo",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SemanticZoomLocation"
            },
            {
              "Name": "destination",
              "Type": "SemanticZoomLocation"
            }
          ]
        },
        {
          "Name": "InitializeViewChange",
          "ReturnType": "Void"
        },
        {
          "Name": "MakeVisible",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "item",
              "Type": "SemanticZoomLocation"
            }
          ]
        },
        {
          "Name": "ScrollToSection",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "section",
              "Type": "HubSection"
            }
          ]
        },
        {
          "Name": "StartViewChangeFrom",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SemanticZoomLocation"
            },
            {
              "Name": "destination",
              "Type": "SemanticZoomLocation"
            }
          ]
        },
        {
          "Name": "StartViewChangeTo",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SemanticZoomLocation"
            },
            {
              "Name": "destination",
              "Type": "SemanticZoomLocation"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "SectionHeaderClick",
          "Type": "HubSectionHeaderClickEventHandler"
        },
        {
          "Name": "SectionsInViewChanged",
          "Type": "SectionsInViewChangedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Hub"
    },
    {
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ContentTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Header",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HeaderTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsHeaderInteractive",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsHeaderInteractiveProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.HubSection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HubSection>",
        "IEnumerable",
        "IEnumerable<HubSection>",
        "IList<HubSection>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.HubSectionCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Section",
          "Type": "HubSection",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.HubSectionHeaderClickEventArgs"
    },
    {
      "BaseType": "ButtonBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NavigateUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NavigateUriProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.HyperlinkButton"
    },
    {
      "BaseType": "ToggleButton",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.CheckBox"
    },
    {
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Foreground",
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ForegroundProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.IconElement"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NineGrid",
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NineGridProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PlayToSource",
          "Type": "PlayToSource",
          "IsGet": true
        },
        {
          "Name": "PlayToSourceProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Source",
          "Type": "ImageSource",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SourceProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Stretch",
          "Type": "Stretch",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StretchProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "ImageFailed",
          "Type": "ExceptionRoutedEventHandler"
        },
        {
          "Name": "ImageOpened",
          "Type": "RoutedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Image"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ClickedItem",
          "Type": "Object",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ItemClickEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<Object>",
        "IEnumerable",
        "IEnumerable<Object>",
        "IList<Object>",
        "IObservableVector<Object>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "VectorChanged",
          "Type": "VectorChangedEventHandler<Object>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ItemCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "ContainerFromIndex",
          "ReturnType": "DependencyObject",
          "Parameters": [
            {
              "Name": "index",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "ContainerFromItem",
          "ReturnType": "DependencyObject",
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "GenerateNext",
          "ReturnType": "DependencyObject",
          "Parameters": [
            {
              "Name": "isNewlyRealized",
              "Type": "Boolean&",
              "Out": true
            }
          ]
        },
        {
          "Name": "GeneratorPositionFromIndex",
          "ReturnType": "GeneratorPosition",
          "Parameters": [
            {
              "Name": "itemIndex",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "GetItemContainerGeneratorForPanel",
          "ReturnType": "ItemContainerGenerator",
          "Parameters": [
            {
              "Name": "panel",
              "Type": "Panel"
            }
          ]
        },
        {
          "Name": "IndexFromContainer",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "container",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "IndexFromGeneratorPosition",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "position",
              "Type": "GeneratorPosition"
            }
          ]
        },
        {
          "Name": "ItemFromContainer",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "container",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "PrepareItemContainer",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "container",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "Recycle",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "GeneratorPosition"
            },
            {
              "Name": "count",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "Remove",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "GeneratorPosition"
            },
            {
              "Name": "count",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "RemoveAll",
          "ReturnType": "Void"
        },
        {
          "Name": "StartAt",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "GeneratorPosition"
            },
            {
              "Name": "direction",
              "Type": "GeneratorDirection"
            },
            {
              "Name": "allowStartAtRealizedItem",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "Stop",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "ItemsChanged",
          "Type": "ItemsChangedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ItemContainerGenerator"
    },
    {
      "BaseType": "Control",
      "Interfaces": [
        "IItemContainerMapping"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DisplayMemberPath",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisplayMemberPathProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GroupStyle",
          "Type": "IObservableVector<GroupStyle>",
          "IsGet": true
        },
        {
          "Name": "GroupStyleSelector",
          "Type": "GroupStyleSelector",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GroupStyleSelectorProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsGrouping",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsGroupingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ItemContainerGenerator",
          "Type": "ItemContainerGenerator",
          "IsGet": true
        },
        {
          "Name": "ItemContainerStyle",
          "Type": "Style",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ItemContainerStyleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ItemContainerStyleSelector",
          "Type": "StyleSelector",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ItemContainerStyleSelectorProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ItemContainerTransitions",
          "Type": "TransitionCollection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ItemContainerTransitionsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Items",
          "Type": "ItemCollection",
          "IsGet": true
        },
        {
          "Name": "ItemsPanel",
          "Type": "ItemsPanelTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ItemsPanelProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ItemsPanelRoot",
          "Type": "Panel",
          "IsGet": true
        },
        {
          "Name": "ItemsSource",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ItemsSourceProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ItemTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ItemTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ItemTemplateSelector",
          "Type": "DataTemplateSelector",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ItemTemplateSelectorProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ContainerFromIndex",
          "ReturnType": "DependencyObject",
          "Parameters": [
            {
              "Name": "index",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "ContainerFromItem",
          "ReturnType": "DependencyObject",
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "GetItemsOwner",
          "IsStatic": true,
          "ReturnType": "ItemsControl",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "IndexFromContainer",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "container",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "ItemFromContainer",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "container",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "ItemsControlFromItemContainer",
          "IsStatic": true,
          "ReturnType": "ItemsControl",
          "Parameters": [
            {
              "Name": "container",
              "Type": "DependencyObject"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ItemsControl"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkTemplate",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ItemsPanelTemplate"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AddedItems",
          "Type": "IList<Object>",
          "IsGet": true
        },
        {
          "Name": "RemovedItems",
          "Type": "IList<Object>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ItemsPickedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [
        "IScrollSnapPointsInfo"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AreHorizontalSnapPointsRegular",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "AreVerticalSnapPointsRegular",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Footer",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FooterProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FooterTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FooterTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FooterTransitions",
          "Type": "TransitionCollection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FooterTransitionsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Header",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HeaderTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HeaderTransitions",
          "Type": "TransitionCollection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderTransitionsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Padding",
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PaddingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetIrregularSnapPoints",
          "ReturnType": "IReadOnlyList<Single>",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            }
          ]
        },
        {
          "Name": "GetRegularSnapPoints",
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            },
            {
              "Name": "offset",
              "Type": "Single&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "HorizontalSnapPointsChanged",
          "Type": "EventHandler<Object>"
        },
        {
          "Name": "VerticalSnapPointsChanged",
          "Type": "EventHandler<Object>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ItemsPresenter"
    },
    {
      "IsSealed": true,
      "BaseType": "Panel",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CacheLength",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CacheLengthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FirstCacheIndex",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "FirstVisibleIndex",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "GroupHeaderPlacement",
          "Type": "GroupHeaderPlacement",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GroupHeaderPlacementProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GroupPadding",
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GroupPaddingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ItemsUpdatingScrollMode",
          "Type": "ItemsUpdatingScrollMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LastCacheIndex",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "LastVisibleIndex",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "Orientation",
          "Type": "Orientation",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OrientationProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ScrollingDirection",
          "Type": "PanelScrollingDirection",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ItemsStackPanel"
    },
    {
      "IsSealed": true,
      "BaseType": "Panel",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CacheLength",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CacheLengthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FirstCacheIndex",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "FirstVisibleIndex",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "GroupHeaderPlacement",
          "Type": "GroupHeaderPlacement",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GroupHeaderPlacementProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GroupPadding",
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GroupPaddingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ItemHeight",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ItemHeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ItemWidth",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ItemWidthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LastCacheIndex",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "LastVisibleIndex",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "MaximumRowsOrColumns",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaximumRowsOrColumnsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Orientation",
          "Type": "Orientation",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OrientationProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ScrollingDirection",
          "Type": "PanelScrollingDirection",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ItemsWrapGrid"
    },
    {
      "BaseType": "Selector",
      "Interfaces": [
        "IItemContainerMapping"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "SelectedItems",
          "Type": "IList<Object>",
          "IsGet": true
        },
        {
          "Name": "SelectionMode",
          "Type": "SelectionMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SelectionModeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ScrollIntoView",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SelectAll",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ListBox"
    },
    {
      "BaseType": "SelectorItem",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ListBoxItem"
    },
    {
      "IsSealed": true,
      "BaseType": "PickerFlyoutBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DisplayMemberPath",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisplayMemberPathProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ItemsSource",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ItemsSourceProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ItemTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ItemTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectedIndex",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SelectedIndexProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectedItem",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SelectedItemProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectedItems",
          "Type": "IList<Object>",
          "IsGet": true
        },
        {
          "Name": "SelectedValue",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SelectedValuePath",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SelectedValuePathProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectedValueProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectionMode",
          "Type": "ListPickerFlyoutSelectionMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SelectionModeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ShowAtAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<Object>>",
          "Parameters": [
            {
              "Name": "target",
              "Type": "FrameworkElement"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "ItemsPicked",
          "Type": "TypedEventHandler<ListPickerFlyout,ItemsPickedEventArgs>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ListPickerFlyout"
    },
    {
      "IsSealed": true,
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ListPickerFlyoutPresenter"
    },
    {
      "BaseType": "ListViewBase",
      "Interfaces": [
        "IItemContainerMapping",
        "ISemanticZoomInformation"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ListView"
    },
    {
      "BaseType": "Selector",
      "Interfaces": [
        "IItemContainerMapping",
        "ISemanticZoomInformation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CanDragItems",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CanDragItemsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CanReorderItems",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CanReorderItemsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DataFetchSize",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DataFetchSizeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Footer",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FooterProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FooterTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FooterTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FooterTransitions",
          "Type": "TransitionCollection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FooterTransitionsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Header",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HeaderTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HeaderTransitions",
          "Type": "TransitionCollection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderTransitionsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IncrementalLoadingThreshold",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IncrementalLoadingThresholdProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IncrementalLoadingTrigger",
          "Type": "IncrementalLoadingTrigger",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IncrementalLoadingTriggerProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsActiveView",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsActiveViewProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsItemClickEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsItemClickEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsSwipeEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsSwipeEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsZoomedInView",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsZoomedInViewProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ReorderMode",
          "Type": "ListViewReorderMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ReorderModeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectedItems",
          "Type": "IList<Object>",
          "IsGet": true
        },
        {
          "Name": "SelectionMode",
          "Type": "ListViewSelectionMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SelectionModeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SemanticZoomOwner",
          "Type": "SemanticZoom",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SemanticZoomOwnerProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ShowsScrollingPlaceholders",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ShowsScrollingPlaceholdersProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CompleteViewChange",
          "ReturnType": "Void"
        },
        {
          "Name": "CompleteViewChangeFrom",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SemanticZoomLocation"
            },
            {
              "Name": "destination",
              "Type": "SemanticZoomLocation"
            }
          ]
        },
        {
          "Name": "CompleteViewChangeTo",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SemanticZoomLocation"
            },
            {
              "Name": "destination",
              "Type": "SemanticZoomLocation"
            }
          ]
        },
        {
          "Name": "InitializeViewChange",
          "ReturnType": "Void"
        },
        {
          "Name": "LoadMoreItemsAsync",
          "ReturnType": "IAsyncOperation<LoadMoreItemsResult>"
        },
        {
          "Name": "MakeVisible",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "item",
              "Type": "SemanticZoomLocation"
            }
          ]
        },
        {
          "Name": "ScrollIntoView",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "ScrollIntoView",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            },
            {
              "Name": "alignment",
              "Type": "ScrollIntoViewAlignment"
            }
          ]
        },
        {
          "Name": "SelectAll",
          "ReturnType": "Void"
        },
        {
          "Name": "SetDesiredContainerUpdateDuration",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "duration",
              "Type": "TimeSpan"
            }
          ]
        },
        {
          "Name": "StartViewChangeFrom",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SemanticZoomLocation"
            },
            {
              "Name": "destination",
              "Type": "SemanticZoomLocation"
            }
          ]
        },
        {
          "Name": "StartViewChangeTo",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SemanticZoomLocation"
            },
            {
              "Name": "destination",
              "Type": "SemanticZoomLocation"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "ContainerContentChanging",
          "Type": "TypedEventHandler<ListViewBase,ContainerContentChangingEventArgs>"
        },
        {
          "Name": "DragItemsStarting",
          "Type": "DragItemsStartingEventHandler"
        },
        {
          "Name": "ItemClick",
          "Type": "ItemClickEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ListViewBase"
    },
    {
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ListViewBaseHeaderItem"
    },
    {
      "BaseType": "ListViewBaseHeaderItem",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ListViewHeaderItem"
    },
    {
      "BaseType": "SelectorItem",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "TemplateSettings",
          "Type": "ListViewItemTemplateSettings",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ListViewItem"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetRelativeScrollPosition",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "listViewBase",
              "Type": "ListViewBase"
            },
            {
              "Name": "itemToKeyHandler",
              "Type": "ListViewItemToKeyHandler"
            }
          ]
        },
        {
          "Name": "SetRelativeScrollPositionAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "listViewBase",
              "Type": "ListViewBase"
            },
            {
              "Name": "relativeScrollPosition",
              "Type": "String"
            },
            {
              "Name": "keyToItemHandler",
              "Type": "ListViewKeyToItemHandler"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ListViewPersistenceHelper"
    },
    {
      "BaseType": "MapTileDataSource",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "BitmapRequested",
          "Type": "TypedEventHandler<CustomMapTileDataSource,MapTileBitmapRequestedEventArgs>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Maps.CustomMapTileDataSource"
    },
    {
      "BaseType": "MapTileDataSource",
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "uriFormatString",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "AdditionalRequestHeaders",
          "Type": "IDictionary<String,String>",
          "IsGet": true
        },
        {
          "Name": "AllowCaching",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UriFormatString",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "UriRequested",
          "Type": "TypedEventHandler<HttpMapTileDataSource,MapTileUriRequestedEventArgs>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Maps.HttpMapTileDataSource"
    },
    {
      "BaseType": "MapTileDataSource",
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "uriFormatString",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "UriFormatString",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "UriRequested",
          "Type": "TypedEventHandler<LocalMapTileDataSource,MapTileUriRequestedEventArgs>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Maps.LocalMapTileDataSource"
    },
    {
      "IsSealed": true,
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Center",
          "Type": "Geopoint",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CenterProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ColorScheme",
          "Type": "MapColorScheme",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ColorSchemeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DesiredPitch",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DesiredPitchProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Heading",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeadingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Children",
          "Type": "IList<DependencyObject>",
          "IsGet": true
        },
        {
          "Name": "ChildrenProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LandmarksVisible",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LandmarksVisibleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LoadingStatus",
          "Type": "MapLoadingStatus",
          "IsGet": true
        },
        {
          "Name": "LoadingStatusProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LocationProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MapElements",
          "Type": "IList<MapElement>",
          "IsGet": true
        },
        {
          "Name": "MapElementsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MapServiceToken",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MapServiceTokenProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MaxZoomLevel",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "MinZoomLevel",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "NormalizedAnchorPointProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PedestrianFeaturesVisible",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PedestrianFeaturesVisibleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Pitch",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "PitchProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Routes",
          "Type": "IList<MapRouteView>",
          "IsGet": true
        },
        {
          "Name": "RoutesProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Style",
          "Type": "MapStyle",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StyleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TileSources",
          "Type": "IList<MapTileSource>",
          "IsGet": true
        },
        {
          "Name": "TileSourcesProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TrafficFlowVisible",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TrafficFlowVisibleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TransformOrigin",
          "Type": "Point",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TransformOriginProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "WatermarkMode",
          "Type": "MapWatermarkMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "WatermarkModeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ZoomLevel",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ZoomLevelProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "FindMapElementsAtOffset",
          "ReturnType": "IReadOnlyList<MapElement>",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "Point"
            }
          ]
        },
        {
          "Name": "GetLocation",
          "IsStatic": true,
          "ReturnType": "Geopoint",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetLocationFromOffset",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "Point"
            },
            {
              "Name": "location",
              "Type": "Geopoint&",
              "Out": true
            }
          ]
        },
        {
          "Name": "GetNormalizedAnchorPoint",
          "IsStatic": true,
          "ReturnType": "Point",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetOffsetFromLocation",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "location",
              "Type": "Geopoint"
            },
            {
              "Name": "offset",
              "Type": "Point&",
              "Out": true
            }
          ]
        },
        {
          "Name": "IsLocationInView",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "location",
              "Type": "Geopoint"
            },
            {
              "Name": "isInView",
              "Type": "Boolean&",
              "Out": true
            }
          ]
        },
        {
          "Name": "SetLocation",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Geopoint"
            }
          ]
        },
        {
          "Name": "SetNormalizedAnchorPoint",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Point"
            }
          ]
        },
        {
          "Name": "TrySetViewAsync",
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "center",
              "Type": "Geopoint"
            }
          ]
        },
        {
          "Name": "TrySetViewAsync",
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "center",
              "Type": "Geopoint"
            },
            {
              "Name": "zoomLevel",
              "Type": "Nullable<Double>"
            }
          ]
        },
        {
          "Name": "TrySetViewAsync",
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "center",
              "Type": "Geopoint"
            },
            {
              "Name": "zoomLevel",
              "Type": "Nullable<Double>"
            },
            {
              "Name": "heading",
              "Type": "Nullable<Double>"
            },
            {
              "Name": "desiredPitch",
              "Type": "Nullable<Double>"
            }
          ]
        },
        {
          "Name": "TrySetViewAsync",
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "center",
              "Type": "Geopoint"
            },
            {
              "Name": "zoomLevel",
              "Type": "Nullable<Double>"
            },
            {
              "Name": "heading",
              "Type": "Nullable<Double>"
            },
            {
              "Name": "desiredPitch",
              "Type": "Nullable<Double>"
            },
            {
              "Name": "animation",
              "Type": "MapAnimationKind"
            }
          ]
        },
        {
          "Name": "TrySetViewBoundsAsync",
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "bounds",
              "Type": "GeoboundingBox"
            },
            {
              "Name": "margin",
              "Type": "Nullable<Thickness>"
            },
            {
              "Name": "animation",
              "Type": "MapAnimationKind"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "CenterChanged",
          "Type": "TypedEventHandler<MapControl,Object>"
        },
        {
          "Name": "HeadingChanged",
          "Type": "TypedEventHandler<MapControl,Object>"
        },
        {
          "Name": "LoadingStatusChanged",
          "Type": "TypedEventHandler<MapControl,Object>"
        },
        {
          "Name": "MapDoubleTapped",
          "Type": "TypedEventHandler<MapControl,MapInputEventArgs>"
        },
        {
          "Name": "MapHolding",
          "Type": "TypedEventHandler<MapControl,MapInputEventArgs>"
        },
        {
          "Name": "MapTapped",
          "Type": "TypedEventHandler<MapControl,MapInputEventArgs>"
        },
        {
          "Name": "PitchChanged",
          "Type": "TypedEventHandler<MapControl,Object>"
        },
        {
          "Name": "TransformOriginChanged",
          "Type": "TypedEventHandler<MapControl,Object>"
        },
        {
          "Name": "ZoomLevelChanged",
          "Type": "TypedEventHandler<MapControl,Object>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapControl"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Visible",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VisibleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ZIndex",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ZIndexProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapElement"
    },
    {
      "IsSealed": true,
      "BaseType": "MapElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Image",
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Location",
          "Type": "Geopoint",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LocationProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "NormalizedAnchorPoint",
          "Type": "Point",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NormalizedAnchorPointProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TitleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapIcon"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Location",
          "Type": "Geopoint",
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "Point",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapInputEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Items",
          "Type": "IList<DependencyObject>",
          "IsGet": true
        },
        {
          "Name": "ItemsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ItemsSource",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ItemsSourceProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ItemTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ItemTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapItemsControl"
    },
    {
      "IsSealed": true,
      "BaseType": "MapElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FillColor",
          "Type": "Color",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Path",
          "Type": "Geopath",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PathProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StrokeColor",
          "Type": "Color",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StrokeDashed",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StrokeDashedProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StrokeThickness",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StrokeThicknessProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapPolygon"
    },
    {
      "IsSealed": true,
      "BaseType": "MapElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Path",
          "Type": "Geopath",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PathProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StrokeColor",
          "Type": "Color",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StrokeDashed",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StrokeDashedProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StrokeThickness",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapPolyline"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "route",
              "Type": "MapRoute"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "OutlineColor",
          "Type": "Color",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Route",
          "Type": "MapRoute",
          "IsGet": true
        },
        {
          "Name": "RouteColor",
          "Type": "Color",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapRouteView"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "PixelData",
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDeferral",
          "ReturnType": "MapTileBitmapRequestDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Complete",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequestDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Request",
          "Type": "MapTileBitmapRequest",
          "IsGet": true
        },
        {
          "Name": "X",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "Y",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "ZoomLevel",
          "Type": "Int32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequestedEventArgs"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapTileDataSource"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "dataSource",
              "Type": "MapTileDataSource"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "dataSource",
              "Type": "MapTileDataSource"
            },
            {
              "Name": "zoomLevelRange",
              "Type": "MapZoomLevelRange"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "dataSource",
              "Type": "MapTileDataSource"
            },
            {
              "Name": "zoomLevelRange",
              "Type": "MapZoomLevelRange"
            },
            {
              "Name": "bounds",
              "Type": "GeoboundingBox"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "dataSource",
              "Type": "MapTileDataSource"
            },
            {
              "Name": "zoomLevelRange",
              "Type": "MapZoomLevelRange"
            },
            {
              "Name": "bounds",
              "Type": "GeoboundingBox"
            },
            {
              "Name": "tileSizeInPixels",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "AllowOverstretch",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AllowOverstretchProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Bounds",
          "Type": "GeoboundingBox",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "BoundsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DataSource",
          "Type": "MapTileDataSource",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DataSourceProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsFadingEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsFadingEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsRetryEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsRetryEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsTransparencyEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsTransparencyEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Layer",
          "Type": "MapTileLayer",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LayerProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TilePixelSize",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TilePixelSizeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Visible",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VisibleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ZIndex",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ZIndexProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ZoomLevelRange",
          "Type": "MapZoomLevelRange",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ZoomLevelRangeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapTileSource"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Uri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDeferral",
          "ReturnType": "MapTileUriRequestDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapTileUriRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Complete",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapTileUriRequestDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Request",
          "Type": "MapTileUriRequest",
          "IsGet": true
        },
        {
          "Name": "X",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "Y",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "ZoomLevel",
          "Type": "Int32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapTileUriRequestedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ActualStereo3DVideoPackingMode",
          "Type": "Stereo3DVideoPackingMode",
          "IsGet": true
        },
        {
          "Name": "ActualStereo3DVideoPackingModeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AreTransportControlsEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AreTransportControlsEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AspectRatioHeight",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "AspectRatioHeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AspectRatioWidth",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "AspectRatioWidthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AudioCategory",
          "Type": "AudioCategory",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AudioCategoryProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AudioDeviceType",
          "Type": "AudioDeviceType",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AudioDeviceTypeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AudioStreamCount",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "AudioStreamCountProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AudioStreamIndex",
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AudioStreamIndexProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AutoPlay",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AutoPlayProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Balance",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "BalanceProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BufferingProgress",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "BufferingProgressProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CanPause",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "CanPauseProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CanSeek",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "CanSeekProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CurrentState",
          "Type": "MediaElementState",
          "IsGet": true
        },
        {
          "Name": "CurrentStateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DefaultPlaybackRate",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DefaultPlaybackRateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DownloadProgress",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "DownloadProgressOffset",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "DownloadProgressOffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DownloadProgressProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsAudioOnly",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsAudioOnlyProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsFullWindow",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsFullWindowProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsLooping",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsLoopingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsMuted",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsMutedProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsStereo3DVideo",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsStereo3DVideoProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Markers",
          "Type": "TimelineMarkerCollection",
          "IsGet": true
        },
        {
          "Name": "NaturalDuration",
          "Type": "Duration",
          "IsGet": true
        },
        {
          "Name": "NaturalDurationProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "NaturalVideoHeight",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "NaturalVideoHeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "NaturalVideoWidth",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "NaturalVideoWidthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PlaybackRate",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PlaybackRateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PlayToPreferredSourceUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PlayToPreferredSourceUriProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PlayToSource",
          "Type": "PlayToSource",
          "IsGet": true
        },
        {
          "Name": "PlayToSourceProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PositionProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PosterSource",
          "Type": "ImageSource",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PosterSourceProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ProtectionManager",
          "Type": "MediaProtectionManager",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProtectionManagerProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RealTimePlayback",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RealTimePlaybackProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Source",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SourceProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Stereo3DVideoPackingMode",
          "Type": "Stereo3DVideoPackingMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Stereo3DVideoPackingModeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Stereo3DVideoRenderMode",
          "Type": "Stereo3DVideoRenderMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Stereo3DVideoRenderModeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Stretch",
          "Type": "Stretch",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StretchProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Volume",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VolumeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AddAudioEffect",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "effectID",
              "Type": "String"
            },
            {
              "Name": "effectOptional",
              "Type": "Boolean"
            },
            {
              "Name": "effectConfiguration",
              "Type": "IPropertySet"
            }
          ]
        },
        {
          "Name": "AddVideoEffect",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "effectID",
              "Type": "String"
            },
            {
              "Name": "effectOptional",
              "Type": "Boolean"
            },
            {
              "Name": "effectConfiguration",
              "Type": "IPropertySet"
            }
          ]
        },
        {
          "Name": "CanPlayType",
          "ReturnType": "MediaCanPlayResponse",
          "Parameters": [
            {
              "Name": "type",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetAudioStreamLanguage",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "index",
              "Type": "Nullable<Int32>"
            }
          ]
        },
        {
          "Name": "Pause",
          "ReturnType": "Void"
        },
        {
          "Name": "Play",
          "ReturnType": "Void"
        },
        {
          "Name": "RemoveAllEffects",
          "ReturnType": "Void"
        },
        {
          "Name": "SetMediaStreamSource",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "IMediaSource"
            }
          ]
        },
        {
          "Name": "SetSource",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            },
            {
              "Name": "mimeType",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "Stop",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "BufferingProgressChanged",
          "Type": "RoutedEventHandler"
        },
        {
          "Name": "CurrentStateChanged",
          "Type": "RoutedEventHandler"
        },
        {
          "Name": "DownloadProgressChanged",
          "Type": "RoutedEventHandler"
        },
        {
          "Name": "MarkerReached",
          "Type": "TimelineMarkerRoutedEventHandler"
        },
        {
          "Name": "MediaEnded",
          "Type": "RoutedEventHandler"
        },
        {
          "Name": "MediaFailed",
          "Type": "ExceptionRoutedEventHandler"
        },
        {
          "Name": "MediaOpened",
          "Type": "RoutedEventHandler"
        },
        {
          "Name": "RateChanged",
          "Type": "RateChangedRoutedEventHandler"
        },
        {
          "Name": "SeekCompleted",
          "Type": "RoutedEventHandler"
        },
        {
          "Name": "VolumeChanged",
          "Type": "RoutedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.MediaElement"
    },
    {
      "BaseType": "FlyoutBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Items",
          "Type": "IList<MenuFlyoutItemBase>",
          "IsGet": true
        },
        {
          "Name": "MenuFlyoutPresenterStyle",
          "Type": "Style",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MenuFlyoutPresenterStyleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.MenuFlyout"
    },
    {
      "BaseType": "MenuFlyoutItemBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Command",
          "Type": "ICommand",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CommandParameter",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CommandParameterProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CommandProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Text",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "Click",
          "Type": "RoutedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.MenuFlyoutItem"
    },
    {
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.MenuFlyoutItemBase"
    },
    {
      "BaseType": "ItemsControl",
      "Interfaces": [
        "IItemContainerMapping"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.MenuFlyoutPresenter"
    },
    {
      "BaseType": "MenuFlyoutItemBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.MenuFlyoutSeparator"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CallingUri",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.NotifyEventArgs"
    },
    {
      "BaseType": "UserControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BottomAppBar",
          "Type": "AppBar",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "BottomAppBarProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Frame",
          "Type": "Frame",
          "IsGet": true
        },
        {
          "Name": "FrameProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "NavigationCacheMode",
          "Type": "NavigationCacheMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TopAppBar",
          "Type": "AppBar",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TopAppBarProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Page"
    },
    {
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Background",
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "BackgroundProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Children",
          "Type": "UIElementCollection",
          "IsGet": true
        },
        {
          "Name": "ChildrenTransitions",
          "Type": "TransitionCollection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ChildrenTransitionsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsItemsHost",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsItemsHostProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Panel"
    },
    {
      "IsSealed": true,
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Header",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HeaderTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsPasswordRevealButtonEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsPasswordRevealButtonEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MaxLength",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaxLengthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Password",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PasswordChar",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PasswordCharProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PasswordProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PlaceholderText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PlaceholderTextProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PreventKeyboardDisplayOnProgrammaticFocus",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PreventKeyboardDisplayOnProgrammaticFocusProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectionHighlightColor",
          "Type": "SolidColorBrush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SelectionHighlightColorProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "SelectAll",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "ContextMenuOpening",
          "Type": "ContextMenuOpeningEventHandler"
        },
        {
          "Name": "PasswordChanged",
          "Type": "RoutedEventHandler"
        },
        {
          "Name": "Paste",
          "Type": "TextControlPasteEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.PasswordBox"
    },
    {
      "BaseType": "IconElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Data",
          "Type": "Geometry",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DataProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.PathIcon"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.PickerConfirmedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "PickerFlyoutBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ConfirmationButtonsVisible",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ConfirmationButtonsVisibleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Content",
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ShowAtAsync",
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "target",
              "Type": "FrameworkElement"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "Confirmed",
          "Type": "TypedEventHandler<PickerFlyout,PickerConfirmedEventArgs>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.PickerFlyout"
    },
    {
      "IsSealed": true,
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.PickerFlyoutPresenter"
    },
    {
      "BaseType": "ItemsControl",
      "Interfaces": [
        "IItemContainerMapping"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "HeaderTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsLocked",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsLockedProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectedIndex",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SelectedIndexProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectedItem",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SelectedItemProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SlideInAnimationGroupProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Title",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TitleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TitleTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TitleTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetSlideInAnimationGroup",
          "IsStatic": true,
          "ReturnType": "PivotSlideInAnimationGroup",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            }
          ]
        },
        {
          "Name": "SetSlideInAnimationGroup",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            },
            {
              "Name": "value",
              "Type": "PivotSlideInAnimationGroup"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "PivotItemLoaded",
          "Type": "TypedEventHandler<Pivot,PivotItemEventArgs>"
        },
        {
          "Name": "PivotItemLoading",
          "Type": "TypedEventHandler<Pivot,PivotItemEventArgs>"
        },
        {
          "Name": "PivotItemUnloaded",
          "Type": "TypedEventHandler<Pivot,PivotItemEventArgs>"
        },
        {
          "Name": "PivotItemUnloading",
          "Type": "TypedEventHandler<Pivot,PivotItemEventArgs>"
        },
        {
          "Name": "SelectionChanged",
          "Type": "SelectionChangedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Pivot"
    },
    {
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Header",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.PivotItem"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Item",
          "Type": "PivotItem",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.PivotItemEventArgs"
    },
    {
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ClickMode",
          "Type": "ClickMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ClickModeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Command",
          "Type": "ICommand",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CommandParameter",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CommandParameterProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CommandProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsPointerOver",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsPointerOverProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsPressed",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsPressedProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "Click",
          "Type": "RoutedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ButtonBase"
    },
    {
      "BaseType": "VirtualizingPanel",
      "Interfaces": [
        "IScrollSnapPointsInfo"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AreHorizontalSnapPointsRegular",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "AreVerticalSnapPointsRegular",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "CanHorizontallyScroll",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CanVerticallyScroll",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ExtentHeight",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ExtentWidth",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "HorizontalOffset",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ScrollOwner",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VerticalOffset",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ViewportHeight",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ViewportWidth",
          "Type": "Double",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetIrregularSnapPoints",
          "ReturnType": "IReadOnlyList<Single>",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            }
          ]
        },
        {
          "Name": "GetRegularSnapPoints",
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            },
            {
              "Name": "offset",
              "Type": "Single&",
              "Out": true
            }
          ]
        },
        {
          "Name": "LineDown",
          "ReturnType": "Void"
        },
        {
          "Name": "LineLeft",
          "ReturnType": "Void"
        },
        {
          "Name": "LineRight",
          "ReturnType": "Void"
        },
        {
          "Name": "LineUp",
          "ReturnType": "Void"
        },
        {
          "Name": "MakeVisible",
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "visual",
              "Type": "UIElement"
            },
            {
              "Name": "rectangle",
              "Type": "Rect"
            }
          ]
        },
        {
          "Name": "MouseWheelDown",
          "ReturnType": "Void"
        },
        {
          "Name": "MouseWheelLeft",
          "ReturnType": "Void"
        },
        {
          "Name": "MouseWheelRight",
          "ReturnType": "Void"
        },
        {
          "Name": "MouseWheelUp",
          "ReturnType": "Void"
        },
        {
          "Name": "PageDown",
          "ReturnType": "Void"
        },
        {
          "Name": "PageLeft",
          "ReturnType": "Void"
        },
        {
          "Name": "PageRight",
          "ReturnType": "Void"
        },
        {
          "Name": "PageUp",
          "ReturnType": "Void"
        },
        {
          "Name": "SetHorizontalOffset",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "SetVerticalOffset",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "Double"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "HorizontalSnapPointsChanged",
          "Type": "EventHandler<Object>"
        },
        {
          "Name": "VerticalSnapPointsChanged",
          "Type": "EventHandler<Object>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.CarouselPanel"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DropDownClosedHeight",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "DropDownOffset",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "DropDownOpenedHeight",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "SelectedItemDirection",
          "Type": "AnimationDirection",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings"
    },
    {
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "horizontalChange",
              "Type": "Double"
            },
            {
              "Name": "verticalChange",
              "Type": "Double"
            },
            {
              "Name": "canceled",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Canceled",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "HorizontalChange",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "VerticalChange",
          "Type": "Double",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.DragCompletedEventArgs"
    },
    {
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "horizontalChange",
              "Type": "Double"
            },
            {
              "Name": "verticalChange",
              "Type": "Double"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "HorizontalChange",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "VerticalChange",
          "Type": "Double",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.DragDeltaEventArgs"
    },
    {
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "horizontalOffset",
              "Type": "Double"
            },
            {
              "Name": "verticalOffset",
              "Type": "Double"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "HorizontalOffset",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "VerticalOffset",
          "Type": "Double",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.DragStartedEventArgs"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AttachedFlyoutProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Placement",
          "Type": "FlyoutPlacementMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PlacementProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetAttachedFlyout",
          "IsStatic": true,
          "ReturnType": "FlyoutBase",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            }
          ]
        },
        {
          "Name": "Hide",
          "ReturnType": "Void"
        },
        {
          "Name": "SetAttachedFlyout",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            },
            {
              "Name": "value",
              "Type": "FlyoutBase"
            }
          ]
        },
        {
          "Name": "ShowAt",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "placementTarget",
              "Type": "FrameworkElement"
            }
          ]
        },
        {
          "Name": "ShowAttachedFlyout",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "flyoutOwner",
              "Type": "FrameworkElement"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "Closed",
          "Type": "EventHandler<Object>"
        },
        {
          "Name": "Opened",
          "Type": "EventHandler<Object>"
        },
        {
          "Name": "Opening",
          "Type": "EventHandler<Object>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.FlyoutBase"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DragItemsCount",
          "Type": "Int32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.GridViewItemTemplateSettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Action",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "ItemCount",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "ItemUICount",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "OldPosition",
          "Type": "GeneratorPosition",
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "GeneratorPosition",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ItemsChangedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [
        "IValueConverter"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Disabled",
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Enabled",
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Convert",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            },
            {
              "Name": "targetType",
              "Type": "Type"
            },
            {
              "Name": "parameter",
              "Type": "Object"
            },
            {
              "Name": "language",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ConvertBack",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            },
            {
              "Name": "targetType",
              "Type": "Type"
            },
            {
              "Name": "parameter",
              "Type": "Object"
            },
            {
              "Name": "language",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [
        "IValueConverter"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Disabled",
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Enabled",
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Convert",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            },
            {
              "Name": "targetType",
              "Type": "Type"
            },
            {
              "Name": "parameter",
              "Type": "Object"
            },
            {
              "Name": "language",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ConvertBack",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            },
            {
              "Name": "targetType",
              "Type": "Type"
            },
            {
              "Name": "parameter",
              "Type": "Object"
            },
            {
              "Name": "language",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetLayoutExceptionElement",
          "IsStatic": true,
          "ReturnType": "UIElement",
          "Parameters": [
            {
              "Name": "dispatcher",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "GetLayoutSlot",
          "IsStatic": true,
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.LayoutInformation"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DragItemsCount",
          "Type": "Int32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ListViewItemTemplateSettings"
    },
    {
      "IsSealed": true,
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ItemHeight",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ItemHeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Items",
          "Type": "IList<Object>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ItemsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ItemTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ItemTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ItemWidth",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ItemWidthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectedIndex",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SelectedIndexProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectedItem",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SelectedItemProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ShouldLoop",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ShouldLoopProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "SelectionChanged",
          "Type": "SelectionChangedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.LoopingSelector"
    },
    {
      "IsSealed": true,
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.LoopingSelectorItem"
    },
    {
      "IsSealed": true,
      "BaseType": "Canvas",
      "Interfaces": [
        "IScrollSnapPointsInfo"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AreHorizontalSnapPointsRegular",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "AreVerticalSnapPointsRegular",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetIrregularSnapPoints",
          "ReturnType": "IReadOnlyList<Single>",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            }
          ]
        },
        {
          "Name": "GetRegularSnapPoints",
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            },
            {
              "Name": "offset",
              "Type": "Single&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "HorizontalSnapPointsChanged",
          "Type": "EventHandler<Object>"
        },
        {
          "Name": "VerticalSnapPointsChanged",
          "Type": "EventHandler<Object>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.LoopingSelectorPanel"
    },
    {
      "BaseType": "VirtualizingPanel",
      "Interfaces": [
        "IScrollSnapPointsInfo"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AreHorizontalSnapPointsRegular",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "AreVerticalSnapPointsRegular",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "CanHorizontallyScroll",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CanVerticallyScroll",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ExtentHeight",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ExtentWidth",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "HorizontalOffset",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ScrollOwner",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VerticalOffset",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ViewportHeight",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ViewportWidth",
          "Type": "Double",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetIrregularSnapPoints",
          "ReturnType": "IReadOnlyList<Single>",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            }
          ]
        },
        {
          "Name": "GetRegularSnapPoints",
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            },
            {
              "Name": "offset",
              "Type": "Single&",
              "Out": true
            }
          ]
        },
        {
          "Name": "LineDown",
          "ReturnType": "Void"
        },
        {
          "Name": "LineLeft",
          "ReturnType": "Void"
        },
        {
          "Name": "LineRight",
          "ReturnType": "Void"
        },
        {
          "Name": "LineUp",
          "ReturnType": "Void"
        },
        {
          "Name": "MakeVisible",
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "visual",
              "Type": "UIElement"
            },
            {
              "Name": "rectangle",
              "Type": "Rect"
            }
          ]
        },
        {
          "Name": "MouseWheelDown",
          "ReturnType": "Void"
        },
        {
          "Name": "MouseWheelLeft",
          "ReturnType": "Void"
        },
        {
          "Name": "MouseWheelRight",
          "ReturnType": "Void"
        },
        {
          "Name": "MouseWheelUp",
          "ReturnType": "Void"
        },
        {
          "Name": "PageDown",
          "ReturnType": "Void"
        },
        {
          "Name": "PageLeft",
          "ReturnType": "Void"
        },
        {
          "Name": "PageRight",
          "ReturnType": "Void"
        },
        {
          "Name": "PageUp",
          "ReturnType": "Void"
        },
        {
          "Name": "SetHorizontalOffset",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "SetVerticalOffset",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "Double"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "HorizontalSnapPointsChanged",
          "Type": "EventHandler<Object>"
        },
        {
          "Name": "VerticalSnapPointsChanged",
          "Type": "EventHandler<Object>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel"
    },
    {
      "BaseType": "FlyoutBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "TitleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetTitle",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "SetTitle",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.PickerFlyoutBase"
    },
    {
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.PivotHeaderItem"
    },
    {
      "IsSealed": true,
      "BaseType": "Panel",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.PivotHeaderPanel"
    },
    {
      "IsSealed": true,
      "BaseType": "Panel",
      "Interfaces": [
        "IScrollSnapPointsInfo"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AreHorizontalSnapPointsRegular",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "AreVerticalSnapPointsRegular",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetIrregularSnapPoints",
          "ReturnType": "IReadOnlyList<Single>",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            }
          ]
        },
        {
          "Name": "GetRegularSnapPoints",
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            },
            {
              "Name": "offset",
              "Type": "Single&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "HorizontalSnapPointsChanged",
          "Type": "EventHandler<Object>"
        },
        {
          "Name": "VerticalSnapPointsChanged",
          "Type": "EventHandler<Object>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.PivotPanel"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "HorizontalOffset",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HorizontalOffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Child",
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ChildProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ChildTransitions",
          "Type": "TransitionCollection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ChildTransitionsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsLightDismissEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsLightDismissEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsOpen",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsOpenProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "VerticalOffset",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VerticalOffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "Closed",
          "Type": "EventHandler<Object>"
        },
        {
          "Name": "Opened",
          "Type": "EventHandler<Object>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.Popup"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ContainerAnimationEndPosition",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ContainerAnimationStartPosition",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "EllipseAnimationEndPosition",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "EllipseAnimationWellPosition",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "EllipseDiameter",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "EllipseOffset",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "IndicatorLengthDelta",
          "Type": "Double",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ProgressBarTemplateSettings"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "EllipseDiameter",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "EllipseOffset",
          "Type": "Thickness",
          "IsGet": true
        },
        {
          "Name": "MaxSideLength",
          "Type": "Double",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ProgressRingTemplateSettings"
    },
    {
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "LargeChange",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LargeChangeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Maximum",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaximumProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Minimum",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MinimumProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SmallChange",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SmallChangeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ValueProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "ValueChanged",
          "Type": "RangeBaseValueChangedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.RangeBase"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NewValue",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "OldValue",
          "Type": "Double",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "ButtonBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Delay",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DelayProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Interval",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IntervalProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.RepeatButton"
    },
    {
      "IsSealed": true,
      "BaseType": "RangeBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IndicatorMode",
          "Type": "ScrollingIndicatorMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IndicatorModeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Orientation",
          "Type": "Orientation",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OrientationProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ViewportSize",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ViewportSizeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "Scroll",
          "Type": "ScrollEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ScrollBar"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NewValue",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ScrollEventType",
          "Type": "ScrollEventType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ScrollEventArgs"
    },
    {
      "BaseType": "ItemsControl",
      "Interfaces": [
        "IItemContainerMapping"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsSynchronizedWithCurrentItem",
          "Type": "Nullable<Boolean>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsSynchronizedWithCurrentItemProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectedIndex",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SelectedIndexProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectedItem",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SelectedItemProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectedValue",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SelectedValuePath",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SelectedValuePathProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectedValueProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetIsSelectionActive",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "SelectionChanged",
          "Type": "SelectionChangedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.Selector"
    },
    {
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsSelected",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsSelectedProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.SelectorItem"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BorderBrush",
          "Type": "Brush",
          "IsGet": true
        },
        {
          "Name": "BorderThickness",
          "Type": "Thickness",
          "IsGet": true
        },
        {
          "Name": "ContentTransitions",
          "Type": "TransitionCollection",
          "IsGet": true
        },
        {
          "Name": "HeaderBackground",
          "Type": "Brush",
          "IsGet": true
        },
        {
          "Name": "HeaderForeground",
          "Type": "Brush",
          "IsGet": true
        },
        {
          "Name": "IconSource",
          "Type": "ImageSource",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.SettingsFlyoutTemplateSettings"
    },
    {
      "IsSealed": true,
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsDragging",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsDraggingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CancelDrag",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "DragCompleted",
          "Type": "DragCompletedEventHandler"
        },
        {
          "Name": "DragDelta",
          "Type": "DragDeltaEventHandler"
        },
        {
          "Name": "DragStarted",
          "Type": "DragStartedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.Thumb"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Fill",
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FillProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.TickBar"
    },
    {
      "BaseType": "ButtonBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsChecked",
          "Type": "Nullable<Boolean>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsCheckedProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsThreeState",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsThreeStateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "Checked",
          "Type": "RoutedEventHandler"
        },
        {
          "Name": "Indeterminate",
          "Type": "RoutedEventHandler"
        },
        {
          "Name": "Unchecked",
          "Type": "RoutedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ToggleButton"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CurtainCurrentToOffOffset",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "CurtainCurrentToOnOffset",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "CurtainOffToOnOffset",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "CurtainOnToOffOffset",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "KnobCurrentToOffOffset",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "KnobCurrentToOnOffset",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "KnobOffToOnOffset",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "KnobOnToOffOffset",
          "Type": "Double",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FromHorizontalOffset",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "FromVerticalOffset",
          "Type": "Double",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ToolTipTemplateSettings"
    },
    {
      "BaseType": "RangeBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsIndeterminate",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsIndeterminateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ShowError",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ShowErrorProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ShowPaused",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ShowPausedProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TemplateSettings",
          "Type": "ProgressBarTemplateSettings",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ProgressBar"
    },
    {
      "IsSealed": true,
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsActive",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsActiveProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TemplateSettings",
          "Type": "ProgressRingTemplateSettings",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ProgressRing"
    },
    {
      "BaseType": "ToggleButton",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "GroupName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GroupNameProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.RadioButton"
    },
    {
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AcceptsReturn",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AcceptsReturnProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Document",
          "Type": "ITextDocument",
          "IsGet": true
        },
        {
          "Name": "Header",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HeaderTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "InputScope",
          "Type": "InputScope",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "InputScopeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsColorFontEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsColorFontEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsReadOnly",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsReadOnlyProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsSpellCheckEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsSpellCheckEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsTextPredictionEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsTextPredictionEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PlaceholderText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PlaceholderTextProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PreventKeyboardDisplayOnProgrammaticFocus",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PreventKeyboardDisplayOnProgrammaticFocusProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectionHighlightColor",
          "Type": "SolidColorBrush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SelectionHighlightColorProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TextAlignment",
          "Type": "TextAlignment",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextAlignmentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TextWrapping",
          "Type": "TextWrapping",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextWrappingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "ContextMenuOpening",
          "Type": "ContextMenuOpeningEventHandler"
        },
        {
          "Name": "Paste",
          "Type": "TextControlPasteEventHandler"
        },
        {
          "Name": "SelectionChanged",
          "Type": "RoutedEventHandler"
        },
        {
          "Name": "TextChanged",
          "Type": "RoutedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.RichEditBox"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BaselineOffset",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "Blocks",
          "Type": "BlockCollection",
          "IsGet": true
        },
        {
          "Name": "ContentEnd",
          "Type": "TextPointer",
          "IsGet": true
        },
        {
          "Name": "ContentStart",
          "Type": "TextPointer",
          "IsGet": true
        },
        {
          "Name": "FontFamily",
          "Type": "FontFamily",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontFamilyProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontSize",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontSizeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontStretch",
          "Type": "FontStretch",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontStretchProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontStyle",
          "Type": "FontStyle",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontStyleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontWeight",
          "Type": "FontWeight",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontWeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Foreground",
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ForegroundProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HasOverflowContent",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "HasOverflowContentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CharacterSpacing",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CharacterSpacingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsColorFontEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsColorFontEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsTextScaleFactorEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsTextScaleFactorEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsTextSelectionEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsTextSelectionEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LineHeight",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LineHeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LineStackingStrategy",
          "Type": "LineStackingStrategy",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LineStackingStrategyProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MaxLines",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaxLinesProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OpticalMarginAlignment",
          "Type": "OpticalMarginAlignment",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OpticalMarginAlignmentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OverflowContentTarget",
          "Type": "RichTextBlockOverflow",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OverflowContentTargetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Padding",
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PaddingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectedText",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SelectedTextProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectionEnd",
          "Type": "TextPointer",
          "IsGet": true
        },
        {
          "Name": "SelectionHighlightColor",
          "Type": "SolidColorBrush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SelectionHighlightColorProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectionStart",
          "Type": "TextPointer",
          "IsGet": true
        },
        {
          "Name": "TextAlignment",
          "Type": "TextAlignment",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextAlignmentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TextIndent",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextIndentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TextLineBounds",
          "Type": "TextLineBounds",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextLineBoundsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TextReadingOrder",
          "Type": "TextReadingOrder",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextReadingOrderProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TextTrimming",
          "Type": "TextTrimming",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextTrimmingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TextWrapping",
          "Type": "TextWrapping",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextWrappingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Focus",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "FocusState"
            }
          ]
        },
        {
          "Name": "GetPositionFromPoint",
          "ReturnType": "TextPointer",
          "Parameters": [
            {
              "Name": "point",
              "Type": "Point"
            }
          ]
        },
        {
          "Name": "Select",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "start",
              "Type": "TextPointer"
            },
            {
              "Name": "end",
              "Type": "TextPointer"
            }
          ]
        },
        {
          "Name": "SelectAll",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "ContextMenuOpening",
          "Type": "ContextMenuOpeningEventHandler"
        },
        {
          "Name": "SelectionChanged",
          "Type": "RoutedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.RichTextBlock"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BaselineOffset",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ContentEnd",
          "Type": "TextPointer",
          "IsGet": true
        },
        {
          "Name": "ContentSource",
          "Type": "RichTextBlock",
          "IsGet": true
        },
        {
          "Name": "ContentStart",
          "Type": "TextPointer",
          "IsGet": true
        },
        {
          "Name": "HasOverflowContent",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "HasOverflowContentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MaxLines",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaxLinesProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OverflowContentTarget",
          "Type": "RichTextBlockOverflow",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OverflowContentTargetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Padding",
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PaddingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Focus",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "FocusState"
            }
          ]
        },
        {
          "Name": "GetPositionFromPoint",
          "ReturnType": "TextPointer",
          "Parameters": [
            {
              "Name": "point",
              "Type": "Point"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.RichTextBlockOverflow"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ActualHeight",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "Height",
          "Type": "GridLength",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MaxHeight",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaxHeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MinHeight",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MinHeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.RowDefinition"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<RowDefinition>",
        "IEnumerable",
        "IEnumerable<RowDefinition>",
        "IList<RowDefinition>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.RowDefinitionCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "ContentPresenter",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CanHorizontallyScroll",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CanVerticallyScroll",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ExtentHeight",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ExtentWidth",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "HorizontalOffset",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ScrollOwner",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VerticalOffset",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ViewportHeight",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ViewportWidth",
          "Type": "Double",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "LineDown",
          "ReturnType": "Void"
        },
        {
          "Name": "LineLeft",
          "ReturnType": "Void"
        },
        {
          "Name": "LineRight",
          "ReturnType": "Void"
        },
        {
          "Name": "LineUp",
          "ReturnType": "Void"
        },
        {
          "Name": "MakeVisible",
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "visual",
              "Type": "UIElement"
            },
            {
              "Name": "rectangle",
              "Type": "Rect"
            }
          ]
        },
        {
          "Name": "MouseWheelDown",
          "ReturnType": "Void"
        },
        {
          "Name": "MouseWheelLeft",
          "ReturnType": "Void"
        },
        {
          "Name": "MouseWheelRight",
          "ReturnType": "Void"
        },
        {
          "Name": "MouseWheelUp",
          "ReturnType": "Void"
        },
        {
          "Name": "PageDown",
          "ReturnType": "Void"
        },
        {
          "Name": "PageLeft",
          "ReturnType": "Void"
        },
        {
          "Name": "PageRight",
          "ReturnType": "Void"
        },
        {
          "Name": "PageUp",
          "ReturnType": "Void"
        },
        {
          "Name": "SetHorizontalOffset",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "SetVerticalOffset",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "Double"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ScrollContentPresenter"
    },
    {
      "IsSealed": true,
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BringIntoViewOnFocusChange",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "BringIntoViewOnFocusChangeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ComputedHorizontalScrollBarVisibility",
          "Type": "Visibility",
          "IsGet": true
        },
        {
          "Name": "ComputedHorizontalScrollBarVisibilityProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ComputedVerticalScrollBarVisibility",
          "Type": "Visibility",
          "IsGet": true
        },
        {
          "Name": "ComputedVerticalScrollBarVisibilityProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ExtentHeight",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ExtentHeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ExtentWidth",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ExtentWidthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HorizontalOffset",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "HorizontalOffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HorizontalScrollBarVisibility",
          "Type": "ScrollBarVisibility",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HorizontalScrollBarVisibilityProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HorizontalScrollMode",
          "Type": "ScrollMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HorizontalScrollModeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HorizontalSnapPointsAlignment",
          "Type": "SnapPointsAlignment",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HorizontalSnapPointsAlignmentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HorizontalSnapPointsType",
          "Type": "SnapPointsType",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HorizontalSnapPointsTypeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsDeferredScrollingEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsDeferredScrollingEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsHorizontalRailEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsHorizontalRailEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsHorizontalScrollChainingEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsHorizontalScrollChainingEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsScrollInertiaEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsScrollInertiaEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsVerticalRailEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsVerticalRailEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsVerticalScrollChainingEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsVerticalScrollChainingEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsZoomChainingEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsZoomChainingEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsZoomInertiaEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsZoomInertiaEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LeftHeader",
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LeftHeaderProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MaxZoomFactor",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaxZoomFactorProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MinZoomFactor",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MinZoomFactorProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ScrollableHeight",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ScrollableHeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ScrollableWidth",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ScrollableWidthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TopHeader",
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TopHeaderProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TopLeftHeader",
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TopLeftHeaderProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "VerticalOffset",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "VerticalOffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "VerticalScrollBarVisibility",
          "Type": "ScrollBarVisibility",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VerticalScrollBarVisibilityProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "VerticalScrollMode",
          "Type": "ScrollMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VerticalScrollModeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "VerticalSnapPointsAlignment",
          "Type": "SnapPointsAlignment",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VerticalSnapPointsAlignmentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "VerticalSnapPointsType",
          "Type": "SnapPointsType",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VerticalSnapPointsTypeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ViewportHeight",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ViewportHeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ViewportWidth",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ViewportWidthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ZoomFactor",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "ZoomFactorProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ZoomMode",
          "Type": "ZoomMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ZoomModeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ZoomSnapPoints",
          "Type": "IList<Single>",
          "IsGet": true
        },
        {
          "Name": "ZoomSnapPointsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ZoomSnapPointsType",
          "Type": "SnapPointsType",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ZoomSnapPointsTypeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetBringIntoViewOnFocusChange",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetHorizontalScrollBarVisibility",
          "IsStatic": true,
          "ReturnType": "ScrollBarVisibility",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetHorizontalScrollMode",
          "IsStatic": true,
          "ReturnType": "ScrollMode",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetIsDeferredScrollingEnabled",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetIsHorizontalRailEnabled",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetIsHorizontalScrollChainingEnabled",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetIsScrollInertiaEnabled",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetIsVerticalRailEnabled",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetIsVerticalScrollChainingEnabled",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetIsZoomChainingEnabled",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetIsZoomInertiaEnabled",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetVerticalScrollBarVisibility",
          "IsStatic": true,
          "ReturnType": "ScrollBarVisibility",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetVerticalScrollMode",
          "IsStatic": true,
          "ReturnType": "ScrollMode",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetZoomMode",
          "IsStatic": true,
          "ReturnType": "ZoomMode",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "ChangeView",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "horizontalOffset",
              "Type": "Nullable<Double>"
            },
            {
              "Name": "verticalOffset",
              "Type": "Nullable<Double>"
            },
            {
              "Name": "zoomFactor",
              "Type": "Nullable<Single>"
            }
          ]
        },
        {
          "Name": "ChangeView",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "horizontalOffset",
              "Type": "Nullable<Double>"
            },
            {
              "Name": "verticalOffset",
              "Type": "Nullable<Double>"
            },
            {
              "Name": "zoomFactor",
              "Type": "Nullable<Single>"
            },
            {
              "Name": "disableAnimation",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "InvalidateScrollInfo",
          "ReturnType": "Void"
        },
        {
          "Name": "ScrollToHorizontalOffset",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "ScrollToVerticalOffset",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "SetBringIntoViewOnFocusChange",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "bringIntoViewOnFocusChange",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetHorizontalScrollBarVisibility",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "horizontalScrollBarVisibility",
              "Type": "ScrollBarVisibility"
            }
          ]
        },
        {
          "Name": "SetHorizontalScrollMode",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "horizontalScrollMode",
              "Type": "ScrollMode"
            }
          ]
        },
        {
          "Name": "SetIsDeferredScrollingEnabled",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "isDeferredScrollingEnabled",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetIsHorizontalRailEnabled",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "isHorizontalRailEnabled",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetIsHorizontalScrollChainingEnabled",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "isHorizontalScrollChainingEnabled",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetIsScrollInertiaEnabled",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "isScrollInertiaEnabled",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetIsVerticalRailEnabled",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "isVerticalRailEnabled",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetIsVerticalScrollChainingEnabled",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "isVerticalScrollChainingEnabled",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetIsZoomChainingEnabled",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "isZoomChainingEnabled",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetIsZoomInertiaEnabled",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "isZoomInertiaEnabled",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetVerticalScrollBarVisibility",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "verticalScrollBarVisibility",
              "Type": "ScrollBarVisibility"
            }
          ]
        },
        {
          "Name": "SetVerticalScrollMode",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "verticalScrollMode",
              "Type": "ScrollMode"
            }
          ]
        },
        {
          "Name": "SetZoomMode",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "zoomMode",
              "Type": "ZoomMode"
            }
          ]
        },
        {
          "Name": "ZoomToFactor",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "factor",
              "Type": "Single"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "ViewChanged",
          "Type": "EventHandler<ScrollViewerViewChangedEventArgs>"
        },
        {
          "Name": "ViewChanging",
          "Type": "EventHandler<ScrollViewerViewChangingEventArgs>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ScrollViewer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "HorizontalOffset",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "VerticalOffset",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ZoomFactor",
          "Type": "Single",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ScrollViewerView"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsIntermediate",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FinalView",
          "Type": "ScrollViewerView",
          "IsGet": true
        },
        {
          "Name": "IsInertial",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "NextView",
          "Type": "ScrollViewerView",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AddedSections",
          "Type": "IList<HubSection>",
          "IsGet": true
        },
        {
          "Name": "RemovedSections",
          "Type": "IList<HubSection>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.SectionsInViewChangedEventArgs"
    },
    {
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "removedItems",
              "Type": "IList<Object>"
            },
            {
              "Name": "addedItems",
              "Type": "IList<Object>"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "AddedItems",
          "Type": "IList<Object>",
          "IsGet": true
        },
        {
          "Name": "RemovedItems",
          "Type": "IList<Object>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.SelectionChangedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CanChangeViews",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CanChangeViewsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsZoomedInViewActive",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsZoomedInViewActiveProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsZoomOutButtonEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsZoomOutButtonEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ZoomedInView",
          "Type": "ISemanticZoomInformation",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ZoomedInViewProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ZoomedOutView",
          "Type": "ISemanticZoomInformation",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ZoomedOutViewProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ToggleActiveView",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "ViewChangeCompleted",
          "Type": "SemanticZoomViewChangedEventHandler"
        },
        {
          "Name": "ViewChangeStarted",
          "Type": "SemanticZoomViewChangedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.SemanticZoom"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Bounds",
          "Type": "Rect",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Item",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.SemanticZoomLocation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DestinationItem",
          "Type": "SemanticZoomLocation",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsSourceZoomedInView",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SourceItem",
          "Type": "SemanticZoomLocation",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.SemanticZoomViewChangedEventArgs"
    },
    {
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "HeaderBackground",
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderBackgroundProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HeaderForeground",
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderForegroundProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IconSource",
          "Type": "ImageSource",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IconSourceProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TemplateSettings",
          "Type": "SettingsFlyoutTemplateSettings",
          "IsGet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TitleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Hide",
          "ReturnType": "Void"
        },
        {
          "Name": "Show",
          "ReturnType": "Void"
        },
        {
          "Name": "ShowIndependent",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "BackClick",
          "Type": "BackClickEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.SettingsFlyout"
    },
    {
      "BaseType": "RangeBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Header",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HeaderTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IntermediateValue",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IntermediateValueProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsDirectionReversed",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsDirectionReversedProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsThumbToolTipEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsThumbToolTipEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Orientation",
          "Type": "Orientation",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OrientationProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SnapsTo",
          "Type": "SliderSnapsTo",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SnapsToProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StepFrequency",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StepFrequencyProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ThumbToolTipValueConverter",
          "Type": "IValueConverter",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ThumbToolTipValueConverterProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TickFrequency",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TickFrequencyProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TickPlacement",
          "Type": "TickPlacement",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TickPlacementProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Slider"
    },
    {
      "BaseType": "Panel",
      "Interfaces": [
        "IScrollSnapPointsInfo"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AreHorizontalSnapPointsRegular",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "AreScrollSnapPointsRegular",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AreScrollSnapPointsRegularProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AreVerticalSnapPointsRegular",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Orientation",
          "Type": "Orientation",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OrientationProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetIrregularSnapPoints",
          "ReturnType": "IReadOnlyList<Single>",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            }
          ]
        },
        {
          "Name": "GetRegularSnapPoints",
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            },
            {
              "Name": "offset",
              "Type": "Single&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "HorizontalSnapPointsChanged",
          "Type": "EventHandler<Object>"
        },
        {
          "Name": "VerticalSnapPointsChanged",
          "Type": "EventHandler<Object>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.StackPanel"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "SelectStyle",
          "ReturnType": "Style",
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            },
            {
              "Name": "container",
              "Type": "DependencyObject"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.StyleSelector"
    },
    {
      "BaseType": "Grid",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateCoreIndependentInputSource",
          "ReturnType": "CoreIndependentInputSource",
          "Parameters": [
            {
              "Name": "deviceTypes",
              "Type": "CoreInputDeviceTypes"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.SwapChainBackgroundPanel"
    },
    {
      "BaseType": "Grid",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CompositionScaleX",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "CompositionScaleXProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CompositionScaleY",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "CompositionScaleYProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateCoreIndependentInputSource",
          "ReturnType": "CoreIndependentInputSource",
          "Parameters": [
            {
              "Name": "deviceTypes",
              "Type": "CoreInputDeviceTypes"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "CompositionScaleChanged",
          "Type": "TypedEventHandler<SwapChainPanel,Object>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.SwapChainPanel"
    },
    {
      "IsSealed": true,
      "BaseType": "IconElement",
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "symbol",
              "Type": "Symbol"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Symbol",
          "Type": "Symbol",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SymbolProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.SymbolIcon"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BaselineOffset",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ContentEnd",
          "Type": "TextPointer",
          "IsGet": true
        },
        {
          "Name": "ContentStart",
          "Type": "TextPointer",
          "IsGet": true
        },
        {
          "Name": "FontFamily",
          "Type": "FontFamily",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontFamilyProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontSize",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontSizeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontStretch",
          "Type": "FontStretch",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontStretchProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontStyle",
          "Type": "FontStyle",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontStyleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontWeight",
          "Type": "FontWeight",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontWeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Foreground",
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ForegroundProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CharacterSpacing",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CharacterSpacingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Inlines",
          "Type": "InlineCollection",
          "IsGet": true
        },
        {
          "Name": "IsColorFontEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsColorFontEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsTextScaleFactorEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsTextScaleFactorEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsTextSelectionEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsTextSelectionEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LineHeight",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LineHeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LineStackingStrategy",
          "Type": "LineStackingStrategy",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LineStackingStrategyProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MaxLines",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaxLinesProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OpticalMarginAlignment",
          "Type": "OpticalMarginAlignment",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OpticalMarginAlignmentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Padding",
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PaddingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectedText",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SelectedTextProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectionEnd",
          "Type": "TextPointer",
          "IsGet": true
        },
        {
          "Name": "SelectionHighlightColor",
          "Type": "SolidColorBrush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SelectionHighlightColorProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectionStart",
          "Type": "TextPointer",
          "IsGet": true
        },
        {
          "Name": "Text",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextAlignment",
          "Type": "TextAlignment",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextAlignmentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TextLineBounds",
          "Type": "TextLineBounds",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextLineBoundsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TextProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TextReadingOrder",
          "Type": "TextReadingOrder",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextReadingOrderProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TextTrimming",
          "Type": "TextTrimming",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextTrimmingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TextWrapping",
          "Type": "TextWrapping",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextWrappingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Focus",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "FocusState"
            }
          ]
        },
        {
          "Name": "Select",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "start",
              "Type": "TextPointer"
            },
            {
              "Name": "end",
              "Type": "TextPointer"
            }
          ]
        },
        {
          "Name": "SelectAll",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "ContextMenuOpening",
          "Type": "ContextMenuOpeningEventHandler"
        },
        {
          "Name": "SelectionChanged",
          "Type": "RoutedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.TextBlock"
    },
    {
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AcceptsReturn",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AcceptsReturnProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Header",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HeaderTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "InputScope",
          "Type": "InputScope",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "InputScopeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsColorFontEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsColorFontEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsReadOnly",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsReadOnlyProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsSpellCheckEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsSpellCheckEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsTextPredictionEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsTextPredictionEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MaxLength",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaxLengthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PlaceholderText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PlaceholderTextProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PreventKeyboardDisplayOnProgrammaticFocus",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PreventKeyboardDisplayOnProgrammaticFocusProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectedText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SelectionHighlightColor",
          "Type": "SolidColorBrush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SelectionHighlightColorProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SelectionLength",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SelectionStart",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Text",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextAlignment",
          "Type": "TextAlignment",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextAlignmentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TextProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TextWrapping",
          "Type": "TextWrapping",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextWrappingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetRectFromCharacterIndex",
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "charIndex",
              "Type": "Int32"
            },
            {
              "Name": "trailingEdge",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "Select",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "start",
              "Type": "Int32"
            },
            {
              "Name": "length",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "SelectAll",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "ContextMenuOpening",
          "Type": "ContextMenuOpeningEventHandler"
        },
        {
          "Name": "Paste",
          "Type": "TextControlPasteEventHandler"
        },
        {
          "Name": "SelectionChanged",
          "Type": "RoutedEventHandler"
        },
        {
          "Name": "TextChanged",
          "Type": "TextChangedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.TextBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.TextControlPasteEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.TextChangedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NewTime",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "OldTime",
          "Type": "TimeSpan",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.TimePickedEventArgs"
    },
    {
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ClockIdentifier",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ClockIdentifierProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Header",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HeaderTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MinuteIncrement",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MinuteIncrementProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Time",
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TimeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "TimeChanged",
          "Type": "EventHandler<TimePickerValueChangedEventArgs>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.TimePicker"
    },
    {
      "IsSealed": true,
      "BaseType": "PickerFlyoutBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ClockIdentifier",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ClockIdentifierProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MinuteIncrement",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MinuteIncrementProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Time",
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TimeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ShowAtAsync",
          "ReturnType": "IAsyncOperation<Nullable<TimeSpan>>",
          "Parameters": [
            {
              "Name": "target",
              "Type": "FrameworkElement"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "TimePicked",
          "Type": "TypedEventHandler<TimePickerFlyout,TimePickedEventArgs>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.TimePickerFlyout"
    },
    {
      "IsSealed": true,
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.TimePickerFlyoutPresenter"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NewTime",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "OldTime",
          "Type": "TimeSpan",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.TimePickerValueChangedEventArgs"
    },
    {
      "BaseType": "MenuFlyoutItem",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsChecked",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsCheckedProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ToggleMenuFlyoutItem"
    },
    {
      "IsSealed": true,
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Header",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HeaderTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeaderTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsOn",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsOnProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OffContent",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OffContentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OffContentTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OffContentTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OnContent",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OnContentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OnContentTemplate",
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OnContentTemplateProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TemplateSettings",
          "Type": "ToggleSwitchTemplateSettings",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "Toggled",
          "Type": "RoutedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ToggleSwitch"
    },
    {
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "HorizontalOffset",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HorizontalOffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsOpen",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsOpenProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Placement",
          "Type": "PlacementMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PlacementProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PlacementTarget",
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PlacementTargetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TemplateSettings",
          "Type": "ToolTipTemplateSettings",
          "IsGet": true
        },
        {
          "Name": "VerticalOffset",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VerticalOffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "Closed",
          "Type": "RoutedEventHandler"
        },
        {
          "Name": "Opened",
          "Type": "RoutedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ToolTip"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "PlacementProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PlacementTargetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ToolTipProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetPlacement",
          "IsStatic": true,
          "ReturnType": "PlacementMode",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetPlacementTarget",
          "IsStatic": true,
          "ReturnType": "UIElement",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetToolTip",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "SetPlacement",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "PlacementMode"
            }
          ]
        },
        {
          "Name": "SetPlacementTarget",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "UIElement"
            }
          ]
        },
        {
          "Name": "SetToolTip",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ToolTipService"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<UIElement>",
        "IEnumerable",
        "IEnumerable<UIElement>",
        "IList<UIElement>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Move",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "oldIndex",
              "Type": "UInt32"
            },
            {
              "Name": "newIndex",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.UIElementCollection"
    },
    {
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Content",
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.UserControl"
    },
    {
      "IsSealed": true,
      "BaseType": "Panel",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ColumnSpanProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HorizontalChildrenAlignment",
          "Type": "HorizontalAlignment",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HorizontalChildrenAlignmentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ItemHeight",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ItemHeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ItemWidth",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ItemWidthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MaximumRowsOrColumns",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaximumRowsOrColumnsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Orientation",
          "Type": "Orientation",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OrientationProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RowSpanProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "VerticalChildrenAlignment",
          "Type": "VerticalAlignment",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VerticalChildrenAlignmentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetColumnSpan",
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ]
        },
        {
          "Name": "GetRowSpan",
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ]
        },
        {
          "Name": "SetColumnSpan",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "SetRowSpan",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.VariableSizedWrapGrid"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Child",
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Stretch",
          "Type": "Stretch",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StretchDirection",
          "Type": "StretchDirection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StretchDirectionProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StretchProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Viewbox"
    },
    {
      "BaseType": "Panel",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ItemContainerGenerator",
          "Type": "ItemContainerGenerator",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.VirtualizingPanel"
    },
    {
      "IsSealed": true,
      "BaseType": "OrientedVirtualizingPanel",
      "Interfaces": [
        "IScrollSnapPointsInfo"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AreScrollSnapPointsRegular",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AreScrollSnapPointsRegularProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsVirtualizingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Orientation",
          "Type": "Orientation",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OrientationProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "VirtualizationModeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetIsVirtualizing",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "o",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetVirtualizationMode",
          "IsStatic": true,
          "ReturnType": "VirtualizationMode",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "SetVirtualizationMode",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "VirtualizationMode"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "CleanUpVirtualizedItemEvent",
          "Type": "CleanUpVirtualizedItemEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.VirtualizingStackPanel"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AllowedScriptNotifyUris",
          "Type": "IList<Uri>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AllowedScriptNotifyUrisProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AnyScriptNotifyUri",
          "Type": "IList<Uri>",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CanGoBack",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "CanGoBackProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CanGoForward",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "CanGoForwardProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ContainsFullScreenElement",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "ContainsFullScreenElementProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DataTransferPackage",
          "Type": "DataPackage",
          "IsGet": true
        },
        {
          "Name": "DataTransferPackageProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DefaultBackgroundColor",
          "Type": "Color",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DefaultBackgroundColorProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DocumentTitle",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DocumentTitleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Source",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SourceProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "BuildLocalStreamUri",
          "ReturnType": "Uri",
          "Parameters": [
            {
              "Name": "contentIdentifier",
              "Type": "String"
            },
            {
              "Name": "relativePath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CapturePreviewToStreamAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            }
          ]
        },
        {
          "Name": "CaptureSelectedContentToDataPackageAsync",
          "ReturnType": "IAsyncOperation<DataPackage>"
        },
        {
          "Name": "Focus",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "FocusState"
            }
          ]
        },
        {
          "Name": "GoBack",
          "ReturnType": "Void"
        },
        {
          "Name": "GoForward",
          "ReturnType": "Void"
        },
        {
          "Name": "InvokeScript",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "scriptName",
              "Type": "String"
            },
            {
              "Name": "arguments",
              "Type": "String[]"
            }
          ]
        },
        {
          "Name": "InvokeScriptAsync",
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "scriptName",
              "Type": "String"
            },
            {
              "Name": "arguments",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "Navigate",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "NavigateToLocalStreamUri",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "Uri"
            },
            {
              "Name": "streamResolver",
              "Type": "IUriToStreamResolver"
            }
          ]
        },
        {
          "Name": "NavigateToString",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "NavigateWithHttpRequestMessage",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "requestMessage",
              "Type": "HttpRequestMessage"
            }
          ]
        },
        {
          "Name": "Refresh",
          "ReturnType": "Void"
        },
        {
          "Name": "Stop",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "ContainsFullScreenElementChanged",
          "Type": "TypedEventHandler<WebView,Object>"
        },
        {
          "Name": "ContentLoading",
          "Type": "TypedEventHandler<WebView,WebViewContentLoadingEventArgs>"
        },
        {
          "Name": "DOMContentLoaded",
          "Type": "TypedEventHandler<WebView,WebViewDOMContentLoadedEventArgs>"
        },
        {
          "Name": "FrameContentLoading",
          "Type": "TypedEventHandler<WebView,WebViewContentLoadingEventArgs>"
        },
        {
          "Name": "FrameDOMContentLoaded",
          "Type": "TypedEventHandler<WebView,WebViewDOMContentLoadedEventArgs>"
        },
        {
          "Name": "FrameNavigationCompleted",
          "Type": "TypedEventHandler<WebView,WebViewNavigationCompletedEventArgs>"
        },
        {
          "Name": "FrameNavigationStarting",
          "Type": "TypedEventHandler<WebView,WebViewNavigationStartingEventArgs>"
        },
        {
          "Name": "LoadCompleted",
          "Type": "LoadCompletedEventHandler"
        },
        {
          "Name": "LongRunningScriptDetected",
          "Type": "TypedEventHandler<WebView,WebViewLongRunningScriptDetectedEventArgs>"
        },
        {
          "Name": "NavigationCompleted",
          "Type": "TypedEventHandler<WebView,WebViewNavigationCompletedEventArgs>"
        },
        {
          "Name": "NavigationFailed",
          "Type": "WebViewNavigationFailedEventHandler"
        },
        {
          "Name": "NavigationStarting",
          "Type": "TypedEventHandler<WebView,WebViewNavigationStartingEventArgs>"
        },
        {
          "Name": "ScriptNotify",
          "Type": "NotifyEventHandler"
        },
        {
          "Name": "UnsafeContentWarningDisplaying",
          "Type": "TypedEventHandler<WebView,Object>"
        },
        {
          "Name": "UnviewableContentIdentified",
          "Type": "TypedEventHandler<WebView,WebViewUnviewableContentIdentifiedEventArgs>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.WebView"
    },
    {
      "IsSealed": true,
      "BaseType": "TileBrush",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "SourceName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SourceNameProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Redraw",
          "ReturnType": "Void"
        },
        {
          "Name": "SetSource",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "WebView"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.WebViewBrush"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Uri",
          "Type": "Uri",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.WebViewContentLoadingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Uri",
          "Type": "Uri",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.WebViewDOMContentLoadedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ExecutionTime",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "StopPageScriptExecution",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.WebViewLongRunningScriptDetectedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsSuccess",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Uri",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "WebErrorStatus",
          "Type": "WebErrorStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.WebViewNavigationCompletedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Uri",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "WebErrorStatus",
          "Type": "WebErrorStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.WebViewNavigationFailedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Cancel",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Uri",
          "Type": "Uri",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.WebViewNavigationStartingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Referrer",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "Uri",
          "Type": "Uri",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.WebViewUnviewableContentIdentifiedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "OrientedVirtualizingPanel",
      "Interfaces": [
        "IScrollSnapPointsInfo"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "HorizontalChildrenAlignment",
          "Type": "HorizontalAlignment",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HorizontalChildrenAlignmentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ItemHeight",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ItemHeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ItemWidth",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ItemWidthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MaximumRowsOrColumns",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaximumRowsOrColumnsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Orientation",
          "Type": "Orientation",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OrientationProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "VerticalChildrenAlignment",
          "Type": "VerticalAlignment",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VerticalChildrenAlignmentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.WrapGrid"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.BindableAttribute"
    },
    {
      "BaseType": "BindingBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Converter",
          "Type": "IValueConverter",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ConverterLanguage",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ConverterParameter",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ElementName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FallbackValue",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Mode",
          "Type": "BindingMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Path",
          "Type": "PropertyPath",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RelativeSource",
          "Type": "RelativeSource",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Source",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TargetNullValue",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UpdateSourceTrigger",
          "Type": "UpdateSourceTrigger",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.Binding"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.BindingBase"
    },
    {
      "BaseType": "BindingExpressionBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DataItem",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "ParentBinding",
          "Type": "Binding",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "UpdateSource",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.BindingExpression"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.BindingExpressionBase"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "SetBinding",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "target",
              "Type": "DependencyObject"
            },
            {
              "Name": "dp",
              "Type": "DependencyProperty"
            },
            {
              "Name": "binding",
              "Type": "BindingBase"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.BindingOperations"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsSourceGrouped",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsSourceGroupedProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ItemsPath",
          "Type": "PropertyPath",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ItemsPathProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Source",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SourceProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "View",
          "Type": "ICollectionView",
          "IsGet": true
        },
        {
          "Name": "ViewProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.CollectionViewSource"
    },
    {
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "isCancelable",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Cancel",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsCancelable",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.CurrentChangingEventArgs"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Mode",
          "Type": "RelativeSourceMode",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.RelativeSource"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NewValue",
          "Type": "Object",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.DataContextChangedEventArgs"
    },
    {
      "BaseType": "FrameworkTemplate",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "LoadContent",
          "ReturnType": "DependencyObject"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.DataTemplate"
    },
    {
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "dataType",
              "Type": "Object"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "DataType",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.DataTemplateKey"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "EnableFrameRateCounter",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EnableRedrawRegions",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsBindingTracingEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsOverdrawHeatMapEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "BindingFailed",
          "Type": "BindingFailedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.DebugSettings"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Dispatcher",
          "Type": "CoreDispatcher",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ClearValue",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "dp",
              "Type": "DependencyProperty"
            }
          ]
        },
        {
          "Name": "GetAnimationBaseValue",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "dp",
              "Type": "DependencyProperty"
            }
          ]
        },
        {
          "Name": "GetValue",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "dp",
              "Type": "DependencyProperty"
            }
          ]
        },
        {
          "Name": "ReadLocalValue",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "dp",
              "Type": "DependencyProperty"
            }
          ]
        },
        {
          "Name": "SetValue",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "dp",
              "Type": "DependencyProperty"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.DependencyObject"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [
        "ICollection<DependencyObject>",
        "IEnumerable",
        "IEnumerable<DependencyObject>",
        "IList<DependencyObject>",
        "IObservableVector<DependencyObject>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "VectorChanged",
          "Type": "VectorChangedEventHandler<DependencyObject>"
        }
      ],
      "Name": "Windows.UI.Xaml.DependencyObjectCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "UnsetValue",
          "Type": "Object",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetMetadata",
          "ReturnType": "PropertyMetadata",
          "Parameters": [
            {
              "Name": "forType",
              "Type": "Type"
            }
          ]
        },
        {
          "Name": "Register",
          "IsStatic": true,
          "ReturnType": "DependencyProperty",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "propertyType",
              "Type": "Type"
            },
            {
              "Name": "ownerType",
              "Type": "Type"
            },
            {
              "Name": "typeMetadata",
              "Type": "PropertyMetadata"
            }
          ]
        },
        {
          "Name": "RegisterAttached",
          "IsStatic": true,
          "ReturnType": "DependencyProperty",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "propertyType",
              "Type": "Type"
            },
            {
              "Name": "ownerType",
              "Type": "Type"
            },
            {
              "Name": "defaultMetadata",
              "Type": "PropertyMetadata"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.DependencyProperty"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NewValue",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "OldValue",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "Property",
          "Type": "DependencyProperty",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.DependencyPropertyChangedEventArgs"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Interval",
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsEnabled",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Start",
          "ReturnType": "Void"
        },
        {
          "Name": "Stop",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "Tick",
          "Type": "EventHandler<Object>"
        }
      ],
      "Name": "Windows.UI.Xaml.DispatcherTimer"
    },
    {
      "BaseType": "TextElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "LineHeight",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LineHeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LineStackingStrategy",
          "Type": "LineStackingStrategy",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LineStackingStrategyProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Margin",
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MarginProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TextAlignment",
          "Type": "TextAlignment",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextAlignmentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.Block"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<Block>",
        "IEnumerable",
        "IEnumerable<Block>",
        "IList<Block>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.BlockCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "Span",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.Bold"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Fill",
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FillProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontRenderingEmSize",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontRenderingEmSizeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontUriProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Indices",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IndicesProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OriginX",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OriginXProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OriginY",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OriginYProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StyleSimulations",
          "Type": "StyleSimulations",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StyleSimulationsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "UnicodeString",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UnicodeStringProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.Glyphs"
    },
    {
      "IsSealed": true,
      "BaseType": "Span",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NavigateUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NavigateUriProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "Click",
          "Type": "TypedEventHandler<Hyperlink,HyperlinkClickEventArgs>"
        }
      ],
      "Name": "Windows.UI.Xaml.Documents.Hyperlink"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.HyperlinkClickEventArgs"
    },
    {
      "BaseType": "TextElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.Inline"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<Inline>",
        "IEnumerable",
        "IEnumerable<Inline>",
        "IList<Inline>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.InlineCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "Inline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Child",
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.InlineUIContainer"
    },
    {
      "IsSealed": true,
      "BaseType": "Span",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.Italic"
    },
    {
      "IsSealed": true,
      "BaseType": "Inline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.LineBreak"
    },
    {
      "IsSealed": true,
      "BaseType": "Block",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Inlines",
          "Type": "InlineCollection",
          "IsGet": true
        },
        {
          "Name": "TextIndent",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextIndentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.Paragraph"
    },
    {
      "IsSealed": true,
      "BaseType": "Inline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FlowDirection",
          "Type": "FlowDirection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FlowDirectionProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Text",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.Run"
    },
    {
      "BaseType": "Inline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Inlines",
          "Type": "InlineCollection",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.Span"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ContentEnd",
          "Type": "TextPointer",
          "IsGet": true
        },
        {
          "Name": "ContentStart",
          "Type": "TextPointer",
          "IsGet": true
        },
        {
          "Name": "ElementEnd",
          "Type": "TextPointer",
          "IsGet": true
        },
        {
          "Name": "ElementStart",
          "Type": "TextPointer",
          "IsGet": true
        },
        {
          "Name": "FontFamily",
          "Type": "FontFamily",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontFamilyProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontSize",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontSizeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontStretch",
          "Type": "FontStretch",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontStretchProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontStyle",
          "Type": "FontStyle",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontStyleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FontWeight",
          "Type": "FontWeight",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontWeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Foreground",
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ForegroundProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CharacterSpacing",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CharacterSpacingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsTextScaleFactorEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsTextScaleFactorEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LanguageProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "FindName",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.TextElement"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "LogicalDirection",
          "Type": "LogicalDirection",
          "IsGet": true
        },
        {
          "Name": "Offset",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "Parent",
          "Type": "DependencyObject",
          "IsGet": true
        },
        {
          "Name": "VisualParent",
          "Type": "FrameworkElement",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetCharacterRect",
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "direction",
              "Type": "LogicalDirection"
            }
          ]
        },
        {
          "Name": "GetPositionAtOffset",
          "ReturnType": "TextPointer",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "Int32"
            },
            {
              "Name": "direction",
              "Type": "LogicalDirection"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.TextPointer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AnnotationAlternatesProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CapitalSpacingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CapitalsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CaseSensitiveFormsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ContextualAlternatesProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ContextualLigaturesProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ContextualSwashesProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DiscretionaryLigaturesProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "EastAsianExpertFormsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "EastAsianLanguageProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "EastAsianWidthsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FractionProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HistoricalFormsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HistoricalLigaturesProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "KerningProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MathematicalGreekProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "NumeralAlignmentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "NumeralStyleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SlashedZeroProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StandardLigaturesProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StandardSwashesProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StylisticAlternatesProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StylisticSet10Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StylisticSet11Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StylisticSet12Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StylisticSet13Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StylisticSet14Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StylisticSet15Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StylisticSet16Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StylisticSet17Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StylisticSet18Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StylisticSet19Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StylisticSet1Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StylisticSet20Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StylisticSet2Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StylisticSet3Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StylisticSet4Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StylisticSet5Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StylisticSet6Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StylisticSet7Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StylisticSet8Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StylisticSet9Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "VariantsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetAnnotationAlternates",
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetCapitals",
          "IsStatic": true,
          "ReturnType": "FontCapitals",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetCapitalSpacing",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetCaseSensitiveForms",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetContextualAlternates",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetContextualLigatures",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetContextualSwashes",
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetDiscretionaryLigatures",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetEastAsianExpertForms",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetEastAsianLanguage",
          "IsStatic": true,
          "ReturnType": "FontEastAsianLanguage",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetEastAsianWidths",
          "IsStatic": true,
          "ReturnType": "FontEastAsianWidths",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetFraction",
          "IsStatic": true,
          "ReturnType": "FontFraction",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetHistoricalForms",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetHistoricalLigatures",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetKerning",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetMathematicalGreek",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetNumeralAlignment",
          "IsStatic": true,
          "ReturnType": "FontNumeralAlignment",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetNumeralStyle",
          "IsStatic": true,
          "ReturnType": "FontNumeralStyle",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetSlashedZero",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetStandardLigatures",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetStandardSwashes",
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetStylisticAlternates",
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetStylisticSet1",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetStylisticSet10",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetStylisticSet11",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetStylisticSet12",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetStylisticSet13",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetStylisticSet14",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetStylisticSet15",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetStylisticSet16",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetStylisticSet17",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetStylisticSet18",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetStylisticSet19",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetStylisticSet2",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetStylisticSet20",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetStylisticSet3",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetStylisticSet4",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetStylisticSet5",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetStylisticSet6",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetStylisticSet7",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetStylisticSet8",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetStylisticSet9",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetVariants",
          "IsStatic": true,
          "ReturnType": "FontVariants",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "SetAnnotationAlternates",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "SetCapitals",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "FontCapitals"
            }
          ]
        },
        {
          "Name": "SetCapitalSpacing",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetCaseSensitiveForms",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetContextualAlternates",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetContextualLigatures",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetContextualSwashes",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "SetDiscretionaryLigatures",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetEastAsianExpertForms",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetEastAsianLanguage",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "FontEastAsianLanguage"
            }
          ]
        },
        {
          "Name": "SetEastAsianWidths",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "FontEastAsianWidths"
            }
          ]
        },
        {
          "Name": "SetFraction",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "FontFraction"
            }
          ]
        },
        {
          "Name": "SetHistoricalForms",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetHistoricalLigatures",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetKerning",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetMathematicalGreek",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetNumeralAlignment",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "FontNumeralAlignment"
            }
          ]
        },
        {
          "Name": "SetNumeralStyle",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "FontNumeralStyle"
            }
          ]
        },
        {
          "Name": "SetSlashedZero",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetStandardLigatures",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetStandardSwashes",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "SetStylisticAlternates",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "SetStylisticSet1",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetStylisticSet10",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetStylisticSet11",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetStylisticSet12",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetStylisticSet13",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetStylisticSet14",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetStylisticSet15",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetStylisticSet16",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetStylisticSet17",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetStylisticSet18",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetStylisticSet19",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetStylisticSet2",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetStylisticSet20",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetStylisticSet3",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetStylisticSet4",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetStylisticSet5",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetStylisticSet6",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetStylisticSet7",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetStylisticSet8",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetStylisticSet9",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetVariants",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "FontVariants"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.Typography"
    },
    {
      "IsSealed": true,
      "BaseType": "Span",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.Underline"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Data",
          "Type": "DataPackage",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetPosition",
          "ReturnType": "Point",
          "Parameters": [
            {
              "Name": "relativeTo",
              "Type": "UIElement"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.DragEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "TriggerBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Actions",
          "Type": "TriggerActionCollection",
          "IsGet": true
        },
        {
          "Name": "RoutedEvent",
          "Type": "RoutedEvent",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.EventTrigger"
    },
    {
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ErrorMessage",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.ExceptionRoutedEventArgs"
    },
    {
      "BaseType": "UIElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ActualHeight",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ActualHeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ActualWidth",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ActualWidthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BaseUri",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "DataContext",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DataContextProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FlowDirection",
          "Type": "FlowDirection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FlowDirectionProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Height",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HorizontalAlignment",
          "Type": "HorizontalAlignment",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HorizontalAlignmentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LanguageProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Margin",
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MarginProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MaxHeight",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaxHeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MaxWidth",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaxWidthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MinHeight",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MinHeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MinWidth",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MinWidthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NameProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Parent",
          "Type": "DependencyObject",
          "IsGet": true
        },
        {
          "Name": "RequestedTheme",
          "Type": "ElementTheme",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RequestedThemeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Resources",
          "Type": "ResourceDictionary",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Style",
          "Type": "Style",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StyleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Tag",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TagProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Triggers",
          "Type": "TriggerCollection",
          "IsGet": true
        },
        {
          "Name": "VerticalAlignment",
          "Type": "VerticalAlignment",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VerticalAlignmentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Width",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "WidthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "FindName",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetBindingExpression",
          "ReturnType": "BindingExpression",
          "Parameters": [
            {
              "Name": "dp",
              "Type": "DependencyProperty"
            }
          ]
        },
        {
          "Name": "SetBinding",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "dp",
              "Type": "DependencyProperty"
            },
            {
              "Name": "binding",
              "Type": "BindingBase"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "DataContextChanged",
          "Type": "TypedEventHandler<FrameworkElement,DataContextChangedEventArgs>"
        },
        {
          "Name": "LayoutUpdated",
          "Type": "EventHandler<Object>"
        },
        {
          "Name": "Loaded",
          "Type": "RoutedEventHandler"
        },
        {
          "Name": "SizeChanged",
          "Type": "SizeChangedEventHandler"
        },
        {
          "Name": "Unloaded",
          "Type": "RoutedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.FrameworkElement"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.FrameworkTemplate"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IFrameworkView"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Initialize",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "applicationView",
              "Type": "CoreApplicationView"
            }
          ]
        },
        {
          "Name": "Load",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "entryPoint",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "Run",
          "ReturnType": "Void"
        },
        {
          "Name": "SetWindow",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "window",
              "Type": "CoreWindow"
            }
          ]
        },
        {
          "Name": "Uninitialize",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.FrameworkView"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IFrameworkViewSource"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateView",
          "ReturnType": "IFrameworkView"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.FrameworkViewSource"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PointerDeviceType",
          "Type": "PointerDeviceType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetPosition",
          "ReturnType": "Point",
          "Parameters": [
            {
              "Name": "relativeTo",
              "Type": "UIElement"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetFocusedElement",
          "IsStatic": true,
          "ReturnType": "Object"
        },
        {
          "Name": "TryMoveFocus",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "focusNavigationDirection",
              "Type": "FocusNavigationDirection"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.FocusManager"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HoldingState",
          "Type": "HoldingState",
          "IsGet": true
        },
        {
          "Name": "PointerDeviceType",
          "Type": "PointerDeviceType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetPosition",
          "ReturnType": "Point",
          "Parameters": [
            {
              "Name": "relativeTo",
              "Type": "UIElement"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.HoldingRoutedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DesiredDeceleration",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DesiredExpansion",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.InertiaExpansionBehavior"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DesiredDeceleration",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DesiredRotation",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.InertiaRotationBehavior"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DesiredDeceleration",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DesiredDisplacement",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.InertiaTranslationBehavior"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Names",
          "Type": "IList<InputScopeName>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.InputScope"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "nameValue",
              "Type": "InputScopeNameValue"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "NameValue",
          "Type": "InputScopeNameValue",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.InputScopeName"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Key",
          "Type": "VirtualKey",
          "IsGet": true
        },
        {
          "Name": "KeyStatus",
          "Type": "CorePhysicalKeyStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.KeyRoutedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Container",
          "Type": "UIElement",
          "IsGet": true
        },
        {
          "Name": "Cumulative",
          "Type": "ManipulationDelta",
          "IsGet": true
        },
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsInertial",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "PointerDeviceType",
          "Type": "PointerDeviceType",
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "Point",
          "IsGet": true
        },
        {
          "Name": "Velocities",
          "Type": "ManipulationVelocities",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Container",
          "Type": "UIElement",
          "IsGet": true
        },
        {
          "Name": "Cumulative",
          "Type": "ManipulationDelta",
          "IsGet": true
        },
        {
          "Name": "Delta",
          "Type": "ManipulationDelta",
          "IsGet": true
        },
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsInertial",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "PointerDeviceType",
          "Type": "PointerDeviceType",
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "Point",
          "IsGet": true
        },
        {
          "Name": "Velocities",
          "Type": "ManipulationVelocities",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Complete",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Container",
          "Type": "UIElement",
          "IsGet": true
        },
        {
          "Name": "Cumulative",
          "Type": "ManipulationDelta",
          "IsGet": true
        },
        {
          "Name": "Delta",
          "Type": "ManipulationDelta",
          "IsGet": true
        },
        {
          "Name": "ExpansionBehavior",
          "Type": "InertiaExpansionBehavior",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PointerDeviceType",
          "Type": "PointerDeviceType",
          "IsGet": true
        },
        {
          "Name": "RotationBehavior",
          "Type": "InertiaRotationBehavior",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TranslationBehavior",
          "Type": "InertiaTranslationBehavior",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Velocities",
          "Type": "ManipulationVelocities",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "center",
              "Type": "Point"
            },
            {
              "Name": "radius",
              "Type": "Double"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Center",
          "Type": "Point",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Radius",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.ManipulationPivot"
    },
    {
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Container",
          "Type": "UIElement",
          "IsGet": true
        },
        {
          "Name": "Cumulative",
          "Type": "ManipulationDelta",
          "IsGet": true
        },
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PointerDeviceType",
          "Type": "PointerDeviceType",
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "Point",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Complete",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Container",
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Mode",
          "Type": "ManipulationModes",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Pivot",
          "Type": "ManipulationPivot",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsInContact",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsInRange",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "PointerDeviceType",
          "Type": "PointerDeviceType",
          "IsGet": true
        },
        {
          "Name": "PointerId",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.Pointer"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "KeyModifiers",
          "Type": "VirtualKeyModifiers",
          "IsGet": true
        },
        {
          "Name": "Pointer",
          "Type": "Pointer",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetCurrentPoint",
          "ReturnType": "PointerPoint",
          "Parameters": [
            {
              "Name": "relativeTo",
              "Type": "UIElement"
            }
          ]
        },
        {
          "Name": "GetIntermediatePoints",
          "ReturnType": "IList<PointerPoint>",
          "Parameters": [
            {
              "Name": "relativeTo",
              "Type": "UIElement"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.PointerRoutedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PointerDeviceType",
          "Type": "PointerDeviceType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetPosition",
          "ReturnType": "Point",
          "Parameters": [
            {
              "Name": "relativeTo",
              "Type": "UIElement"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.RightTappedRoutedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PointerDeviceType",
          "Type": "PointerDeviceType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetPosition",
          "ReturnType": "Point",
          "Parameters": [
            {
              "Name": "relativeTo",
              "Type": "UIElement"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.TappedRoutedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "Name",
          "Type": "String"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Markup.ContentPropertyAttribute"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Write",
          "IsStatic": true,
          "ReturnType": "XamlBinaryWriterErrorInformation",
          "Parameters": [
            {
              "Name": "inputStreams",
              "Type": "IList<IRandomAccessStream>"
            },
            {
              "Name": "outputStreams",
              "Type": "IList<IRandomAccessStream>"
            },
            {
              "Name": "xamlMetadataProvider",
              "Type": "IXamlMetadataProvider"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Markup.XamlBinaryWriter"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Load",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "xaml",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "LoadWithInitialTemplateValidation",
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "xaml",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Markup.XamlReader"
    },
    {
      "IsSealed": true,
      "BaseType": "Transition",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.AddDeleteThemeTransition"
    },
    {
      "IsSealed": true,
      "BaseType": "EasingFunctionBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Amplitude",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AmplitudeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.BackEase"
    },
    {
      "IsSealed": true,
      "BaseType": "TriggerAction",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Storyboard",
          "Type": "Storyboard",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StoryboardProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.BeginStoryboard"
    },
    {
      "IsSealed": true,
      "BaseType": "EasingFunctionBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Bounces",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "BouncesProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Bounciness",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "BouncinessProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.BounceEase"
    },
    {
      "IsSealed": true,
      "BaseType": "EasingFunctionBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.CircleEase"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "By",
          "Type": "Nullable<Color>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ByProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "EasingFunction",
          "Type": "EasingFunctionBase",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EasingFunctionProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "EnableDependentAnimation",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EnableDependentAnimationProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "From",
          "Type": "Nullable<Color>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FromProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "To",
          "Type": "Nullable<Color>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ToProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ColorAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "EnableDependentAnimation",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EnableDependentAnimationProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "KeyFrames",
          "Type": "ColorKeyFrameCollection",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "KeyTime",
          "Type": "KeyTime",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "KeyTimeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "Color",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ValueProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ColorKeyFrame"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<ColorKeyFrame>",
        "IEnumerable",
        "IEnumerable<ColorKeyFrame>",
        "IList<ColorKeyFrame>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ColorKeyFrameCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "NavigationTransitionInfo",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsStaggerElementProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsStaggeringEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsStaggeringEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetIsStaggerElement",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ]
        },
        {
          "Name": "SetIsStaggerElement",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ConditionallyIndependentlyAnimatableAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Transition",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "HorizontalOffset",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HorizontalOffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "VerticalOffset",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VerticalOffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ContentThemeTransition"
    },
    {
      "IsSealed": true,
      "BaseType": "NavigationTransitionInfo",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ExitElement",
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ExitElementContainerProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ExitElementProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsEntranceElementProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsExitElementProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetExitElementContainer",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "ListViewBase"
            }
          ]
        },
        {
          "Name": "GetIsEntranceElement",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ]
        },
        {
          "Name": "GetIsExitElement",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ]
        },
        {
          "Name": "SetExitElementContainer",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "ListViewBase"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetIsEntranceElement",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetIsExitElement",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo"
    },
    {
      "IsSealed": true,
      "BaseType": "EasingFunctionBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.CubicEase"
    },
    {
      "IsSealed": true,
      "BaseType": "ColorKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.DiscreteColorKeyFrame"
    },
    {
      "IsSealed": true,
      "BaseType": "DoubleKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.DiscreteDoubleKeyFrame"
    },
    {
      "IsSealed": true,
      "BaseType": "ObjectKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.DiscreteObjectKeyFrame"
    },
    {
      "IsSealed": true,
      "BaseType": "PointKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.DiscretePointKeyFrame"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "By",
          "Type": "Nullable<Double>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ByProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "EasingFunction",
          "Type": "EasingFunctionBase",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EasingFunctionProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "EnableDependentAnimation",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EnableDependentAnimationProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "From",
          "Type": "Nullable<Double>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FromProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "To",
          "Type": "Nullable<Double>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ToProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.DoubleAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "EnableDependentAnimation",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EnableDependentAnimationProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "KeyFrames",
          "Type": "DoubleKeyFrameCollection",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "KeyTime",
          "Type": "KeyTime",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "KeyTimeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ValueProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.DoubleKeyFrame"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<DoubleKeyFrame>",
        "IEnumerable",
        "IEnumerable<DoubleKeyFrame>",
        "IList<DoubleKeyFrame>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.DoubleKeyFrameCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "TargetName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TargetNameProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.DragItemThemeAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Direction",
          "Type": "AnimationDirection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DirectionProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TargetName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TargetNameProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ToOffset",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ToOffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.DragOverThemeAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "TargetName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TargetNameProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.DropTargetItemThemeAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "ColorKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "EasingFunction",
          "Type": "EasingFunctionBase",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EasingFunctionProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.EasingColorKeyFrame"
    },
    {
      "IsSealed": true,
      "BaseType": "DoubleKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "EasingFunction",
          "Type": "EasingFunctionBase",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EasingFunctionProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.EasingDoubleKeyFrame"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "EasingMode",
          "Type": "EasingMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EasingModeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Ease",
          "ReturnType": "Double",
          "Parameters": [
            {
              "Name": "normalizedTime",
              "Type": "Double"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.EasingFunctionBase"
    },
    {
      "IsSealed": true,
      "BaseType": "PointKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "EasingFunction",
          "Type": "EasingFunctionBase",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EasingFunctionProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.EasingPointKeyFrame"
    },
    {
      "IsSealed": true,
      "BaseType": "Transition",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Edge",
          "Type": "EdgeTransitionLocation",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EdgeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.EdgeUIThemeTransition"
    },
    {
      "IsSealed": true,
      "BaseType": "EasingFunctionBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Oscillations",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OscillationsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Springiness",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SpringinessProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ElasticEase"
    },
    {
      "IsSealed": true,
      "BaseType": "Transition",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FromHorizontalOffset",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FromHorizontalOffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FromVerticalOffset",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FromVerticalOffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsStaggeringEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsStaggeringEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.EntranceThemeTransition"
    },
    {
      "IsSealed": true,
      "BaseType": "EasingFunctionBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Exponent",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ExponentProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ExponentialEase"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "TargetName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TargetNameProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.FadeInThemeAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "TargetName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TargetNameProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.FadeOutThemeAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.IndependentlyAnimatableAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ControlPoint1",
          "Type": "Point",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ControlPoint2",
          "Type": "Point",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.KeySpline"
    },
    {
      "IsSealed": true,
      "BaseType": "ColorKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.LinearColorKeyFrame"
    },
    {
      "IsSealed": true,
      "BaseType": "DoubleKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.LinearDoubleKeyFrame"
    },
    {
      "IsSealed": true,
      "BaseType": "PointKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.LinearPointKeyFrame"
    },
    {
      "IsSealed": true,
      "BaseType": "Transition",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DefaultNavigationTransitionInfo",
          "Type": "NavigationTransitionInfo",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DefaultNavigationTransitionInfoProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.NavigationThemeTransition"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "EnableDependentAnimation",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EnableDependentAnimationProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "KeyFrames",
          "Type": "ObjectKeyFrameCollection",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "KeyTime",
          "Type": "KeyTime",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "KeyTimeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ValueProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ObjectKeyFrame"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<ObjectKeyFrame>",
        "IEnumerable",
        "IEnumerable<ObjectKeyFrame>",
        "IList<ObjectKeyFrame>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "Transition",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Edge",
          "Type": "EdgeTransitionLocation",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EdgeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.PaneThemeTransition"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "By",
          "Type": "Nullable<Point>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ByProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "EasingFunction",
          "Type": "EasingFunctionBase",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EasingFunctionProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "EnableDependentAnimation",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EnableDependentAnimationProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "From",
          "Type": "Nullable<Point>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FromProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "To",
          "Type": "Nullable<Point>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ToProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.PointAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "EnableDependentAnimation",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EnableDependentAnimationProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "KeyFrames",
          "Type": "PointKeyFrameCollection",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "TargetName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TargetNameProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.PointerDownThemeAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "TargetName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TargetNameProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.PointerUpThemeAnimation"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "KeyTime",
          "Type": "KeyTime",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "KeyTimeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "Point",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ValueProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.PointKeyFrame"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<PointKeyFrame>",
        "IEnumerable",
        "IEnumerable<PointKeyFrame>",
        "IList<PointKeyFrame>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.PointKeyFrameCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FromHorizontalOffset",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FromHorizontalOffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FromVerticalOffset",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FromVerticalOffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TargetName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TargetNameProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.PopInThemeAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "TargetName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TargetNameProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.PopOutThemeAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Transition",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FromHorizontalOffset",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FromHorizontalOffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FromVerticalOffset",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FromVerticalOffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.PopupThemeTransition"
    },
    {
      "IsSealed": true,
      "BaseType": "EasingFunctionBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Power",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PowerProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.PowerEase"
    },
    {
      "IsSealed": true,
      "BaseType": "EasingFunctionBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.QuadraticEase"
    },
    {
      "IsSealed": true,
      "BaseType": "EasingFunctionBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.QuarticEase"
    },
    {
      "IsSealed": true,
      "BaseType": "EasingFunctionBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.QuinticEase"
    },
    {
      "IsSealed": true,
      "BaseType": "Transition",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ReorderThemeTransition"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FromHorizontalOffset",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FromHorizontalOffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FromVerticalOffset",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FromVerticalOffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TargetName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TargetNameProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.RepositionThemeAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Transition",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.RepositionThemeTransition"
    },
    {
      "IsSealed": true,
      "BaseType": "EasingFunctionBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.SineEase"
    },
    {
      "IsSealed": true,
      "BaseType": "NavigationTransitionInfo",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.SlideNavigationTransitionInfo"
    },
    {
      "IsSealed": true,
      "BaseType": "ColorKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "KeySpline",
          "Type": "KeySpline",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "KeySplineProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.SplineColorKeyFrame"
    },
    {
      "IsSealed": true,
      "BaseType": "DoubleKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "KeySpline",
          "Type": "KeySpline",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "KeySplineProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.SplineDoubleKeyFrame"
    },
    {
      "IsSealed": true,
      "BaseType": "PointKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "KeySpline",
          "Type": "KeySpline",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "KeySplineProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.SplinePointKeyFrame"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ClosedLength",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ClosedLengthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ClosedTarget",
          "Type": "DependencyObject",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ClosedTargetName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ClosedTargetNameProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ClosedTargetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ContentTarget",
          "Type": "DependencyObject",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentTargetName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentTargetNameProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ContentTargetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ContentTranslationDirection",
          "Type": "AnimationDirection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentTranslationDirectionProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ContentTranslationOffset",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentTranslationOffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OffsetFromCenter",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OffsetFromCenterProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OpenedLength",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OpenedLengthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OpenedTarget",
          "Type": "DependencyObject",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OpenedTargetName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OpenedTargetNameProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OpenedTargetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ClosedLength",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ClosedLengthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ClosedTarget",
          "Type": "DependencyObject",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ClosedTargetName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ClosedTargetNameProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ClosedTargetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ContentTarget",
          "Type": "DependencyObject",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentTargetName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentTargetNameProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ContentTargetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ContentTranslationDirection",
          "Type": "AnimationDirection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentTranslationDirectionProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ContentTranslationOffset",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentTranslationOffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OffsetFromCenter",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OffsetFromCenterProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OpenedLength",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OpenedLengthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OpenedTarget",
          "Type": "DependencyObject",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OpenedTargetName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OpenedTargetNameProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "OpenedTargetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Children",
          "Type": "TimelineCollection",
          "IsGet": true
        },
        {
          "Name": "TargetNameProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TargetPropertyProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Begin",
          "ReturnType": "Void"
        },
        {
          "Name": "GetCurrentState",
          "ReturnType": "ClockState"
        },
        {
          "Name": "GetCurrentTime",
          "ReturnType": "TimeSpan"
        },
        {
          "Name": "GetTargetName",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "element",
              "Type": "Timeline"
            }
          ]
        },
        {
          "Name": "GetTargetProperty",
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "element",
              "Type": "Timeline"
            }
          ]
        },
        {
          "Name": "Pause",
          "ReturnType": "Void"
        },
        {
          "Name": "Resume",
          "ReturnType": "Void"
        },
        {
          "Name": "Seek",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "TimeSpan"
            }
          ]
        },
        {
          "Name": "SeekAlignedToLastTick",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "TimeSpan"
            }
          ]
        },
        {
          "Name": "SetTarget",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "timeline",
              "Type": "Timeline"
            },
            {
              "Name": "target",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "SetTargetName",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "Timeline"
            },
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SetTargetProperty",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "Timeline"
            },
            {
              "Name": "path",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SkipToFill",
          "ReturnType": "Void"
        },
        {
          "Name": "Stop",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.Storyboard"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FromHorizontalOffset",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FromHorizontalOffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FromVerticalOffset",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FromVerticalOffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TargetName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TargetNameProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.SwipeBackThemeAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "TargetName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TargetNameProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ToHorizontalOffset",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ToHorizontalOffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ToVerticalOffset",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ToVerticalOffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.SwipeHintThemeAnimation"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AllowDependentAnimations",
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AutoReverse",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AutoReverseProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BeginTime",
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "BeginTimeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Duration",
          "Type": "Duration",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DurationProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FillBehavior",
          "Type": "FillBehavior",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FillBehaviorProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RepeatBehavior",
          "Type": "RepeatBehavior",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RepeatBehaviorProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SpeedRatio",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SpeedRatioProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "Completed",
          "Type": "EventHandler<Object>"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.Animation.Timeline"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<Timeline>",
        "IEnumerable",
        "IEnumerable<Timeline>",
        "IList<Timeline>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.TimelineCollection"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.Transition"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<Transition>",
        "IEnumerable",
        "IEnumerable<Transition>",
        "IList<Transition>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.TransitionCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "PathSegment",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsLargeArc",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsLargeArcProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Point",
          "Type": "Point",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PointProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RotationAngle",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RotationAngleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Size",
          "Type": "Size",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SizeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SweepDirection",
          "Type": "SweepDirection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SweepDirectionProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.ArcSegment"
    },
    {
      "IsSealed": true,
      "BaseType": "PathSegment",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Point1",
          "Type": "Point",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Point1Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Point2",
          "Type": "Point",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Point2Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Point3",
          "Type": "Point",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Point3Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.BezierSegment"
    },
    {
      "IsSealed": true,
      "BaseType": "CacheMode",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.BitmapCache"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Opacity",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OpacityProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RelativeTransform",
          "Type": "Transform",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RelativeTransformProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Transform",
          "Type": "Transform",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TransformProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Brush"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.CacheMode"
    },
    {
      "IsSealed": true,
      "BaseType": "Transform",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CenterX",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CenterXProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CenterY",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CenterYProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Rotation",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RotationProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ScaleX",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ScaleXProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ScaleY",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ScaleYProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SkewX",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SkewXProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SkewY",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SkewYProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TranslateX",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TranslateXProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TranslateY",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TranslateYProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.CompositeTransform"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "Rendering",
          "Type": "EventHandler<Object>",
          "IsStatic": true
        },
        {
          "Name": "SurfaceContentsLost",
          "Type": "EventHandler<Object>",
          "IsStatic": true
        }
      ],
      "Name": "Windows.UI.Xaml.Media.CompositionTarget"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<Double>",
        "IEnumerable",
        "IEnumerable<Double>",
        "IList<Double>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.DoubleCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "Geometry",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Center",
          "Type": "Point",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CenterProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RadiusX",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RadiusXProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RadiusY",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RadiusYProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.EllipseGeometry"
    },
    {
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "familyName",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Source",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.FontFamily"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Inverse",
          "Type": "GeneralTransform",
          "IsGet": true
        },
        {
          "Name": "InverseCore",
          "Type": "GeneralTransform",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "TransformBounds",
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "rect",
              "Type": "Rect"
            }
          ]
        },
        {
          "Name": "TransformPoint",
          "ReturnType": "Point",
          "Parameters": [
            {
              "Name": "point",
              "Type": "Point"
            }
          ]
        },
        {
          "Name": "TryTransform",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "inPoint",
              "Type": "Point"
            },
            {
              "Name": "outPoint",
              "Type": "Point&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.GeneralTransform"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Bounds",
          "Type": "Rect",
          "IsGet": true
        },
        {
          "Name": "Empty",
          "Type": "Geometry",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StandardFlatteningTolerance",
          "Type": "Double",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Transform",
          "Type": "Transform",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TransformProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Geometry"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<Geometry>",
        "IEnumerable",
        "IEnumerable<Geometry>",
        "IList<Geometry>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.GeometryCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "Geometry",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FillRule",
          "Type": "FillRule",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FillRuleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Children",
          "Type": "GeometryCollection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ChildrenProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.GeometryGroup"
    },
    {
      "BaseType": "Brush",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ColorInterpolationMode",
          "Type": "ColorInterpolationMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ColorInterpolationModeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GradientStops",
          "Type": "GradientStopCollection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GradientStopsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "MappingMode",
          "Type": "BrushMappingMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MappingModeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SpreadMethod",
          "Type": "GradientSpreadMethod",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SpreadMethodProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.GradientBrush"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Color",
          "Type": "Color",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ColorProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Offset",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.GradientStop"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<GradientStop>",
        "IEnumerable",
        "IEnumerable<GradientStop>",
        "IList<GradientStop>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.GradientStopCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "TileBrush",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ImageSource",
          "Type": "ImageSource",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ImageSourceProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "ImageFailed",
          "Type": "ExceptionRoutedEventHandler"
        },
        {
          "Name": "ImageOpened",
          "Type": "RoutedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.ImageBrush"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.ImageSource"
    },
    {
      "IsSealed": true,
      "BaseType": "BitmapSource",
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "uriSource",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "CreateOptions",
          "Type": "BitmapCreateOptions",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CreateOptionsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DecodePixelHeight",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DecodePixelHeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DecodePixelType",
          "Type": "DecodePixelType",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DecodePixelTypeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DecodePixelWidth",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DecodePixelWidthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "UriSource",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UriSourceProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "DownloadProgress",
          "Type": "DownloadProgressEventHandler"
        },
        {
          "Name": "ImageFailed",
          "Type": "ExceptionRoutedEventHandler"
        },
        {
          "Name": "ImageOpened",
          "Type": "RoutedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.Imaging.BitmapImage"
    },
    {
      "BaseType": "ImageSource",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "PixelHeight",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "PixelHeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PixelWidth",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "PixelWidthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "SetSource",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "streamSource",
              "Type": "IRandomAccessStream"
            }
          ]
        },
        {
          "Name": "SetSourceAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "streamSource",
              "Type": "IRandomAccessStream"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Imaging.BitmapSource"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Progress",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Imaging.DownloadProgressEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "ImageSource",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "PixelHeight",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "PixelHeightProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PixelWidth",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "PixelWidthProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetPixelsAsync",
          "ReturnType": "IAsyncOperation<IBuffer>"
        },
        {
          "Name": "RenderAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ]
        },
        {
          "Name": "RenderAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "scaledWidth",
              "Type": "Int32"
            },
            {
              "Name": "scaledHeight",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Imaging.RenderTargetBitmap"
    },
    {
      "BaseType": "ImageSource",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "pixelWidth",
              "Type": "Int32"
            },
            {
              "Name": "pixelHeight",
              "Type": "Int32"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "pixelWidth",
              "Type": "Int32"
            },
            {
              "Name": "pixelHeight",
              "Type": "Int32"
            },
            {
              "Name": "isOpaque",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Imaging.SurfaceImageSource"
    },
    {
      "IsSealed": true,
      "BaseType": "SurfaceImageSource",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "pixelWidth",
              "Type": "Int32"
            },
            {
              "Name": "pixelHeight",
              "Type": "Int32"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "pixelWidth",
              "Type": "Int32"
            },
            {
              "Name": "pixelHeight",
              "Type": "Int32"
            },
            {
              "Name": "isOpaque",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Imaging.VirtualSurfaceImageSource"
    },
    {
      "IsSealed": true,
      "BaseType": "BitmapSource",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "pixelWidth",
              "Type": "Int32"
            },
            {
              "Name": "pixelHeight",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "PixelBuffer",
          "Type": "IBuffer",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Invalidate",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Imaging.WriteableBitmap"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Imaging.XamlRenderingBackgroundTask"
    },
    {
      "IsSealed": true,
      "BaseType": "GradientBrush",
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "gradientStopCollection",
              "Type": "GradientStopCollection"
            },
            {
              "Name": "angle",
              "Type": "Double"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "EndPoint",
          "Type": "Point",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EndPointProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StartPoint",
          "Type": "Point",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StartPointProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.LinearGradientBrush"
    },
    {
      "IsSealed": true,
      "BaseType": "Geometry",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "EndPoint",
          "Type": "Point",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "EndPointProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StartPoint",
          "Type": "Point",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StartPointProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.LineGeometry"
    },
    {
      "IsSealed": true,
      "BaseType": "PathSegment",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Point",
          "Type": "Point",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PointProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.LineSegment"
    },
    {
      "IsSealed": true,
      "BaseType": "Projection",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ProjectionMatrix",
          "Type": "Matrix3D",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProjectionMatrixProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Matrix3DProjection"
    },
    {
      "IsSealed": true,
      "BaseType": "Transform",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Matrix",
          "Type": "Matrix",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MatrixProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.MatrixTransform"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsClosed",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsClosedProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsFilled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsFilledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Segments",
          "Type": "PathSegmentCollection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SegmentsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StartPoint",
          "Type": "Point",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StartPointProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.PathFigure"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<PathFigure>",
        "IEnumerable",
        "IEnumerable<PathFigure>",
        "IList<PathFigure>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.PathFigureCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "Geometry",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Figures",
          "Type": "PathFigureCollection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FiguresProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "FillRule",
          "Type": "FillRule",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FillRuleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.PathGeometry"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.PathSegment"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<PathSegment>",
        "IEnumerable",
        "IEnumerable<PathSegment>",
        "IList<PathSegment>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.PathSegmentCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "Projection",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CenterOfRotationX",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CenterOfRotationXProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CenterOfRotationY",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CenterOfRotationYProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CenterOfRotationZ",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CenterOfRotationZProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GlobalOffsetX",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GlobalOffsetXProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GlobalOffsetY",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GlobalOffsetYProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GlobalOffsetZ",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GlobalOffsetZProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LocalOffsetX",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LocalOffsetXProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LocalOffsetY",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LocalOffsetYProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "LocalOffsetZ",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LocalOffsetZProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ProjectionMatrix",
          "Type": "Matrix3D",
          "IsGet": true
        },
        {
          "Name": "ProjectionMatrixProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RotationX",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RotationXProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RotationY",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RotationYProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RotationZ",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RotationZProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.PlaneProjection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<Point>",
        "IEnumerable",
        "IEnumerable<Point>",
        "IList<Point>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.PointCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "PathSegment",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Points",
          "Type": "PointCollection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PointsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.PolyBezierSegment"
    },
    {
      "IsSealed": true,
      "BaseType": "PathSegment",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Points",
          "Type": "PointCollection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PointsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.PolyLineSegment"
    },
    {
      "IsSealed": true,
      "BaseType": "PathSegment",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Points",
          "Type": "PointCollection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PointsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.PolyQuadraticBezierSegment"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Projection"
    },
    {
      "IsSealed": true,
      "BaseType": "PathSegment",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Point1",
          "Type": "Point",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Point1Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Point2",
          "Type": "Point",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Point2Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.QuadraticBezierSegment"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.RateChangedRoutedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "Geometry",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Rect",
          "Type": "Rect",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RectProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.RectangleGeometry"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "RenderingTime",
          "Type": "TimeSpan",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.RenderingEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "Transform",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Angle",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AngleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CenterX",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CenterXProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CenterY",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CenterYProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.RotateTransform"
    },
    {
      "IsSealed": true,
      "BaseType": "Transform",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CenterX",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CenterXProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CenterY",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CenterYProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ScaleX",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ScaleXProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ScaleY",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ScaleYProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.ScaleTransform"
    },
    {
      "IsSealed": true,
      "BaseType": "Transform",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AngleX",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AngleXProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AngleY",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AngleYProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CenterX",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CenterXProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CenterY",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CenterYProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.SkewTransform"
    },
    {
      "IsSealed": true,
      "BaseType": "Brush",
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "color",
              "Type": "Color"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Color",
          "Type": "Color",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ColorProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.SolidColorBrush"
    },
    {
      "BaseType": "Brush",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AlignmentX",
          "Type": "AlignmentX",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AlignmentXProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "AlignmentY",
          "Type": "AlignmentY",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AlignmentYProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Stretch",
          "Type": "Stretch",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StretchProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.TileBrush"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Text",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Time",
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TimeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TypeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.TimelineMarker"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<TimelineMarker>",
        "IEnumerable",
        "IEnumerable<TimelineMarker>",
        "IList<TimelineMarker>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.TimelineMarkerCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Marker",
          "Type": "TimelineMarker",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.TimelineMarkerRoutedEventArgs"
    },
    {
      "BaseType": "GeneralTransform",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Transform"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<Transform>",
        "IEnumerable",
        "IEnumerable<Transform>",
        "IList<Transform>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.TransformCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "Transform",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Children",
          "Type": "TransformCollection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ChildrenProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "Matrix",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.TransformGroup"
    },
    {
      "IsSealed": true,
      "BaseType": "Transform",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "X",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "XProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Y",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "YProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.TranslateTransform"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "DisconnectChildrenRecursive",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ]
        },
        {
          "Name": "FindElementsInHostCoordinates",
          "IsStatic": true,
          "ReturnType": "IEnumerable<UIElement>",
          "Parameters": [
            {
              "Name": "intersectingPoint",
              "Type": "Point"
            },
            {
              "Name": "subtree",
              "Type": "UIElement"
            }
          ]
        },
        {
          "Name": "FindElementsInHostCoordinates",
          "IsStatic": true,
          "ReturnType": "IEnumerable<UIElement>",
          "Parameters": [
            {
              "Name": "intersectingRect",
              "Type": "Rect"
            },
            {
              "Name": "subtree",
              "Type": "UIElement"
            }
          ]
        },
        {
          "Name": "FindElementsInHostCoordinates",
          "IsStatic": true,
          "ReturnType": "IEnumerable<UIElement>",
          "Parameters": [
            {
              "Name": "intersectingPoint",
              "Type": "Point"
            },
            {
              "Name": "subtree",
              "Type": "UIElement"
            },
            {
              "Name": "includeAllElements",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "FindElementsInHostCoordinates",
          "IsStatic": true,
          "ReturnType": "IEnumerable<UIElement>",
          "Parameters": [
            {
              "Name": "intersectingRect",
              "Type": "Rect"
            },
            {
              "Name": "subtree",
              "Type": "UIElement"
            },
            {
              "Name": "includeAllElements",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "GetChild",
          "IsStatic": true,
          "ReturnType": "DependencyObject",
          "Parameters": [
            {
              "Name": "reference",
              "Type": "DependencyObject"
            },
            {
              "Name": "childIndex",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "GetChildrenCount",
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "reference",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "GetOpenPopups",
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<Popup>",
          "Parameters": [
            {
              "Name": "window",
              "Type": "Window"
            }
          ]
        },
        {
          "Name": "GetParent",
          "IsStatic": true,
          "ReturnType": "DependencyObject",
          "Parameters": [
            {
              "Name": "reference",
              "Type": "DependencyObject"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.VisualTreeHelper"
    },
    {
      "IsSealed": true,
      "BaseType": "ExceptionRoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ErrorTrace",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.MediaFailedRoutedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Cancel",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NavigationMode",
          "Type": "NavigationMode",
          "IsGet": true
        },
        {
          "Name": "NavigationTransitionInfo",
          "Type": "NavigationTransitionInfo",
          "IsGet": true
        },
        {
          "Name": "Parameter",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "SourcePageType",
          "Type": "Type",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Content",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "NavigationMode",
          "Type": "NavigationMode",
          "IsGet": true
        },
        {
          "Name": "NavigationTransitionInfo",
          "Type": "NavigationTransitionInfo",
          "IsGet": true
        },
        {
          "Name": "Parameter",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "SourcePageType",
          "Type": "Type",
          "IsGet": true
        },
        {
          "Name": "Uri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Navigation.NavigationEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Exception",
          "Type": "Exception",
          "IsGet": true
        },
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SourcePageType",
          "Type": "Type",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Navigation.NavigationFailedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "sourcePageType",
              "Type": "Type"
            },
            {
              "Name": "parameter",
              "Type": "Object"
            },
            {
              "Name": "navigationTransitionInfo",
              "Type": "NavigationTransitionInfo"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "NavigationTransitionInfo",
          "Type": "NavigationTransitionInfo",
          "IsGet": true
        },
        {
          "Name": "Parameter",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "SourcePageType",
          "Type": "Type",
          "IsGet": true
        },
        {
          "Name": "SourcePageTypeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Navigation.PageStackEntry"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "FromCoordinates",
          "IsStatic": true,
          "ReturnType": "Point",
          "Parameters": [
            {
              "Name": "x",
              "Type": "Single"
            },
            {
              "Name": "y",
              "Type": "Single"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.PointHelper"
    },
    {
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "defaultValue",
              "Type": "Object"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "defaultValue",
              "Type": "Object"
            },
            {
              "Name": "propertyChangedCallback",
              "Type": "PropertyChangedCallback"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "CreateDefaultValueCallback",
          "Type": "CreateDefaultValueCallback",
          "IsGet": true
        },
        {
          "Name": "DefaultValue",
          "Type": "Object",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Create",
          "IsStatic": true,
          "ReturnType": "PropertyMetadata",
          "Parameters": [
            {
              "Name": "defaultValue",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "Create",
          "IsStatic": true,
          "ReturnType": "PropertyMetadata",
          "Parameters": [
            {
              "Name": "defaultValue",
              "Type": "Object"
            },
            {
              "Name": "propertyChangedCallback",
              "Type": "PropertyChangedCallback"
            }
          ]
        },
        {
          "Name": "Create",
          "IsStatic": true,
          "ReturnType": "PropertyMetadata",
          "Parameters": [
            {
              "Name": "createDefaultValueCallback",
              "Type": "CreateDefaultValueCallback"
            }
          ]
        },
        {
          "Name": "Create",
          "IsStatic": true,
          "ReturnType": "PropertyMetadata",
          "Parameters": [
            {
              "Name": "createDefaultValueCallback",
              "Type": "CreateDefaultValueCallback"
            },
            {
              "Name": "propertyChangedCallback",
              "Type": "PropertyChangedCallback"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.PropertyMetadata"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "path",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Path",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.PropertyPath"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Empty",
          "Type": "Rect",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Contains",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Rect"
            },
            {
              "Name": "point",
              "Type": "Point"
            }
          ]
        },
        {
          "Name": "FromCoordinatesAndDimensions",
          "IsStatic": true,
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "x",
              "Type": "Single"
            },
            {
              "Name": "y",
              "Type": "Single"
            },
            {
              "Name": "width",
              "Type": "Single"
            },
            {
              "Name": "height",
              "Type": "Single"
            }
          ]
        },
        {
          "Name": "FromLocationAndSize",
          "IsStatic": true,
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "location",
              "Type": "Point"
            },
            {
              "Name": "size",
              "Type": "Size"
            }
          ]
        },
        {
          "Name": "FromPoints",
          "IsStatic": true,
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "point1",
              "Type": "Point"
            },
            {
              "Name": "point2",
              "Type": "Point"
            }
          ]
        },
        {
          "Name": "GetBottom",
          "IsStatic": true,
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Rect"
            }
          ]
        },
        {
          "Name": "GetIsEmpty",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Rect"
            }
          ]
        },
        {
          "Name": "GetLeft",
          "IsStatic": true,
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Rect"
            }
          ]
        },
        {
          "Name": "GetRight",
          "IsStatic": true,
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Rect"
            }
          ]
        },
        {
          "Name": "GetTop",
          "IsStatic": true,
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Rect"
            }
          ]
        },
        {
          "Name": "Intersect",
          "IsStatic": true,
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Rect"
            },
            {
              "Name": "rect",
              "Type": "Rect"
            }
          ]
        },
        {
          "Name": "Union",
          "IsStatic": true,
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Rect"
            },
            {
              "Name": "point",
              "Type": "Point"
            }
          ]
        },
        {
          "Name": "Union",
          "IsStatic": true,
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Rect"
            },
            {
              "Name": "rect",
              "Type": "Rect"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.RectHelper"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [
        "ICollection<KeyValuePair<Object,Object>>",
        "IDictionary<Object,Object>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<Object,Object>>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "MergedDictionaries",
          "Type": "IList<ResourceDictionary>",
          "IsGet": true
        },
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Source",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ThemeDictionaries",
          "Type": "IDictionary<Object,Object>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.ResourceDictionary"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Current",
          "Type": "CustomXamlResourceLoader",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Resources.CustomXamlResourceLoader"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.RoutedEvent"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "OriginalSource",
          "Type": "Object",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.RoutedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "SetterBase",
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "targetProperty",
              "Type": "DependencyProperty"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Property",
          "Type": "DependencyProperty",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Value",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Setter"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsSealed",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.SetterBase"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<SetterBase>",
        "IEnumerable",
        "IEnumerable<SetterBase>",
        "IList<SetterBase>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsSealed",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.SetterBaseCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "Shape",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Shapes.Ellipse"
    },
    {
      "IsSealed": true,
      "BaseType": "Shape",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "X1",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "X1Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "X2",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "X2Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Y1",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Y1Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Y2",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Y2Property",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Shapes.Line"
    },
    {
      "BaseType": "Shape",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Data",
          "Type": "Geometry",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DataProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Shapes.Path"
    },
    {
      "IsSealed": true,
      "BaseType": "Shape",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FillRule",
          "Type": "FillRule",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FillRuleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Points",
          "Type": "PointCollection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PointsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Shapes.Polygon"
    },
    {
      "IsSealed": true,
      "BaseType": "Shape",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "FillRule",
          "Type": "FillRule",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FillRuleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Points",
          "Type": "PointCollection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PointsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Shapes.Polyline"
    },
    {
      "IsSealed": true,
      "BaseType": "Shape",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "RadiusX",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RadiusXProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RadiusY",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RadiusYProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Shapes.Rectangle"
    },
    {
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Fill",
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FillProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "GeometryTransform",
          "Type": "Transform",
          "IsGet": true
        },
        {
          "Name": "Stretch",
          "Type": "Stretch",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StretchProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Stroke",
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StrokeDashArray",
          "Type": "DoubleCollection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StrokeDashArrayProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StrokeDashCap",
          "Type": "PenLineCap",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StrokeDashCapProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StrokeDashOffset",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StrokeDashOffsetProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StrokeEndLineCap",
          "Type": "PenLineCap",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StrokeEndLineCapProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StrokeLineJoin",
          "Type": "PenLineJoin",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StrokeLineJoinProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StrokeMiterLimit",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StrokeMiterLimitProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StrokeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StrokeStartLineCap",
          "Type": "PenLineCap",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StrokeStartLineCapProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "StrokeThickness",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StrokeThicknessProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Shapes.Shape"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Empty",
          "Type": "Size",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "FromDimensions",
          "IsStatic": true,
          "ReturnType": "Size",
          "Parameters": [
            {
              "Name": "width",
              "Type": "Single"
            },
            {
              "Name": "height",
              "Type": "Single"
            }
          ]
        },
        {
          "Name": "GetIsEmpty",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Size"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.SizeHelper"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NewSize",
          "Type": "Size",
          "IsGet": true
        },
        {
          "Name": "PreviousSize",
          "Type": "Size",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.SizeChangedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "targetType",
              "Type": "Type"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "BasedOn",
          "Type": "Style",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsSealed",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Setters",
          "Type": "SetterBaseCollection",
          "IsGet": true
        },
        {
          "Name": "TargetType",
          "Type": "Type",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Seal",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Style"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "Property",
          "Type": "String"
        },
        {
          "Name": "StyleTargetType",
          "Type": "Type"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.StyleTypedPropertyAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "Name",
          "Type": "String"
        },
        {
          "Name": "Type",
          "Type": "Type"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.TemplatePartAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "GroupName",
          "Type": "String"
        },
        {
          "Name": "Name",
          "Type": "String"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.TemplateVisualStateAttribute"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.TriggerAction"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<TriggerAction>",
        "IEnumerable",
        "IEnumerable<TriggerAction>",
        "IList<TriggerAction>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.TriggerActionCollection"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.TriggerBase"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<TriggerBase>",
        "IEnumerable",
        "IEnumerable<TriggerBase>",
        "IList<TriggerBase>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.TriggerCollection"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AllowDrop",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AllowDropProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CacheMode",
          "Type": "CacheMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CacheModeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Clip",
          "Type": "RectangleGeometry",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ClipProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CompositeMode",
          "Type": "ElementCompositeMode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CompositeModeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DesiredSize",
          "Type": "Size",
          "IsGet": true
        },
        {
          "Name": "DoubleTappedEvent",
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DragEnterEvent",
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DragLeaveEvent",
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DragOverEvent",
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DropEvent",
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HoldingEvent",
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsDoubleTapEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsDoubleTapEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsHitTestVisible",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsHitTestVisibleProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsHoldingEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsHoldingEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsRightTapEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsRightTapEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IsTapEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsTapEnabledProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "KeyDownEvent",
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "KeyUpEvent",
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ManipulationCompletedEvent",
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ManipulationDeltaEvent",
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ManipulationInertiaStartingEvent",
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ManipulationMode",
          "Type": "ManipulationModes",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ManipulationModeProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ManipulationStartedEvent",
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "ManipulationStartingEvent",
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Opacity",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OpacityProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PointerCanceledEvent",
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PointerCaptureLostEvent",
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PointerCaptures",
          "Type": "IReadOnlyList<Pointer>",
          "IsGet": true
        },
        {
          "Name": "PointerCapturesProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PointerEnteredEvent",
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PointerExitedEvent",
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PointerMovedEvent",
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PointerPressedEvent",
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PointerReleasedEvent",
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "PointerWheelChangedEvent",
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Projection",
          "Type": "Projection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProjectionProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RenderSize",
          "Type": "Size",
          "IsGet": true
        },
        {
          "Name": "RenderTransform",
          "Type": "Transform",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RenderTransformOrigin",
          "Type": "Point",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RenderTransformOriginProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RenderTransformProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "RightTappedEvent",
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "TappedEvent",
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Transitions",
          "Type": "TransitionCollection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TransitionsProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "UseLayoutRounding",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UseLayoutRoundingProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Visibility",
          "Type": "Visibility",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "VisibilityProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AddHandler",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "routedEvent",
              "Type": "RoutedEvent"
            },
            {
              "Name": "handler",
              "Type": "Object"
            },
            {
              "Name": "handledEventsToo",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "Arrange",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "finalRect",
              "Type": "Rect"
            }
          ]
        },
        {
          "Name": "CancelDirectManipulations",
          "ReturnType": "Boolean"
        },
        {
          "Name": "CapturePointer",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Pointer"
            }
          ]
        },
        {
          "Name": "InvalidateArrange",
          "ReturnType": "Void"
        },
        {
          "Name": "InvalidateMeasure",
          "ReturnType": "Void"
        },
        {
          "Name": "Measure",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "availableSize",
              "Type": "Size"
            }
          ]
        },
        {
          "Name": "ReleasePointerCapture",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Pointer"
            }
          ]
        },
        {
          "Name": "ReleasePointerCaptures",
          "ReturnType": "Void"
        },
        {
          "Name": "RemoveHandler",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "routedEvent",
              "Type": "RoutedEvent"
            },
            {
              "Name": "handler",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "TransformToVisual",
          "ReturnType": "GeneralTransform",
          "Parameters": [
            {
              "Name": "visual",
              "Type": "UIElement"
            }
          ]
        },
        {
          "Name": "UpdateLayout",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "DoubleTapped",
          "Type": "DoubleTappedEventHandler"
        },
        {
          "Name": "DragEnter",
          "Type": "DragEventHandler"
        },
        {
          "Name": "DragLeave",
          "Type": "DragEventHandler"
        },
        {
          "Name": "DragOver",
          "Type": "DragEventHandler"
        },
        {
          "Name": "Drop",
          "Type": "DragEventHandler"
        },
        {
          "Name": "GotFocus",
          "Type": "RoutedEventHandler"
        },
        {
          "Name": "Holding",
          "Type": "HoldingEventHandler"
        },
        {
          "Name": "KeyDown",
          "Type": "KeyEventHandler"
        },
        {
          "Name": "KeyUp",
          "Type": "KeyEventHandler"
        },
        {
          "Name": "LostFocus",
          "Type": "RoutedEventHandler"
        },
        {
          "Name": "ManipulationCompleted",
          "Type": "ManipulationCompletedEventHandler"
        },
        {
          "Name": "ManipulationDelta",
          "Type": "ManipulationDeltaEventHandler"
        },
        {
          "Name": "ManipulationInertiaStarting",
          "Type": "ManipulationInertiaStartingEventHandler"
        },
        {
          "Name": "ManipulationStarted",
          "Type": "ManipulationStartedEventHandler"
        },
        {
          "Name": "ManipulationStarting",
          "Type": "ManipulationStartingEventHandler"
        },
        {
          "Name": "PointerCanceled",
          "Type": "PointerEventHandler"
        },
        {
          "Name": "PointerCaptureLost",
          "Type": "PointerEventHandler"
        },
        {
          "Name": "PointerEntered",
          "Type": "PointerEventHandler"
        },
        {
          "Name": "PointerExited",
          "Type": "PointerEventHandler"
        },
        {
          "Name": "PointerMoved",
          "Type": "PointerEventHandler"
        },
        {
          "Name": "PointerPressed",
          "Type": "PointerEventHandler"
        },
        {
          "Name": "PointerReleased",
          "Type": "PointerEventHandler"
        },
        {
          "Name": "PointerWheelChanged",
          "Type": "PointerEventHandler"
        },
        {
          "Name": "RightTapped",
          "Type": "RightTappedEventHandler"
        },
        {
          "Name": "Tapped",
          "Type": "TappedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.UIElement"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Exception",
          "Type": "Exception",
          "IsGet": true
        },
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Message",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.UnhandledExceptionEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Storyboard",
          "Type": "Storyboard",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.VisualState"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CurrentState",
          "Type": "VisualState",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "States",
          "Type": "IList<VisualState>",
          "IsGet": true
        },
        {
          "Name": "Transitions",
          "Type": "IList<VisualTransition>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Name": "CurrentStateChanged",
          "Type": "VisualStateChangedEventHandler"
        },
        {
          "Name": "CurrentStateChanging",
          "Type": "VisualStateChangedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.VisualStateGroup"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Control",
          "Type": "Control",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NewState",
          "Type": "VisualState",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OldState",
          "Type": "VisualState",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.VisualStateChangedEventArgs"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CustomVisualStateManagerProperty",
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetCustomVisualStateManager",
          "IsStatic": true,
          "ReturnType": "VisualStateManager",
          "Parameters": [
            {
              "Name": "obj",
              "Type": "FrameworkElement"
            }
          ]
        },
        {
          "Name": "GetVisualStateGroups",
          "IsStatic": true,
          "ReturnType": "IList<VisualStateGroup>",
          "Parameters": [
            {
              "Name": "obj",
              "Type": "FrameworkElement"
            }
          ]
        },
        {
          "Name": "GoToState",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "control",
              "Type": "Control"
            },
            {
              "Name": "stateName",
              "Type": "String"
            },
            {
              "Name": "useTransitions",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetCustomVisualStateManager",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "obj",
              "Type": "FrameworkElement"
            },
            {
              "Name": "value",
              "Type": "VisualStateManager"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.VisualStateManager"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "From",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GeneratedDuration",
          "Type": "Duration",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GeneratedEasingFunction",
          "Type": "EasingFunctionBase",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Storyboard",
          "Type": "Storyboard",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "To",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.VisualTransition"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Bounds",
          "Type": "Rect",
          "IsGet": true
        },
        {
          "Name": "Content",
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CoreWindow",
          "Type": "CoreWindow",
          "IsGet": true
        },
        {
          "Name": "Current",
          "Type": "Window",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Dispatcher",
          "Type": "CoreDispatcher",
          "IsGet": true
        },
        {
          "Name": "Visible",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Activate",
          "ReturnType": "Void"
        },
        {
          "Name": "Close",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "Activated",
          "Type": "WindowActivatedEventHandler"
        },
        {
          "Name": "Closed",
          "Type": "WindowClosedEventHandler"
        },
        {
          "Name": "SizeChanged",
          "Type": "WindowSizeChangedEventHandler"
        },
        {
          "Name": "VisibilityChanged",
          "Type": "WindowVisibilityChangedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Window"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Window",
          "Type": "Window",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.WindowCreatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationClient"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "serverCredential",
              "Type": "PasswordCredential"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "BypassCacheOnRetrieve",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaxResponseBufferSize",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProxyCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ServerCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Timeout",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CancelAsyncOperations",
          "ReturnType": "Void"
        },
        {
          "Name": "CreateMediaResourceAsync",
          "ReturnType": "IAsyncOperationWithProgress<SyndicationItem,TransferProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "mediaType",
              "Type": "String"
            },
            {
              "Name": "description",
              "Type": "String"
            },
            {
              "Name": "mediaStream",
              "Type": "IInputStream"
            }
          ]
        },
        {
          "Name": "CreateResourceAsync",
          "ReturnType": "IAsyncOperationWithProgress<SyndicationItem,TransferProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "description",
              "Type": "String"
            },
            {
              "Name": "item",
              "Type": "SyndicationItem"
            }
          ]
        },
        {
          "Name": "DeleteResourceAsync",
          "ReturnType": "IAsyncActionWithProgress<TransferProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "DeleteResourceItemAsync",
          "ReturnType": "IAsyncActionWithProgress<TransferProgress>",
          "Parameters": [
            {
              "Name": "item",
              "Type": "SyndicationItem"
            }
          ]
        },
        {
          "Name": "RetrieveFeedAsync",
          "ReturnType": "IAsyncOperationWithProgress<SyndicationFeed,RetrievalProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "RetrieveMediaResourceAsync",
          "ReturnType": "IAsyncOperationWithProgress<IInputStream,RetrievalProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "RetrieveResourceAsync",
          "ReturnType": "IAsyncOperationWithProgress<SyndicationItem,RetrievalProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "RetrieveServiceDocumentAsync",
          "ReturnType": "IAsyncOperationWithProgress<ServiceDocument,RetrievalProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "SetRequestHeader",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "UpdateMediaResourceAsync",
          "ReturnType": "IAsyncActionWithProgress<TransferProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "mediaType",
              "Type": "String"
            },
            {
              "Name": "mediaStream",
              "Type": "IInputStream"
            }
          ]
        },
        {
          "Name": "UpdateResourceAsync",
          "ReturnType": "IAsyncActionWithProgress<TransferProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "item",
              "Type": "SyndicationItem"
            }
          ]
        },
        {
          "Name": "UpdateResourceItemAsync",
          "ReturnType": "IAsyncActionWithProgress<TransferProgress>",
          "Parameters": [
            {
              "Name": "item",
              "Type": "SyndicationItem"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.AtomPub.AtomPubClient"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationNode"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Accepts",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        },
        {
          "Name": "AttributeExtensions",
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true
        },
        {
          "Name": "BaseUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Categories",
          "Type": "IReadOnlyList<SyndicationCategory>",
          "IsGet": true
        },
        {
          "Name": "ElementExtensions",
          "Type": "IList<ISyndicationNode>",
          "IsGet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeNamespace",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeValue",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Title",
          "Type": "ISyndicationText",
          "IsGet": true
        },
        {
          "Name": "Uri",
          "Type": "Uri",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetXmlDocument",
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.AtomPub.ResourceCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationNode"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AttributeExtensions",
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true
        },
        {
          "Name": "BaseUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ElementExtensions",
          "Type": "IList<ISyndicationNode>",
          "IsGet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeNamespace",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeValue",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Workspaces",
          "Type": "IReadOnlyList<Workspace>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetXmlDocument",
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.AtomPub.ServiceDocument"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationNode"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AttributeExtensions",
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true
        },
        {
          "Name": "BaseUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Collections",
          "Type": "IReadOnlyList<ResourceCollection>",
          "IsGet": true
        },
        {
          "Name": "ElementExtensions",
          "Type": "IList<ISyndicationNode>",
          "IsGet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeNamespace",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeValue",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Title",
          "Type": "ISyndicationText",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetXmlDocument",
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.AtomPub.Workspace"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IHttpFilter"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AllowAutoRedirect",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AllowUI",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AutomaticDecompression",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CacheControl",
          "Type": "HttpCacheControl",
          "IsGet": true
        },
        {
          "Name": "ClientCertificate",
          "Type": "Certificate",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CookieManager",
          "Type": "HttpCookieManager",
          "IsGet": true
        },
        {
          "Name": "IgnorableServerCertificateErrors",
          "Type": "IList<ChainValidationResult>",
          "IsGet": true
        },
        {
          "Name": "MaxConnectionsPerServer",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProxyCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ServerCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UseProxy",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "SendRequestAsync",
          "ReturnType": "IAsyncOperationWithProgress<HttpResponseMessage,HttpProgress>",
          "Parameters": [
            {
              "Name": "request",
              "Type": "HttpRequestMessage"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Filters.HttpBaseProtocolFilter"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ReadBehavior",
          "Type": "HttpCacheReadBehavior",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "WriteBehavior",
          "Type": "HttpCacheWriteBehavior",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Web.Http.Filters.HttpCacheControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HttpNameValueHeaderValue>",
        "IEnumerable",
        "IEnumerable<HttpNameValueHeaderValue>",
        "IList<HttpNameValueHeaderValue>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "MaxAge",
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaxStale",
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MinFresh",
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SharedMaxAge",
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ParseAdd",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParseAdd",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Token",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Parse",
          "IsStatic": true,
          "ReturnType": "HttpConnectionOptionHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParse",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "connectionOptionHeaderValue",
              "Type": "HttpConnectionOptionHeaderValue&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HttpConnectionOptionHeaderValue>",
        "IEnumerable",
        "IEnumerable<HttpConnectionOptionHeaderValue>",
        "IList<HttpConnectionOptionHeaderValue>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ParseAdd",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParseAdd",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "contentCoding",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "ContentCoding",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Parse",
          "IsStatic": true,
          "ReturnType": "HttpContentCodingHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParse",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "contentCodingHeaderValue",
              "Type": "HttpContentCodingHeaderValue&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpContentCodingHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HttpContentCodingHeaderValue>",
        "IEnumerable",
        "IEnumerable<HttpContentCodingHeaderValue>",
        "IList<HttpContentCodingHeaderValue>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ParseAdd",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParseAdd",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "contentCoding",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "contentCoding",
              "Type": "String"
            },
            {
              "Name": "quality",
              "Type": "Double"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "ContentCoding",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Quality",
          "Type": "Nullable<Double>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Parse",
          "IsStatic": true,
          "ReturnType": "HttpContentCodingWithQualityHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParse",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "contentCodingWithQualityHeaderValue",
              "Type": "HttpContentCodingWithQualityHeaderValue&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HttpContentCodingWithQualityHeaderValue>",
        "IEnumerable",
        "IEnumerable<HttpContentCodingWithQualityHeaderValue>",
        "IList<HttpContentCodingWithQualityHeaderValue>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ParseAdd",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParseAdd",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "dispositionType",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "DispositionType",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FileName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FileNameStar",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Parameters",
          "Type": "IList<HttpNameValueHeaderValue>",
          "IsGet": true
        },
        {
          "Name": "Size",
          "Type": "Nullable<UInt64>",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Parse",
          "IsStatic": true,
          "ReturnType": "HttpContentDispositionHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParse",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "contentDispositionHeaderValue",
              "Type": "HttpContentDispositionHeaderValue&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpContentDispositionHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,String>>",
        "IDictionary<String,String>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,String>>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ContentDisposition",
          "Type": "HttpContentDispositionHeaderValue",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentEncoding",
          "Type": "HttpContentCodingHeaderValueCollection",
          "IsGet": true
        },
        {
          "Name": "ContentLanguage",
          "Type": "HttpLanguageHeaderValueCollection",
          "IsGet": true
        },
        {
          "Name": "ContentLength",
          "Type": "Nullable<UInt64>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentLocation",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentMD5",
          "Type": "IBuffer",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentRange",
          "Type": "HttpContentRangeHeaderValue",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ContentType",
          "Type": "HttpMediaTypeHeaderValue",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Expires",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LastModified",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Append",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryAppendWithoutValidation",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpContentHeaderCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "from",
              "Type": "UInt64"
            },
            {
              "Name": "to",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "from",
              "Type": "UInt64"
            },
            {
              "Name": "to",
              "Type": "UInt64"
            },
            {
              "Name": "length",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "length",
              "Type": "UInt64"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "FirstBytePosition",
          "Type": "Nullable<UInt64>",
          "IsGet": true
        },
        {
          "Name": "LastBytePosition",
          "Type": "Nullable<UInt64>",
          "IsGet": true
        },
        {
          "Name": "Length",
          "Type": "Nullable<UInt64>",
          "IsGet": true
        },
        {
          "Name": "Unit",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Parse",
          "IsStatic": true,
          "ReturnType": "HttpContentRangeHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParse",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "contentRangeHeaderValue",
              "Type": "HttpContentRangeHeaderValue&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpContentRangeHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Parse",
          "IsStatic": true,
          "ReturnType": "HttpCookiePairHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParse",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "cookiePairHeaderValue",
              "Type": "HttpCookiePairHeaderValue&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpCookiePairHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HttpCookiePairHeaderValue>",
        "IEnumerable",
        "IEnumerable<HttpCookiePairHeaderValue>",
        "IList<HttpCookiePairHeaderValue>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ParseAdd",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParseAdd",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "scheme",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "scheme",
              "Type": "String"
            },
            {
              "Name": "token",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Parameters",
          "Type": "IList<HttpNameValueHeaderValue>",
          "IsGet": true
        },
        {
          "Name": "Scheme",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Token",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Parse",
          "IsStatic": true,
          "ReturnType": "HttpCredentialsHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParse",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "credentialsHeaderValue",
              "Type": "HttpCredentialsHeaderValue&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpCredentialsHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Date",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true
        },
        {
          "Name": "Delta",
          "Type": "Nullable<TimeSpan>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Parse",
          "IsStatic": true,
          "ReturnType": "HttpDateOrDeltaHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParse",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "dateOrDeltaHeaderValue",
              "Type": "HttpDateOrDeltaHeaderValue&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Parameters",
          "Type": "IList<HttpNameValueHeaderValue>",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Parse",
          "IsStatic": true,
          "ReturnType": "HttpExpectationHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParse",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "expectationHeaderValue",
              "Type": "HttpExpectationHeaderValue&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpExpectationHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HttpExpectationHeaderValue>",
        "IEnumerable",
        "IEnumerable<HttpExpectationHeaderValue>",
        "IList<HttpExpectationHeaderValue>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ParseAdd",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParseAdd",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "scheme",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "scheme",
              "Type": "String"
            },
            {
              "Name": "token",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Parameters",
          "Type": "IList<HttpNameValueHeaderValue>",
          "IsGet": true
        },
        {
          "Name": "Scheme",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Token",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Parse",
          "IsStatic": true,
          "ReturnType": "HttpChallengeHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParse",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "challengeHeaderValue",
              "Type": "HttpChallengeHeaderValue&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpChallengeHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HttpChallengeHeaderValue>",
        "IEnumerable",
        "IEnumerable<HttpChallengeHeaderValue>",
        "IList<HttpChallengeHeaderValue>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ParseAdd",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParseAdd",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<Language>",
        "IEnumerable",
        "IEnumerable<Language>",
        "IList<Language>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ParseAdd",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParseAdd",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "languageRange",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "languageRange",
              "Type": "String"
            },
            {
              "Name": "quality",
              "Type": "Double"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "LanguageRange",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Quality",
          "Type": "Nullable<Double>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Parse",
          "IsStatic": true,
          "ReturnType": "HttpLanguageRangeWithQualityHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParse",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "languageRangeWithQualityHeaderValue",
              "Type": "HttpLanguageRangeWithQualityHeaderValue&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HttpLanguageRangeWithQualityHeaderValue>",
        "IEnumerable",
        "IEnumerable<HttpLanguageRangeWithQualityHeaderValue>",
        "IList<HttpLanguageRangeWithQualityHeaderValue>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ParseAdd",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParseAdd",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "mediaType",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "CharSet",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MediaType",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Parameters",
          "Type": "IList<HttpNameValueHeaderValue>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Parse",
          "IsStatic": true,
          "ReturnType": "HttpMediaTypeHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParse",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "mediaTypeHeaderValue",
              "Type": "HttpMediaTypeHeaderValue&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpMediaTypeHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "mediaType",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "mediaType",
              "Type": "String"
            },
            {
              "Name": "quality",
              "Type": "Double"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "CharSet",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MediaType",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Parameters",
          "Type": "IList<HttpNameValueHeaderValue>",
          "IsGet": true
        },
        {
          "Name": "Quality",
          "Type": "Nullable<Double>",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Parse",
          "IsStatic": true,
          "ReturnType": "HttpMediaTypeWithQualityHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParse",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "mediaTypeWithQualityHeaderValue",
              "Type": "HttpMediaTypeWithQualityHeaderValue&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HttpMediaTypeWithQualityHeaderValue>",
        "IEnumerable",
        "IEnumerable<HttpMediaTypeWithQualityHeaderValue>",
        "IList<HttpMediaTypeWithQualityHeaderValue>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ParseAdd",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParseAdd",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HttpMethod>",
        "IEnumerable",
        "IEnumerable<HttpMethod>",
        "IList<HttpMethod>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ParseAdd",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParseAdd",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpMethodHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Parse",
          "IsStatic": true,
          "ReturnType": "HttpNameValueHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParse",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "nameValueHeaderValue",
              "Type": "HttpNameValueHeaderValue&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpNameValueHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "productName",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "productName",
              "Type": "String"
            },
            {
              "Name": "productVersion",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Version",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Parse",
          "IsStatic": true,
          "ReturnType": "HttpProductHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParse",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "productHeaderValue",
              "Type": "HttpProductHeaderValue&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpProductHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "productComment",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "productName",
              "Type": "String"
            },
            {
              "Name": "productVersion",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Comment",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Product",
          "Type": "HttpProductHeaderValue",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Parse",
          "IsStatic": true,
          "ReturnType": "HttpProductInfoHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParse",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "productInfoHeaderValue",
              "Type": "HttpProductInfoHeaderValue&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpProductInfoHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HttpProductInfoHeaderValue>",
        "IEnumerable",
        "IEnumerable<HttpProductInfoHeaderValue>",
        "IList<HttpProductInfoHeaderValue>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ParseAdd",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParseAdd",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,String>>",
        "IDictionary<String,String>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,String>>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Accept",
          "Type": "HttpMediaTypeWithQualityHeaderValueCollection",
          "IsGet": true
        },
        {
          "Name": "AcceptEncoding",
          "Type": "HttpContentCodingWithQualityHeaderValueCollection",
          "IsGet": true
        },
        {
          "Name": "AcceptLanguage",
          "Type": "HttpLanguageRangeWithQualityHeaderValueCollection",
          "IsGet": true
        },
        {
          "Name": "Authorization",
          "Type": "HttpCredentialsHeaderValue",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CacheControl",
          "Type": "HttpCacheDirectiveHeaderValueCollection",
          "IsGet": true
        },
        {
          "Name": "Connection",
          "Type": "HttpConnectionOptionHeaderValueCollection",
          "IsGet": true
        },
        {
          "Name": "Cookie",
          "Type": "HttpCookiePairHeaderValueCollection",
          "IsGet": true
        },
        {
          "Name": "Date",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Expect",
          "Type": "HttpExpectationHeaderValueCollection",
          "IsGet": true
        },
        {
          "Name": "From",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Host",
          "Type": "HostName",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IfModifiedSince",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IfUnmodifiedSince",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaxForwards",
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProxyAuthorization",
          "Type": "HttpCredentialsHeaderValue",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Referer",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "TransferEncoding",
          "Type": "HttpTransferCodingHeaderValueCollection",
          "IsGet": true
        },
        {
          "Name": "UserAgent",
          "Type": "HttpProductInfoHeaderValueCollection",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Append",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryAppendWithoutValidation",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpRequestHeaderCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,String>>",
        "IDictionary<String,String>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,String>>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Age",
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Allow",
          "Type": "HttpMethodHeaderValueCollection",
          "IsGet": true
        },
        {
          "Name": "CacheControl",
          "Type": "HttpCacheDirectiveHeaderValueCollection",
          "IsGet": true
        },
        {
          "Name": "Connection",
          "Type": "HttpConnectionOptionHeaderValueCollection",
          "IsGet": true
        },
        {
          "Name": "Date",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Location",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProxyAuthenticate",
          "Type": "HttpChallengeHeaderValueCollection",
          "IsGet": true
        },
        {
          "Name": "RetryAfter",
          "Type": "HttpDateOrDeltaHeaderValue",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "TransferEncoding",
          "Type": "HttpTransferCodingHeaderValueCollection",
          "IsGet": true
        },
        {
          "Name": "WwwAuthenticate",
          "Type": "HttpChallengeHeaderValueCollection",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Append",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryAppendWithoutValidation",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpResponseHeaderCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Parameters",
          "Type": "IList<HttpNameValueHeaderValue>",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Parse",
          "IsStatic": true,
          "ReturnType": "HttpTransferCodingHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParse",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "transferCodingHeaderValue",
              "Type": "HttpTransferCodingHeaderValue&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpTransferCodingHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HttpTransferCodingHeaderValue>",
        "IEnumerable",
        "IEnumerable<HttpTransferCodingHeaderValue>",
        "IList<HttpTransferCodingHeaderValue>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ParseAdd",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryParseAdd",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IHttpContent",
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "IBuffer"
            },
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Headers",
          "Type": "HttpContentHeaderCollection",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "BufferAllAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "ReadAsBufferAsync",
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt64>"
        },
        {
          "Name": "ReadAsInputStreamAsync",
          "ReturnType": "IAsyncOperationWithProgress<IInputStream,UInt64>"
        },
        {
          "Name": "ReadAsStringAsync",
          "ReturnType": "IAsyncOperationWithProgress<String,UInt64>"
        },
        {
          "Name": "TryComputeLength",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "length",
              "Type": "UInt64&",
              "Out": true
            }
          ]
        },
        {
          "Name": "WriteToStreamAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Parameters": [
            {
              "Name": "outputStream",
              "Type": "IOutputStream"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.HttpBufferContent"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IStringable"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "filter",
              "Type": "IHttpFilter"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "DefaultRequestHeaders",
          "Type": "HttpRequestHeaderCollection",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "DeleteAsync",
          "ReturnType": "IAsyncOperationWithProgress<HttpResponseMessage,HttpProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "GetAsync",
          "ReturnType": "IAsyncOperationWithProgress<HttpResponseMessage,HttpProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "GetAsync",
          "ReturnType": "IAsyncOperationWithProgress<HttpResponseMessage,HttpProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "completionOption",
              "Type": "HttpCompletionOption"
            }
          ]
        },
        {
          "Name": "GetBufferAsync",
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,HttpProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "GetInputStreamAsync",
          "ReturnType": "IAsyncOperationWithProgress<IInputStream,HttpProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "GetStringAsync",
          "ReturnType": "IAsyncOperationWithProgress<String,HttpProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "PostAsync",
          "ReturnType": "IAsyncOperationWithProgress<HttpResponseMessage,HttpProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "content",
              "Type": "IHttpContent"
            }
          ]
        },
        {
          "Name": "PutAsync",
          "ReturnType": "IAsyncOperationWithProgress<HttpResponseMessage,HttpProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "content",
              "Type": "IHttpContent"
            }
          ]
        },
        {
          "Name": "SendRequestAsync",
          "ReturnType": "IAsyncOperationWithProgress<HttpResponseMessage,HttpProgress>",
          "Parameters": [
            {
              "Name": "request",
              "Type": "HttpRequestMessage"
            }
          ]
        },
        {
          "Name": "SendRequestAsync",
          "ReturnType": "IAsyncOperationWithProgress<HttpResponseMessage,HttpProgress>",
          "Parameters": [
            {
              "Name": "request",
              "Type": "HttpRequestMessage"
            },
            {
              "Name": "completionOption",
              "Type": "HttpCompletionOption"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.HttpClient"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "domain",
              "Type": "String"
            },
            {
              "Name": "path",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Domain",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Expires",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HttpOnly",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Path",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Secure",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Value",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Web.Http.HttpCookie"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<HttpCookie>",
        "IReadOnlyCollection<HttpCookie>",
        "IReadOnlyList<HttpCookie>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Web.Http.HttpCookieCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "DeleteCookie",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "cookie",
              "Type": "HttpCookie"
            }
          ]
        },
        {
          "Name": "GetCookies",
          "ReturnType": "HttpCookieCollection",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "SetCookie",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "cookie",
              "Type": "HttpCookie"
            }
          ]
        },
        {
          "Name": "SetCookie",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "cookie",
              "Type": "HttpCookie"
            },
            {
              "Name": "thirdParty",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.HttpCookieManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IHttpContent",
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "IEnumerable<KeyValuePair<String,String>>"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Headers",
          "Type": "HttpContentHeaderCollection",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "BufferAllAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "ReadAsBufferAsync",
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt64>"
        },
        {
          "Name": "ReadAsInputStreamAsync",
          "ReturnType": "IAsyncOperationWithProgress<IInputStream,UInt64>"
        },
        {
          "Name": "ReadAsStringAsync",
          "ReturnType": "IAsyncOperationWithProgress<String,UInt64>"
        },
        {
          "Name": "TryComputeLength",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "length",
              "Type": "UInt64&",
              "Out": true
            }
          ]
        },
        {
          "Name": "WriteToStreamAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Parameters": [
            {
              "Name": "outputStream",
              "Type": "IOutputStream"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.HttpFormUrlEncodedContent"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "method",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Delete",
          "Type": "HttpMethod",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Get",
          "Type": "HttpMethod",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Head",
          "Type": "HttpMethod",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Method",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Options",
          "Type": "HttpMethod",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Patch",
          "Type": "HttpMethod",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Post",
          "Type": "HttpMethod",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Put",
          "Type": "HttpMethod",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Web.Http.HttpMethod"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IEnumerable",
        "IEnumerable<IHttpContent>",
        "IHttpContent",
        "IStringable"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "subtype",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "subtype",
              "Type": "String"
            },
            {
              "Name": "boundary",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Headers",
          "Type": "HttpContentHeaderCollection",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Add",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "content",
              "Type": "IHttpContent"
            }
          ]
        },
        {
          "Name": "BufferAllAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "ReadAsBufferAsync",
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt64>"
        },
        {
          "Name": "ReadAsInputStreamAsync",
          "ReturnType": "IAsyncOperationWithProgress<IInputStream,UInt64>"
        },
        {
          "Name": "ReadAsStringAsync",
          "ReturnType": "IAsyncOperationWithProgress<String,UInt64>"
        },
        {
          "Name": "TryComputeLength",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "length",
              "Type": "UInt64&",
              "Out": true
            }
          ]
        },
        {
          "Name": "WriteToStreamAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Parameters": [
            {
              "Name": "outputStream",
              "Type": "IOutputStream"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.HttpMultipartContent"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IEnumerable",
        "IEnumerable<IHttpContent>",
        "IHttpContent",
        "IStringable"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "boundary",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Headers",
          "Type": "HttpContentHeaderCollection",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Add",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "content",
              "Type": "IHttpContent"
            }
          ]
        },
        {
          "Name": "Add",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "content",
              "Type": "IHttpContent"
            },
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "Add",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "content",
              "Type": "IHttpContent"
            },
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "fileName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "BufferAllAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "ReadAsBufferAsync",
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt64>"
        },
        {
          "Name": "ReadAsInputStreamAsync",
          "ReturnType": "IAsyncOperationWithProgress<IInputStream,UInt64>"
        },
        {
          "Name": "ReadAsStringAsync",
          "ReturnType": "IAsyncOperationWithProgress<String,UInt64>"
        },
        {
          "Name": "TryComputeLength",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "length",
              "Type": "UInt64&",
              "Out": true
            }
          ]
        },
        {
          "Name": "WriteToStreamAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Parameters": [
            {
              "Name": "outputStream",
              "Type": "IOutputStream"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.HttpMultipartFormDataContent"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IStringable"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "method",
              "Type": "HttpMethod"
            },
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Content",
          "Type": "IHttpContent",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Headers",
          "Type": "HttpRequestHeaderCollection",
          "IsGet": true
        },
        {
          "Name": "Method",
          "Type": "HttpMethod",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Properties",
          "Type": "IDictionary<String,Object>",
          "IsGet": true
        },
        {
          "Name": "RequestUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TransportInformation",
          "Type": "HttpTransportInformation",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.HttpRequestMessage"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IStringable"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "statusCode",
              "Type": "HttpStatusCode"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Content",
          "Type": "IHttpContent",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Headers",
          "Type": "HttpResponseHeaderCollection",
          "IsGet": true
        },
        {
          "Name": "IsSuccessStatusCode",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "ReasonPhrase",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RequestMessage",
          "Type": "HttpRequestMessage",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Source",
          "Type": "HttpResponseMessageSource",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StatusCode",
          "Type": "HttpStatusCode",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Version",
          "Type": "HttpVersion",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "EnsureSuccessStatusCode",
          "ReturnType": "HttpResponseMessage"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.HttpResponseMessage"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IHttpContent",
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "IInputStream"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Headers",
          "Type": "HttpContentHeaderCollection",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "BufferAllAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "ReadAsBufferAsync",
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt64>"
        },
        {
          "Name": "ReadAsInputStreamAsync",
          "ReturnType": "IAsyncOperationWithProgress<IInputStream,UInt64>"
        },
        {
          "Name": "ReadAsStringAsync",
          "ReturnType": "IAsyncOperationWithProgress<String,UInt64>"
        },
        {
          "Name": "TryComputeLength",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "length",
              "Type": "UInt64&",
              "Out": true
            }
          ]
        },
        {
          "Name": "WriteToStreamAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Parameters": [
            {
              "Name": "outputStream",
              "Type": "IOutputStream"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.HttpStreamContent"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IHttpContent",
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "String"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "String"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            },
            {
              "Name": "mediaType",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Headers",
          "Type": "HttpContentHeaderCollection",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "BufferAllAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "ReadAsBufferAsync",
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt64>"
        },
        {
          "Name": "ReadAsInputStreamAsync",
          "ReturnType": "IAsyncOperationWithProgress<IInputStream,UInt64>"
        },
        {
          "Name": "ReadAsStringAsync",
          "ReturnType": "IAsyncOperationWithProgress<String,UInt64>"
        },
        {
          "Name": "TryComputeLength",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "length",
              "Type": "UInt64&",
              "Out": true
            }
          ]
        },
        {
          "Name": "WriteToStreamAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Parameters": [
            {
              "Name": "outputStream",
              "Type": "IOutputStream"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.HttpStringContent"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ServerCertificate",
          "Type": "Certificate",
          "IsGet": true
        },
        {
          "Name": "ServerCertificateErrors",
          "Type": "IReadOnlyList<ChainValidationResult>",
          "IsGet": true
        },
        {
          "Name": "ServerCertificateErrorSeverity",
          "Type": "SocketSslErrorSeverity",
          "IsGet": true
        },
        {
          "Name": "ServerIntermediateCertificates",
          "Type": "IReadOnlyList<Certificate>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Web.Http.HttpTransportInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "attributeName",
              "Type": "String"
            },
            {
              "Name": "attributeNamespace",
              "Type": "String"
            },
            {
              "Name": "attributeValue",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Namespace",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Value",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Web.Syndication.SyndicationAttribute"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationNode"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "term",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "term",
              "Type": "String"
            },
            {
              "Name": "scheme",
              "Type": "String"
            },
            {
              "Name": "label",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "AttributeExtensions",
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true
        },
        {
          "Name": "BaseUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ElementExtensions",
          "Type": "IList<ISyndicationNode>",
          "IsGet": true
        },
        {
          "Name": "Label",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeNamespace",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeValue",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Scheme",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Term",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetXmlDocument",
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.SyndicationCategory"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationClient"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "serverCredential",
              "Type": "PasswordCredential"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "BypassCacheOnRetrieve",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaxResponseBufferSize",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProxyCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ServerCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Timeout",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "RetrieveFeedAsync",
          "ReturnType": "IAsyncOperationWithProgress<SyndicationFeed,RetrievalProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "SetRequestHeader",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.SyndicationClient"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationNode",
        "ISyndicationText"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "SyndicationTextType"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "sourceUri",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "AttributeExtensions",
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true
        },
        {
          "Name": "BaseUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ElementExtensions",
          "Type": "IList<ISyndicationNode>",
          "IsGet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeNamespace",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeValue",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SourceUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Text",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Type",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Xml",
          "Type": "XmlDocument",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetXmlDocument",
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.SyndicationContent"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetStatus",
          "IsStatic": true,
          "ReturnType": "SyndicationErrorStatus",
          "Parameters": [
            {
              "Name": "hresult",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.SyndicationError"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationNode"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "title",
              "Type": "String"
            },
            {
              "Name": "subtitle",
              "Type": "String"
            },
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "AttributeExtensions",
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true
        },
        {
          "Name": "Authors",
          "Type": "IList<SyndicationPerson>",
          "IsGet": true
        },
        {
          "Name": "BaseUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Categories",
          "Type": "IList<SyndicationCategory>",
          "IsGet": true
        },
        {
          "Name": "Contributors",
          "Type": "IList<SyndicationPerson>",
          "IsGet": true
        },
        {
          "Name": "ElementExtensions",
          "Type": "IList<ISyndicationNode>",
          "IsGet": true
        },
        {
          "Name": "FirstUri",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "Generator",
          "Type": "SyndicationGenerator",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IconUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ImageUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Items",
          "Type": "IList<SyndicationItem>",
          "IsGet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LastUpdatedTime",
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LastUri",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "Links",
          "Type": "IList<SyndicationLink>",
          "IsGet": true
        },
        {
          "Name": "NextUri",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeNamespace",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeValue",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PreviousUri",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "Rights",
          "Type": "ISyndicationText",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SourceFormat",
          "Type": "SyndicationFormat",
          "IsGet": true
        },
        {
          "Name": "Subtitle",
          "Type": "ISyndicationText",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Title",
          "Type": "ISyndicationText",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetXmlDocument",
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ]
        },
        {
          "Name": "Load",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "feed",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "LoadFromXml",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "feedDocument",
              "Type": "XmlDocument"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.SyndicationFeed"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationNode"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "AttributeExtensions",
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true
        },
        {
          "Name": "BaseUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ElementExtensions",
          "Type": "IList<ISyndicationNode>",
          "IsGet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeNamespace",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeValue",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Text",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Uri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Version",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetXmlDocument",
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.SyndicationGenerator"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationNode"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "title",
              "Type": "String"
            },
            {
              "Name": "content",
              "Type": "SyndicationContent"
            },
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "AttributeExtensions",
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true
        },
        {
          "Name": "Authors",
          "Type": "IList<SyndicationPerson>",
          "IsGet": true
        },
        {
          "Name": "BaseUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Categories",
          "Type": "IList<SyndicationCategory>",
          "IsGet": true
        },
        {
          "Name": "CommentsUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Content",
          "Type": "SyndicationContent",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Contributors",
          "Type": "IList<SyndicationPerson>",
          "IsGet": true
        },
        {
          "Name": "EditMediaUri",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "EditUri",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "ElementExtensions",
          "Type": "IList<ISyndicationNode>",
          "IsGet": true
        },
        {
          "Name": "ETag",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ItemUri",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LastUpdatedTime",
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Links",
          "Type": "IList<SyndicationLink>",
          "IsGet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeNamespace",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeValue",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PublishedDate",
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Rights",
          "Type": "ISyndicationText",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Source",
          "Type": "SyndicationFeed",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Summary",
          "Type": "ISyndicationText",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Title",
          "Type": "ISyndicationText",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetXmlDocument",
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ]
        },
        {
          "Name": "Load",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "item",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "LoadFromXml",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "itemDocument",
              "Type": "XmlDocument"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.SyndicationItem"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationNode"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "relationship",
              "Type": "String"
            },
            {
              "Name": "title",
              "Type": "String"
            },
            {
              "Name": "mediaType",
              "Type": "String"
            },
            {
              "Name": "length",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "AttributeExtensions",
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true
        },
        {
          "Name": "BaseUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ElementExtensions",
          "Type": "IList<ISyndicationNode>",
          "IsGet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Length",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MediaType",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeNamespace",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeValue",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Relationship",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ResourceLanguage",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Uri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetXmlDocument",
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.SyndicationLink"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationNode"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "nodeName",
              "Type": "String"
            },
            {
              "Name": "nodeNamespace",
              "Type": "String"
            },
            {
              "Name": "nodeValue",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "AttributeExtensions",
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true
        },
        {
          "Name": "BaseUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ElementExtensions",
          "Type": "IList<ISyndicationNode>",
          "IsGet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeNamespace",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeValue",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetXmlDocument",
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.SyndicationNode"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationNode"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "email",
              "Type": "String"
            },
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "AttributeExtensions",
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true
        },
        {
          "Name": "BaseUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ElementExtensions",
          "Type": "IList<ISyndicationNode>",
          "IsGet": true
        },
        {
          "Name": "Email",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeNamespace",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeValue",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Uri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetXmlDocument",
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.SyndicationPerson"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationNode",
        "ISyndicationText"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "SyndicationTextType"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "AttributeExtensions",
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true
        },
        {
          "Name": "BaseUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ElementExtensions",
          "Type": "IList<ISyndicationNode>",
          "IsGet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeNamespace",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeValue",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Text",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Type",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Xml",
          "Type": "XmlDocument",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetXmlDocument",
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.SyndicationText"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetStatus",
          "IsStatic": true,
          "ReturnType": "WebErrorStatus",
          "Parameters": [
            {
              "Name": "hresult",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.WebError"
    }
  ],
  "Structs": [
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "Build",
          "Type": "UInt16"
        },
        {
          "Name": "Major",
          "Type": "UInt16"
        },
        {
          "Name": "Minor",
          "Type": "UInt16"
        },
        {
          "Name": "Revision",
          "Type": "UInt16"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.PackageVersion"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "Length",
          "Type": "UInt32"
        },
        {
          "Name": "StartPosition",
          "Type": "UInt32"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Data.Text.TextSegment"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "Altitude",
          "Type": "Double"
        },
        {
          "Name": "Latitude",
          "Type": "Double"
        },
        {
          "Name": "Longitude",
          "Type": "Double"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.BasicGeoposition"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "X",
          "Type": "Int32"
        },
        {
          "Name": "Y",
          "Type": "Int32"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Input.MouseDelta"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "MaxLogical",
          "Type": "Int32"
        },
        {
          "Name": "MaxPhysical",
          "Type": "Int32"
        },
        {
          "Name": "MinLogical",
          "Type": "Int32"
        },
        {
          "Name": "MinPhysical",
          "Type": "Int32"
        },
        {
          "Name": "PhysicalMultiplier",
          "Type": "Single"
        },
        {
          "Name": "Unit",
          "Type": "UInt32"
        },
        {
          "Name": "Usage",
          "Type": "UInt32"
        },
        {
          "Name": "UsagePage",
          "Type": "UInt32"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Input.PointerDeviceUsage"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "Height",
          "Type": "UInt32"
        },
        {
          "Name": "Width",
          "Type": "UInt32"
        },
        {
          "Name": "X",
          "Type": "UInt32"
        },
        {
          "Name": "Y",
          "Type": "UInt32"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.BitmapBounds"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "percentage",
          "Type": "UInt32"
        },
        {
          "Name": "state",
          "Type": "DeploymentProgressState"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Management.Deployment.DeploymentProgress"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "BytesReceived",
          "Type": "UInt64"
        },
        {
          "Name": "HasResponseChanged",
          "Type": "Boolean"
        },
        {
          "Name": "HasRestarted",
          "Type": "Boolean"
        },
        {
          "Name": "Status",
          "Type": "BackgroundTransferStatus"
        },
        {
          "Name": "TotalBytesToReceive",
          "Type": "UInt64"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundDownloadProgress"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "BytesReceived",
          "Type": "UInt64"
        },
        {
          "Name": "BytesSent",
          "Type": "UInt64"
        },
        {
          "Name": "HasResponseChanged",
          "Type": "Boolean"
        },
        {
          "Name": "HasRestarted",
          "Type": "Boolean"
        },
        {
          "Name": "Status",
          "Type": "BackgroundTransferStatus"
        },
        {
          "Name": "TotalBytesToReceive",
          "Type": "UInt64"
        },
        {
          "Name": "TotalBytesToSend",
          "Type": "UInt64"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundUploadProgress"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "Roaming",
          "Type": "TriStates"
        },
        {
          "Name": "Shared",
          "Type": "TriStates"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.NetworkUsageStates"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "LastSyncTime",
          "Type": "DateTimeOffset"
        },
        {
          "Name": "UsageInMegabytes",
          "Type": "UInt32"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.ProfileUsage"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "InboundBandwidthPeaked",
          "Type": "Boolean"
        },
        {
          "Name": "InboundBitsPerSecond",
          "Type": "UInt64"
        },
        {
          "Name": "InboundBitsPerSecondInstability",
          "Type": "UInt64"
        },
        {
          "Name": "OutboundBandwidthPeaked",
          "Type": "Boolean"
        },
        {
          "Name": "OutboundBitsPerSecond",
          "Type": "UInt64"
        },
        {
          "Name": "OutboundBitsPerSecondInstability",
          "Type": "UInt64"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.BandwidthStatistics"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "Max",
          "Type": "UInt32"
        },
        {
          "Name": "Min",
          "Type": "UInt32"
        },
        {
          "Name": "Sum",
          "Type": "UInt32"
        },
        {
          "Name": "Variance",
          "Type": "UInt32"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.RoundTripTimeStatistics"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "Height",
          "Type": "UInt32"
        },
        {
          "Name": "Width",
          "Type": "UInt32"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.ImageResolution"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "Metadata",
          "Type": "String"
        },
        {
          "Name": "Token",
          "Type": "String"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.AccessCache.AccessListEntry"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "AscendingOrder",
          "Type": "Boolean"
        },
        {
          "Name": "PropertyName",
          "Type": "String"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Search.SortEntry"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "IsExtendedKey",
          "Type": "Boolean"
        },
        {
          "Name": "IsKeyReleased",
          "Type": "Boolean"
        },
        {
          "Name": "IsMenuKeyDown",
          "Type": "Boolean"
        },
        {
          "Name": "RepeatCount",
          "Type": "UInt32"
        },
        {
          "Name": "ScanCode",
          "Type": "UInt32"
        },
        {
          "Name": "WasKeyDown",
          "Type": "Boolean"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.CorePhysicalKeyStatus"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "AdjustedPoint",
          "Type": "Point"
        },
        {
          "Name": "Score",
          "Type": "Int32"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.CoreProximityEvaluation"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "RearrangeStart",
          "Type": "Single"
        },
        {
          "Name": "SelectionStart",
          "Type": "Single"
        },
        {
          "Name": "SpeedBumpEnd",
          "Type": "Single"
        },
        {
          "Name": "SpeedBumpStart",
          "Type": "Single"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.CrossSlideThresholds"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "Expansion",
          "Type": "Single"
        },
        {
          "Name": "Rotation",
          "Type": "Single"
        },
        {
          "Name": "Scale",
          "Type": "Single"
        },
        {
          "Name": "Translation",
          "Type": "Point"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.ManipulationDelta"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "Angular",
          "Type": "Single"
        },
        {
          "Name": "Expansion",
          "Type": "Single"
        },
        {
          "Name": "Linear",
          "Type": "Point"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.ManipulationVelocities"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "Weight",
          "Type": "UInt16"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Text.FontWeight"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "Max",
          "Type": "Double"
        },
        {
          "Name": "Min",
          "Type": "Double"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapZoomLevelRange"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "Count",
          "Type": "UInt32"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.LoadMoreItemsResult"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "InputStreamIndex",
          "Type": "UInt32"
        },
        {
          "Name": "LineNumber",
          "Type": "UInt32"
        },
        {
          "Name": "LinePosition",
          "Type": "UInt32"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Markup.XamlBinaryWriterErrorInformation"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "Namespace",
          "Type": "String"
        },
        {
          "Name": "XmlNamespace",
          "Type": "String"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Markup.XmlnsDefinition"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "BytesReceived",
          "Type": "UInt64"
        },
        {
          "Name": "BytesSent",
          "Type": "UInt64"
        },
        {
          "Name": "Retries",
          "Type": "UInt32"
        },
        {
          "Name": "Stage",
          "Type": "HttpProgressStage"
        },
        {
          "Name": "TotalBytesToReceive",
          "Type": "Nullable<UInt64>"
        },
        {
          "Name": "TotalBytesToSend",
          "Type": "Nullable<UInt64>"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Web.Http.HttpProgress"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "BytesRetrieved",
          "Type": "UInt32"
        },
        {
          "Name": "TotalBytesToRetrieve",
          "Type": "UInt32"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Web.Syndication.RetrievalProgress"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "BytesRetrieved",
          "Type": "UInt32"
        },
        {
          "Name": "BytesSent",
          "Type": "UInt32"
        },
        {
          "Name": "TotalBytesToRetrieve",
          "Type": "UInt32"
        },
        {
          "Name": "TotalBytesToSend",
          "Type": "UInt32"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Web.Syndication.TransferProgress"
    }
  ],
  "Interfaces": [
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Kind",
          "Type": "ActivationKind",
          "IsGet": true
        },
        {
          "Name": "PreviousExecutionState",
          "Type": "ApplicationExecutionState",
          "IsGet": true
        },
        {
          "Name": "SplashScreen",
          "Type": "SplashScreen",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Name": "Verb",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IAppointmentsProviderActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs",
        "IAppointmentsProviderActivatedEventArgs"
      ],
      "Properties": [
        {
          "Name": "InstanceStartDate",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true
        },
        {
          "Name": "LocalId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "RoamingId",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Name": "CachedFileUpdaterUI",
          "Type": "CachedFileUpdaterUI",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.ICachedFileUpdaterActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Name": "ContinuationData",
          "Type": "ValueSet",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IContinuationActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Name": "Files",
          "Type": "IReadOnlyList<IStorageItem>",
          "IsGet": true
        },
        {
          "Name": "Verb",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IFileActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Name": "FileOpenPickerUI",
          "Type": "FileOpenPickerUI",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IFileOpenPickerActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs",
        "IContinuationActivatedEventArgs"
      ],
      "Properties": [
        {
          "Name": "Files",
          "Type": "IReadOnlyList<StorageFile>",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IFileOpenPickerContinuationEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Name": "FileSavePickerUI",
          "Type": "FileSavePickerUI",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IFileSavePickerActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs",
        "IContinuationActivatedEventArgs"
      ],
      "Properties": [
        {
          "Name": "File",
          "Type": "StorageFile",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IFileSavePickerContinuationEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs",
        "IContinuationActivatedEventArgs"
      ],
      "Properties": [
        {
          "Name": "Folder",
          "Type": "StorageFolder",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IFolderPickerContinuationEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Name": "Arguments",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "TileId",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Name": "PickerOperationId",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IPickerReturnedActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Name": "Uri",
          "Type": "Uri",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IProtocolActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "QueryText",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.ISearchActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Name": "ShareOperation",
          "Type": "ShareOperation",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IShareTargetActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Name": "Result",
          "Type": "SpeechRecognitionResult",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IVoiceCommandActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Name": "ActionId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ActionKind",
          "Type": "WalletActionKind",
          "IsGet": true
        },
        {
          "Name": "ItemId",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IWalletActionActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs",
        "IContinuationActivatedEventArgs"
      ],
      "Properties": [
        {
          "Name": "WebAuthenticationResult",
          "Type": "WebAuthenticationResult",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IWebAuthenticationBrokerContinuationEventArgs"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Address",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.IAppointmentParticipant"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.IBackgroundCondition"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "Run",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "taskInstance",
              "Type": "IBackgroundTaskInstance"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.IBackgroundTask"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "InstanceId",
          "Type": "Guid",
          "IsGet": true
        },
        {
          "Name": "Progress",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SuspendedCount",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Task",
          "Type": "BackgroundTaskRegistration",
          "IsGet": true
        },
        {
          "Name": "TriggerDetails",
          "Type": "Object",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetDeferral",
          "ReturnType": "BackgroundTaskDeferral"
        }
      ],
      "Events": [
        {
          "Name": "Canceled",
          "Type": "BackgroundTaskCanceledEventHandler"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.IBackgroundTaskInstance"
    },
    {
      "Interfaces": [
        "IBackgroundTaskInstance"
      ],
      "Properties": [],
      "Methods": [
        {
          "Name": "GetThrottleCount",
          "ReturnType": "UInt32",
          "Parameters": [
            {
              "Name": "counter",
              "Type": "BackgroundTaskThrottleCounter"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.IBackgroundTaskInstance2"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "TaskId",
          "Type": "Guid",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "Unregister",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "cancelTask",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "Completed",
          "Type": "BackgroundTaskCompletedEventHandler"
        },
        {
          "Name": "Progress",
          "Type": "BackgroundTaskProgressEventHandler"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.IBackgroundTaskRegistration"
    },
    {
      "Interfaces": [
        "IBackgroundTaskRegistration"
      ],
      "Properties": [
        {
          "Name": "Trigger",
          "Type": "IBackgroundTrigger",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.IBackgroundTaskRegistration2"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.IBackgroundTrigger"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Category",
          "Type": "ContactFieldCategory",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "ContactFieldType",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.IContactField"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "CreateField",
          "ReturnType": "ContactField",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            }
          ]
        },
        {
          "Name": "CreateField",
          "ReturnType": "ContactField",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ]
        },
        {
          "Name": "CreateField",
          "ReturnType": "ContactField",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.IContactFieldFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "CreateInstantMessage",
          "ReturnType": "ContactInstantMessageField",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateInstantMessage",
          "ReturnType": "ContactInstantMessageField",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ]
        },
        {
          "Name": "CreateInstantMessage",
          "ReturnType": "ContactInstantMessageField",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            },
            {
              "Name": "service",
              "Type": "String"
            },
            {
              "Name": "displayText",
              "Type": "String"
            },
            {
              "Name": "verb",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.IContactInstantMessageFieldFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "CreateLocation",
          "ReturnType": "ContactLocationField",
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateLocation",
          "ReturnType": "ContactLocationField",
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ]
        },
        {
          "Name": "CreateLocation",
          "ReturnType": "ContactLocationField",
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            },
            {
              "Name": "street",
              "Type": "String"
            },
            {
              "Name": "city",
              "Type": "String"
            },
            {
              "Name": "region",
              "Type": "String"
            },
            {
              "Name": "country",
              "Type": "String"
            },
            {
              "Name": "postalCode",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.IContactLocationFieldFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [],
      "Events": [
        {
          "Name": "UnhandledErrorDetected",
          "Type": "EventHandler<UnhandledErrorDetectedEventArgs>"
        }
      ],
      "Name": "Windows.ApplicationModel.Core.ICoreApplicationUnhandledError"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "Initialize",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "applicationView",
              "Type": "CoreApplicationView"
            }
          ]
        },
        {
          "Name": "Load",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "entryPoint",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "Run",
          "ReturnType": "Void"
        },
        {
          "Name": "SetWindow",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "window",
              "Type": "CoreWindow"
            }
          ]
        },
        {
          "Name": "Uninitialize",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Core.IFrameworkView"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "CreateView",
          "ReturnType": "IFrameworkView"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Core.IFrameworkViewSource"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "Complete",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.ISuspendingDeferral"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "SuspendingOperation",
          "Type": "SuspendingOperation",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.ISuspendingEventArgs"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Deadline",
          "Type": "DateTimeOffset",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetDeferral",
          "ReturnType": "SuspendingDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.ISuspendingOperation"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "ValueType",
          "Type": "JsonValueType",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetArray",
          "ReturnType": "JsonArray"
        },
        {
          "Name": "GetBoolean",
          "ReturnType": "Boolean"
        },
        {
          "Name": "GetNumber",
          "ReturnType": "Double"
        },
        {
          "Name": "GetObject",
          "ReturnType": "JsonObject"
        },
        {
          "Name": "GetString",
          "ReturnType": "String"
        },
        {
          "Name": "Stringify",
          "ReturnType": "String"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Json.IJsonValue"
    },
    {
      "Interfaces": [
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Properties": [
        {
          "Name": "Data",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Length",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "AppendData",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "data",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "DeleteData",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "InsertData",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "data",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ReplaceData",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "data",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SubstringData",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.IXmlCharacterData"
    },
    {
      "Interfaces": [
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Properties": [
        {
          "Name": "Attributes",
          "Type": "XmlNamedNodeMap",
          "IsGet": true
        },
        {
          "Name": "FirstChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "ChildNodes",
          "Type": "XmlNodeList",
          "IsGet": true
        },
        {
          "Name": "LastChild",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "LocalName",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "NamespaceUri",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "NextSibling",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "NodeType",
          "Type": "NodeType",
          "IsGet": true
        },
        {
          "Name": "NodeValue",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OwnerDocument",
          "Type": "XmlDocument",
          "IsGet": true
        },
        {
          "Name": "ParentNode",
          "Type": "IXmlNode",
          "IsGet": true
        },
        {
          "Name": "Prefix",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PreviousSibling",
          "Type": "IXmlNode",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "AppendChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "CloneNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "HasChildNodes",
          "ReturnType": "Boolean"
        },
        {
          "Name": "InsertBefore",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "Normalize",
          "ReturnType": "Void"
        },
        {
          "Name": "RemoveChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ]
        },
        {
          "Name": "ReplaceChild",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.IXmlNode"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "SelectNodes",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectNodesNS",
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SelectSingleNode",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SelectSingleNodeNS",
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.IXmlNodeSelector"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "InnerText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetXml",
          "ReturnType": "String"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.IXmlNodeSerializer"
    },
    {
      "Interfaces": [
        "IXmlCharacterData",
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Properties": [],
      "Methods": [
        {
          "Name": "SplitText",
          "ReturnType": "IXmlText",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.IXmlText"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "AltitudeReferenceSystem",
          "Type": "AltitudeReferenceSystem",
          "IsGet": true
        },
        {
          "Name": "GeoshapeType",
          "Type": "GeoshapeType",
          "IsGet": true
        },
        {
          "Name": "SpatialReferenceId",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.IGeoshape"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Current",
          "Type": "T",
          "IsGet": true
        },
        {
          "Name": "HasCurrent",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetMany",
          "ReturnType": "UInt32",
          "Parameters": [
            {
              "Name": "items",
              "Type": "T[]",
              "Out": true
            }
          ]
        },
        {
          "Name": "MoveNext",
          "ReturnType": "Boolean"
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.Collections.IIterator<T>"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "CollectionChange",
          "Type": "CollectionChange",
          "IsGet": true
        },
        {
          "Name": "Key",
          "Type": "K",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Collections.IMapChangedEventArgs<K>"
    },
    {
      "Interfaces": [
        "ICollection<KeyValuePair<K,V>>",
        "IDictionary<K,V>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<K,V>>"
      ],
      "Properties": [],
      "Methods": [],
      "Events": [
        {
          "Name": "MapChanged",
          "Type": "MapChangedEventHandler<K,V>"
        }
      ],
      "Name": "Windows.Foundation.Collections.IObservableMap<K,V>"
    },
    {
      "Interfaces": [
        "ICollection<T>",
        "IEnumerable",
        "IEnumerable<T>",
        "IList<T>"
      ],
      "Properties": [],
      "Methods": [],
      "Events": [
        {
          "Name": "VectorChanged",
          "Type": "VectorChangedEventHandler<T>"
        }
      ],
      "Name": "Windows.Foundation.Collections.IObservableVector<T>"
    },
    {
      "Interfaces": [
        "ICollection<KeyValuePair<String,Object>>",
        "IDictionary<String,Object>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,Object>>",
        "IObservableMap<String,Object>"
      ],
      "Properties": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Collections.IPropertySet"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "CollectionChange",
          "Type": "CollectionChange",
          "IsGet": true
        },
        {
          "Name": "Index",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Collections.IVectorChangedEventArgs"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "GetErrorOptions",
          "ReturnType": "ErrorOptions"
        },
        {
          "Name": "SetErrorOptions",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "ErrorOptions"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.Diagnostics.IErrorReportingSettings"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "AddLoggingChannel",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            }
          ]
        },
        {
          "Name": "AddLoggingChannel",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            },
            {
              "Name": "maxLevel",
              "Type": "LoggingLevel"
            }
          ]
        },
        {
          "Name": "CloseAndSaveToFileAsync",
          "ReturnType": "IAsyncOperation<StorageFile>"
        },
        {
          "Name": "RemoveLoggingChannel",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "LogFileGenerated",
          "Type": "TypedEventHandler<IFileLoggingSession,LogFileGeneratedEventArgs>"
        }
      ],
      "Name": "Windows.Foundation.Diagnostics.IFileLoggingSession"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [
        {
          "Name": "Enabled",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Level",
          "Type": "LoggingLevel",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "LogMessage",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "eventString",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "LogMessage",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "eventString",
              "Type": "String"
            },
            {
              "Name": "level",
              "Type": "LoggingLevel"
            }
          ]
        },
        {
          "Name": "LogValuePair",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value1",
              "Type": "String"
            },
            {
              "Name": "value2",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "LogValuePair",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value1",
              "Type": "String"
            },
            {
              "Name": "value2",
              "Type": "Int32"
            },
            {
              "Name": "level",
              "Type": "LoggingLevel"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "LoggingEnabled",
          "Type": "TypedEventHandler<ILoggingChannel,Object>"
        }
      ],
      "Name": "Windows.Foundation.Diagnostics.ILoggingChannel"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "AddLoggingChannel",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            }
          ]
        },
        {
          "Name": "AddLoggingChannel",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            },
            {
              "Name": "maxLevel",
              "Type": "LoggingLevel"
            }
          ]
        },
        {
          "Name": "RemoveLoggingChannel",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            }
          ]
        },
        {
          "Name": "SaveToFileAsync",
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "folder",
              "Type": "IStorageFolder"
            },
            {
              "Name": "fileName",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.Diagnostics.ILoggingSession"
    },
    {
      "Interfaces": [
        "IAsyncInfo"
      ],
      "Properties": [
        {
          "Name": "Completed",
          "Type": "AsyncActionCompletedHandler",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetResults",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.IAsyncAction"
    },
    {
      "Interfaces": [
        "IAsyncInfo"
      ],
      "Properties": [
        {
          "Name": "Completed",
          "Type": "AsyncActionWithProgressCompletedHandler<TProgress>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Progress",
          "Type": "AsyncActionProgressHandler<TProgress>",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetResults",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.IAsyncActionWithProgress<TProgress>"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "ErrorCode",
          "Type": "Exception",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "AsyncStatus",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "Cancel",
          "ReturnType": "Void"
        },
        {
          "Name": "Close",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.IAsyncInfo"
    },
    {
      "Interfaces": [
        "IAsyncInfo"
      ],
      "Properties": [
        {
          "Name": "Completed",
          "Type": "AsyncOperationCompletedHandler<TResult>",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetResults",
          "ReturnType": "TResult"
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.IAsyncOperation<TResult>"
    },
    {
      "Interfaces": [
        "IAsyncInfo"
      ],
      "Properties": [
        {
          "Name": "Completed",
          "Type": "AsyncOperationWithProgressCompletedHandler<TResult,TProgress>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Progress",
          "Type": "AsyncOperationProgressHandler<TResult,TProgress>",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetResults",
          "ReturnType": "TResult"
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.IAsyncOperationWithProgress<TResult,TProgress>"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "GetActivationFactory",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.IGetActivationFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.IStringable"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.IWwwFormUrlDecoderEntry"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "Format",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ]
        },
        {
          "Name": "Format",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "Format",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.INumberFormatter"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "FormatDouble",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "FormatInt",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ]
        },
        {
          "Name": "FormatUInt",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.INumberFormatter2"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "FractionDigits",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GeographicRegion",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "IntegerDigits",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsDecimalPointAlwaysDisplayed",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsGrouped",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Languages",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        },
        {
          "Name": "NumeralSystem",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ResolvedGeographicRegion",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ResolvedLanguage",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.INumberFormatterOptions"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "ParseDouble",
          "ReturnType": "Nullable<Double>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ParseInt",
          "ReturnType": "Nullable<Int64>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ParseUInt",
          "ReturnType": "Nullable<UInt64>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.INumberParser"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "RoundDouble",
          "ReturnType": "Double",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "RoundInt32",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "RoundInt64",
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ]
        },
        {
          "Name": "RoundSingle",
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Single"
            }
          ]
        },
        {
          "Name": "RoundUInt32",
          "ReturnType": "UInt32",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "RoundUInt64",
          "ReturnType": "UInt64",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.INumberRounder"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "NumberRounder",
          "Type": "INumberRounder",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.INumberRounderOption"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "IsZeroSigned",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.ISignedZeroOption"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "SignificantDigits",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.ISignificantDigitsOption"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "BitmapAlphaMode",
          "Type": "BitmapAlphaMode",
          "IsGet": true
        },
        {
          "Name": "BitmapPixelFormat",
          "Type": "BitmapPixelFormat",
          "IsGet": true
        },
        {
          "Name": "BitmapProperties",
          "Type": "BitmapPropertiesView",
          "IsGet": true
        },
        {
          "Name": "DpiX",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "DpiY",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "OrientedPixelHeight",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "OrientedPixelWidth",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "PixelHeight",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "PixelWidth",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetPixelDataAsync",
          "ReturnType": "IAsyncOperation<PixelDataProvider>"
        },
        {
          "Name": "GetPixelDataAsync",
          "ReturnType": "IAsyncOperation<PixelDataProvider>",
          "Parameters": [
            {
              "Name": "pixelFormat",
              "Type": "BitmapPixelFormat"
            },
            {
              "Name": "alphaMode",
              "Type": "BitmapAlphaMode"
            },
            {
              "Name": "transform",
              "Type": "BitmapTransform"
            },
            {
              "Name": "exifOrientationMode",
              "Type": "ExifOrientationMode"
            },
            {
              "Name": "colorManagementMode",
              "Type": "ColorManagementMode"
            }
          ]
        },
        {
          "Name": "GetThumbnailAsync",
          "ReturnType": "IAsyncOperation<ImageStream>"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.IBitmapFrame"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "GetPropertiesAsync",
          "ReturnType": "IAsyncOperation<BitmapPropertySet>",
          "Parameters": [
            {
              "Name": "propertiesToRetrieve",
              "Type": "IEnumerable<String>"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.IBitmapPropertiesView"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.IMediaSource"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "IsSelected",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.IMediaStreamDescriptor"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Role",
          "Type": "AudioDeviceRole",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.IDefaultAudioDeviceChangedEventArgs"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "GetAvailableMediaStreamProperties",
          "ReturnType": "IReadOnlyList<IMediaEncodingProperties>",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            }
          ]
        },
        {
          "Name": "GetMediaStreamProperties",
          "ReturnType": "IMediaEncodingProperties",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            }
          ]
        },
        {
          "Name": "SetMediaStreamPropertiesAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            },
            {
              "Name": "mediaEncodingProperties",
              "Type": "IMediaEncodingProperties"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.IMediaDeviceController"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "ActivatableClassId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Properties",
          "Type": "IPropertySet",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Effects.IAudioEffectDefinition"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "ActivatableClassId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Properties",
          "Type": "IPropertySet",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Effects.IVideoEffectDefinition"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "SetProperties",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "configuration",
              "Type": "IPropertySet"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Media.IMediaExtension"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "MediaMarkerType",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Text",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Time",
          "Type": "TimeSpan",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.IMediaMarker"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Markers",
          "Type": "IReadOnlyList<IMediaMarker>",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.IMediaMarkers"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Properties",
          "Type": "MediaPropertySet",
          "IsGet": true
        },
        {
          "Name": "Subtype",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Type",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.MediaProperties.IMediaEncodingProperties"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "ProtectionSystem",
          "Type": "Guid",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "Guid",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Protection.IMediaProtectionServiceRequest"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "IsEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Probability",
          "Type": "SpeechRecognitionConstraintProbability",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Tag",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Type",
          "Type": "SpeechRecognitionConstraintType",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.ISpeechRecognitionConstraint"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "CostPolicy",
          "Type": "BackgroundTransferCostPolicy",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Group",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Method",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProxyCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ServerCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [
        {
          "Name": "SetRequestHeader",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.IBackgroundTransferBase"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "CreateWithName",
          "ReturnType": "BackgroundTransferContentPart",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateWithNameAndFileName",
          "ReturnType": "BackgroundTransferContentPart",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "fileName",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.IBackgroundTransferContentPartFactory"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "CostPolicy",
          "Type": "BackgroundTransferCostPolicy",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Group",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Guid",
          "Type": "Guid",
          "IsGet": true
        },
        {
          "Name": "Method",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "RequestedUri",
          "Type": "Uri",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetResponseInformation",
          "ReturnType": "ResponseInformation"
        },
        {
          "Name": "GetResultStreamAt",
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.IBackgroundTransferOperation"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Priority",
          "Type": "BackgroundTransferPriority",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.IBackgroundTransferOperationPriority"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "ControlChannelTrigger",
          "Type": "ControlChannelTrigger",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.IControlChannelTriggerEventDetails"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "HardwareSlotReset",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "ResetReason",
          "Type": "ControlChannelTriggerResetReason",
          "IsGet": true
        },
        {
          "Name": "SoftwareSlotReset",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.IControlChannelTriggerResetEventDetails"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [
        {
          "Name": "OutputStream",
          "Type": "IOutputStream",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "Close",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "code",
              "Type": "UInt16"
            },
            {
              "Name": "reason",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ConnectAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "SetRequestHeader",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "Closed",
          "Type": "TypedEventHandler<IWebSocket,WebSocketClosedEventArgs>"
        }
      ],
      "Name": "Windows.Networking.Sockets.IWebSocket"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "OutboundBufferSizeInBytes",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProxyCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ServerCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SupportedProtocols",
          "Type": "IList<String>",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.IWebSocketControl"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "BandwidthStatistics",
          "Type": "BandwidthStatistics",
          "IsGet": true
        },
        {
          "Name": "LocalAddress",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "Protocol",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.IWebSocketInformation"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Bordered",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Compulsory",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Label",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnCustomPrompt"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "ProcessEventAsync",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "thirdPartyPlugIn",
              "Type": "Object"
            },
            {
              "Name": "event",
              "Type": "Object"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnChannelStatics"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "CreateVpnInterfaceId",
          "ReturnType": "VpnInterfaceId",
          "Parameters": [
            {
              "Name": "address",
              "Type": "Byte[]"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnInterfaceIdFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "CreateVpnNamespaceInfo",
          "ReturnType": "VpnNamespaceInfo",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "dnsServerList",
              "Type": "IList<HostName>"
            },
            {
              "Name": "proxyServerList",
              "Type": "IList<HostName>"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnNamespaceInfoFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "CreateVpnPacketBuffer",
          "ReturnType": "VpnPacketBuffer",
          "Parameters": [
            {
              "Name": "parentBuffer",
              "Type": "VpnPacketBuffer"
            },
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "length",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnPacketBufferFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "Connect",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "channel",
              "Type": "VpnChannel"
            }
          ]
        },
        {
          "Name": "Decapsulate",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "channel",
              "Type": "VpnChannel"
            },
            {
              "Name": "encapBuffer",
              "Type": "VpnPacketBuffer"
            },
            {
              "Name": "decapsulatedPackets",
              "Type": "VpnPacketBufferList"
            },
            {
              "Name": "controlPacketsToSend",
              "Type": "VpnPacketBufferList"
            }
          ]
        },
        {
          "Name": "Disconnect",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "channel",
              "Type": "VpnChannel"
            }
          ]
        },
        {
          "Name": "Encapsulate",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "channel",
              "Type": "VpnChannel"
            },
            {
              "Name": "packets",
              "Type": "VpnPacketBufferList"
            },
            {
              "Name": "encapulatedPackets",
              "Type": "VpnPacketBufferList"
            }
          ]
        },
        {
          "Name": "GetKeepAlivePayload",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "channel",
              "Type": "VpnChannel"
            },
            {
              "Name": "keepAlivePacket",
              "Type": "VpnPacketBuffer&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnPlugIn"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "CreateVpnRoute",
          "ReturnType": "VpnRoute",
          "Parameters": [
            {
              "Name": "address",
              "Type": "HostName"
            },
            {
              "Name": "prefixSize",
              "Type": "Byte"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnRouteFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Graphics.Interop.IDrawingSurfaceBackgroundContentProvider"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Graphics.Interop.IDrawingSurfaceContentProvider"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "SetManipulationHost",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "manipulationHost",
              "Type": "DrawingSurfaceManipulationHost"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Input.Interop.IDrawingSurfaceManipulationHandler"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [
        {
          "Name": "CaptureResolution",
          "Type": "Size",
          "IsGet": true
        },
        {
          "Name": "FocusRegion",
          "Type": "Nullable<Rect>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PreviewResolution",
          "Type": "Size",
          "IsGet": true
        },
        {
          "Name": "SensorLocation",
          "Type": "CameraSensorLocation",
          "IsGet": true
        },
        {
          "Name": "SensorRotationInDegrees",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "FocusAsync",
          "ReturnType": "IAsyncOperation<CameraFocusStatus>"
        },
        {
          "Name": "GetPreviewBufferArgb",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pixels",
              "Type": "Int32[]",
              "Out": true
            }
          ]
        },
        {
          "Name": "GetPreviewBufferY",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pixels",
              "Type": "Byte[]",
              "Out": true
            }
          ]
        },
        {
          "Name": "GetPreviewBufferYCbCr",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pixels",
              "Type": "Byte[]",
              "Out": true
            }
          ]
        },
        {
          "Name": "GetProperty",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "propertyId",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "ResetFocusAsync",
          "ReturnType": "IAsyncOperation<CameraFocusStatus>"
        },
        {
          "Name": "SetCaptureResolutionAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Size"
            }
          ]
        },
        {
          "Name": "SetPreviewResolutionAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Size"
            }
          ]
        },
        {
          "Name": "SetProperty",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "propertyId",
              "Type": "Guid"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "PreviewFrameAvailable",
          "Type": "TypedEventHandler<ICameraCaptureDevice,Object>"
        },
        {
          "Name": "VendorSpecificDataAvailable",
          "Type": "TypedEventHandler<ICameraCaptureDevice,VendorSpecificDataEventArgs>"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.ICameraCaptureDevice"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "ConnectionPort",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Media.Capture.IMediaCapturePreviewSink"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Id",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "VoipOperationType",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Networking.Voip.IVoipOperation"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisplayPicture",
          "Type": "IRandomAccessStreamReference",
          "IsGet": true
        },
        {
          "Name": "FamilyName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "GivenName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HonorificPrefix",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HonorificSuffix",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetDisplayPictureAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStream>"
        },
        {
          "Name": "GetPropertiesAsync",
          "ReturnType": "IAsyncOperation<IDictionary<String,Object>>"
        },
        {
          "Name": "SetDisplayPictureAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IInputStream"
            }
          ]
        },
        {
          "Name": "ToVcardAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStream>"
        },
        {
          "Name": "ToVcardAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Parameters": [
            {
              "Name": "format",
              "Type": "VCardFormat"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.IContactInformation"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "DisplayPictureDate",
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.IContactInformation2"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Author",
          "Type": "Actor",
          "IsGet": true
        },
        {
          "Name": "DefaultTarget",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PrimaryContent",
          "Type": "FeedContent",
          "IsGet": true
        },
        {
          "Name": "SecondaryContent",
          "Type": "FeedContent",
          "IsGet": true
        },
        {
          "Name": "SharedStory",
          "Type": "FeedItemSharedStory",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Thumbnails",
          "Type": "IList<FeedMediaThumbnail>",
          "IsGet": true
        },
        {
          "Name": "Timestamp",
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.IFeedItemBase"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Id",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "SocialOperationType",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "NotifyCompletion",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "success",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "NotifyCompletion",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.ISocialOperation"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Type",
          "Type": "SocialOperationType",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetOperationAsync",
          "ReturnType": "IAsyncOperation<ISocialOperation>"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.ISocialOperationFactory"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "CreationTime",
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "RemoteId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.OnlineMedia.IOnlineMediaItem"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Entries",
          "Type": "AccessListEntryView",
          "IsGet": true
        },
        {
          "Name": "MaximumItemsAllowed",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "Add",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageItem"
            }
          ]
        },
        {
          "Name": "Add",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageItem"
            },
            {
              "Name": "metadata",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "AddOrReplace",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "file",
              "Type": "IStorageItem"
            }
          ]
        },
        {
          "Name": "AddOrReplace",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "file",
              "Type": "IStorageItem"
            },
            {
              "Name": "metadata",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "Clear",
          "ReturnType": "Void"
        },
        {
          "Name": "ContainsItem",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetFileAsync",
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetFileAsync",
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "AccessCacheOptions"
            }
          ]
        },
        {
          "Name": "GetFolderAsync",
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetFolderAsync",
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "AccessCacheOptions"
            }
          ]
        },
        {
          "Name": "GetItemAsync",
          "ReturnType": "IAsyncOperation<IStorageItem>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetItemAsync",
          "ReturnType": "IAsyncOperation<IStorageItem>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "AccessCacheOptions"
            }
          ]
        },
        {
          "Name": "CheckAccess",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageItem"
            }
          ]
        },
        {
          "Name": "Remove",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.AccessCache.IStorageItemAccessList"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "RetrievePropertiesAsync",
          "ReturnType": "IAsyncOperation<IDictionary<String,Object>>",
          "Parameters": [
            {
              "Name": "propertiesToRetrieve",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "SavePropertiesAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "propertiesToSave",
              "Type": "IEnumerable<KeyValuePair<String,Object>>"
            }
          ]
        },
        {
          "Name": "SavePropertiesAsync",
          "ReturnType": "IAsyncAction"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.FileProperties.IStorageItemExtraProperties"
    },
    {
      "Interfaces": [
        "IInputStreamReference",
        "IRandomAccessStreamReference",
        "IStorageItem"
      ],
      "Properties": [
        {
          "Name": "ContentType",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "FileType",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "CopyAndReplaceAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "fileToReplace",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "CopyAsync",
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "IStorageFolder"
            }
          ]
        },
        {
          "Name": "CopyAsync",
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "IStorageFolder"
            },
            {
              "Name": "desiredNewName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CopyAsync",
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "IStorageFolder"
            },
            {
              "Name": "desiredNewName",
              "Type": "String"
            },
            {
              "Name": "option",
              "Type": "NameCollisionOption"
            }
          ]
        },
        {
          "Name": "MoveAndReplaceAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "fileToReplace",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "MoveAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "IStorageFolder"
            }
          ]
        },
        {
          "Name": "MoveAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "IStorageFolder"
            },
            {
              "Name": "desiredNewName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "MoveAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "IStorageFolder"
            },
            {
              "Name": "desiredNewName",
              "Type": "String"
            },
            {
              "Name": "option",
              "Type": "NameCollisionOption"
            }
          ]
        },
        {
          "Name": "OpenAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Parameters": [
            {
              "Name": "accessMode",
              "Type": "FileAccessMode"
            }
          ]
        },
        {
          "Name": "OpenTransactedWriteAsync",
          "ReturnType": "IAsyncOperation<StorageStreamTransaction>"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.IStorageFile"
    },
    {
      "Interfaces": [
        "IStorageItem"
      ],
      "Properties": [],
      "Methods": [
        {
          "Name": "CreateFileAsync",
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateFileAsync",
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "CreationCollisionOption"
            }
          ]
        },
        {
          "Name": "CreateFolderAsync",
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateFolderAsync",
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "CreationCollisionOption"
            }
          ]
        },
        {
          "Name": "GetFileAsync",
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetFilesAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFile>>"
        },
        {
          "Name": "GetFolderAsync",
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetFoldersAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFolder>>"
        },
        {
          "Name": "GetItemAsync",
          "ReturnType": "IAsyncOperation<IStorageItem>",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetItemsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<IStorageItem>>"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.IStorageFolder"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Attributes",
          "Type": "FileAttributes",
          "IsGet": true
        },
        {
          "Name": "DateCreated",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Path",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "DeleteAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "DeleteAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "option",
              "Type": "StorageDeleteOption"
            }
          ]
        },
        {
          "Name": "GetBasicPropertiesAsync",
          "ReturnType": "IAsyncOperation<BasicProperties>"
        },
        {
          "Name": "IsOfType",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "type",
              "Type": "StorageItemTypes"
            }
          ]
        },
        {
          "Name": "RenameAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "RenameAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            },
            {
              "Name": "option",
              "Type": "NameCollisionOption"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.IStorageItem"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DisplayType",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "FolderRelativeId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Properties",
          "Type": "StorageItemContentProperties",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetThumbnailAsync",
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            }
          ]
        },
        {
          "Name": "GetThumbnailAsync",
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetThumbnailAsync",
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "ThumbnailOptions"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.IStorageItemProperties"
    },
    {
      "Interfaces": [
        "IStorageItemProperties"
      ],
      "Properties": [],
      "Methods": [
        {
          "Name": "GetScaledImageAsThumbnailAsync",
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            }
          ]
        },
        {
          "Name": "GetScaledImageAsThumbnailAsync",
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetScaledImageAsThumbnailAsync",
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "ThumbnailOptions"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.IStorageItemProperties2"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "FailAndClose",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "failureMode",
              "Type": "StreamedFileFailureMode"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.IStreamedFileDataRequest"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "AreQueryOptionsSupported",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "queryOptions",
              "Type": "QueryOptions"
            }
          ]
        },
        {
          "Name": "CreateFileQuery",
          "ReturnType": "StorageFileQueryResult"
        },
        {
          "Name": "CreateFileQuery",
          "ReturnType": "StorageFileQueryResult",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFileQuery"
            }
          ]
        },
        {
          "Name": "CreateFileQueryWithOptions",
          "ReturnType": "StorageFileQueryResult",
          "Parameters": [
            {
              "Name": "queryOptions",
              "Type": "QueryOptions"
            }
          ]
        },
        {
          "Name": "CreateFolderQuery",
          "ReturnType": "StorageFolderQueryResult"
        },
        {
          "Name": "CreateFolderQuery",
          "ReturnType": "StorageFolderQueryResult",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFolderQuery"
            }
          ]
        },
        {
          "Name": "CreateFolderQueryWithOptions",
          "ReturnType": "StorageFolderQueryResult",
          "Parameters": [
            {
              "Name": "queryOptions",
              "Type": "QueryOptions"
            }
          ]
        },
        {
          "Name": "CreateItemQuery",
          "ReturnType": "StorageItemQueryResult"
        },
        {
          "Name": "CreateItemQueryWithOptions",
          "ReturnType": "StorageItemQueryResult",
          "Parameters": [
            {
              "Name": "queryOptions",
              "Type": "QueryOptions"
            }
          ]
        },
        {
          "Name": "GetFilesAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFile>>",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFileQuery"
            },
            {
              "Name": "startIndex",
              "Type": "UInt32"
            },
            {
              "Name": "maxItemsToRetrieve",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetFilesAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFile>>",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFileQuery"
            }
          ]
        },
        {
          "Name": "GetFoldersAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFolder>>",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFolderQuery"
            },
            {
              "Name": "startIndex",
              "Type": "UInt32"
            },
            {
              "Name": "maxItemsToRetrieve",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetFoldersAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFolder>>",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFolderQuery"
            }
          ]
        },
        {
          "Name": "GetIndexedStateAsync",
          "ReturnType": "IAsyncOperation<IndexedState>"
        },
        {
          "Name": "GetItemsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<IStorageItem>>",
          "Parameters": [
            {
              "Name": "startIndex",
              "Type": "UInt32"
            },
            {
              "Name": "maxItemsToRetrieve",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "IsCommonFileQuerySupported",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFileQuery"
            }
          ]
        },
        {
          "Name": "IsCommonFolderQuerySupported",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFolderQuery"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Search.IStorageFolderQueryOperations"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Folder",
          "Type": "StorageFolder",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "ApplyNewQueryOptions",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "newQueryOptions",
              "Type": "QueryOptions"
            }
          ]
        },
        {
          "Name": "FindStartIndexAsync",
          "ReturnType": "IAsyncOperation<UInt32>",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "GetCurrentQueryOptions",
          "ReturnType": "QueryOptions"
        },
        {
          "Name": "GetItemCountAsync",
          "ReturnType": "IAsyncOperation<UInt32>"
        }
      ],
      "Events": [
        {
          "Name": "ContentsChanged",
          "Type": "TypedEventHandler<IStorageQueryResultBase,Object>"
        },
        {
          "Name": "OptionsChanged",
          "Type": "TypedEventHandler<IStorageQueryResultBase,Object>"
        }
      ],
      "Name": "Windows.Storage.Search.IStorageQueryResultBase"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Capacity",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Length",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Streams.IBuffer"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "ContentType",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Streams.IContentTypeProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "ByteOrder",
          "Type": "ByteOrder",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "InputStreamOptions",
          "Type": "InputStreamOptions",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UnconsumedBufferLength",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "UnicodeEncoding",
          "Type": "UnicodeEncoding",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [
        {
          "Name": "DetachBuffer",
          "ReturnType": "IBuffer"
        },
        {
          "Name": "DetachStream",
          "ReturnType": "IInputStream"
        },
        {
          "Name": "LoadAsync",
          "ReturnType": "DataReaderLoadOperation",
          "Parameters": [
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "ReadBoolean",
          "ReturnType": "Boolean"
        },
        {
          "Name": "ReadBuffer",
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "length",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "ReadByte",
          "ReturnType": "Byte"
        },
        {
          "Name": "ReadBytes",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]",
              "Out": true
            }
          ]
        },
        {
          "Name": "ReadDateTime",
          "ReturnType": "DateTimeOffset"
        },
        {
          "Name": "ReadDouble",
          "ReturnType": "Double"
        },
        {
          "Name": "ReadGuid",
          "ReturnType": "Guid"
        },
        {
          "Name": "ReadInt16",
          "ReturnType": "Int16"
        },
        {
          "Name": "ReadInt32",
          "ReturnType": "Int32"
        },
        {
          "Name": "ReadInt64",
          "ReturnType": "Int64"
        },
        {
          "Name": "ReadSingle",
          "ReturnType": "Single"
        },
        {
          "Name": "ReadString",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "codeUnitCount",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "ReadTimeSpan",
          "ReturnType": "TimeSpan"
        },
        {
          "Name": "ReadUInt16",
          "ReturnType": "UInt16"
        },
        {
          "Name": "ReadUInt32",
          "ReturnType": "UInt32"
        },
        {
          "Name": "ReadUInt64",
          "ReturnType": "UInt64"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.IDataReader"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "ByteOrder",
          "Type": "ByteOrder",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UnicodeEncoding",
          "Type": "UnicodeEncoding",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UnstoredBufferLength",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "DetachBuffer",
          "ReturnType": "IBuffer"
        },
        {
          "Name": "DetachStream",
          "ReturnType": "IOutputStream"
        },
        {
          "Name": "FlushAsync",
          "ReturnType": "IAsyncOperation<Boolean>"
        },
        {
          "Name": "MeasureString",
          "ReturnType": "UInt32",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "StoreAsync",
          "ReturnType": "DataWriterStoreOperation"
        },
        {
          "Name": "WriteBoolean",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "WriteBuffer",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "WriteBuffer",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "start",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "WriteByte",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte"
            }
          ]
        },
        {
          "Name": "WriteBytes",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]"
            }
          ]
        },
        {
          "Name": "WriteDateTime",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "DateTimeOffset"
            }
          ]
        },
        {
          "Name": "WriteDouble",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "WriteGuid",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "WriteInt16",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int16"
            }
          ]
        },
        {
          "Name": "WriteInt32",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "WriteInt64",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ]
        },
        {
          "Name": "WriteSingle",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Single"
            }
          ]
        },
        {
          "Name": "WriteString",
          "ReturnType": "UInt32",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "WriteTimeSpan",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "TimeSpan"
            }
          ]
        },
        {
          "Name": "WriteUInt16",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt16"
            }
          ]
        },
        {
          "Name": "WriteUInt32",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "WriteUInt64",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.IDataWriter"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [],
      "Methods": [
        {
          "Name": "ReadAsync",
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "InputStreamOptions"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.IInputStream"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "OpenSequentialReadAsync",
          "ReturnType": "IAsyncOperation<IInputStream>"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.IInputStreamReference"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [],
      "Methods": [
        {
          "Name": "FlushAsync",
          "ReturnType": "IAsyncOperation<Boolean>"
        },
        {
          "Name": "WriteAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.IOutputStream"
    },
    {
      "Interfaces": [
        "IDisposable",
        "IInputStream",
        "IOutputStream"
      ],
      "Properties": [
        {
          "Name": "CanRead",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "CanWrite",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Position",
          "Type": "UInt64",
          "IsGet": true
        },
        {
          "Name": "Size",
          "Type": "UInt64",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [
        {
          "Name": "CloneStream",
          "ReturnType": "IRandomAccessStream"
        },
        {
          "Name": "GetInputStreamAt",
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "GetOutputStreamAt",
          "ReturnType": "IOutputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "Seek",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.IRandomAccessStream"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "OpenReadAsync",
          "ReturnType": "IAsyncOperation<IRandomAccessStreamWithContentType>"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.IRandomAccessStreamReference"
    },
    {
      "Interfaces": [
        "IContentTypeProvider",
        "IDisposable",
        "IInputStream",
        "IOutputStream",
        "IRandomAccessStream"
      ],
      "Properties": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Streams.IRandomAccessStreamWithContentType"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [],
      "Events": [
        {
          "Name": "AcceleratorKeyActivated",
          "Type": "TypedEventHandler<CoreDispatcher,AcceleratorKeyEventArgs>"
        }
      ],
      "Name": "Windows.UI.Core.ICoreAcceleratorKeys"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Dispatcher",
          "Type": "CoreDispatcher",
          "IsGet": true
        },
        {
          "Name": "IsInputEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [],
      "Events": [
        {
          "Name": "InputEnabled",
          "Type": "TypedEventHandler<Object,InputEnabledEventArgs>"
        }
      ],
      "Name": "Windows.UI.Core.ICoreInputSourceBase"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "HasCapture",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "PointerCursor",
          "Type": "CoreCursor",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PointerPosition",
          "Type": "Point",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "ReleasePointerCapture",
          "ReturnType": "Void"
        },
        {
          "Name": "SetPointerCapture",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "PointerCaptureLost",
          "Type": "TypedEventHandler<Object,PointerEventArgs>"
        },
        {
          "Name": "PointerEntered",
          "Type": "TypedEventHandler<Object,PointerEventArgs>"
        },
        {
          "Name": "PointerExited",
          "Type": "TypedEventHandler<Object,PointerEventArgs>"
        },
        {
          "Name": "PointerMoved",
          "Type": "TypedEventHandler<Object,PointerEventArgs>"
        },
        {
          "Name": "PointerPressed",
          "Type": "TypedEventHandler<Object,PointerEventArgs>"
        },
        {
          "Name": "PointerReleased",
          "Type": "TypedEventHandler<Object,PointerEventArgs>"
        },
        {
          "Name": "PointerWheelChanged",
          "Type": "TypedEventHandler<Object,PointerEventArgs>"
        }
      ],
      "Name": "Windows.UI.Core.ICorePointerInputSource"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "AutomationHostProvider",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "Bounds",
          "Type": "Rect",
          "IsGet": true
        },
        {
          "Name": "CustomProperties",
          "Type": "IPropertySet",
          "IsGet": true
        },
        {
          "Name": "Dispatcher",
          "Type": "CoreDispatcher",
          "IsGet": true
        },
        {
          "Name": "FlowDirection",
          "Type": "CoreWindowFlowDirection",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsInputEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PointerCursor",
          "Type": "CoreCursor",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PointerPosition",
          "Type": "Point",
          "IsGet": true
        },
        {
          "Name": "Visible",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "Activate",
          "ReturnType": "Void"
        },
        {
          "Name": "Close",
          "ReturnType": "Void"
        },
        {
          "Name": "GetAsyncKeyState",
          "ReturnType": "CoreVirtualKeyStates",
          "Parameters": [
            {
              "Name": "virtualKey",
              "Type": "VirtualKey"
            }
          ]
        },
        {
          "Name": "GetKeyState",
          "ReturnType": "CoreVirtualKeyStates",
          "Parameters": [
            {
              "Name": "virtualKey",
              "Type": "VirtualKey"
            }
          ]
        },
        {
          "Name": "ReleasePointerCapture",
          "ReturnType": "Void"
        },
        {
          "Name": "SetPointerCapture",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "Activated",
          "Type": "TypedEventHandler<CoreWindow,WindowActivatedEventArgs>"
        },
        {
          "Name": "AutomationProviderRequested",
          "Type": "TypedEventHandler<CoreWindow,AutomationProviderRequestedEventArgs>"
        },
        {
          "Name": "Closed",
          "Type": "TypedEventHandler<CoreWindow,CoreWindowEventArgs>"
        },
        {
          "Name": "CharacterReceived",
          "Type": "TypedEventHandler<CoreWindow,CharacterReceivedEventArgs>"
        },
        {
          "Name": "InputEnabled",
          "Type": "TypedEventHandler<CoreWindow,InputEnabledEventArgs>"
        },
        {
          "Name": "KeyDown",
          "Type": "TypedEventHandler<CoreWindow,KeyEventArgs>"
        },
        {
          "Name": "KeyUp",
          "Type": "TypedEventHandler<CoreWindow,KeyEventArgs>"
        },
        {
          "Name": "PointerCaptureLost",
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>"
        },
        {
          "Name": "PointerEntered",
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>"
        },
        {
          "Name": "PointerExited",
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>"
        },
        {
          "Name": "PointerMoved",
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>"
        },
        {
          "Name": "PointerPressed",
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>"
        },
        {
          "Name": "PointerReleased",
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>"
        },
        {
          "Name": "PointerWheelChanged",
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>"
        },
        {
          "Name": "SizeChanged",
          "Type": "TypedEventHandler<CoreWindow,WindowSizeChangedEventArgs>"
        },
        {
          "Name": "TouchHitTesting",
          "Type": "TypedEventHandler<CoreWindow,TouchHitTestingEventArgs>"
        },
        {
          "Name": "VisibilityChanged",
          "Type": "TypedEventHandler<CoreWindow,VisibilityChangedEventArgs>"
        }
      ],
      "Name": "Windows.UI.Core.ICoreWindow"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Handled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.ICoreWindowEventArgs"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "Initialize",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "window",
              "Type": "CoreWindow"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Core.IInitializeWithCoreWindow"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Inverse",
          "Type": "IPointerPointTransform",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "TransformBounds",
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "rect",
              "Type": "Rect"
            }
          ]
        },
        {
          "Name": "TryTransform",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "inPoint",
              "Type": "Point"
            },
            {
              "Name": "outPoint",
              "Type": "Point&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Input.IPointerPointTransform"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Id",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Invoked",
          "Type": "UICommandInvokedHandler",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Label",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Popups.IUICommand"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "CaretType",
          "Type": "CaretType",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DefaultTabStop",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Selection",
          "Type": "ITextSelection",
          "IsGet": true
        },
        {
          "Name": "UndoLimit",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [
        {
          "Name": "ApplyDisplayUpdates",
          "ReturnType": "Int32"
        },
        {
          "Name": "BatchDisplayUpdates",
          "ReturnType": "Int32"
        },
        {
          "Name": "BeginUndoGroup",
          "ReturnType": "Void"
        },
        {
          "Name": "CanCopy",
          "ReturnType": "Boolean"
        },
        {
          "Name": "CanPaste",
          "ReturnType": "Boolean"
        },
        {
          "Name": "CanRedo",
          "ReturnType": "Boolean"
        },
        {
          "Name": "CanUndo",
          "ReturnType": "Boolean"
        },
        {
          "Name": "EndUndoGroup",
          "ReturnType": "Void"
        },
        {
          "Name": "GetDefaultCharacterFormat",
          "ReturnType": "ITextCharacterFormat"
        },
        {
          "Name": "GetDefaultParagraphFormat",
          "ReturnType": "ITextParagraphFormat"
        },
        {
          "Name": "GetRange",
          "ReturnType": "ITextRange",
          "Parameters": [
            {
              "Name": "startPosition",
              "Type": "Int32"
            },
            {
              "Name": "endPosition",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "GetRangeFromPoint",
          "ReturnType": "ITextRange",
          "Parameters": [
            {
              "Name": "point",
              "Type": "Point"
            },
            {
              "Name": "options",
              "Type": "PointOptions"
            }
          ]
        },
        {
          "Name": "GetText",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "options",
              "Type": "TextGetOptions"
            },
            {
              "Name": "value",
              "Type": "String&",
              "Out": true
            }
          ]
        },
        {
          "Name": "LoadFromStream",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "options",
              "Type": "TextSetOptions"
            },
            {
              "Name": "value",
              "Type": "IRandomAccessStream"
            }
          ]
        },
        {
          "Name": "Redo",
          "ReturnType": "Void"
        },
        {
          "Name": "SaveToStream",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "options",
              "Type": "TextGetOptions"
            },
            {
              "Name": "value",
              "Type": "IRandomAccessStream"
            }
          ]
        },
        {
          "Name": "SetDefaultCharacterFormat",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "ITextCharacterFormat"
            }
          ]
        },
        {
          "Name": "SetDefaultParagraphFormat",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "ITextParagraphFormat"
            }
          ]
        },
        {
          "Name": "SetText",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "options",
              "Type": "TextSetOptions"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "Undo",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Text.ITextDocument"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "AllCaps",
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "BackgroundColor",
          "Type": "Color",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Bold",
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontStretch",
          "Type": "FontStretch",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FontStyle",
          "Type": "FontStyle",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ForegroundColor",
          "Type": "Color",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Hidden",
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Italic",
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Kerning",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LanguageTag",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LinkType",
          "Type": "LinkType",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Outline",
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Position",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProtectedText",
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Size",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SmallCaps",
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Spacing",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Strikethrough",
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Subscript",
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Superscript",
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextScript",
          "Type": "TextScript",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Underline",
          "Type": "UnderlineType",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Weight",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetClone",
          "ReturnType": "ITextCharacterFormat"
        },
        {
          "Name": "IsEqual",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "format",
              "Type": "ITextCharacterFormat"
            }
          ]
        },
        {
          "Name": "SetClone",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "ITextCharacterFormat"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Text.ITextCharacterFormat"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Alignment",
          "Type": "ParagraphAlignment",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FirstLineIndent",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "KeepTogether",
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "KeepWithNext",
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LeftIndent",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "LineSpacing",
          "Type": "Single",
          "IsGet": true
        },
        {
          "Name": "LineSpacingRule",
          "Type": "LineSpacingRule",
          "IsGet": true
        },
        {
          "Name": "ListAlignment",
          "Type": "MarkerAlignment",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ListLevelIndex",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ListStart",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ListStyle",
          "Type": "MarkerStyle",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ListTab",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ListType",
          "Type": "MarkerType",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NoLineNumber",
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PageBreakBefore",
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RightIndent",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RightToLeft",
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SpaceAfter",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SpaceBefore",
          "Type": "Single",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Style",
          "Type": "ParagraphStyle",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TabCount",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "WidowControl",
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [
        {
          "Name": "AddTab",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "Single"
            },
            {
              "Name": "align",
              "Type": "TabAlignment"
            },
            {
              "Name": "leader",
              "Type": "TabLeader"
            }
          ]
        },
        {
          "Name": "ClearAllTabs",
          "ReturnType": "Void"
        },
        {
          "Name": "DeleteTab",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "Single"
            }
          ]
        },
        {
          "Name": "GetClone",
          "ReturnType": "ITextParagraphFormat"
        },
        {
          "Name": "GetTab",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "index",
              "Type": "Int32"
            },
            {
              "Name": "position",
              "Type": "Single&",
              "Out": true
            },
            {
              "Name": "align",
              "Type": "TabAlignment&",
              "Out": true
            },
            {
              "Name": "leader",
              "Type": "TabLeader&",
              "Out": true
            }
          ]
        },
        {
          "Name": "IsEqual",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "format",
              "Type": "ITextParagraphFormat"
            }
          ]
        },
        {
          "Name": "SetClone",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "format",
              "Type": "ITextParagraphFormat"
            }
          ]
        },
        {
          "Name": "SetIndents",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "start",
              "Type": "Single"
            },
            {
              "Name": "left",
              "Type": "Single"
            },
            {
              "Name": "right",
              "Type": "Single"
            }
          ]
        },
        {
          "Name": "SetLineSpacing",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "rule",
              "Type": "LineSpacingRule"
            },
            {
              "Name": "spacing",
              "Type": "Single"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Text.ITextParagraphFormat"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "EndPosition",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FormattedText",
          "Type": "ITextRange",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Gravity",
          "Type": "RangeGravity",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Character",
          "Type": "Char",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "CharacterFormat",
          "Type": "ITextCharacterFormat",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Length",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "Link",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ParagraphFormat",
          "Type": "ITextParagraphFormat",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StartPosition",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "StoryLength",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "Text",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [
        {
          "Name": "CanPaste",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "format",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "Collapse",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "Copy",
          "ReturnType": "Void"
        },
        {
          "Name": "Cut",
          "ReturnType": "Void"
        },
        {
          "Name": "Delete",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "count",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "EndOf",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "extend",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "Expand",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            }
          ]
        },
        {
          "Name": "FindText",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "scanLength",
              "Type": "Int32"
            },
            {
              "Name": "options",
              "Type": "FindOptions"
            }
          ]
        },
        {
          "Name": "GetClone",
          "ReturnType": "ITextRange"
        },
        {
          "Name": "GetCharacterUtf32",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt32&",
              "Out": true
            },
            {
              "Name": "offset",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "GetIndex",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            }
          ]
        },
        {
          "Name": "GetPoint",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "horizontalAlign",
              "Type": "HorizontalCharacterAlignment"
            },
            {
              "Name": "verticalAlign",
              "Type": "VerticalCharacterAlignment"
            },
            {
              "Name": "options",
              "Type": "PointOptions"
            },
            {
              "Name": "point",
              "Type": "Point&",
              "Out": true
            }
          ]
        },
        {
          "Name": "GetRect",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "options",
              "Type": "PointOptions"
            },
            {
              "Name": "rect",
              "Type": "Rect&",
              "Out": true
            },
            {
              "Name": "hit",
              "Type": "Int32&",
              "Out": true
            }
          ]
        },
        {
          "Name": "GetText",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "options",
              "Type": "TextGetOptions"
            },
            {
              "Name": "value",
              "Type": "String&",
              "Out": true
            }
          ]
        },
        {
          "Name": "GetTextViaStream",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "options",
              "Type": "TextGetOptions"
            },
            {
              "Name": "value",
              "Type": "IRandomAccessStream"
            }
          ]
        },
        {
          "Name": "ChangeCase",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "LetterCase"
            }
          ]
        },
        {
          "Name": "InRange",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "range",
              "Type": "ITextRange"
            }
          ]
        },
        {
          "Name": "InsertImage",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "width",
              "Type": "Int32"
            },
            {
              "Name": "height",
              "Type": "Int32"
            },
            {
              "Name": "ascent",
              "Type": "Int32"
            },
            {
              "Name": "verticalAlign",
              "Type": "VerticalCharacterAlignment"
            },
            {
              "Name": "alternateText",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "IRandomAccessStream"
            }
          ]
        },
        {
          "Name": "InStory",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "range",
              "Type": "ITextRange"
            }
          ]
        },
        {
          "Name": "IsEqual",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "range",
              "Type": "ITextRange"
            }
          ]
        },
        {
          "Name": "MatchSelection",
          "ReturnType": "Void"
        },
        {
          "Name": "Move",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "count",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "MoveEnd",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "count",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "MoveStart",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "count",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "Paste",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "format",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "ScrollIntoView",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "PointOptions"
            }
          ]
        },
        {
          "Name": "SetIndex",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "index",
              "Type": "Int32"
            },
            {
              "Name": "extend",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetPoint",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "point",
              "Type": "Point"
            },
            {
              "Name": "options",
              "Type": "PointOptions"
            },
            {
              "Name": "extend",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetRange",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "startPosition",
              "Type": "Int32"
            },
            {
              "Name": "endPosition",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "SetText",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "options",
              "Type": "TextSetOptions"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SetTextViaStream",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "options",
              "Type": "TextSetOptions"
            },
            {
              "Name": "value",
              "Type": "IRandomAccessStream"
            }
          ]
        },
        {
          "Name": "StartOf",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "extend",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Text.ITextRange"
    },
    {
      "Interfaces": [
        "ITextRange"
      ],
      "Properties": [
        {
          "Name": "Options",
          "Type": "SelectionOptions",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Type",
          "Type": "SelectionType",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "EndKey",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "extend",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "HomeKey",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "extend",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "MoveDown",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "count",
              "Type": "Int32"
            },
            {
              "Name": "extend",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "MoveLeft",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "count",
              "Type": "Int32"
            },
            {
              "Name": "extend",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "MoveRight",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "count",
              "Type": "Int32"
            },
            {
              "Name": "extend",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "MoveUp",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "count",
              "Type": "Int32"
            },
            {
              "Name": "extend",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "TypeText",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Text.ITextSelection"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.Core.IWebUICommandBarElement"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.Core.IWebUICommandBarIcon"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "ActivatedOperation",
          "Type": "ActivatedOperation",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.IActivatedEventArgsDeferral"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Succeeded",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.IWebUIBackgroundTaskInstance"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "NavigatedOperation",
          "Type": "WebUINavigatedOperation",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.IWebUINavigatedEventArgs"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "AnnotationTypeId",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "AnnotationTypeName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Author",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DateTime",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Target",
          "Type": "IRawElementProviderSimple",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IAnnotationProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "DockPosition",
          "Type": "DockPosition",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "SetDockPosition",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "dockPosition",
              "Type": "DockPosition"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IDockProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "DropEffect",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DropEffects",
          "Type": "String[]",
          "IsGet": true
        },
        {
          "Name": "IsGrabbed",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetGrabbedItems",
          "ReturnType": "IRawElementProviderSimple[]"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IDragProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "DropEffect",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DropEffects",
          "Type": "String[]",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IDropTargetProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "ExpandCollapseState",
          "Type": "ExpandCollapseState",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "Collapse",
          "ReturnType": "Void"
        },
        {
          "Name": "Expand",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Column",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "ColumnSpan",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "ContainingGrid",
          "Type": "IRawElementProviderSimple",
          "IsGet": true
        },
        {
          "Name": "Row",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "RowSpan",
          "Type": "Int32",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IGridItemProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "ColumnCount",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "RowCount",
          "Type": "Int32",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetItem",
          "ReturnType": "IRawElementProviderSimple",
          "Parameters": [
            {
              "Name": "row",
              "Type": "Int32"
            },
            {
              "Name": "column",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IGridProvider"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "Invoke",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IInvokeProvider"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "FindItemByProperty",
          "ReturnType": "IRawElementProviderSimple",
          "Parameters": [
            {
              "Name": "startAfter",
              "Type": "IRawElementProviderSimple"
            },
            {
              "Name": "automationProperty",
              "Type": "AutomationProperty"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IItemContainerProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "CurrentView",
          "Type": "Int32",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetSupportedViews",
          "ReturnType": "Int32[]"
        },
        {
          "Name": "GetViewName",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "viewId",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "SetCurrentView",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "viewId",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IMultipleViewProvider"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "GetUnderlyingObjectModel",
          "ReturnType": "Object"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IObjectModelProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "IsReadOnly",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "LargeChange",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "Maximum",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "Minimum",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "SmallChange",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "Double",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "SetValue",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IRangeValueProvider"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "ScrollIntoView",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IScrollItemProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "HorizontallyScrollable",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "HorizontalScrollPercent",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "HorizontalViewSize",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "VerticallyScrollable",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "VerticalScrollPercent",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "VerticalViewSize",
          "Type": "Double",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "Scroll",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "horizontalAmount",
              "Type": "ScrollAmount"
            },
            {
              "Name": "verticalAmount",
              "Type": "ScrollAmount"
            }
          ]
        },
        {
          "Name": "SetScrollPercent",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "horizontalPercent",
              "Type": "Double"
            },
            {
              "Name": "verticalPercent",
              "Type": "Double"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IScrollProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "IsSelected",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "SelectionContainer",
          "Type": "IRawElementProviderSimple",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "AddToSelection",
          "ReturnType": "Void"
        },
        {
          "Name": "RemoveFromSelection",
          "ReturnType": "Void"
        },
        {
          "Name": "Select",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ISelectionItemProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "CanSelectMultiple",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsSelectionRequired",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetSelection",
          "ReturnType": "IRawElementProviderSimple[]"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ISelectionProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Formula",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetAnnotationObjects",
          "ReturnType": "IRawElementProviderSimple[]"
        },
        {
          "Name": "GetAnnotationTypes",
          "ReturnType": "AnnotationType[]"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ISpreadsheetItemProvider"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "GetItemByName",
          "ReturnType": "IRawElementProviderSimple",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ISpreadsheetProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "ExtendedProperties",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "FillColor",
          "Type": "Color",
          "IsGet": true
        },
        {
          "Name": "FillPatternColor",
          "Type": "Color",
          "IsGet": true
        },
        {
          "Name": "FillPatternStyle",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Shape",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "StyleId",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "StyleName",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IStylesProvider"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "Cancel",
          "ReturnType": "Void"
        },
        {
          "Name": "StartListening",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "inputType",
              "Type": "SynchronizedInputType"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ISynchronizedInputProvider"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "GetColumnHeaderItems",
          "ReturnType": "IRawElementProviderSimple[]"
        },
        {
          "Name": "GetRowHeaderItems",
          "ReturnType": "IRawElementProviderSimple[]"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ITableItemProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "RowOrColumnMajor",
          "Type": "RowOrColumnMajor",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetColumnHeaders",
          "ReturnType": "IRawElementProviderSimple[]"
        },
        {
          "Name": "GetRowHeaders",
          "ReturnType": "IRawElementProviderSimple[]"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ITableProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "TextContainer",
          "Type": "IRawElementProviderSimple",
          "IsGet": true
        },
        {
          "Name": "TextRange",
          "Type": "ITextRangeProvider",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ITextChildProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "DocumentRange",
          "Type": "ITextRangeProvider",
          "IsGet": true
        },
        {
          "Name": "SupportedTextSelection",
          "Type": "SupportedTextSelection",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetSelection",
          "ReturnType": "ITextRangeProvider[]"
        },
        {
          "Name": "GetVisibleRanges",
          "ReturnType": "ITextRangeProvider[]"
        },
        {
          "Name": "RangeFromChild",
          "ReturnType": "ITextRangeProvider",
          "Parameters": [
            {
              "Name": "childElement",
              "Type": "IRawElementProviderSimple"
            }
          ]
        },
        {
          "Name": "RangeFromPoint",
          "ReturnType": "ITextRangeProvider",
          "Parameters": [
            {
              "Name": "screenLocation",
              "Type": "Point"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ITextProvider"
    },
    {
      "Interfaces": [
        "ITextProvider"
      ],
      "Properties": [],
      "Methods": [
        {
          "Name": "GetCaretRange",
          "ReturnType": "ITextRangeProvider",
          "Parameters": [
            {
              "Name": "isActive",
              "Type": "Boolean&",
              "Out": true
            }
          ]
        },
        {
          "Name": "RangeFromAnnotation",
          "ReturnType": "ITextRangeProvider",
          "Parameters": [
            {
              "Name": "annotationElement",
              "Type": "IRawElementProviderSimple"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ITextProvider2"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "AddToSelection",
          "ReturnType": "Void"
        },
        {
          "Name": "Clone",
          "ReturnType": "ITextRangeProvider"
        },
        {
          "Name": "Compare",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "textRangeProvider",
              "Type": "ITextRangeProvider"
            }
          ]
        },
        {
          "Name": "CompareEndpoints",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "endpoint",
              "Type": "TextPatternRangeEndpoint"
            },
            {
              "Name": "textRangeProvider",
              "Type": "ITextRangeProvider"
            },
            {
              "Name": "targetEndpoint",
              "Type": "TextPatternRangeEndpoint"
            }
          ]
        },
        {
          "Name": "ExpandToEnclosingUnit",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextUnit"
            }
          ]
        },
        {
          "Name": "FindAttribute",
          "ReturnType": "ITextRangeProvider",
          "Parameters": [
            {
              "Name": "attributeId",
              "Type": "Int32"
            },
            {
              "Name": "value",
              "Type": "Object"
            },
            {
              "Name": "backward",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "FindText",
          "ReturnType": "ITextRangeProvider",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            },
            {
              "Name": "backward",
              "Type": "Boolean"
            },
            {
              "Name": "ignoreCase",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "GetAttributeValue",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "attributeId",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "GetBoundingRectangles",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "returnValue",
              "Type": "Double[]&",
              "Out": true
            }
          ]
        },
        {
          "Name": "GetEnclosingElement",
          "ReturnType": "IRawElementProviderSimple"
        },
        {
          "Name": "GetChildren",
          "ReturnType": "IRawElementProviderSimple[]"
        },
        {
          "Name": "GetText",
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "maxLength",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "Move",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextUnit"
            },
            {
              "Name": "count",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "MoveEndpointByRange",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "endpoint",
              "Type": "TextPatternRangeEndpoint"
            },
            {
              "Name": "textRangeProvider",
              "Type": "ITextRangeProvider"
            },
            {
              "Name": "targetEndpoint",
              "Type": "TextPatternRangeEndpoint"
            }
          ]
        },
        {
          "Name": "MoveEndpointByUnit",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "endpoint",
              "Type": "TextPatternRangeEndpoint"
            },
            {
              "Name": "unit",
              "Type": "TextUnit"
            },
            {
              "Name": "count",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "RemoveFromSelection",
          "ReturnType": "Void"
        },
        {
          "Name": "ScrollIntoView",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "alignToTop",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "Select",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ITextRangeProvider"
    },
    {
      "Interfaces": [
        "ITextRangeProvider"
      ],
      "Properties": [],
      "Methods": [
        {
          "Name": "ShowContextMenu",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ITextRangeProvider2"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "ToggleState",
          "Type": "ToggleState",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "Toggle",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IToggleProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "CanMove",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "CanResize",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "CanRotate",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "Move",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "x",
              "Type": "Double"
            },
            {
              "Name": "y",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "Resize",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "width",
              "Type": "Double"
            },
            {
              "Name": "height",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "Rotate",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "degrees",
              "Type": "Double"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ITransformProvider"
    },
    {
      "Interfaces": [
        "ITransformProvider"
      ],
      "Properties": [
        {
          "Name": "CanZoom",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "MaxZoom",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "MinZoom",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ZoomLevel",
          "Type": "Double",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "Zoom",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "zoom",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "ZoomByUnit",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "zoomUnit",
              "Type": "ZoomUnit"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ITransformProvider2"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "IsReadOnly",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "SetValue",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IValueProvider"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "Realize",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IVirtualizedItemProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "InteractionState",
          "Type": "WindowInteractionState",
          "IsGet": true
        },
        {
          "Name": "IsModal",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsTopmost",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Maximizable",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Minimizable",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "VisualState",
          "Type": "WindowVisualState",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "Close",
          "ReturnType": "Void"
        },
        {
          "Name": "SetVisualState",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "state",
              "Type": "WindowVisualState"
            }
          ]
        },
        {
          "Name": "WaitForInputIdle",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "milliseconds",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IWindowProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "IsCompact",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ICommandBarElement"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "ContainerFromIndex",
          "ReturnType": "DependencyObject",
          "Parameters": [
            {
              "Name": "index",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "ContainerFromItem",
          "ReturnType": "DependencyObject",
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "IndexFromContainer",
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "container",
              "Type": "DependencyObject"
            }
          ]
        },
        {
          "Name": "ItemFromContainer",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "container",
              "Type": "DependencyObject"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.IItemContainerMapping"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "Navigate",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "sourcePageType",
              "Type": "Type"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.INavigate"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "IsActiveView",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsZoomedInView",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SemanticZoomOwner",
          "Type": "SemanticZoom",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [
        {
          "Name": "CompleteViewChange",
          "ReturnType": "Void"
        },
        {
          "Name": "CompleteViewChangeFrom",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SemanticZoomLocation"
            },
            {
              "Name": "destination",
              "Type": "SemanticZoomLocation"
            }
          ]
        },
        {
          "Name": "CompleteViewChangeTo",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SemanticZoomLocation"
            },
            {
              "Name": "destination",
              "Type": "SemanticZoomLocation"
            }
          ]
        },
        {
          "Name": "InitializeViewChange",
          "ReturnType": "Void"
        },
        {
          "Name": "MakeVisible",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "item",
              "Type": "SemanticZoomLocation"
            }
          ]
        },
        {
          "Name": "StartViewChangeFrom",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SemanticZoomLocation"
            },
            {
              "Name": "destination",
              "Type": "SemanticZoomLocation"
            }
          ]
        },
        {
          "Name": "StartViewChangeTo",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SemanticZoomLocation"
            },
            {
              "Name": "destination",
              "Type": "SemanticZoomLocation"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ISemanticZoomInformation"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "AreHorizontalSnapPointsRegular",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "AreVerticalSnapPointsRegular",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetIrregularSnapPoints",
          "ReturnType": "IReadOnlyList<Single>",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            }
          ]
        },
        {
          "Name": "GetRegularSnapPoints",
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            },
            {
              "Name": "offset",
              "Type": "Single&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "HorizontalSnapPointsChanged",
          "Type": "EventHandler<Object>"
        },
        {
          "Name": "VerticalSnapPointsChanged",
          "Type": "EventHandler<Object>"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo"
    },
    {
      "Interfaces": [
        "ICollection<Object>",
        "IEnumerable",
        "IEnumerable<Object>",
        "IList<Object>",
        "IObservableVector<Object>"
      ],
      "Properties": [
        {
          "Name": "CollectionGroups",
          "Type": "IObservableVector<Object>",
          "IsGet": true
        },
        {
          "Name": "CurrentItem",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "CurrentPosition",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "HasMoreItems",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsCurrentAfterLast",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsCurrentBeforeFirst",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "LoadMoreItemsAsync",
          "ReturnType": "IAsyncOperation<LoadMoreItemsResult>",
          "Parameters": [
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "MoveCurrentTo",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "MoveCurrentToFirst",
          "ReturnType": "Boolean"
        },
        {
          "Name": "MoveCurrentToLast",
          "ReturnType": "Boolean"
        },
        {
          "Name": "MoveCurrentToNext",
          "ReturnType": "Boolean"
        },
        {
          "Name": "MoveCurrentToPosition",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "index",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "MoveCurrentToPrevious",
          "ReturnType": "Boolean"
        }
      ],
      "Events": [
        {
          "Name": "CurrentChanged",
          "Type": "EventHandler<Object>"
        },
        {
          "Name": "CurrentChanging",
          "Type": "CurrentChangingEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Data.ICollectionView"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "CreateView",
          "ReturnType": "ICollectionView"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.ICollectionViewFactory"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Group",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "GroupItems",
          "Type": "IObservableVector<Object>",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.ICollectionViewGroup"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "CanRead",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "CanWrite",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "Type",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetIndexedValue",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Object"
            },
            {
              "Name": "index",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "GetValue",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SetIndexedValue",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Object"
            },
            {
              "Name": "value",
              "Type": "Object"
            },
            {
              "Name": "index",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SetValue",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Object"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.ICustomProperty"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Type",
          "Type": "Type",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetCustomProperty",
          "ReturnType": "ICustomProperty",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetIndexedProperty",
          "ReturnType": "ICustomProperty",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "Type"
            }
          ]
        },
        {
          "Name": "GetStringRepresentation",
          "ReturnType": "String"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.ICustomPropertyProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "HasMoreItems",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "LoadMoreItemsAsync",
          "ReturnType": "IAsyncOperation<LoadMoreItemsResult>",
          "Parameters": [
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.ISupportIncrementalLoading"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "Convert",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            },
            {
              "Name": "targetType",
              "Type": "Type"
            },
            {
              "Name": "parameter",
              "Type": "Object"
            },
            {
              "Name": "language",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ConvertBack",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            },
            {
              "Name": "targetType",
              "Type": "Type"
            },
            {
              "Name": "parameter",
              "Type": "Object"
            },
            {
              "Name": "language",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.IValueConverter"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Current",
          "Type": "Object",
          "IsGet": true
        },
        {
          "Name": "HasCurrent",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "MoveNext",
          "ReturnType": "Boolean"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Interop.IBindableIterator"
    },
    {
      "Interfaces": [
        "ICollection",
        "IEnumerable",
        "IList"
      ],
      "Properties": [],
      "Methods": [],
      "Events": [
        {
          "Name": "VectorChanged",
          "Type": "BindableVectorChangedEventHandler"
        }
      ],
      "Name": "Windows.UI.Xaml.Interop.IBindableObservableVector"
    },
    {
      "Interfaces": [
        "IEnumerable"
      ],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetAt",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "index",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "IndexOf",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            },
            {
              "Name": "index",
              "Type": "UInt32&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Interop.IBindableVectorView"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "Connect",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "connectionId",
              "Type": "Int32"
            },
            {
              "Name": "target",
              "Type": "Object"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Markup.IComponentConnector"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "IsAttachable",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsDependencyProperty",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsReadOnly",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "TargetType",
          "Type": "IXamlType",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "IXamlType",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetValue",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "instance",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "SetValue",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "instance",
              "Type": "Object"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Markup.IXamlMember"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "GetXamlType",
          "ReturnType": "IXamlType",
          "Parameters": [
            {
              "Name": "type",
              "Type": "Type"
            }
          ]
        },
        {
          "Name": "GetXamlType",
          "ReturnType": "IXamlType",
          "Parameters": [
            {
              "Name": "fullName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetXmlnsDefinitions",
          "ReturnType": "XmlnsDefinition[]"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Markup.IXamlMetadataProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "BaseType",
          "Type": "IXamlType",
          "IsGet": true
        },
        {
          "Name": "ContentProperty",
          "Type": "IXamlMember",
          "IsGet": true
        },
        {
          "Name": "FullName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "IsArray",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsBindable",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsCollection",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsConstructible",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsDictionary",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsMarkupExtension",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "ItemType",
          "Type": "IXamlType",
          "IsGet": true
        },
        {
          "Name": "KeyType",
          "Type": "IXamlType",
          "IsGet": true
        },
        {
          "Name": "UnderlyingType",
          "Type": "Type",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "ActivateInstance",
          "ReturnType": "Object"
        },
        {
          "Name": "AddToMap",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "instance",
              "Type": "Object"
            },
            {
              "Name": "key",
              "Type": "Object"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "AddToVector",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "instance",
              "Type": "Object"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "CreateFromString",
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetMember",
          "ReturnType": "IXamlMember",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "RunInitializer",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Markup.IXamlType"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [],
      "Methods": [
        {
          "Name": "SendRequestAsync",
          "ReturnType": "IAsyncOperationWithProgress<HttpResponseMessage,HttpProgress>",
          "Parameters": [
            {
              "Name": "request",
              "Type": "HttpRequestMessage"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Filters.IHttpFilter"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [
        {
          "Name": "Headers",
          "Type": "HttpContentHeaderCollection",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "BufferAllAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>"
        },
        {
          "Name": "ReadAsBufferAsync",
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt64>"
        },
        {
          "Name": "ReadAsInputStreamAsync",
          "ReturnType": "IAsyncOperationWithProgress<IInputStream,UInt64>"
        },
        {
          "Name": "ReadAsStringAsync",
          "ReturnType": "IAsyncOperationWithProgress<String,UInt64>"
        },
        {
          "Name": "TryComputeLength",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "length",
              "Type": "UInt64&",
              "Out": true
            }
          ]
        },
        {
          "Name": "WriteToStreamAsync",
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Parameters": [
            {
              "Name": "outputStream",
              "Type": "IOutputStream"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.IHttpContent"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "UriToStreamAsync",
          "ReturnType": "IAsyncOperation<IInputStream>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.IUriToStreamResolver"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "BypassCacheOnRetrieve",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaxResponseBufferSize",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProxyCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ServerCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Timeout",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [
        {
          "Name": "RetrieveFeedAsync",
          "ReturnType": "IAsyncOperationWithProgress<SyndicationFeed,RetrievalProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "SetRequestHeader",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.ISyndicationClient"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "AttributeExtensions",
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true
        },
        {
          "Name": "BaseUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ElementExtensions",
          "Type": "IList<ISyndicationNode>",
          "IsGet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeNamespace",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NodeValue",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetXmlDocument",
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.ISyndicationNode"
    },
    {
      "Interfaces": [
        "ISyndicationNode"
      ],
      "Properties": [
        {
          "Name": "Text",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Type",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Xml",
          "Type": "XmlDocument",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Web.Syndication.ISyndicationText"
    }
  ],
  "Enums": [
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Launch",
          "Value": "0"
        },
        {
          "Name": "Search",
          "Value": "1"
        },
        {
          "Name": "ShareTarget",
          "Value": "2"
        },
        {
          "Name": "File",
          "Value": "3"
        },
        {
          "Name": "Protocol",
          "Value": "4"
        },
        {
          "Name": "FileOpenPicker",
          "Value": "5"
        },
        {
          "Name": "FileSavePicker",
          "Value": "6"
        },
        {
          "Name": "CachedFileUpdater",
          "Value": "7"
        },
        {
          "Name": "ContactPicker",
          "Value": "8"
        },
        {
          "Name": "Device",
          "Value": "9"
        },
        {
          "Name": "PrintTaskSettings",
          "Value": "10"
        },
        {
          "Name": "CameraSettings",
          "Value": "11"
        },
        {
          "Name": "AppointmentsProvider",
          "Value": "13"
        },
        {
          "Name": "VoiceCommand",
          "Value": "16"
        },
        {
          "Name": "PickerReturned",
          "Value": "1000"
        },
        {
          "Name": "WalletAction",
          "Value": "1001"
        },
        {
          "Name": "PickFileContinuation",
          "Value": "1002"
        },
        {
          "Name": "PickSaveFileContinuation",
          "Value": "1003"
        },
        {
          "Name": "PickFolderContinuation",
          "Value": "1004"
        },
        {
          "Name": "WebAuthenticationBrokerContinuation",
          "Value": "1005"
        }
      ],
      "Name": "Windows.ApplicationModel.Activation.ActivationKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "NotRunning",
          "Value": "0"
        },
        {
          "Name": "Running",
          "Value": "1"
        },
        {
          "Name": "Suspended",
          "Value": "2"
        },
        {
          "Name": "Terminated",
          "Value": "3"
        },
        {
          "Name": "ClosedByUser",
          "Value": "4"
        }
      ],
      "Name": "Windows.ApplicationModel.Activation.ApplicationExecutionState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Busy",
          "Value": "0"
        },
        {
          "Name": "Tentative",
          "Value": "1"
        },
        {
          "Name": "Free",
          "Value": "2"
        },
        {
          "Name": "OutOfOffice",
          "Value": "3"
        },
        {
          "Name": "WorkingElsewhere",
          "Value": "4"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentBusyStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "SystemOnly",
          "Value": "0"
        },
        {
          "Name": "Limited",
          "Value": "1"
        },
        {
          "Name": "Full",
          "Value": "2"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentCalendarOtherAppReadAccess"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "SystemOnly",
          "Value": "1"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentCalendarOtherAppWriteAccess"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Adjacent",
          "Value": "1"
        },
        {
          "Name": "Overlap",
          "Value": "2"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentConflictType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Sunday",
          "Value": "1"
        },
        {
          "Name": "Monday",
          "Value": "2"
        },
        {
          "Name": "Tuesday",
          "Value": "4"
        },
        {
          "Name": "Wednesday",
          "Value": "8"
        },
        {
          "Name": "Thursday",
          "Value": "16"
        },
        {
          "Name": "Friday",
          "Value": "32"
        },
        {
          "Name": "Saturday",
          "Value": "64"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentDaysOfWeek"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Tentative",
          "Value": "1"
        },
        {
          "Name": "Accepted",
          "Value": "2"
        },
        {
          "Name": "Declined",
          "Value": "3"
        },
        {
          "Name": "Unknown",
          "Value": "4"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentParticipantResponse"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "RequiredAttendee",
          "Value": "0"
        },
        {
          "Name": "OptionalAttendee",
          "Value": "1"
        },
        {
          "Name": "Resource",
          "Value": "2"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentParticipantRole"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Daily",
          "Value": "0"
        },
        {
          "Name": "Weekly",
          "Value": "1"
        },
        {
          "Name": "Monthly",
          "Value": "2"
        },
        {
          "Name": "MonthlyOnDay",
          "Value": "3"
        },
        {
          "Name": "Yearly",
          "Value": "4"
        },
        {
          "Name": "YearlyOnDay",
          "Value": "5"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentRecurrenceUnit"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Public",
          "Value": "0"
        },
        {
          "Name": "Private",
          "Value": "1"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentSensitivity"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "AppCalendarsReadWrite",
          "Value": "0"
        },
        {
          "Name": "AllCalendarsReadOnly",
          "Value": "1"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentStoreAccessType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "AppointmentCreated",
          "Value": "0"
        },
        {
          "Name": "AppointmentModified",
          "Value": "1"
        },
        {
          "Name": "AppointmentDeleted",
          "Value": "2"
        },
        {
          "Name": "ChangeTrackingLost",
          "Value": "3"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentStoreChangeType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "System",
          "Value": "0"
        },
        {
          "Name": "App",
          "Value": "1"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentSummaryCardView"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "First",
          "Value": "0"
        },
        {
          "Name": "Second",
          "Value": "1"
        },
        {
          "Name": "Third",
          "Value": "2"
        },
        {
          "Name": "Fourth",
          "Value": "3"
        },
        {
          "Name": "Last",
          "Value": "4"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentWeekOfMonth"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "IncludeHidden",
          "Value": "1"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.FindAppointmentCalendarsOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Master",
          "Value": "0"
        },
        {
          "Name": "Instance",
          "Value": "1"
        },
        {
          "Name": "ExceptionInstance",
          "Value": "2"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.RecurrenceType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Allowed",
          "Value": "0"
        },
        {
          "Name": "CurrentlyRunning",
          "Value": "1"
        },
        {
          "Name": "DisabledByPolicy",
          "Value": "2"
        },
        {
          "Name": "UnknownError",
          "Value": "3"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.ApplicationTriggerResult"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unspecified",
          "Value": "0"
        },
        {
          "Name": "AllowedWithAlwaysOnRealTimeConnectivity",
          "Value": "1"
        },
        {
          "Name": "AllowedMayUseActiveRealTimeConnectivity",
          "Value": "2"
        },
        {
          "Name": "Denied",
          "Value": "3"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.BackgroundAccessStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Abort",
          "Value": "0"
        },
        {
          "Name": "Terminating",
          "Value": "1"
        },
        {
          "Name": "LoggingOff",
          "Value": "2"
        },
        {
          "Name": "ServicingUpdate",
          "Value": "3"
        },
        {
          "Name": "IdleTask",
          "Value": "4"
        },
        {
          "Name": "Uninstall",
          "Value": "5"
        },
        {
          "Name": "ConditionLoss",
          "Value": "6"
        },
        {
          "Name": "SystemPolicy",
          "Value": "7"
        },
        {
          "Name": "QuietHoursEntered",
          "Value": "8"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.BackgroundTaskCancellationReason"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "All",
          "Value": "0"
        },
        {
          "Name": "Cpu",
          "Value": "1"
        },
        {
          "Name": "Network",
          "Value": "2"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.BackgroundTaskThrottleCounter"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Low",
          "Value": "0"
        },
        {
          "Name": "Medium",
          "Value": "1"
        },
        {
          "Name": "High",
          "Value": "2"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.BackgroundWorkCostValue"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Allowed",
          "Value": "0"
        },
        {
          "Name": "DeniedByUser",
          "Value": "1"
        },
        {
          "Name": "DeniedBySystem",
          "Value": "2"
        },
        {
          "Name": "LowBattery",
          "Value": "3"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.DeviceTriggerResult"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Geofence",
          "Value": "0"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.LocationTriggerType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Invalid",
          "Value": "0"
        },
        {
          "Name": "UserPresent",
          "Value": "1"
        },
        {
          "Name": "UserNotPresent",
          "Value": "2"
        },
        {
          "Name": "InternetAvailable",
          "Value": "3"
        },
        {
          "Name": "InternetNotAvailable",
          "Value": "4"
        },
        {
          "Name": "SessionConnected",
          "Value": "5"
        },
        {
          "Name": "SessionDisconnected",
          "Value": "6"
        },
        {
          "Name": "FreeNetworkAvailable",
          "Value": "7"
        },
        {
          "Name": "BackgroundWorkCostNotHigh",
          "Value": "8"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.SystemConditionType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Invalid",
          "Value": "0"
        },
        {
          "Name": "SmsReceived",
          "Value": "1"
        },
        {
          "Name": "UserPresent",
          "Value": "2"
        },
        {
          "Name": "UserAway",
          "Value": "3"
        },
        {
          "Name": "NetworkStateChange",
          "Value": "4"
        },
        {
          "Name": "ControlChannelReset",
          "Value": "5"
        },
        {
          "Name": "InternetAvailable",
          "Value": "6"
        },
        {
          "Name": "SessionConnected",
          "Value": "7"
        },
        {
          "Name": "ServicingComplete",
          "Value": "8"
        },
        {
          "Name": "LockScreenApplicationAdded",
          "Value": "9"
        },
        {
          "Name": "LockScreenApplicationRemoved",
          "Value": "10"
        },
        {
          "Name": "TimeZoneChange",
          "Value": "11"
        },
        {
          "Name": "OnlineIdConnectedStateChange",
          "Value": "12"
        },
        {
          "Name": "BackgroundWorkCostChange",
          "Value": "13"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.SystemTriggerType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Home",
          "Value": "0"
        },
        {
          "Name": "Work",
          "Value": "1"
        },
        {
          "Name": "Other",
          "Value": "2"
        }
      ],
      "Name": "Windows.ApplicationModel.Contacts.ContactAddressKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Birthday",
          "Value": "0"
        },
        {
          "Name": "Anniversary",
          "Value": "1"
        },
        {
          "Name": "Other",
          "Value": "2"
        }
      ],
      "Name": "Windows.ApplicationModel.Contacts.ContactDateKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Personal",
          "Value": "0"
        },
        {
          "Name": "Work",
          "Value": "1"
        },
        {
          "Name": "Other",
          "Value": "2"
        }
      ],
      "Name": "Windows.ApplicationModel.Contacts.ContactEmailKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Home",
          "Value": "1"
        },
        {
          "Name": "Work",
          "Value": "2"
        },
        {
          "Name": "Mobile",
          "Value": "3"
        },
        {
          "Name": "Other",
          "Value": "4"
        }
      ],
      "Name": "Windows.ApplicationModel.Contacts.ContactFieldCategory"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Email",
          "Value": "0"
        },
        {
          "Name": "PhoneNumber",
          "Value": "1"
        },
        {
          "Name": "Address",
          "Value": "7"
        }
      ],
      "Name": "Windows.ApplicationModel.Contacts.ContactFieldType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Home",
          "Value": "0"
        },
        {
          "Name": "Mobile",
          "Value": "1"
        },
        {
          "Name": "Work",
          "Value": "2"
        },
        {
          "Name": "Other",
          "Value": "3"
        }
      ],
      "Name": "Windows.ApplicationModel.Contacts.ContactPhoneKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Contacts",
          "Value": "0"
        },
        {
          "Name": "Fields",
          "Value": "1"
        }
      ],
      "Name": "Windows.ApplicationModel.Contacts.ContactSelectionMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Copy",
          "Value": "1"
        },
        {
          "Name": "Move",
          "Value": "2"
        },
        {
          "Name": "Link",
          "Value": "4"
        }
      ],
      "Name": "Windows.ApplicationModel.DataTransfer.DataPackageOperation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "MessageCreated",
          "Value": "0"
        },
        {
          "Name": "MessageModified",
          "Value": "1"
        },
        {
          "Name": "MessageDeleted",
          "Value": "2"
        },
        {
          "Name": "ChangeTrackingLost",
          "Value": "3"
        }
      ],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageChangeType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Draft",
          "Value": "0"
        },
        {
          "Name": "Sending",
          "Value": "1"
        },
        {
          "Name": "Sent",
          "Value": "2"
        },
        {
          "Name": "SendRetryNeeded",
          "Value": "3"
        },
        {
          "Name": "SendFailed",
          "Value": "4"
        },
        {
          "Name": "Received",
          "Value": "5"
        },
        {
          "Name": "ReceiveDownloadNeeded",
          "Value": "6"
        },
        {
          "Name": "ReceiveDownloadFailed",
          "Value": "7"
        },
        {
          "Name": "ReceiveDownloading",
          "Value": "8"
        },
        {
          "Name": "Deleted",
          "Value": "9"
        }
      ],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Valid",
          "Value": "0"
        },
        {
          "Name": "NoRecipients",
          "Value": "1"
        },
        {
          "Name": "InvalidData",
          "Value": "2"
        },
        {
          "Name": "MessageTooLarge",
          "Value": "3"
        },
        {
          "Name": "TooManyRecipients",
          "Value": "4"
        },
        {
          "Name": "TransportInactive",
          "Value": "5"
        },
        {
          "Name": "TransportNotFound",
          "Value": "6"
        },
        {
          "Name": "TooManyAttachments",
          "Value": "7"
        },
        {
          "Name": "InvalidRecipients",
          "Value": "8"
        },
        {
          "Name": "InvalidBody",
          "Value": "9"
        },
        {
          "Name": "InvalidOther",
          "Value": "10"
        }
      ],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageValidationStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Succeeded",
          "Value": "0"
        },
        {
          "Name": "NothingToFulfill",
          "Value": "1"
        },
        {
          "Name": "PurchasePending",
          "Value": "2"
        },
        {
          "Name": "PurchaseReverted",
          "Value": "3"
        },
        {
          "Name": "ServerError",
          "Value": "4"
        }
      ],
      "Name": "Windows.ApplicationModel.Store.FulfillmentResult"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Succeeded",
          "Value": "0"
        },
        {
          "Name": "AlreadyPurchased",
          "Value": "1"
        },
        {
          "Name": "NotFulfilled",
          "Value": "2"
        },
        {
          "Name": "NotPurchased",
          "Value": "3"
        }
      ],
      "Name": "Windows.ApplicationModel.Store.ProductPurchaseStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unknown",
          "Value": "0"
        },
        {
          "Name": "Durable",
          "Value": "1"
        },
        {
          "Name": "Consumable",
          "Value": "2"
        }
      ],
      "Name": "Windows.ApplicationModel.Store.ProductType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "OpenItem",
          "Value": "0"
        },
        {
          "Name": "Transaction",
          "Value": "1"
        },
        {
          "Name": "MoreTransactions",
          "Value": "2"
        },
        {
          "Name": "Message",
          "Value": "3"
        },
        {
          "Name": "Verb",
          "Value": "4"
        }
      ],
      "Name": "Windows.ApplicationModel.Wallet.WalletActionKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Invalid",
          "Value": "0"
        },
        {
          "Name": "Upca",
          "Value": "1"
        },
        {
          "Name": "Upce",
          "Value": "2"
        },
        {
          "Name": "Ean13",
          "Value": "3"
        },
        {
          "Name": "Ean8",
          "Value": "4"
        },
        {
          "Name": "Itf",
          "Value": "5"
        },
        {
          "Name": "Code39",
          "Value": "6"
        },
        {
          "Name": "Code128",
          "Value": "7"
        },
        {
          "Name": "Qr",
          "Value": "8"
        },
        {
          "Name": "Pdf417",
          "Value": "9"
        },
        {
          "Name": "Aztec",
          "Value": "10"
        },
        {
          "Name": "Custom",
          "Value": "100000"
        }
      ],
      "Name": "Windows.ApplicationModel.Wallet.WalletBarcodeSymbology"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Hidden",
          "Value": "0"
        },
        {
          "Name": "HeaderField1",
          "Value": "1"
        },
        {
          "Name": "HeaderField2",
          "Value": "2"
        },
        {
          "Name": "PrimaryField1",
          "Value": "3"
        },
        {
          "Name": "PrimaryField2",
          "Value": "4"
        },
        {
          "Name": "SecondaryField1",
          "Value": "5"
        },
        {
          "Name": "SecondaryField2",
          "Value": "6"
        },
        {
          "Name": "SecondaryField3",
          "Value": "7"
        },
        {
          "Name": "SecondaryField4",
          "Value": "8"
        },
        {
          "Name": "SecondaryField5",
          "Value": "9"
        },
        {
          "Name": "CenterField1",
          "Value": "10"
        },
        {
          "Name": "FooterField1",
          "Value": "11"
        },
        {
          "Name": "FooterField2",
          "Value": "12"
        },
        {
          "Name": "FooterField3",
          "Value": "13"
        },
        {
          "Name": "FooterField4",
          "Value": "14"
        }
      ],
      "Name": "Windows.ApplicationModel.Wallet.WalletDetailViewPosition"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Invalid",
          "Value": "0"
        },
        {
          "Name": "Deal",
          "Value": "1"
        },
        {
          "Name": "General",
          "Value": "2"
        },
        {
          "Name": "PaymentInstrument",
          "Value": "3"
        },
        {
          "Name": "Ticket",
          "Value": "4"
        },
        {
          "Name": "BoardingPass",
          "Value": "5"
        },
        {
          "Name": "MembershipCard",
          "Value": "6"
        }
      ],
      "Name": "Windows.ApplicationModel.Wallet.WalletItemKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Hidden",
          "Value": "0"
        },
        {
          "Name": "Field1",
          "Value": "1"
        },
        {
          "Name": "Field2",
          "Value": "2"
        }
      ],
      "Name": "Windows.ApplicationModel.Wallet.WalletSummaryViewPosition"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unknown",
          "Value": "0"
        },
        {
          "Name": "InvalidJsonString",
          "Value": "1"
        },
        {
          "Name": "InvalidJsonNumber",
          "Value": "2"
        },
        {
          "Name": "JsonValueNotFound",
          "Value": "3"
        },
        {
          "Name": "ImplementationLimit",
          "Value": "4"
        }
      ],
      "Name": "Windows.Data.Json.JsonErrorStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Null",
          "Value": "0"
        },
        {
          "Name": "Boolean",
          "Value": "1"
        },
        {
          "Name": "Number",
          "Value": "2"
        },
        {
          "Name": "String",
          "Value": "3"
        },
        {
          "Name": "Array",
          "Value": "4"
        },
        {
          "Name": "Object",
          "Value": "5"
        }
      ],
      "Name": "Windows.Data.Json.JsonValueType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "UppercaseLetter",
          "Value": "0"
        },
        {
          "Name": "LowercaseLetter",
          "Value": "1"
        },
        {
          "Name": "TitlecaseLetter",
          "Value": "2"
        },
        {
          "Name": "ModifierLetter",
          "Value": "3"
        },
        {
          "Name": "OtherLetter",
          "Value": "4"
        },
        {
          "Name": "NonspacingMark",
          "Value": "5"
        },
        {
          "Name": "SpacingCombiningMark",
          "Value": "6"
        },
        {
          "Name": "EnclosingMark",
          "Value": "7"
        },
        {
          "Name": "DecimalDigitNumber",
          "Value": "8"
        },
        {
          "Name": "LetterNumber",
          "Value": "9"
        },
        {
          "Name": "OtherNumber",
          "Value": "10"
        },
        {
          "Name": "SpaceSeparator",
          "Value": "11"
        },
        {
          "Name": "LineSeparator",
          "Value": "12"
        },
        {
          "Name": "ParagraphSeparator",
          "Value": "13"
        },
        {
          "Name": "Control",
          "Value": "14"
        },
        {
          "Name": "Format",
          "Value": "15"
        },
        {
          "Name": "Surrogate",
          "Value": "16"
        },
        {
          "Name": "PrivateUse",
          "Value": "17"
        },
        {
          "Name": "ConnectorPunctuation",
          "Value": "18"
        },
        {
          "Name": "DashPunctuation",
          "Value": "19"
        },
        {
          "Name": "OpenPunctuation",
          "Value": "20"
        },
        {
          "Name": "ClosePunctuation",
          "Value": "21"
        },
        {
          "Name": "InitialQuotePunctuation",
          "Value": "22"
        },
        {
          "Name": "FinalQuotePunctuation",
          "Value": "23"
        },
        {
          "Name": "OtherPunctuation",
          "Value": "24"
        },
        {
          "Name": "MathSymbol",
          "Value": "25"
        },
        {
          "Name": "CurrencySymbol",
          "Value": "26"
        },
        {
          "Name": "ModifierSymbol",
          "Value": "27"
        },
        {
          "Name": "OtherSymbol",
          "Value": "28"
        },
        {
          "Name": "NotAssigned",
          "Value": "29"
        }
      ],
      "Name": "Windows.Data.Text.UnicodeGeneralCategory"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Decimal",
          "Value": "1"
        },
        {
          "Name": "Digit",
          "Value": "2"
        },
        {
          "Name": "Numeric",
          "Value": "3"
        }
      ],
      "Name": "Windows.Data.Text.UnicodeNumericType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Invalid",
          "Value": "0"
        },
        {
          "Name": "ElementNode",
          "Value": "1"
        },
        {
          "Name": "AttributeNode",
          "Value": "2"
        },
        {
          "Name": "TextNode",
          "Value": "3"
        },
        {
          "Name": "DataSectionNode",
          "Value": "4"
        },
        {
          "Name": "EntityReferenceNode",
          "Value": "5"
        },
        {
          "Name": "EntityNode",
          "Value": "6"
        },
        {
          "Name": "ProcessingInstructionNode",
          "Value": "7"
        },
        {
          "Name": "CommentNode",
          "Value": "8"
        },
        {
          "Name": "DocumentNode",
          "Value": "9"
        },
        {
          "Name": "DocumentTypeNode",
          "Value": "10"
        },
        {
          "Name": "DocumentFragmentNode",
          "Value": "11"
        },
        {
          "Name": "NotationNode",
          "Value": "12"
        }
      ],
      "Name": "Windows.Data.Xml.Dom.NodeType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Cached",
          "Value": "0"
        },
        {
          "Name": "Uncached",
          "Value": "1"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.BluetoothCacheMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Disconnected",
          "Value": "0"
        },
        {
          "Name": "Connected",
          "Value": "1"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.BluetoothConnectionStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Miscellaneous",
          "Value": "0"
        },
        {
          "Name": "Computer",
          "Value": "1"
        },
        {
          "Name": "Phone",
          "Value": "2"
        },
        {
          "Name": "NetworkAccessPoint",
          "Value": "3"
        },
        {
          "Name": "AudioVideo",
          "Value": "4"
        },
        {
          "Name": "Peripheral",
          "Value": "5"
        },
        {
          "Name": "Imaging",
          "Value": "6"
        },
        {
          "Name": "Wearable",
          "Value": "7"
        },
        {
          "Name": "Toy",
          "Value": "8"
        },
        {
          "Name": "Health",
          "Value": "9"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.BluetoothMajorClass"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Uncategorized",
          "Value": "0"
        },
        {
          "Name": "NetworkFullyAvailable",
          "Value": "0"
        },
        {
          "Name": "ComputerDesktop",
          "Value": "1"
        },
        {
          "Name": "PhoneCellular",
          "Value": "1"
        },
        {
          "Name": "AudioVideoWearableHeadset",
          "Value": "1"
        },
        {
          "Name": "PeripheralJoystick",
          "Value": "1"
        },
        {
          "Name": "WearableWristwatch",
          "Value": "1"
        },
        {
          "Name": "ToyRobot",
          "Value": "1"
        },
        {
          "Name": "HealthBloodPressureMonitor",
          "Value": "1"
        },
        {
          "Name": "ComputerServer",
          "Value": "2"
        },
        {
          "Name": "PhoneCordless",
          "Value": "2"
        },
        {
          "Name": "AudioVideoHandsFree",
          "Value": "2"
        },
        {
          "Name": "PeripheralGamepad",
          "Value": "2"
        },
        {
          "Name": "WearablePager",
          "Value": "2"
        },
        {
          "Name": "ToyVehicle",
          "Value": "2"
        },
        {
          "Name": "HealthThermometer",
          "Value": "2"
        },
        {
          "Name": "ComputerLaptop",
          "Value": "3"
        },
        {
          "Name": "PhoneSmartPhone",
          "Value": "3"
        },
        {
          "Name": "PeripheralRemoteControl",
          "Value": "3"
        },
        {
          "Name": "WearableJacket",
          "Value": "3"
        },
        {
          "Name": "ToyDoll",
          "Value": "3"
        },
        {
          "Name": "HealthWeighingScale",
          "Value": "3"
        },
        {
          "Name": "ComputerHandheld",
          "Value": "4"
        },
        {
          "Name": "PhoneWired",
          "Value": "4"
        },
        {
          "Name": "AudioVideoMicrophone",
          "Value": "4"
        },
        {
          "Name": "PeripheralSensing",
          "Value": "4"
        },
        {
          "Name": "WearableHelmet",
          "Value": "4"
        },
        {
          "Name": "ToyController",
          "Value": "4"
        },
        {
          "Name": "HealthGlucoseMeter",
          "Value": "4"
        },
        {
          "Name": "ComputerPalmSize",
          "Value": "5"
        },
        {
          "Name": "PhoneIsdn",
          "Value": "5"
        },
        {
          "Name": "AudioVideoLoudspeaker",
          "Value": "5"
        },
        {
          "Name": "PeripheralDigitizerTablet",
          "Value": "5"
        },
        {
          "Name": "WearableGlasses",
          "Value": "5"
        },
        {
          "Name": "ToyGame",
          "Value": "5"
        },
        {
          "Name": "HealthPulseOximeter",
          "Value": "5"
        },
        {
          "Name": "ComputerWearable",
          "Value": "6"
        },
        {
          "Name": "AudioVideoHeadphones",
          "Value": "6"
        },
        {
          "Name": "PeripheralCardReader",
          "Value": "6"
        },
        {
          "Name": "HealthHeartRateMonitor",
          "Value": "6"
        },
        {
          "Name": "ComputerTablet",
          "Value": "7"
        },
        {
          "Name": "AudioVideoPortableAudio",
          "Value": "7"
        },
        {
          "Name": "PeripheralDigitalPen",
          "Value": "7"
        },
        {
          "Name": "HealthHealthDataDisplay",
          "Value": "7"
        },
        {
          "Name": "NetworkUsed01To17Percent",
          "Value": "8"
        },
        {
          "Name": "AudioVideoCarAudio",
          "Value": "8"
        },
        {
          "Name": "PeripheralHandheldScanner",
          "Value": "8"
        },
        {
          "Name": "HealthStepCounter",
          "Value": "8"
        },
        {
          "Name": "AudioVideoSetTopBox",
          "Value": "9"
        },
        {
          "Name": "PeripheralHandheldGesture",
          "Value": "9"
        },
        {
          "Name": "HealthBodyCompositionAnalyzer",
          "Value": "9"
        },
        {
          "Name": "AudioVideoHifiAudioDevice",
          "Value": "10"
        },
        {
          "Name": "HealthPeakFlowMonitor",
          "Value": "10"
        },
        {
          "Name": "AudioVideoVcr",
          "Value": "11"
        },
        {
          "Name": "HealthMedicationMonitor",
          "Value": "11"
        },
        {
          "Name": "AudioVideoVideoCamera",
          "Value": "12"
        },
        {
          "Name": "HealthKneeProsthesis",
          "Value": "12"
        },
        {
          "Name": "AudioVideoCamcorder",
          "Value": "13"
        },
        {
          "Name": "HealthAnkleProsthesis",
          "Value": "13"
        },
        {
          "Name": "AudioVideoVideoMonitor",
          "Value": "14"
        },
        {
          "Name": "HealthGenericHealthManager",
          "Value": "14"
        },
        {
          "Name": "AudioVideoVideoDisplayAndLoudspeaker",
          "Value": "15"
        },
        {
          "Name": "HealthPersonalMobilityDevice",
          "Value": "15"
        },
        {
          "Name": "NetworkUsed17To33Percent",
          "Value": "16"
        },
        {
          "Name": "AudioVideoVideoConferencing",
          "Value": "16"
        },
        {
          "Name": "AudioVideoGamingOrToy",
          "Value": "18"
        },
        {
          "Name": "NetworkUsed33To50Percent",
          "Value": "24"
        },
        {
          "Name": "NetworkUsed50To67Percent",
          "Value": "32"
        },
        {
          "Name": "NetworkUsed67To83Percent",
          "Value": "40"
        },
        {
          "Name": "NetworkUsed83To99Percent",
          "Value": "48"
        },
        {
          "Name": "NetworkNoServiceAvailable",
          "Value": "56"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.BluetoothMinorClass"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "LimitedDiscoverableMode",
          "Value": "1"
        },
        {
          "Name": "PositioningService",
          "Value": "8"
        },
        {
          "Name": "NetworkingService",
          "Value": "16"
        },
        {
          "Name": "RenderingService",
          "Value": "32"
        },
        {
          "Name": "CapturingService",
          "Value": "64"
        },
        {
          "Name": "ObjectTransferService",
          "Value": "128"
        },
        {
          "Name": "AudioService",
          "Value": "256"
        },
        {
          "Name": "TelephoneService",
          "Value": "512"
        },
        {
          "Name": "InformationService",
          "Value": "1024"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.BluetoothServiceCapabilities"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Notify",
          "Value": "1"
        },
        {
          "Name": "Indicate",
          "Value": "2"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientCharacteristicConfigurationDescriptorValue"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Success",
          "Value": "0"
        },
        {
          "Name": "Unreachable",
          "Value": "1"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Broadcast",
          "Value": "1"
        },
        {
          "Name": "Read",
          "Value": "2"
        },
        {
          "Name": "WriteWithoutResponse",
          "Value": "4"
        },
        {
          "Name": "Write",
          "Value": "8"
        },
        {
          "Name": "Notify",
          "Value": "16"
        },
        {
          "Name": "Indicate",
          "Value": "32"
        },
        {
          "Name": "AuthenticatedSignedWrites",
          "Value": "64"
        },
        {
          "Name": "ExtendedProperties",
          "Value": "128"
        },
        {
          "Name": "ReliableWrites",
          "Value": "256"
        },
        {
          "Name": "WritableAuxiliaries",
          "Value": "512"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicProperties"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Plain",
          "Value": "0"
        },
        {
          "Name": "AuthenticationRequired",
          "Value": "1"
        },
        {
          "Name": "EncryptionRequired",
          "Value": "2"
        },
        {
          "Name": "EncryptionAndAuthenticationRequired",
          "Value": "3"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "WriteWithResponse",
          "Value": "0"
        },
        {
          "Name": "WriteWithoutResponse",
          "Value": "1"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteOption"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unspecified",
          "Value": "0"
        },
        {
          "Name": "Allowed",
          "Value": "1"
        },
        {
          "Name": "DeniedByUser",
          "Value": "2"
        },
        {
          "Name": "DeniedBySystem",
          "Value": "3"
        }
      ],
      "Name": "Windows.Devices.Enumeration.DeviceAccessStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "All",
          "Value": "0"
        },
        {
          "Name": "AudioCapture",
          "Value": "1"
        },
        {
          "Name": "AudioRender",
          "Value": "2"
        },
        {
          "Name": "PortableStorageDevice",
          "Value": "3"
        },
        {
          "Name": "VideoCapture",
          "Value": "4"
        },
        {
          "Name": "ImageScanner",
          "Value": "5"
        },
        {
          "Name": "Location",
          "Value": "6"
        }
      ],
      "Name": "Windows.Devices.Enumeration.DeviceClass"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Created",
          "Value": "0"
        },
        {
          "Name": "Started",
          "Value": "1"
        },
        {
          "Name": "EnumerationCompleted",
          "Value": "2"
        },
        {
          "Name": "Stopping",
          "Value": "3"
        },
        {
          "Name": "Stopped",
          "Value": "4"
        },
        {
          "Name": "Aborted",
          "Value": "5"
        }
      ],
      "Name": "Windows.Devices.Enumeration.DeviceWatcherStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unknown",
          "Value": "0"
        },
        {
          "Name": "Front",
          "Value": "1"
        },
        {
          "Name": "Back",
          "Value": "2"
        },
        {
          "Name": "Top",
          "Value": "3"
        },
        {
          "Name": "Bottom",
          "Value": "4"
        },
        {
          "Name": "Left",
          "Value": "5"
        },
        {
          "Name": "Right",
          "Value": "6"
        }
      ],
      "Name": "Windows.Devices.Enumeration.Panel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unknown",
          "Value": "0"
        },
        {
          "Name": "DeviceInterface",
          "Value": "1"
        },
        {
          "Name": "DeviceContainer",
          "Value": "2"
        },
        {
          "Name": "Device",
          "Value": "3"
        },
        {
          "Name": "DeviceInterfaceClass",
          "Value": "4"
        }
      ],
      "Name": "Windows.Devices.Enumeration.Pnp.PnpObjectType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unspecified",
          "Value": "0"
        },
        {
          "Name": "Terrain",
          "Value": "1"
        },
        {
          "Name": "Ellipsoid",
          "Value": "2"
        },
        {
          "Name": "Geoid",
          "Value": "3"
        },
        {
          "Name": "Surface",
          "Value": "4"
        }
      ],
      "Name": "Windows.Devices.Geolocation.AltitudeReferenceSystem"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Ready",
          "Value": "0"
        },
        {
          "Name": "Initializing",
          "Value": "1"
        },
        {
          "Name": "NoData",
          "Value": "2"
        },
        {
          "Name": "Disabled",
          "Value": "3"
        },
        {
          "Name": "NotInitialized",
          "Value": "4"
        },
        {
          "Name": "NotAvailable",
          "Value": "5"
        }
      ],
      "Name": "Windows.Devices.Geolocation.Geofencing.GeofenceMonitorStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Used",
          "Value": "0"
        },
        {
          "Name": "Expired",
          "Value": "1"
        }
      ],
      "Name": "Windows.Devices.Geolocation.Geofencing.GeofenceRemovalReason"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Entered",
          "Value": "1"
        },
        {
          "Name": "Exited",
          "Value": "2"
        },
        {
          "Name": "Removed",
          "Value": "4"
        }
      ],
      "Name": "Windows.Devices.Geolocation.Geofencing.GeofenceState"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Entered",
          "Value": "1"
        },
        {
          "Name": "Exited",
          "Value": "2"
        },
        {
          "Name": "Removed",
          "Value": "4"
        }
      ],
      "Name": "Windows.Devices.Geolocation.Geofencing.MonitoredGeofenceStates"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Geopoint",
          "Value": "0"
        },
        {
          "Name": "Geocircle",
          "Value": "1"
        },
        {
          "Name": "Geopath",
          "Value": "2"
        },
        {
          "Name": "GeoboundingBox",
          "Value": "3"
        }
      ],
      "Name": "Windows.Devices.Geolocation.GeoshapeType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "High",
          "Value": "1"
        }
      ],
      "Name": "Windows.Devices.Geolocation.PositionAccuracy"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Cellular",
          "Value": "0"
        },
        {
          "Name": "Satellite",
          "Value": "1"
        },
        {
          "Name": "WiFi",
          "Value": "2"
        },
        {
          "Name": "IPAddress",
          "Value": "3"
        },
        {
          "Name": "Unknown",
          "Value": "4"
        }
      ],
      "Name": "Windows.Devices.Geolocation.PositionSource"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Ready",
          "Value": "0"
        },
        {
          "Name": "Initializing",
          "Value": "1"
        },
        {
          "Name": "NoData",
          "Value": "2"
        },
        {
          "Name": "Disabled",
          "Value": "3"
        },
        {
          "Name": "NotInitialized",
          "Value": "4"
        },
        {
          "Name": "NotAvailable",
          "Value": "5"
        }
      ],
      "Name": "Windows.Devices.Geolocation.PositionStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Physical",
          "Value": "0"
        },
        {
          "Name": "Application",
          "Value": "1"
        },
        {
          "Name": "Logical",
          "Value": "2"
        },
        {
          "Name": "Report",
          "Value": "3"
        },
        {
          "Name": "NamedArray",
          "Value": "4"
        },
        {
          "Name": "UsageSwitch",
          "Value": "5"
        },
        {
          "Name": "UsageModifier",
          "Value": "6"
        },
        {
          "Name": "Other",
          "Value": "7"
        }
      ],
      "Name": "Windows.Devices.HumanInterfaceDevice.HidCollectionType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Input",
          "Value": "0"
        },
        {
          "Name": "Output",
          "Value": "1"
        },
        {
          "Name": "Feature",
          "Value": "2"
        }
      ],
      "Name": "Windows.Devices.HumanInterfaceDevice.HidReportType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Touch",
          "Value": "0"
        },
        {
          "Name": "Pen",
          "Value": "1"
        },
        {
          "Name": "Mouse",
          "Value": "2"
        }
      ],
      "Name": "Windows.Devices.Input.PointerDeviceType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unknown",
          "Value": "0"
        },
        {
          "Name": "Unreliable",
          "Value": "1"
        },
        {
          "Name": "Approximate",
          "Value": "2"
        },
        {
          "Name": "High",
          "Value": "3"
        }
      ],
      "Name": "Windows.Devices.Sensors.MagnetometerAccuracy"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "NotRotated",
          "Value": "0"
        },
        {
          "Name": "Rotated90DegreesCounterclockwise",
          "Value": "1"
        },
        {
          "Name": "Rotated180DegreesCounterclockwise",
          "Value": "2"
        },
        {
          "Name": "Rotated270DegreesCounterclockwise",
          "Value": "3"
        },
        {
          "Name": "Faceup",
          "Value": "4"
        },
        {
          "Name": "Facedown",
          "Value": "5"
        }
      ],
      "Name": "Windows.Devices.Sensors.SimpleOrientation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Never",
          "Value": "0"
        },
        {
          "Name": "Always",
          "Value": "1"
        },
        {
          "Name": "ScreenOn",
          "Value": "2"
        },
        {
          "Name": "ScreenUnlocked",
          "Value": "3"
        }
      ],
      "Name": "Windows.Devices.SmartCards.SmartCardEmulatorEnablementPolicy"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Allow",
          "Value": "0"
        },
        {
          "Name": "RequireAtLeastOne",
          "Value": "1"
        },
        {
          "Name": "Disallow",
          "Value": "2"
        }
      ],
      "Name": "Windows.Devices.SmartCards.SmartCardPinCharacterPolicyOption"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Any",
          "Value": "0"
        },
        {
          "Name": "Generic",
          "Value": "1"
        },
        {
          "Name": "Tpm",
          "Value": "2"
        },
        {
          "Name": "Nfc",
          "Value": "3"
        },
        {
          "Name": "Uicc",
          "Value": "4"
        }
      ],
      "Name": "Windows.Devices.SmartCards.SmartCardReaderKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Disconnected",
          "Value": "0"
        },
        {
          "Name": "Ready",
          "Value": "1"
        },
        {
          "Name": "Exclusive",
          "Value": "2"
        }
      ],
      "Name": "Windows.Devices.SmartCards.SmartCardReaderStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Disconnected",
          "Value": "0"
        },
        {
          "Name": "Ready",
          "Value": "1"
        },
        {
          "Name": "Shared",
          "Value": "2"
        },
        {
          "Name": "Exclusive",
          "Value": "3"
        },
        {
          "Name": "Unresponsive",
          "Value": "4"
        }
      ],
      "Name": "Windows.Devices.SmartCards.SmartCardStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "EmulatorTransaction",
          "Value": "0"
        },
        {
          "Name": "EmulatorNearFieldEntry",
          "Value": "1"
        },
        {
          "Name": "EmulatorNearFieldExit",
          "Value": "2"
        }
      ],
      "Name": "Windows.Devices.SmartCards.SmartCardTriggerType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Disconnected",
          "Value": "0"
        },
        {
          "Name": "Connected",
          "Value": "1"
        }
      ],
      "Name": "Windows.Devices.WiFiDirect.WiFiDirectConnectionStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Started",
          "Value": "0"
        },
        {
          "Name": "Completed",
          "Value": "1"
        },
        {
          "Name": "Canceled",
          "Value": "2"
        },
        {
          "Name": "Error",
          "Value": "3"
        }
      ],
      "Name": "Windows.Foundation.AsyncStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Reset",
          "Value": "0"
        },
        {
          "Name": "ItemInserted",
          "Value": "1"
        },
        {
          "Name": "ItemRemoved",
          "Value": "2"
        },
        {
          "Name": "ItemChanged",
          "Value": "3"
        }
      ],
      "Name": "Windows.Foundation.Collections.CollectionChange"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "AssignDelegate",
          "Value": "0"
        },
        {
          "Name": "Join",
          "Value": "1"
        },
        {
          "Name": "Choice",
          "Value": "2"
        },
        {
          "Name": "Cancel",
          "Value": "3"
        },
        {
          "Name": "Error",
          "Value": "4"
        }
      ],
      "Name": "Windows.Foundation.Diagnostics.CausalityRelation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Application",
          "Value": "0"
        },
        {
          "Name": "Library",
          "Value": "1"
        },
        {
          "Name": "System",
          "Value": "2"
        }
      ],
      "Name": "Windows.Foundation.Diagnostics.CausalitySource"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "CompletionNotification",
          "Value": "0"
        },
        {
          "Name": "ProgressNotification",
          "Value": "1"
        },
        {
          "Name": "Execution",
          "Value": "2"
        }
      ],
      "Name": "Windows.Foundation.Diagnostics.CausalitySynchronousWork"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Required",
          "Value": "0"
        },
        {
          "Name": "Important",
          "Value": "1"
        },
        {
          "Name": "Verbose",
          "Value": "2"
        }
      ],
      "Name": "Windows.Foundation.Diagnostics.CausalityTraceLevel"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "SuppressExceptions",
          "Value": "1"
        },
        {
          "Name": "ForceExceptions",
          "Value": "2"
        },
        {
          "Name": "UseSetErrorInfo",
          "Value": "4"
        },
        {
          "Name": "SuppressSetErrorInfo",
          "Value": "8"
        }
      ],
      "Name": "Windows.Foundation.Diagnostics.ErrorOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Verbose",
          "Value": "0"
        },
        {
          "Name": "Information",
          "Value": "1"
        },
        {
          "Name": "Warning",
          "Value": "2"
        },
        {
          "Name": "Error",
          "Value": "3"
        },
        {
          "Name": "Critical",
          "Value": "4"
        }
      ],
      "Name": "Windows.Foundation.Diagnostics.LoggingLevel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Protected",
          "Value": "1"
        },
        {
          "Name": "Public",
          "Value": "2"
        }
      ],
      "Name": "Windows.Foundation.Metadata.CompositionType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Deprecate",
          "Value": "0"
        },
        {
          "Name": "Remove",
          "Value": "1"
        }
      ],
      "Name": "Windows.Foundation.Metadata.DeprecationType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "InvalidMarshaling",
          "Value": "0"
        },
        {
          "Name": "None",
          "Value": "1"
        },
        {
          "Name": "Agile",
          "Value": "2"
        },
        {
          "Name": "Standard",
          "Value": "3"
        }
      ],
      "Name": "Windows.Foundation.Metadata.MarshalingType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Windows",
          "Value": "0"
        },
        {
          "Name": "WindowsPhone",
          "Value": "1"
        }
      ],
      "Name": "Windows.Foundation.Metadata.Platform"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "InvalidThreading",
          "Value": "0"
        },
        {
          "Name": "STA",
          "Value": "1"
        },
        {
          "Name": "MTA",
          "Value": "2"
        },
        {
          "Name": "Both",
          "Value": "3"
        }
      ],
      "Name": "Windows.Foundation.Metadata.ThreadingModel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Empty",
          "Value": "0"
        },
        {
          "Name": "UInt8",
          "Value": "1"
        },
        {
          "Name": "Int16",
          "Value": "2"
        },
        {
          "Name": "UInt16",
          "Value": "3"
        },
        {
          "Name": "Int32",
          "Value": "4"
        },
        {
          "Name": "UInt32",
          "Value": "5"
        },
        {
          "Name": "Int64",
          "Value": "6"
        },
        {
          "Name": "UInt64",
          "Value": "7"
        },
        {
          "Name": "Single",
          "Value": "8"
        },
        {
          "Name": "Double",
          "Value": "9"
        },
        {
          "Name": "Char16",
          "Value": "10"
        },
        {
          "Name": "Boolean",
          "Value": "11"
        },
        {
          "Name": "String",
          "Value": "12"
        },
        {
          "Name": "Inspectable",
          "Value": "13"
        },
        {
          "Name": "DateTime",
          "Value": "14"
        },
        {
          "Name": "TimeSpan",
          "Value": "15"
        },
        {
          "Name": "Guid",
          "Value": "16"
        },
        {
          "Name": "Point",
          "Value": "17"
        },
        {
          "Name": "Size",
          "Value": "18"
        },
        {
          "Name": "Rect",
          "Value": "19"
        },
        {
          "Name": "OtherType",
          "Value": "20"
        },
        {
          "Name": "UInt8Array",
          "Value": "1025"
        },
        {
          "Name": "Int16Array",
          "Value": "1026"
        },
        {
          "Name": "UInt16Array",
          "Value": "1027"
        },
        {
          "Name": "Int32Array",
          "Value": "1028"
        },
        {
          "Name": "UInt32Array",
          "Value": "1029"
        },
        {
          "Name": "Int64Array",
          "Value": "1030"
        },
        {
          "Name": "UInt64Array",
          "Value": "1031"
        },
        {
          "Name": "SingleArray",
          "Value": "1032"
        },
        {
          "Name": "DoubleArray",
          "Value": "1033"
        },
        {
          "Name": "Char16Array",
          "Value": "1034"
        },
        {
          "Name": "BooleanArray",
          "Value": "1035"
        },
        {
          "Name": "StringArray",
          "Value": "1036"
        },
        {
          "Name": "InspectableArray",
          "Value": "1037"
        },
        {
          "Name": "DateTimeArray",
          "Value": "1038"
        },
        {
          "Name": "TimeSpanArray",
          "Value": "1039"
        },
        {
          "Name": "GuidArray",
          "Value": "1040"
        },
        {
          "Name": "PointArray",
          "Value": "1041"
        },
        {
          "Name": "SizeArray",
          "Value": "1042"
        },
        {
          "Name": "RectArray",
          "Value": "1043"
        },
        {
          "Name": "OtherTypeArray",
          "Value": "1044"
        }
      ],
      "Name": "Windows.Foundation.PropertyType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Default",
          "Value": "1"
        }
      ],
      "Name": "Windows.Globalization.DateTimeFormatting.DayFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Default",
          "Value": "1"
        },
        {
          "Name": "Abbreviated",
          "Value": "2"
        },
        {
          "Name": "Full",
          "Value": "3"
        }
      ],
      "Name": "Windows.Globalization.DateTimeFormatting.DayOfWeekFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Default",
          "Value": "1"
        }
      ],
      "Name": "Windows.Globalization.DateTimeFormatting.HourFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Default",
          "Value": "1"
        }
      ],
      "Name": "Windows.Globalization.DateTimeFormatting.MinuteFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Default",
          "Value": "1"
        },
        {
          "Name": "Abbreviated",
          "Value": "2"
        },
        {
          "Name": "Full",
          "Value": "3"
        },
        {
          "Name": "Numeric",
          "Value": "4"
        }
      ],
      "Name": "Windows.Globalization.DateTimeFormatting.MonthFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Default",
          "Value": "1"
        }
      ],
      "Name": "Windows.Globalization.DateTimeFormatting.SecondFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Default",
          "Value": "1"
        },
        {
          "Name": "Abbreviated",
          "Value": "2"
        },
        {
          "Name": "Full",
          "Value": "3"
        }
      ],
      "Name": "Windows.Globalization.DateTimeFormatting.YearFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Sunday",
          "Value": "0"
        },
        {
          "Name": "Monday",
          "Value": "1"
        },
        {
          "Name": "Tuesday",
          "Value": "2"
        },
        {
          "Name": "Wednesday",
          "Value": "3"
        },
        {
          "Name": "Thursday",
          "Value": "4"
        },
        {
          "Name": "Friday",
          "Value": "5"
        },
        {
          "Name": "Saturday",
          "Value": "6"
        }
      ],
      "Name": "Windows.Globalization.DayOfWeek"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "UseSymbol",
          "Value": "0"
        },
        {
          "Name": "UseCurrencyCode",
          "Value": "1"
        }
      ],
      "Name": "Windows.Globalization.NumberFormatting.CurrencyFormatterMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "RoundDown",
          "Value": "1"
        },
        {
          "Name": "RoundUp",
          "Value": "2"
        },
        {
          "Name": "RoundTowardsZero",
          "Value": "3"
        },
        {
          "Name": "RoundAwayFromZero",
          "Value": "4"
        },
        {
          "Name": "RoundHalfDown",
          "Value": "5"
        },
        {
          "Name": "RoundHalfUp",
          "Value": "6"
        },
        {
          "Name": "RoundHalfTowardsZero",
          "Value": "7"
        },
        {
          "Name": "RoundHalfAwayFromZero",
          "Value": "8"
        },
        {
          "Name": "RoundHalfToEven",
          "Value": "9"
        },
        {
          "Name": "RoundHalfToOdd",
          "Value": "10"
        }
      ],
      "Name": "Windows.Globalization.NumberFormatting.RoundingAlgorithm"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Landscape",
          "Value": "1"
        },
        {
          "Name": "Portrait",
          "Value": "2"
        },
        {
          "Name": "LandscapeFlipped",
          "Value": "4"
        },
        {
          "Name": "PortraitFlipped",
          "Value": "8"
        }
      ],
      "Name": "Windows.Graphics.Display.DisplayOrientations"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Invalid",
          "Value": "0"
        },
        {
          "Name": "Scale100Percent",
          "Value": "100"
        },
        {
          "Name": "Scale120Percent",
          "Value": "120"
        },
        {
          "Name": "Scale140Percent",
          "Value": "140"
        },
        {
          "Name": "Scale150Percent",
          "Value": "150"
        },
        {
          "Name": "Scale160Percent",
          "Value": "160"
        },
        {
          "Name": "Scale180Percent",
          "Value": "180"
        },
        {
          "Name": "Scale225Percent",
          "Value": "225"
        }
      ],
      "Name": "Windows.Graphics.Display.ResolutionScale"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Premultiplied",
          "Value": "0"
        },
        {
          "Name": "Straight",
          "Value": "1"
        },
        {
          "Name": "Ignore",
          "Value": "2"
        }
      ],
      "Name": "Windows.Graphics.Imaging.BitmapAlphaMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Horizontal",
          "Value": "1"
        },
        {
          "Name": "Vertical",
          "Value": "2"
        }
      ],
      "Name": "Windows.Graphics.Imaging.BitmapFlip"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "NearestNeighbor",
          "Value": "0"
        },
        {
          "Name": "Linear",
          "Value": "1"
        },
        {
          "Name": "Cubic",
          "Value": "2"
        },
        {
          "Name": "Fant",
          "Value": "3"
        }
      ],
      "Name": "Windows.Graphics.Imaging.BitmapInterpolationMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unknown",
          "Value": "0"
        },
        {
          "Name": "Rgba16",
          "Value": "12"
        },
        {
          "Name": "Rgba8",
          "Value": "30"
        },
        {
          "Name": "Bgra8",
          "Value": "87"
        }
      ],
      "Name": "Windows.Graphics.Imaging.BitmapPixelFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Clockwise90Degrees",
          "Value": "1"
        },
        {
          "Name": "Clockwise180Degrees",
          "Value": "2"
        },
        {
          "Name": "Clockwise270Degrees",
          "Value": "3"
        }
      ],
      "Name": "Windows.Graphics.Imaging.BitmapRotation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "DoNotColorManage",
          "Value": "0"
        },
        {
          "Name": "ColorManageToSRgb",
          "Value": "1"
        }
      ],
      "Name": "Windows.Graphics.Imaging.ColorManagementMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "IgnoreExifOrientation",
          "Value": "0"
        },
        {
          "Name": "RespectExifOrientation",
          "Value": "1"
        }
      ],
      "Name": "Windows.Graphics.Imaging.ExifOrientationMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "Y4Cb2Cr0",
          "Value": "1"
        },
        {
          "Name": "Y4Cb2Cr2",
          "Value": "2"
        },
        {
          "Name": "Y4Cb4Cr4",
          "Value": "3"
        }
      ],
      "Name": "Windows.Graphics.Imaging.JpegSubsamplingMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Automatic",
          "Value": "0"
        },
        {
          "Name": "None",
          "Value": "1"
        },
        {
          "Name": "Sub",
          "Value": "2"
        },
        {
          "Name": "Up",
          "Value": "3"
        },
        {
          "Name": "Average",
          "Value": "4"
        },
        {
          "Name": "Paeth",
          "Value": "5"
        },
        {
          "Name": "Adaptive",
          "Value": "6"
        }
      ],
      "Name": "Windows.Graphics.Imaging.PngFilterMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Automatic",
          "Value": "0"
        },
        {
          "Name": "None",
          "Value": "1"
        },
        {
          "Name": "Ccitt3",
          "Value": "2"
        },
        {
          "Name": "Ccitt4",
          "Value": "3"
        },
        {
          "Name": "Lzw",
          "Value": "4"
        },
        {
          "Name": "Rle",
          "Value": "5"
        },
        {
          "Name": "Zip",
          "Value": "6"
        },
        {
          "Name": "LzwhDifferencing",
          "Value": "7"
        }
      ],
      "Name": "Windows.Graphics.Imaging.TiffCompressionMode"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "ForceApplicationShutdown",
          "Value": "1"
        },
        {
          "Name": "DevelopmentMode",
          "Value": "2"
        }
      ],
      "Name": "Windows.Management.Deployment.DeploymentOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Queued",
          "Value": "0"
        },
        {
          "Name": "Processing",
          "Value": "1"
        }
      ],
      "Name": "Windows.Management.Deployment.DeploymentProgressState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "NotInstalled",
          "Value": "0"
        },
        {
          "Name": "Staged",
          "Value": "1"
        },
        {
          "Name": "Installed",
          "Value": "2"
        }
      ],
      "Name": "Windows.Management.Deployment.PackageInstallState"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "PreserveApplicationData",
          "Value": "4096"
        }
      ],
      "Name": "Windows.Management.Deployment.RemovalOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "Raw",
          "Value": "1"
        }
      ],
      "Name": "Windows.Media.AudioProcessing"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Other",
          "Value": "0"
        },
        {
          "Name": "Communications",
          "Value": "1"
        }
      ],
      "Name": "Windows.Media.Capture.MediaCategory"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "VideoPreview",
          "Value": "0"
        },
        {
          "Name": "VideoRecord",
          "Value": "1"
        },
        {
          "Name": "Audio",
          "Value": "2"
        },
        {
          "Name": "Photo",
          "Value": "3"
        }
      ],
      "Name": "Windows.Media.Capture.MediaStreamType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Auto",
          "Value": "0"
        },
        {
          "Name": "VideoPreview",
          "Value": "1"
        },
        {
          "Name": "Photo",
          "Value": "2"
        }
      ],
      "Name": "Windows.Media.Capture.PhotoCaptureSource"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Disabled",
          "Value": "0"
        },
        {
          "Name": "FiftyHertz",
          "Value": "1"
        },
        {
          "Name": "SixtyHertz",
          "Value": "2"
        }
      ],
      "Name": "Windows.Media.Capture.PowerlineFrequency"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "AudioAndVideo",
          "Value": "0"
        },
        {
          "Name": "Audio",
          "Value": "1"
        },
        {
          "Name": "Video",
          "Value": "2"
        }
      ],
      "Name": "Windows.Media.Capture.StreamingCaptureMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "AllStreamsIndependent",
          "Value": "0"
        },
        {
          "Name": "PreviewRecordStreamsIdentical",
          "Value": "1"
        },
        {
          "Name": "PreviewPhotoStreamsIdentical",
          "Value": "2"
        },
        {
          "Name": "RecordPhotoStreamsIdentical",
          "Value": "3"
        },
        {
          "Name": "AllStreamsIdentical",
          "Value": "4"
        }
      ],
      "Name": "Windows.Media.Capture.VideoDeviceCharacteristic"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Clockwise90Degrees",
          "Value": "1"
        },
        {
          "Name": "Clockwise180Degrees",
          "Value": "2"
        },
        {
          "Name": "Clockwise270Degrees",
          "Value": "3"
        }
      ],
      "Name": "Windows.Media.Capture.VideoRotation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Done",
          "Value": "0"
        },
        {
          "Name": "UnknownError",
          "Value": "1"
        },
        {
          "Name": "AppReportedError",
          "Value": "2"
        },
        {
          "Name": "UnsupportedProtectionSystem",
          "Value": "3"
        },
        {
          "Name": "ProtectionSystemFailure",
          "Value": "4"
        },
        {
          "Name": "UnsupportedEncodingFormat",
          "Value": "5"
        },
        {
          "Name": "MissingSampleRequestedEventHandler",
          "Value": "6"
        }
      ],
      "Name": "Windows.Media.Core.MediaStreamSourceClosedReason"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Other",
          "Value": "0"
        },
        {
          "Name": "OutOfMemory",
          "Value": "1"
        },
        {
          "Name": "FailedToOpenFile",
          "Value": "2"
        },
        {
          "Name": "FailedToConnectToServer",
          "Value": "3"
        },
        {
          "Name": "ConnectionToServerLost",
          "Value": "4"
        },
        {
          "Name": "UnspecifiedNetworkError",
          "Value": "5"
        },
        {
          "Name": "DecodeError",
          "Value": "6"
        },
        {
          "Name": "UnsupportedMediaFormat",
          "Value": "7"
        }
      ],
      "Name": "Windows.Media.Core.MediaStreamSourceErrorStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "Communications",
          "Value": "1"
        }
      ],
      "Name": "Windows.Media.Devices.AudioDeviceRole"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "FullRange",
          "Value": "0"
        },
        {
          "Name": "Macro",
          "Value": "1"
        },
        {
          "Name": "Normal",
          "Value": "2"
        }
      ],
      "Name": "Windows.Media.Devices.AutoFocusRange"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Auto",
          "Value": "0"
        },
        {
          "Name": "Manual",
          "Value": "1"
        },
        {
          "Name": "Macro",
          "Value": "2"
        },
        {
          "Name": "Portrait",
          "Value": "3"
        },
        {
          "Name": "Sport",
          "Value": "4"
        },
        {
          "Name": "Snow",
          "Value": "5"
        },
        {
          "Name": "Night",
          "Value": "6"
        },
        {
          "Name": "Beach",
          "Value": "7"
        },
        {
          "Name": "Sunset",
          "Value": "8"
        },
        {
          "Name": "Candlelight",
          "Value": "9"
        },
        {
          "Name": "Landscape",
          "Value": "10"
        },
        {
          "Name": "NightPortrait",
          "Value": "11"
        },
        {
          "Name": "Backlit",
          "Value": "12"
        }
      ],
      "Name": "Windows.Media.Devices.CaptureSceneMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Photo",
          "Value": "1"
        },
        {
          "Name": "Video",
          "Value": "2"
        }
      ],
      "Name": "Windows.Media.Devices.CaptureUse"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Auto",
          "Value": "0"
        },
        {
          "Name": "Manual",
          "Value": "1"
        },
        {
          "Name": "Cloudy",
          "Value": "2"
        },
        {
          "Name": "Daylight",
          "Value": "3"
        },
        {
          "Name": "Flash",
          "Value": "4"
        },
        {
          "Name": "Fluorescent",
          "Value": "5"
        },
        {
          "Name": "Tungsten",
          "Value": "6"
        },
        {
          "Name": "Candlelight",
          "Value": "7"
        }
      ],
      "Name": "Windows.Media.Devices.ColorTemperaturePreset"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Auto",
          "Value": "0"
        },
        {
          "Name": "Single",
          "Value": "1"
        },
        {
          "Name": "Continuous",
          "Value": "2"
        },
        {
          "Name": "Manual",
          "Value": "3"
        }
      ],
      "Name": "Windows.Media.Devices.FocusMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Auto",
          "Value": "0"
        },
        {
          "Name": "Manual",
          "Value": "1"
        },
        {
          "Name": "AutoMacro",
          "Value": "2"
        },
        {
          "Name": "AutoNormal",
          "Value": "3"
        },
        {
          "Name": "AutoInfinity",
          "Value": "4"
        },
        {
          "Name": "AutoHyperfocal",
          "Value": "5"
        }
      ],
      "Name": "Windows.Media.Devices.FocusPreset"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Auto",
          "Value": "0"
        },
        {
          "Name": "Iso50",
          "Value": "1"
        },
        {
          "Name": "Iso80",
          "Value": "2"
        },
        {
          "Name": "Iso100",
          "Value": "3"
        },
        {
          "Name": "Iso200",
          "Value": "4"
        },
        {
          "Name": "Iso400",
          "Value": "5"
        },
        {
          "Name": "Iso800",
          "Value": "6"
        },
        {
          "Name": "Iso1600",
          "Value": "7"
        },
        {
          "Name": "Iso3200",
          "Value": "8"
        },
        {
          "Name": "Iso6400",
          "Value": "9"
        },
        {
          "Name": "Iso12800",
          "Value": "10"
        },
        {
          "Name": "Iso25600",
          "Value": "11"
        }
      ],
      "Name": "Windows.Media.Devices.IsoSpeedPreset"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Infinity",
          "Value": "0"
        },
        {
          "Name": "Hyperfocal",
          "Value": "1"
        },
        {
          "Name": "Nearest",
          "Value": "2"
        }
      ],
      "Name": "Windows.Media.Devices.ManualFocusDistance"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Uninitialized",
          "Value": "0"
        },
        {
          "Name": "Lost",
          "Value": "1"
        },
        {
          "Name": "Searching",
          "Value": "2"
        },
        {
          "Name": "Focused",
          "Value": "3"
        },
        {
          "Name": "Failed",
          "Value": "4"
        }
      ],
      "Name": "Windows.Media.Devices.MediaCaptureFocusState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unknown",
          "Value": "0"
        },
        {
          "Name": "Face",
          "Value": "1"
        }
      ],
      "Name": "Windows.Media.Devices.RegionOfInterestType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Fast",
          "Value": "0"
        },
        {
          "Name": "Precise",
          "Value": "1"
        }
      ],
      "Name": "Windows.Media.Editing.MediaTrimmingPreference"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "NearestFrame",
          "Value": "0"
        },
        {
          "Name": "NearestKeyFrame",
          "Value": "1"
        }
      ],
      "Name": "Windows.Media.Editing.VideoFramePrecision"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Other",
          "Value": "0"
        },
        {
          "Name": "AcousticEchoCancellation",
          "Value": "1"
        },
        {
          "Name": "NoiseSuppression",
          "Value": "2"
        },
        {
          "Name": "AutomaticGainControl",
          "Value": "3"
        },
        {
          "Name": "BeamForming",
          "Value": "4"
        },
        {
          "Name": "ConstantToneRemoval",
          "Value": "5"
        },
        {
          "Name": "Equalizer",
          "Value": "6"
        },
        {
          "Name": "LoudnessEqualizer",
          "Value": "7"
        },
        {
          "Name": "BassBoost",
          "Value": "8"
        },
        {
          "Name": "VirtualSurround",
          "Value": "9"
        },
        {
          "Name": "VirtualHeadphones",
          "Value": "10"
        },
        {
          "Name": "SpeakerFill",
          "Value": "11"
        },
        {
          "Name": "RoomCorrection",
          "Value": "12"
        },
        {
          "Name": "BassManagement",
          "Value": "13"
        },
        {
          "Name": "EnvironmentalEffects",
          "Value": "14"
        },
        {
          "Name": "SpeakerProtection",
          "Value": "15"
        },
        {
          "Name": "SpeakerCompensation",
          "Value": "16"
        },
        {
          "Name": "DynamicRangeCompression",
          "Value": "17"
        }
      ],
      "Name": "Windows.Media.Effects.AudioEffectType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Closed",
          "Value": "0"
        },
        {
          "Name": "Changing",
          "Value": "1"
        },
        {
          "Name": "Stopped",
          "Value": "2"
        },
        {
          "Name": "Playing",
          "Value": "3"
        },
        {
          "Name": "Paused",
          "Value": "4"
        }
      ],
      "Name": "Windows.Media.MediaPlaybackStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unknown",
          "Value": "0"
        },
        {
          "Name": "Music",
          "Value": "1"
        },
        {
          "Name": "Video",
          "Value": "2"
        },
        {
          "Name": "Image",
          "Value": "3"
        }
      ],
      "Name": "Windows.Media.MediaPlaybackType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Auto",
          "Value": "0"
        },
        {
          "Name": "High",
          "Value": "1"
        },
        {
          "Name": "Medium",
          "Value": "2"
        },
        {
          "Name": "Low",
          "Value": "3"
        }
      ],
      "Name": "Windows.Media.MediaProperties.AudioEncodingQuality"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Nv12",
          "Value": "0"
        },
        {
          "Name": "Bgra8",
          "Value": "1"
        }
      ],
      "Name": "Windows.Media.MediaProperties.MediaPixelFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Bmp",
          "Value": "0"
        },
        {
          "Name": "Bgra8",
          "Value": "1"
        }
      ],
      "Name": "Windows.Media.MediaProperties.MediaThumbnailFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Auto",
          "Value": "0"
        },
        {
          "Name": "HD1080p",
          "Value": "1"
        },
        {
          "Name": "HD720p",
          "Value": "2"
        },
        {
          "Name": "Wvga",
          "Value": "3"
        },
        {
          "Name": "Ntsc",
          "Value": "4"
        },
        {
          "Name": "Pal",
          "Value": "5"
        },
        {
          "Name": "Vga",
          "Value": "6"
        },
        {
          "Name": "Qvga",
          "Value": "7"
        }
      ],
      "Name": "Windows.Media.MediaProperties.VideoEncodingQuality"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unknown",
          "Value": "0"
        },
        {
          "Name": "Aborted",
          "Value": "1"
        },
        {
          "Name": "NetworkError",
          "Value": "2"
        },
        {
          "Name": "DecodingError",
          "Value": "3"
        },
        {
          "Name": "SourceNotSupported",
          "Value": "4"
        }
      ],
      "Name": "Windows.Media.Playback.MediaPlayerError"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Closed",
          "Value": "0"
        },
        {
          "Name": "Opening",
          "Value": "1"
        },
        {
          "Name": "Buffering",
          "Value": "2"
        },
        {
          "Name": "Playing",
          "Value": "3"
        },
        {
          "Name": "Paused",
          "Value": "4"
        },
        {
          "Name": "Stopped",
          "Value": "5"
        }
      ],
      "Name": "Windows.Media.Playback.MediaPlayerState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "DeviceNotResponding",
          "Value": "1"
        },
        {
          "Name": "DeviceError",
          "Value": "2"
        },
        {
          "Name": "DeviceLocked",
          "Value": "3"
        }
      ],
      "Name": "Windows.Media.PlayTo.PlayToConnectionError"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Disconnected",
          "Value": "0"
        },
        {
          "Name": "Connected",
          "Value": "1"
        },
        {
          "Name": "Rendering",
          "Value": "2"
        }
      ],
      "Name": "Windows.Media.PlayTo.PlayToConnectionState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "TrustNotRequired",
          "Value": "0"
        },
        {
          "Name": "TrustEstablished",
          "Value": "1"
        },
        {
          "Name": "EnvironmentNotSupported",
          "Value": "2"
        },
        {
          "Name": "DriverNotSupported",
          "Value": "3"
        },
        {
          "Name": "DriverSigningFailure",
          "Value": "4"
        },
        {
          "Name": "UnknownFailure",
          "Value": "5"
        }
      ],
      "Name": "Windows.Media.Protection.GraphicsTrustStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "NotStarted",
          "Value": "0"
        },
        {
          "Name": "UpdatesInProgress",
          "Value": "1"
        },
        {
          "Name": "UserCancelled",
          "Value": "2"
        },
        {
          "Name": "AppComponentsMayNeedUpdating",
          "Value": "3"
        },
        {
          "Name": "NoComponentsFound",
          "Value": "4"
        }
      ],
      "Name": "Windows.Media.Protection.RenewalStatus"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "UserModeComponentLoad",
          "Value": "1"
        },
        {
          "Name": "KernelModeComponentLoad",
          "Value": "2"
        },
        {
          "Name": "AppComponent",
          "Value": "4"
        },
        {
          "Name": "GlobalRevocationListLoadFailed",
          "Value": "16"
        },
        {
          "Name": "InvalidGlobalRevocationListSignature",
          "Value": "32"
        },
        {
          "Name": "GlobalRevocationListAbsent",
          "Value": "4096"
        },
        {
          "Name": "ComponentRevoked",
          "Value": "8192"
        },
        {
          "Name": "InvalidComponentCertificateExtendedKeyUse",
          "Value": "16384"
        },
        {
          "Name": "ComponentCertificateRevoked",
          "Value": "32768"
        },
        {
          "Name": "InvalidComponentCertificateRoot",
          "Value": "65536"
        },
        {
          "Name": "ComponentHighSecurityCertificateRevoked",
          "Value": "131072"
        },
        {
          "Name": "ComponentLowSecurityCertificateRevoked",
          "Value": "262144"
        },
        {
          "Name": "BootDriverVerificationFailed",
          "Value": "1048576"
        },
        {
          "Name": "ComponentSignedWithTestCertificate",
          "Value": "16777216"
        },
        {
          "Name": "EncryptionFailure",
          "Value": "268435456"
        }
      ],
      "Name": "Windows.Media.Protection.RevocationAndRenewalReasons"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Other",
          "Value": "0"
        },
        {
          "Name": "ForegroundOnlyMedia",
          "Value": "1"
        },
        {
          "Name": "BackgroundCapableMedia",
          "Value": "2"
        },
        {
          "Name": "Communications",
          "Value": "3"
        },
        {
          "Name": "Alerts",
          "Value": "4"
        },
        {
          "Name": "SoundEffects",
          "Value": "5"
        },
        {
          "Name": "GameEffects",
          "Value": "6"
        },
        {
          "Name": "GameMedia",
          "Value": "7"
        }
      ],
      "Name": "Windows.Media.Render.AudioRenderCategory"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Muted",
          "Value": "0"
        },
        {
          "Name": "Low",
          "Value": "1"
        },
        {
          "Name": "Full",
          "Value": "2"
        }
      ],
      "Name": "Windows.Media.SoundLevel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "TooNoisy",
          "Value": "1"
        },
        {
          "Name": "NoSignal",
          "Value": "2"
        },
        {
          "Name": "TooLoud",
          "Value": "3"
        },
        {
          "Name": "TooQuiet",
          "Value": "4"
        },
        {
          "Name": "TooFast",
          "Value": "5"
        },
        {
          "Name": "TooSlow",
          "Value": "6"
        }
      ],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionAudioProblem"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "High",
          "Value": "0"
        },
        {
          "Name": "Medium",
          "Value": "1"
        },
        {
          "Name": "Low",
          "Value": "2"
        },
        {
          "Name": "Rejected",
          "Value": "3"
        }
      ],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionConfidence"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "Min",
          "Value": "1"
        },
        {
          "Name": "Max",
          "Value": "2"
        }
      ],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionConstraintProbability"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Topic",
          "Value": "0"
        },
        {
          "Name": "List",
          "Value": "1"
        },
        {
          "Name": "Grammar",
          "Value": "2"
        },
        {
          "Name": "VoiceCommandDefinition",
          "Value": "3"
        }
      ],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionConstraintType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Success",
          "Value": "0"
        },
        {
          "Name": "TopicLanguageNotSupported",
          "Value": "1"
        },
        {
          "Name": "GrammarLanguageMismatch",
          "Value": "2"
        },
        {
          "Name": "GrammarCompilationFailure",
          "Value": "3"
        },
        {
          "Name": "AudioQualityFailure",
          "Value": "4"
        },
        {
          "Name": "UserCanceled",
          "Value": "5"
        },
        {
          "Name": "Unknown",
          "Value": "6"
        }
      ],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionResultStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "WebSearch",
          "Value": "0"
        },
        {
          "Name": "Dictation",
          "Value": "1"
        }
      ],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionScenario"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Idle",
          "Value": "0"
        },
        {
          "Name": "Capturing",
          "Value": "1"
        },
        {
          "Name": "Processing",
          "Value": "2"
        },
        {
          "Name": "SoundStarted",
          "Value": "3"
        },
        {
          "Name": "SoundEnded",
          "Value": "4"
        }
      ],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognizerState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Male",
          "Value": "0"
        },
        {
          "Name": "Female",
          "Value": "1"
        }
      ],
      "Name": "Windows.Media.SpeechSynthesis.VoiceGender"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Play",
          "Value": "0"
        },
        {
          "Name": "Pause",
          "Value": "1"
        },
        {
          "Name": "Stop",
          "Value": "2"
        },
        {
          "Name": "Record",
          "Value": "3"
        },
        {
          "Name": "FastForward",
          "Value": "4"
        },
        {
          "Name": "Rewind",
          "Value": "5"
        },
        {
          "Name": "Next",
          "Value": "6"
        },
        {
          "Name": "Previous",
          "Value": "7"
        },
        {
          "Name": "ChannelUp",
          "Value": "8"
        },
        {
          "Name": "ChannelDown",
          "Value": "9"
        }
      ],
      "Name": "Windows.Media.SystemMediaTransportControlsButton"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "SoundLevel",
          "Value": "0"
        }
      ],
      "Name": "Windows.Media.SystemMediaTransportControlsProperty"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "MrfCrf444",
          "Value": "1"
        }
      ],
      "Name": "Windows.Media.Transcoding.MediaVideoProcessingAlgorithm"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Unknown",
          "Value": "1"
        },
        {
          "Name": "InvalidProfile",
          "Value": "2"
        },
        {
          "Name": "CodecNotFound",
          "Value": "3"
        }
      ],
      "Name": "Windows.Media.Transcoding.TranscodeFailureReason"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Parallel",
          "Value": "0"
        },
        {
          "Name": "Serialized",
          "Value": "1"
        }
      ],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferBehavior"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "UnrestrictedOnly",
          "Value": "1"
        },
        {
          "Name": "Always",
          "Value": "2"
        }
      ],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferCostPolicy"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "High",
          "Value": "1"
        }
      ],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferPriority"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Idle",
          "Value": "0"
        },
        {
          "Name": "Running",
          "Value": "1"
        },
        {
          "Name": "PausedByApplication",
          "Value": "2"
        },
        {
          "Name": "PausedCostedNetwork",
          "Value": "3"
        },
        {
          "Name": "PausedNoNetwork",
          "Value": "4"
        },
        {
          "Name": "Completed",
          "Value": "5"
        },
        {
          "Name": "Canceled",
          "Value": "6"
        },
        {
          "Name": "Error",
          "Value": "7"
        },
        {
          "Name": "PausedSystemPolicy",
          "Value": "32"
        }
      ],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Pap",
          "Value": "1"
        },
        {
          "Name": "Chap",
          "Value": "2"
        },
        {
          "Name": "Mschapv2",
          "Value": "3"
        }
      ],
      "Name": "Windows.Networking.Connectivity.CellularApnAuthenticationType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "PerMinute",
          "Value": "0"
        },
        {
          "Name": "PerHour",
          "Value": "1"
        },
        {
          "Name": "PerDay",
          "Value": "2"
        },
        {
          "Name": "Total",
          "Value": "3"
        }
      ],
      "Name": "Windows.Networking.Connectivity.DataUsageGranularity"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Unauthenticated",
          "Value": "1"
        },
        {
          "Name": "Authenticated",
          "Value": "2"
        }
      ],
      "Name": "Windows.Networking.Connectivity.DomainConnectivityLevel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Unknown",
          "Value": "1"
        },
        {
          "Name": "Open80211",
          "Value": "2"
        },
        {
          "Name": "SharedKey80211",
          "Value": "3"
        },
        {
          "Name": "Wpa",
          "Value": "4"
        },
        {
          "Name": "WpaPsk",
          "Value": "5"
        },
        {
          "Name": "WpaNone",
          "Value": "6"
        },
        {
          "Name": "Rsna",
          "Value": "7"
        },
        {
          "Name": "RsnaPsk",
          "Value": "8"
        },
        {
          "Name": "Ihv",
          "Value": "9"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkAuthenticationType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "LocalAccess",
          "Value": "1"
        },
        {
          "Name": "ConstrainedInternetAccess",
          "Value": "2"
        },
        {
          "Name": "InternetAccess",
          "Value": "3"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkConnectivityLevel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unknown",
          "Value": "0"
        },
        {
          "Name": "Unrestricted",
          "Value": "1"
        },
        {
          "Name": "Fixed",
          "Value": "2"
        },
        {
          "Name": "Variable",
          "Value": "3"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkCostType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Unknown",
          "Value": "1"
        },
        {
          "Name": "Wep",
          "Value": "2"
        },
        {
          "Name": "Wep40",
          "Value": "3"
        },
        {
          "Name": "Wep104",
          "Value": "4"
        },
        {
          "Name": "Tkip",
          "Value": "5"
        },
        {
          "Name": "Ccmp",
          "Value": "6"
        },
        {
          "Name": "WpaUseGroup",
          "Value": "7"
        },
        {
          "Name": "RsnUseGroup",
          "Value": "8"
        },
        {
          "Name": "Ihv",
          "Value": "9"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkEncryptionType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Internet",
          "Value": "1"
        },
        {
          "Name": "PrivateNetwork",
          "Value": "2"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkTypes"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "NotRoaming",
          "Value": "1"
        },
        {
          "Name": "Roaming",
          "Value": "2"
        }
      ],
      "Name": "Windows.Networking.Connectivity.RoamingStates"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "DoNotCare",
          "Value": "0"
        },
        {
          "Name": "No",
          "Value": "1"
        },
        {
          "Name": "Yes",
          "Value": "2"
        }
      ],
      "Name": "Windows.Networking.Connectivity.TriStates"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Gprs",
          "Value": "1"
        },
        {
          "Name": "Edge",
          "Value": "2"
        },
        {
          "Name": "Umts",
          "Value": "4"
        },
        {
          "Name": "Hsdpa",
          "Value": "8"
        },
        {
          "Name": "Hsupa",
          "Value": "16"
        },
        {
          "Name": "LteAdvanced",
          "Value": "32"
        },
        {
          "Name": "Cdma1xRtt",
          "Value": "65536"
        },
        {
          "Name": "Cdma1xEvdo",
          "Value": "131072"
        },
        {
          "Name": "Cdma1xEvdoRevA",
          "Value": "262144"
        },
        {
          "Name": "Cdma1xEvdv",
          "Value": "524288"
        },
        {
          "Name": "Cdma3xRtt",
          "Value": "1048576"
        },
        {
          "Name": "Cdma1xEvdoRevB",
          "Value": "2097152"
        },
        {
          "Name": "CdmaUmb",
          "Value": "4194304"
        },
        {
          "Name": "Custom",
          "Value": "2147483648"
        }
      ],
      "Name": "Windows.Networking.Connectivity.WwanDataClass"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Deregistered",
          "Value": "1"
        },
        {
          "Name": "Searching",
          "Value": "2"
        },
        {
          "Name": "Home",
          "Value": "3"
        },
        {
          "Name": "Roaming",
          "Value": "4"
        },
        {
          "Name": "Partner",
          "Value": "5"
        },
        {
          "Name": "Denied",
          "Value": "6"
        }
      ],
      "Name": "Windows.Networking.Connectivity.WwanNetworkRegistrationState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Suffix",
          "Value": "0"
        },
        {
          "Name": "FullyQualified",
          "Value": "1"
        }
      ],
      "Name": "Windows.Networking.DomainNameType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "OptimizeForLongConnections",
          "Value": "2"
        }
      ],
      "Name": "Windows.Networking.HostNameSortOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "DomainName",
          "Value": "0"
        },
        {
          "Name": "Ipv4",
          "Value": "1"
        },
        {
          "Name": "Ipv6",
          "Value": "2"
        },
        {
          "Name": "Bluetooth",
          "Value": "3"
        }
      ],
      "Name": "Windows.Networking.HostNameType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "NoError",
          "Value": "0"
        },
        {
          "Name": "LoginSucceeded",
          "Value": "50"
        },
        {
          "Name": "LoginFailed",
          "Value": "100"
        },
        {
          "Name": "RadiusServerError",
          "Value": "102"
        },
        {
          "Name": "NetworkAdministratorError",
          "Value": "105"
        },
        {
          "Name": "LoginAborted",
          "Value": "151"
        },
        {
          "Name": "AccessGatewayInternalError",
          "Value": "255"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.HotspotAuthenticationResponseCode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Wlan",
          "Value": "0"
        },
        {
          "Name": "Wwan",
          "Value": "1"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.ProfileMediaType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Browse",
          "Value": "1"
        },
        {
          "Name": "Triggered",
          "Value": "2"
        }
      ],
      "Name": "Windows.Networking.Proximity.PeerDiscoveryTypes"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Peer",
          "Value": "0"
        },
        {
          "Name": "Host",
          "Value": "1"
        },
        {
          "Name": "Client",
          "Value": "2"
        }
      ],
      "Name": "Windows.Networking.Proximity.PeerRole"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Created",
          "Value": "0"
        },
        {
          "Name": "Started",
          "Value": "1"
        },
        {
          "Name": "EnumerationCompleted",
          "Value": "2"
        },
        {
          "Name": "Stopping",
          "Value": "3"
        },
        {
          "Name": "Stopped",
          "Value": "4"
        },
        {
          "Name": "Aborted",
          "Value": "5"
        }
      ],
      "Name": "Windows.Networking.Proximity.PeerWatcherStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "PeerFound",
          "Value": "0"
        },
        {
          "Name": "Listening",
          "Value": "1"
        },
        {
          "Name": "Connecting",
          "Value": "2"
        },
        {
          "Name": "Completed",
          "Value": "3"
        },
        {
          "Name": "Canceled",
          "Value": "4"
        },
        {
          "Name": "Failed",
          "Value": "5"
        }
      ],
      "Name": "Windows.Networking.Proximity.TriggeredConnectState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Toast",
          "Value": "0"
        },
        {
          "Name": "Tile",
          "Value": "1"
        },
        {
          "Name": "Badge",
          "Value": "2"
        },
        {
          "Name": "Raw",
          "Value": "3"
        },
        {
          "Name": "TileFlyout",
          "Value": "4"
        }
      ],
      "Name": "Windows.Networking.PushNotifications.PushNotificationType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "FastUserSwitched",
          "Value": "0"
        },
        {
          "Name": "LowPowerExit",
          "Value": "1"
        },
        {
          "Name": "QuietHoursExit",
          "Value": "2"
        },
        {
          "Name": "ApplicationRestart",
          "Value": "3"
        }
      ],
      "Name": "Windows.Networking.Sockets.ControlChannelTriggerResetReason"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "RequestSoftwareSlot",
          "Value": "0"
        },
        {
          "Name": "RequestHardwareSlot",
          "Value": "1"
        }
      ],
      "Name": "Windows.Networking.Sockets.ControlChannelTriggerResourceType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "HardwareSlotRequested",
          "Value": "0"
        },
        {
          "Name": "SoftwareSlotAllocated",
          "Value": "1"
        },
        {
          "Name": "HardwareSlotAllocated",
          "Value": "2"
        },
        {
          "Name": "PolicyError",
          "Value": "3"
        },
        {
          "Name": "SystemError",
          "Value": "4"
        },
        {
          "Name": "TransportDisconnected",
          "Value": "5"
        },
        {
          "Name": "ServiceUnavailable",
          "Value": "6"
        }
      ],
      "Name": "Windows.Networking.Sockets.ControlChannelTriggerStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unknown",
          "Value": "0"
        },
        {
          "Name": "OperationAborted",
          "Value": "1"
        },
        {
          "Name": "HttpInvalidServerResponse",
          "Value": "2"
        },
        {
          "Name": "ConnectionTimedOut",
          "Value": "3"
        },
        {
          "Name": "AddressFamilyNotSupported",
          "Value": "4"
        },
        {
          "Name": "SocketTypeNotSupported",
          "Value": "5"
        },
        {
          "Name": "HostNotFound",
          "Value": "6"
        },
        {
          "Name": "NoDataRecordOfRequestedType",
          "Value": "7"
        },
        {
          "Name": "NonAuthoritativeHostNotFound",
          "Value": "8"
        },
        {
          "Name": "ClassTypeNotFound",
          "Value": "9"
        },
        {
          "Name": "AddressAlreadyInUse",
          "Value": "10"
        },
        {
          "Name": "CannotAssignRequestedAddress",
          "Value": "11"
        },
        {
          "Name": "ConnectionRefused",
          "Value": "12"
        },
        {
          "Name": "NetworkIsUnreachable",
          "Value": "13"
        },
        {
          "Name": "UnreachableHost",
          "Value": "14"
        },
        {
          "Name": "NetworkIsDown",
          "Value": "15"
        },
        {
          "Name": "NetworkDroppedConnectionOnReset",
          "Value": "16"
        },
        {
          "Name": "SoftwareCausedConnectionAbort",
          "Value": "17"
        },
        {
          "Name": "ConnectionResetByPeer",
          "Value": "18"
        },
        {
          "Name": "HostIsDown",
          "Value": "19"
        },
        {
          "Name": "NoAddressesFound",
          "Value": "20"
        },
        {
          "Name": "TooManyOpenFiles",
          "Value": "21"
        },
        {
          "Name": "MessageTooLong",
          "Value": "22"
        },
        {
          "Name": "CertificateExpired",
          "Value": "23"
        },
        {
          "Name": "CertificateUntrustedRoot",
          "Value": "24"
        },
        {
          "Name": "CertificateCommonNameIsIncorrect",
          "Value": "25"
        },
        {
          "Name": "CertificateWrongUsage",
          "Value": "26"
        },
        {
          "Name": "CertificateRevoked",
          "Value": "27"
        },
        {
          "Name": "CertificateNoRevocationCheck",
          "Value": "28"
        },
        {
          "Name": "CertificateRevocationServerOffline",
          "Value": "29"
        },
        {
          "Name": "CertificateIsInvalid",
          "Value": "30"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketErrorStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Binary",
          "Value": "0"
        },
        {
          "Name": "Utf8",
          "Value": "1"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketMessageType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "PlainSocket",
          "Value": "0"
        },
        {
          "Name": "Ssl",
          "Value": "1"
        },
        {
          "Name": "SslAllowNullEncryption",
          "Value": "2"
        },
        {
          "Name": "BluetoothEncryptionAllowNullAuthentication",
          "Value": "3"
        },
        {
          "Name": "BluetoothEncryptionWithAuthentication",
          "Value": "4"
        },
        {
          "Name": "Ssl3AllowWeakEncryption",
          "Value": "5"
        },
        {
          "Name": "Tls10",
          "Value": "6"
        },
        {
          "Name": "Tls11",
          "Value": "7"
        },
        {
          "Name": "Tls12",
          "Value": "8"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketProtectionLevel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Normal",
          "Value": "0"
        },
        {
          "Name": "LowLatency",
          "Value": "1"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketQualityOfService"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Ignorable",
          "Value": "1"
        },
        {
          "Name": "Fatal",
          "Value": "2"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketSslErrorSeverity"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "UsernamePassword",
          "Value": "0"
        },
        {
          "Name": "UsernameOtpPin",
          "Value": "1"
        },
        {
          "Name": "UsernamePasswordAndPin",
          "Value": "2"
        },
        {
          "Name": "UsernamePasswordChange",
          "Value": "3"
        },
        {
          "Name": "SmartCard",
          "Value": "4"
        },
        {
          "Name": "ProtectedCertificate",
          "Value": "5"
        },
        {
          "Name": "UnProtectedCertificate",
          "Value": "6"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnCredentialType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Send",
          "Value": "0"
        },
        {
          "Name": "Receive",
          "Value": "1"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnDataPathType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Idle",
          "Value": "0"
        },
        {
          "Name": "Active",
          "Value": "1"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnChannelActivityEventType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Ok",
          "Value": "0"
        },
        {
          "Name": "InvalidBufferSize",
          "Value": "1"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnPacketBufferStatus"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "Alternate",
          "Value": "1"
        }
      ],
      "Name": "Windows.Phone.ApplicationModel.ApplicationProfileModes"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Success",
          "Value": "0"
        },
        {
          "Name": "CancelledByUser",
          "Value": "1"
        },
        {
          "Name": "UnknownFailure",
          "Value": "2"
        }
      ],
      "Name": "Windows.Phone.Management.Deployment.EnterpriseEnrollmentStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Enrolled",
          "Value": "0"
        },
        {
          "Name": "Disabled",
          "Value": "1"
        },
        {
          "Name": "Revoked",
          "Value": "2"
        },
        {
          "Name": "Expired",
          "Value": "3"
        }
      ],
      "Name": "Windows.Phone.Management.Deployment.EnterpriseStatus"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Focus",
          "Value": "1"
        },
        {
          "Name": "Exposure",
          "Value": "2"
        },
        {
          "Name": "WhiteBalance",
          "Value": "4"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.AutoFocusParameters"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Macro",
          "Value": "1"
        },
        {
          "Name": "Normal",
          "Value": "2"
        },
        {
          "Name": "Full",
          "Value": "3"
        },
        {
          "Name": "Hyperfocal",
          "Value": "4"
        },
        {
          "Name": "Infinity",
          "Value": "5"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.AutoFocusRange"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Aac",
          "Value": "1"
        },
        {
          "Name": "Pcm",
          "Value": "2"
        },
        {
          "Name": "Amr",
          "Value": "3"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.CameraCaptureAudioFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "H264",
          "Value": "1"
        },
        {
          "Name": "Nv12",
          "Value": "2"
        },
        {
          "Name": "Argb",
          "Value": "3"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.CameraCaptureVideoFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Locked",
          "Value": "0"
        },
        {
          "Name": "NotLocked",
          "Value": "1"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.CameraFocusStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Auto",
          "Value": "1"
        },
        {
          "Name": "Macro",
          "Value": "2"
        },
        {
          "Name": "Portrait",
          "Value": "3"
        },
        {
          "Name": "Sport",
          "Value": "4"
        },
        {
          "Name": "Snow",
          "Value": "5"
        },
        {
          "Name": "Night",
          "Value": "6"
        },
        {
          "Name": "Beach",
          "Value": "7"
        },
        {
          "Name": "Sunset",
          "Value": "8"
        },
        {
          "Name": "Candlelight",
          "Value": "9"
        },
        {
          "Name": "Landscape",
          "Value": "10"
        },
        {
          "Name": "NightPortrait",
          "Value": "11"
        },
        {
          "Name": "Backlit",
          "Value": "12"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.CameraSceneMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Back",
          "Value": "0"
        },
        {
          "Name": "Front",
          "Value": "1"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.CameraSensorLocation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Off",
          "Value": "0"
        },
        {
          "Name": "Auto",
          "Value": "1"
        },
        {
          "Name": "On",
          "Value": "3"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.FlashState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Off",
          "Value": "0"
        },
        {
          "Name": "Auto",
          "Value": "1"
        },
        {
          "Name": "On",
          "Value": "2"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.FocusIlluminationMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Level1",
          "Value": "10"
        },
        {
          "Name": "Level1_b",
          "Value": "11"
        },
        {
          "Name": "Level1_1",
          "Value": "11"
        },
        {
          "Name": "Level1_2",
          "Value": "12"
        },
        {
          "Name": "Level1_3",
          "Value": "13"
        },
        {
          "Name": "Level2",
          "Value": "20"
        },
        {
          "Name": "Level2_1",
          "Value": "21"
        },
        {
          "Name": "Level2_2",
          "Value": "22"
        },
        {
          "Name": "Level3",
          "Value": "30"
        },
        {
          "Name": "Level3_1",
          "Value": "31"
        },
        {
          "Name": "Level3_2",
          "Value": "32"
        },
        {
          "Name": "Level4",
          "Value": "40"
        },
        {
          "Name": "Level4_1",
          "Value": "41"
        },
        {
          "Name": "Level4_2",
          "Value": "42"
        },
        {
          "Name": "Level5",
          "Value": "50"
        },
        {
          "Name": "Level5_1",
          "Value": "51"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.H264EncoderLevel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Baseline",
          "Value": "66"
        },
        {
          "Name": "Main",
          "Value": "77"
        },
        {
          "Name": "Extended",
          "Value": "88"
        },
        {
          "Name": "High",
          "Value": "100"
        },
        {
          "Name": "High10",
          "Value": "110"
        },
        {
          "Name": "ConstrainedBaseline",
          "Value": "256"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.H264EncoderProfile"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Off",
          "Value": "0"
        },
        {
          "Name": "Auto",
          "Value": "1"
        },
        {
          "Name": "On",
          "Value": "2"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.VideoTorchMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Cloudy",
          "Value": "1"
        },
        {
          "Name": "Daylight",
          "Value": "2"
        },
        {
          "Name": "Flash",
          "Value": "3"
        },
        {
          "Name": "Fluorescent",
          "Value": "4"
        },
        {
          "Name": "Tungsten",
          "Value": "5"
        },
        {
          "Name": "Candlelight",
          "Value": "6"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.WhiteBalancePreset"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "Earpiece",
          "Value": "1"
        },
        {
          "Name": "Speakerphone",
          "Value": "2"
        },
        {
          "Name": "Bluetooth",
          "Value": "3"
        },
        {
          "Name": "WiredHeadset",
          "Value": "4"
        },
        {
          "Name": "WiredHeadsetSpeakerOnly",
          "Value": "5"
        },
        {
          "Name": "BluetoothWithNoiseAndEchoCancellation",
          "Value": "6"
        },
        {
          "Name": "BluetoothPreferred",
          "Value": "7"
        }
      ],
      "Name": "Windows.Phone.Media.Devices.AudioRoutingEndpoint"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Earpiece",
          "Value": "1"
        },
        {
          "Name": "Speakerphone",
          "Value": "2"
        },
        {
          "Name": "Bluetooth",
          "Value": "4"
        }
      ],
      "Name": "Windows.Phone.Media.Devices.AvailableAudioRoutingEndpoints"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "PrivateNumber",
          "Value": "0"
        },
        {
          "Name": "UnknownNumber",
          "Value": "1"
        },
        {
          "Name": "BlockedNumber",
          "Value": "2"
        }
      ],
      "Name": "Windows.Phone.Networking.NetworkOperators.PhoneCallBlockedReason"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Started",
          "Value": "0"
        },
        {
          "Name": "Stopped",
          "Value": "1"
        }
      ],
      "Name": "Windows.Phone.Networking.NetworkOperators.PhoneCallFilterStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Allow",
          "Value": "0"
        },
        {
          "Name": "Block",
          "Value": "1"
        }
      ],
      "Name": "Windows.Phone.Networking.NetworkOperators.SmsFilterAction"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Started",
          "Value": "0"
        },
        {
          "Name": "Stopped",
          "Value": "1"
        }
      ],
      "Name": "Windows.Phone.Networking.NetworkOperators.SmsFilterStatus"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Private",
          "Value": "1"
        },
        {
          "Name": "Unknown",
          "Value": "2"
        }
      ],
      "Name": "Windows.Phone.Networking.NetworkOperators.TelephoneNumberCategories"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unknown",
          "Value": "0"
        },
        {
          "Name": "NotSupported",
          "Value": "1"
        },
        {
          "Name": "Supported",
          "Value": "2"
        }
      ],
      "Name": "Windows.Phone.Networking.Voip.SeamlessCallUpgradeSupport"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Audio",
          "Value": "1"
        },
        {
          "Name": "Video",
          "Value": "2"
        }
      ],
      "Name": "Windows.Phone.Networking.Voip.VoipCallMedia"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "UserIgnored",
          "Value": "0"
        },
        {
          "Name": "TimedOut",
          "Value": "1"
        },
        {
          "Name": "OtherIncomingCall",
          "Value": "2"
        },
        {
          "Name": "EmergencyCallExists",
          "Value": "3"
        },
        {
          "Name": "InvalidCallState",
          "Value": "4"
        }
      ],
      "Name": "Windows.Phone.Networking.Voip.VoipCallRejectReason"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Ended",
          "Value": "0"
        },
        {
          "Name": "Held",
          "Value": "1"
        },
        {
          "Name": "Active",
          "Value": "2"
        },
        {
          "Name": "Incoming",
          "Value": "3"
        },
        {
          "Name": "Outgoing",
          "Value": "4"
        }
      ],
      "Name": "Windows.Phone.Networking.Voip.VoipCallState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "QueryRemotePartySeamless",
          "Value": "0"
        }
      ],
      "Name": "Windows.Phone.Networking.Voip.VoipOperationType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Created",
          "Value": "0"
        },
        {
          "Name": "Modified",
          "Value": "1"
        },
        {
          "Name": "Deleted",
          "Value": "2"
        }
      ],
      "Name": "Windows.Phone.PersonalInformation.ContactChangeType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "SystemDefault",
          "Value": "0"
        },
        {
          "Name": "GivenNameFamilyName",
          "Value": "1"
        },
        {
          "Name": "FamilyNameGivenName",
          "Value": "2"
        }
      ],
      "Name": "Windows.Phone.PersonalInformation.ContactQueryResultOrdering"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "LimitedReadOnly",
          "Value": "0"
        },
        {
          "Name": "ReadOnly",
          "Value": "1"
        }
      ],
      "Name": "Windows.Phone.PersonalInformation.ContactStoreApplicationAccessMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "ReadOnly",
          "Value": "0"
        },
        {
          "Name": "ReadWrite",
          "Value": "1"
        }
      ],
      "Name": "Windows.Phone.PersonalInformation.ContactStoreSystemAccessMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Version2_1",
          "Value": "0"
        },
        {
          "Name": "Version3",
          "Value": "1"
        }
      ],
      "Name": "Windows.Phone.PersonalInformation.VCardFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Normal",
          "Value": "0"
        },
        {
          "Name": "Photo",
          "Value": "1"
        }
      ],
      "Name": "Windows.Phone.SocialInformation.FeedItemStyle"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Since",
          "Value": "0"
        },
        {
          "Name": "Until",
          "Value": "1"
        }
      ],
      "Name": "Windows.Phone.SocialInformation.FeedRequestDirection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Home",
          "Value": "0"
        },
        {
          "Name": "Contact",
          "Value": "1"
        },
        {
          "Name": "Dashboard",
          "Value": "2"
        }
      ],
      "Name": "Windows.Phone.SocialInformation.FeedType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "SmallThumbnail",
          "Value": "0"
        },
        {
          "Name": "LargeThumbnail",
          "Value": "1"
        },
        {
          "Name": "FullSize",
          "Value": "2"
        }
      ],
      "Name": "Windows.Phone.SocialInformation.ImageType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Generic",
          "Value": "1"
        },
        {
          "Name": "Count",
          "Value": "2"
        }
      ],
      "Name": "Windows.Phone.SocialInformation.ReactionDisplayKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "DownloadHomeFeed",
          "Value": "0"
        },
        {
          "Name": "DownloadContactFeed",
          "Value": "1"
        },
        {
          "Name": "DownloadDashboard",
          "Value": "2"
        },
        {
          "Name": "DownloadAlbumItems",
          "Value": "3"
        },
        {
          "Name": "DownloadAlbumCover",
          "Value": "4"
        },
        {
          "Name": "DownloadImage",
          "Value": "5"
        },
        {
          "Name": "DownloadRichConnectData",
          "Value": "6"
        }
      ],
      "Name": "Windows.Phone.SocialInformation.SocialOperationType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Low",
          "Value": "0"
        },
        {
          "Name": "Medium",
          "Value": "1"
        },
        {
          "Name": "High",
          "Value": "2"
        }
      ],
      "Name": "Windows.Phone.Speech.Recognition.SpeechGrammarProbability"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Dictation",
          "Value": "1"
        },
        {
          "Name": "WebSearch",
          "Value": "2"
        }
      ],
      "Name": "Windows.Phone.Speech.Recognition.SpeechPredefinedGrammar"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "TooNoisy",
          "Value": "1"
        },
        {
          "Name": "NoSignal",
          "Value": "2"
        },
        {
          "Name": "TooLoud",
          "Value": "3"
        },
        {
          "Name": "TooQuiet",
          "Value": "4"
        },
        {
          "Name": "TooFast",
          "Value": "5"
        },
        {
          "Name": "TooSlow",
          "Value": "6"
        }
      ],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognitionAudioProblem"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Rejected",
          "Value": "0"
        },
        {
          "Name": "Low",
          "Value": "1"
        },
        {
          "Name": "Medium",
          "Value": "2"
        },
        {
          "Name": "High",
          "Value": "3"
        }
      ],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognitionConfidence"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Succeeded",
          "Value": "0"
        },
        {
          "Name": "Busy",
          "Value": "1"
        },
        {
          "Name": "Cancelled",
          "Value": "2"
        },
        {
          "Name": "Preempted",
          "Value": "3"
        },
        {
          "Name": "PrivacyPolicyDeclined",
          "Value": "4"
        }
      ],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognitionUIStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Inactive",
          "Value": "0"
        },
        {
          "Name": "Capturing",
          "Value": "1"
        }
      ],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognizerAudioCaptureState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Male",
          "Value": "0"
        },
        {
          "Name": "Female",
          "Value": "1"
        }
      ],
      "Name": "Windows.Phone.Speech.Synthesis.VoiceGender"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Off",
          "Value": "0"
        },
        {
          "Name": "On",
          "Value": "1"
        }
      ],
      "Name": "Windows.Phone.System.Power.PowerSavingMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Win",
          "Value": "1"
        },
        {
          "Name": "Loss",
          "Value": "2"
        },
        {
          "Name": "Tie",
          "Value": "3"
        }
      ],
      "Name": "Windows.Phone.System.UserProfile.GameServices.Core.GameServiceGameOutcome"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Number",
          "Value": "0"
        },
        {
          "Name": "Time",
          "Value": "1"
        }
      ],
      "Name": "Windows.Phone.System.UserProfile.GameServices.Core.GameServiceScoreKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Denied",
          "Value": "0"
        },
        {
          "Name": "Granted",
          "Value": "1"
        }
      ],
      "Name": "Windows.Phone.System.UserProfile.LockScreenRequestResult"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "Url",
          "Value": "1"
        },
        {
          "Name": "EmailSmtpAddress",
          "Value": "5"
        },
        {
          "Name": "Number",
          "Value": "29"
        },
        {
          "Name": "TelephoneNumber",
          "Value": "32"
        },
        {
          "Name": "Text",
          "Value": "49"
        },
        {
          "Name": "Search",
          "Value": "51"
        }
      ],
      "Name": "Windows.Phone.UI.Core.CoreInputScope"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "PromptIfNeeded",
          "Value": "0"
        },
        {
          "Name": "RetypeCredentials",
          "Value": "1"
        },
        {
          "Name": "DoNotPrompt",
          "Value": "2"
        }
      ],
      "Name": "Windows.Security.Authentication.OnlineId.CredentialPromptType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "SilentMode",
          "Value": "1"
        },
        {
          "Name": "UseTitle",
          "Value": "2"
        },
        {
          "Name": "UseHttpPost",
          "Value": "4"
        },
        {
          "Name": "UseCorporateNetwork",
          "Value": "8"
        }
      ],
      "Name": "Windows.Security.Authentication.Web.WebAuthenticationOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Success",
          "Value": "0"
        },
        {
          "Name": "UserCancel",
          "Value": "1"
        },
        {
          "Name": "ErrorHttp",
          "Value": "2"
        }
      ],
      "Name": "Windows.Security.Authentication.Web.WebAuthenticationStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Utf8",
          "Value": "0"
        },
        {
          "Name": "Utf16LE",
          "Value": "1"
        },
        {
          "Name": "Utf16BE",
          "Value": "2"
        }
      ],
      "Name": "Windows.Security.Cryptography.BinaryStringEncoding"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Base",
          "Value": "0"
        },
        {
          "Name": "Ssl",
          "Value": "1"
        },
        {
          "Name": "NTAuthentication",
          "Value": "2"
        },
        {
          "Name": "MicrosoftRoot",
          "Value": "3"
        }
      ],
      "Name": "Windows.Security.Cryptography.Certificates.CertificateChainPolicy"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Decryption",
          "Value": "1"
        },
        {
          "Name": "Signing",
          "Value": "2"
        },
        {
          "Name": "KeyAgreement",
          "Value": "4"
        },
        {
          "Name": "All",
          "Value": "16777215"
        }
      ],
      "Name": "Windows.Security.Cryptography.Certificates.EnrollKeyUsages"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "NotExportable",
          "Value": "0"
        },
        {
          "Name": "Exportable",
          "Value": "1"
        }
      ],
      "Name": "Windows.Security.Cryptography.Certificates.ExportOption"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Success",
          "Value": "0"
        },
        {
          "Name": "Untrusted",
          "Value": "1"
        },
        {
          "Name": "Revoked",
          "Value": "2"
        },
        {
          "Name": "Expired",
          "Value": "3"
        },
        {
          "Name": "IncompleteChain",
          "Value": "4"
        },
        {
          "Name": "InvalidSignature",
          "Value": "5"
        },
        {
          "Name": "WrongUsage",
          "Value": "6"
        },
        {
          "Name": "InvalidName",
          "Value": "7"
        },
        {
          "Name": "InvalidCertificateAuthorityPolicy",
          "Value": "8"
        },
        {
          "Name": "BasicConstraintsError",
          "Value": "9"
        },
        {
          "Name": "UnknownCriticalExtension",
          "Value": "10"
        },
        {
          "Name": "RevocationInformationMissing",
          "Value": "11"
        },
        {
          "Name": "RevocationFailure",
          "Value": "12"
        },
        {
          "Name": "OtherErrors",
          "Value": "13"
        }
      ],
      "Name": "Windows.Security.Cryptography.Certificates.ChainValidationResult"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "DeleteExpired",
          "Value": "1"
        }
      ],
      "Name": "Windows.Security.Cryptography.Certificates.InstallOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "NoConsent",
          "Value": "0"
        },
        {
          "Name": "ConsentOnly",
          "Value": "1"
        },
        {
          "Name": "ConsentWithPassword",
          "Value": "2"
        }
      ],
      "Name": "Windows.Security.Cryptography.Certificates.KeyProtectionLevel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Invalid",
          "Value": "0"
        },
        {
          "Name": "Rsa2048",
          "Value": "2048"
        },
        {
          "Name": "Rsa4096",
          "Value": "4096"
        }
      ],
      "Name": "Windows.Security.Cryptography.Certificates.KeySize"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Success",
          "Value": "0"
        },
        {
          "Name": "InvalidParameter",
          "Value": "1"
        },
        {
          "Name": "BadMessage",
          "Value": "2"
        },
        {
          "Name": "InvalidSignature",
          "Value": "3"
        },
        {
          "Name": "OtherErrors",
          "Value": "4"
        }
      ],
      "Name": "Windows.Security.Cryptography.Certificates.SignatureValidationResult"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "RsaOaep",
          "Value": "1"
        },
        {
          "Name": "RsaPkcs1V15",
          "Value": "2"
        },
        {
          "Name": "RsaPss",
          "Value": "3"
        }
      ],
      "Name": "Windows.Security.Cryptography.Core.CryptographicPadding"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Pkcs8RawPrivateKeyInfo",
          "Value": "0"
        },
        {
          "Name": "Pkcs1RsaPrivateKey",
          "Value": "1"
        },
        {
          "Name": "BCryptPrivateKey",
          "Value": "2"
        },
        {
          "Name": "Capi1PrivateKey",
          "Value": "3"
        }
      ],
      "Name": "Windows.Security.Cryptography.Core.CryptographicPrivateKeyBlobType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "X509SubjectPublicKeyInfo",
          "Value": "0"
        },
        {
          "Name": "Pkcs1RsaPublicKey",
          "Value": "1"
        },
        {
          "Name": "BCryptPublicKey",
          "Value": "2"
        },
        {
          "Name": "Capi1PublicKey",
          "Value": "3"
        }
      ],
      "Name": "Windows.Security.Cryptography.Core.CryptographicPublicKeyBlobType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Success",
          "Value": "0"
        },
        {
          "Name": "UnknownError",
          "Value": "1"
        },
        {
          "Name": "InvalidCredentials",
          "Value": "2"
        },
        {
          "Name": "BadLocation",
          "Value": "3"
        },
        {
          "Name": "IndexFailure",
          "Value": "4"
        },
        {
          "Name": "NetworkFailure",
          "Value": "5"
        }
      ],
      "Name": "Windows.Services.Maps.MapLocationFinderStatus"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Toll",
          "Value": "1"
        },
        {
          "Name": "Unpaved",
          "Value": "2"
        }
      ],
      "Name": "Windows.Services.Maps.MapManeuverNotices"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Success",
          "Value": "0"
        },
        {
          "Name": "UnknownError",
          "Value": "1"
        },
        {
          "Name": "InvalidCredentials",
          "Value": "2"
        },
        {
          "Name": "NoRouteFound",
          "Value": "3"
        },
        {
          "Name": "NoRouteFoundWithGivenOptions",
          "Value": "4"
        },
        {
          "Name": "StartPointNotFound",
          "Value": "5"
        },
        {
          "Name": "EndPointNotFound",
          "Value": "6"
        },
        {
          "Name": "NoPedestrianRouteFound",
          "Value": "7"
        },
        {
          "Name": "NetworkFailure",
          "Value": "8"
        }
      ],
      "Name": "Windows.Services.Maps.MapRouteFinderStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Start",
          "Value": "1"
        },
        {
          "Name": "Stopover",
          "Value": "2"
        },
        {
          "Name": "StopoverResume",
          "Value": "3"
        },
        {
          "Name": "End",
          "Value": "4"
        },
        {
          "Name": "GoStraight",
          "Value": "5"
        },
        {
          "Name": "UTurnLeft",
          "Value": "6"
        },
        {
          "Name": "UTurnRight",
          "Value": "7"
        },
        {
          "Name": "TurnKeepLeft",
          "Value": "8"
        },
        {
          "Name": "TurnKeepRight",
          "Value": "9"
        },
        {
          "Name": "TurnLightLeft",
          "Value": "10"
        },
        {
          "Name": "TurnLightRight",
          "Value": "11"
        },
        {
          "Name": "TurnLeft",
          "Value": "12"
        },
        {
          "Name": "TurnRight",
          "Value": "13"
        },
        {
          "Name": "TurnHardLeft",
          "Value": "14"
        },
        {
          "Name": "TurnHardRight",
          "Value": "15"
        },
        {
          "Name": "FreewayEnterLeft",
          "Value": "16"
        },
        {
          "Name": "FreewayEnterRight",
          "Value": "17"
        },
        {
          "Name": "FreewayLeaveLeft",
          "Value": "18"
        },
        {
          "Name": "FreewayLeaveRight",
          "Value": "19"
        },
        {
          "Name": "FreewayContinueLeft",
          "Value": "20"
        },
        {
          "Name": "FreewayContinueRight",
          "Value": "21"
        },
        {
          "Name": "TrafficCircleLeft",
          "Value": "22"
        },
        {
          "Name": "TrafficCircleRight",
          "Value": "23"
        },
        {
          "Name": "TakeFerry",
          "Value": "24"
        }
      ],
      "Name": "Windows.Services.Maps.MapRouteManeuverKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Time",
          "Value": "0"
        },
        {
          "Name": "Distance",
          "Value": "1"
        },
        {
          "Name": "TimeWithTraffic",
          "Value": "2"
        }
      ],
      "Name": "Windows.Services.Maps.MapRouteOptimization"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Highways",
          "Value": "1"
        },
        {
          "Name": "TollRoads",
          "Value": "2"
        },
        {
          "Name": "Ferries",
          "Value": "4"
        },
        {
          "Name": "Tunnels",
          "Value": "8"
        },
        {
          "Name": "DirtRoads",
          "Value": "16"
        }
      ],
      "Name": "Windows.Services.Maps.MapRouteRestrictions"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "DisallowUserInput",
          "Value": "1"
        },
        {
          "Name": "FastLocationsOnly",
          "Value": "2"
        },
        {
          "Name": "UseReadOnlyCachedCopy",
          "Value": "4"
        },
        {
          "Name": "SuppressAccessTimeUpdate",
          "Value": "8"
        }
      ],
      "Name": "Windows.Storage.AccessCache.AccessCacheOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Always",
          "Value": "0"
        },
        {
          "Name": "Existing",
          "Value": "1"
        }
      ],
      "Name": "Windows.Storage.ApplicationDataCreateDisposition"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Local",
          "Value": "0"
        },
        {
          "Name": "Roaming",
          "Value": "1"
        },
        {
          "Name": "Temporary",
          "Value": "2"
        },
        {
          "Name": "LocalCache",
          "Value": "3"
        }
      ],
      "Name": "Windows.Storage.ApplicationDataLocality"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "InvalidAlgorithm",
          "Value": "0"
        },
        {
          "Name": "NullAlgorithm",
          "Value": "1"
        },
        {
          "Name": "Mszip",
          "Value": "2"
        },
        {
          "Name": "Xpress",
          "Value": "3"
        },
        {
          "Name": "XpressHuff",
          "Value": "4"
        },
        {
          "Name": "Lzms",
          "Value": "5"
        }
      ],
      "Name": "Windows.Storage.Compression.CompressAlgorithm"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "GenerateUniqueName",
          "Value": "0"
        },
        {
          "Name": "ReplaceExisting",
          "Value": "1"
        },
        {
          "Name": "FailIfExists",
          "Value": "2"
        },
        {
          "Name": "OpenIfExists",
          "Value": "3"
        }
      ],
      "Name": "Windows.Storage.CreationCollisionOption"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Read",
          "Value": "0"
        },
        {
          "Name": "ReadWrite",
          "Value": "1"
        }
      ],
      "Name": "Windows.Storage.FileAccessMode"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "Normal",
          "Value": "0"
        },
        {
          "Name": "ReadOnly",
          "Value": "1"
        },
        {
          "Name": "Directory",
          "Value": "16"
        },
        {
          "Name": "Archive",
          "Value": "32"
        },
        {
          "Name": "Temporary",
          "Value": "256"
        }
      ],
      "Name": "Windows.Storage.FileAttributes"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unspecified",
          "Value": "0"
        },
        {
          "Name": "Normal",
          "Value": "1"
        },
        {
          "Name": "FlipHorizontal",
          "Value": "2"
        },
        {
          "Name": "Rotate180",
          "Value": "3"
        },
        {
          "Name": "FlipVertical",
          "Value": "4"
        },
        {
          "Name": "Transpose",
          "Value": "5"
        },
        {
          "Name": "Rotate270",
          "Value": "6"
        },
        {
          "Name": "Transverse",
          "Value": "7"
        },
        {
          "Name": "Rotate90",
          "Value": "8"
        }
      ],
      "Name": "Windows.Storage.FileProperties.PhotoOrientation"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "MusicProperties",
          "Value": "1"
        },
        {
          "Name": "VideoProperties",
          "Value": "2"
        },
        {
          "Name": "ImageProperties",
          "Value": "4"
        },
        {
          "Name": "DocumentProperties",
          "Value": "8"
        },
        {
          "Name": "BasicProperties",
          "Value": "16"
        }
      ],
      "Name": "Windows.Storage.FileProperties.PropertyPrefetchOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "PicturesView",
          "Value": "0"
        },
        {
          "Name": "VideosView",
          "Value": "1"
        },
        {
          "Name": "MusicView",
          "Value": "2"
        },
        {
          "Name": "DocumentsView",
          "Value": "3"
        },
        {
          "Name": "ListView",
          "Value": "4"
        },
        {
          "Name": "SingleItem",
          "Value": "5"
        }
      ],
      "Name": "Windows.Storage.FileProperties.ThumbnailMode"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "ReturnOnlyIfCached",
          "Value": "1"
        },
        {
          "Name": "ResizeThumbnail",
          "Value": "2"
        },
        {
          "Name": "UseCurrentScale",
          "Value": "4"
        }
      ],
      "Name": "Windows.Storage.FileProperties.ThumbnailOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Image",
          "Value": "0"
        },
        {
          "Name": "Icon",
          "Value": "1"
        }
      ],
      "Name": "Windows.Storage.FileProperties.ThumbnailType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Normal",
          "Value": "0"
        },
        {
          "Name": "Rotate90",
          "Value": "90"
        },
        {
          "Name": "Rotate180",
          "Value": "180"
        },
        {
          "Name": "Rotate270",
          "Value": "270"
        }
      ],
      "Name": "Windows.Storage.FileProperties.VideoOrientation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "GenerateUniqueName",
          "Value": "0"
        },
        {
          "Name": "ReplaceExisting",
          "Value": "1"
        },
        {
          "Name": "FailIfExists",
          "Value": "2"
        }
      ],
      "Name": "Windows.Storage.NameCollisionOption"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "DocumentsLibrary",
          "Value": "0"
        },
        {
          "Name": "ComputerFolder",
          "Value": "1"
        },
        {
          "Name": "Desktop",
          "Value": "2"
        },
        {
          "Name": "Downloads",
          "Value": "3"
        },
        {
          "Name": "HomeGroup",
          "Value": "4"
        },
        {
          "Name": "MusicLibrary",
          "Value": "5"
        },
        {
          "Name": "PicturesLibrary",
          "Value": "6"
        },
        {
          "Name": "VideosLibrary",
          "Value": "7"
        }
      ],
      "Name": "Windows.Storage.Pickers.PickerLocationId"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "List",
          "Value": "0"
        },
        {
          "Name": "Thumbnail",
          "Value": "1"
        }
      ],
      "Name": "Windows.Storage.Pickers.PickerViewMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Added",
          "Value": "0"
        },
        {
          "Name": "AlreadyAdded",
          "Value": "1"
        },
        {
          "Name": "NotAllowed",
          "Value": "2"
        },
        {
          "Name": "Unavailable",
          "Value": "3"
        }
      ],
      "Name": "Windows.Storage.Pickers.Provider.AddFileResult"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Single",
          "Value": "0"
        },
        {
          "Name": "Multiple",
          "Value": "1"
        }
      ],
      "Name": "Windows.Storage.Pickers.Provider.FileSelectionMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Succeeded",
          "Value": "0"
        },
        {
          "Name": "NotAllowed",
          "Value": "1"
        },
        {
          "Name": "Unavailable",
          "Value": "2"
        }
      ],
      "Name": "Windows.Storage.Pickers.Provider.SetFileNameResult"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "RequireUpdateOnAccess",
          "Value": "1"
        },
        {
          "Name": "UseCachedFileWhenOffline",
          "Value": "2"
        },
        {
          "Name": "DenyAccessWhenOffline",
          "Value": "4"
        }
      ],
      "Name": "Windows.Storage.Provider.CachedFileOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Local",
          "Value": "0"
        },
        {
          "Name": "Remote",
          "Value": "1"
        }
      ],
      "Name": "Windows.Storage.Provider.CachedFileTarget"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Incomplete",
          "Value": "0"
        },
        {
          "Name": "Complete",
          "Value": "1"
        },
        {
          "Name": "UserInputNeeded",
          "Value": "2"
        },
        {
          "Name": "CurrentlyUnavailable",
          "Value": "3"
        },
        {
          "Name": "Failed",
          "Value": "4"
        },
        {
          "Name": "CompleteAndRenamed",
          "Value": "5"
        }
      ],
      "Name": "Windows.Storage.Provider.FileUpdateStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "NotNeeded",
          "Value": "0"
        },
        {
          "Name": "BeforeAccess",
          "Value": "1"
        }
      ],
      "Name": "Windows.Storage.Provider.ReadActivationMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unavailable",
          "Value": "0"
        },
        {
          "Name": "Hidden",
          "Value": "1"
        },
        {
          "Name": "Visible",
          "Value": "2"
        },
        {
          "Name": "Complete",
          "Value": "3"
        }
      ],
      "Name": "Windows.Storage.Provider.UIStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "ReadOnly",
          "Value": "0"
        },
        {
          "Name": "NotNeeded",
          "Value": "1"
        },
        {
          "Name": "AfterWrite",
          "Value": "2"
        }
      ],
      "Name": "Windows.Storage.Provider.WriteActivationMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "DefaultQuery",
          "Value": "0"
        },
        {
          "Name": "OrderByName",
          "Value": "1"
        },
        {
          "Name": "OrderByTitle",
          "Value": "2"
        },
        {
          "Name": "OrderByMusicProperties",
          "Value": "3"
        },
        {
          "Name": "OrderBySearchRank",
          "Value": "4"
        },
        {
          "Name": "OrderByDate",
          "Value": "5"
        }
      ],
      "Name": "Windows.Storage.Search.CommonFileQuery"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "DefaultQuery",
          "Value": "0"
        },
        {
          "Name": "GroupByYear",
          "Value": "100"
        },
        {
          "Name": "GroupByMonth",
          "Value": "101"
        },
        {
          "Name": "GroupByArtist",
          "Value": "102"
        },
        {
          "Name": "GroupByAlbum",
          "Value": "103"
        },
        {
          "Name": "GroupByAlbumArtist",
          "Value": "104"
        },
        {
          "Name": "GroupByComposer",
          "Value": "105"
        },
        {
          "Name": "GroupByGenre",
          "Value": "106"
        },
        {
          "Name": "GroupByPublishedYear",
          "Value": "107"
        },
        {
          "Name": "GroupByRating",
          "Value": "108"
        },
        {
          "Name": "GroupByTag",
          "Value": "109"
        },
        {
          "Name": "GroupByAuthor",
          "Value": "110"
        },
        {
          "Name": "GroupByType",
          "Value": "111"
        }
      ],
      "Name": "Windows.Storage.Search.CommonFolderQuery"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Year",
          "Value": "1"
        },
        {
          "Name": "Month",
          "Value": "2"
        }
      ],
      "Name": "Windows.Storage.Search.DateStackOption"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Shallow",
          "Value": "0"
        },
        {
          "Name": "Deep",
          "Value": "1"
        }
      ],
      "Name": "Windows.Storage.Search.FolderDepth"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unknown",
          "Value": "0"
        },
        {
          "Name": "NotIndexed",
          "Value": "1"
        },
        {
          "Name": "PartiallyIndexed",
          "Value": "2"
        },
        {
          "Name": "FullyIndexed",
          "Value": "3"
        }
      ],
      "Name": "Windows.Storage.Search.IndexedState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "UseIndexerWhenAvailable",
          "Value": "0"
        },
        {
          "Name": "OnlyUseIndexer",
          "Value": "1"
        },
        {
          "Name": "DoNotUseIndexer",
          "Value": "2"
        }
      ],
      "Name": "Windows.Storage.Search.IndexerOption"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "PermanentDelete",
          "Value": "1"
        }
      ],
      "Name": "Windows.Storage.StorageDeleteOption"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "File",
          "Value": "1"
        },
        {
          "Name": "Folder",
          "Value": "2"
        }
      ],
      "Name": "Windows.Storage.StorageItemTypes"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Failed",
          "Value": "0"
        },
        {
          "Name": "CurrentlyUnavailable",
          "Value": "1"
        },
        {
          "Name": "Incomplete",
          "Value": "2"
        }
      ],
      "Name": "Windows.Storage.StreamedFileFailureMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "LittleEndian",
          "Value": "0"
        },
        {
          "Name": "BigEndian",
          "Value": "1"
        }
      ],
      "Name": "Windows.Storage.Streams.ByteOrder"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Partial",
          "Value": "1"
        },
        {
          "Name": "ReadAhead",
          "Value": "2"
        }
      ],
      "Name": "Windows.Storage.Streams.InputStreamOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Utf8",
          "Value": "0"
        },
        {
          "Name": "Utf16LE",
          "Value": "1"
        },
        {
          "Name": "Utf16BE",
          "Value": "2"
        }
      ],
      "Name": "Windows.Storage.Streams.UnicodeEncoding"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Low",
          "Value": "0"
        },
        {
          "Name": "Medium",
          "Value": "1"
        },
        {
          "Name": "High",
          "Value": "2"
        }
      ],
      "Name": "Windows.System.AppMemoryUsageLevel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "X86",
          "Value": "0"
        },
        {
          "Name": "Arm",
          "Value": "5"
        },
        {
          "Name": "X64",
          "Value": "9"
        },
        {
          "Name": "Neutral",
          "Value": "11"
        },
        {
          "Name": "Unknown",
          "Value": "65535"
        }
      ],
      "Name": "Windows.System.ProcessorArchitecture"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "TimeSliced",
          "Value": "1"
        }
      ],
      "Name": "Windows.System.Threading.WorkItemOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Low",
          "Value": "-1"
        },
        {
          "Name": "Normal",
          "Value": "0"
        },
        {
          "Name": "High",
          "Value": "1"
        }
      ],
      "Name": "Windows.System.Threading.WorkItemPriority"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "SmallImage",
          "Value": "0"
        },
        {
          "Name": "LargeImage",
          "Value": "1"
        },
        {
          "Name": "Video",
          "Value": "2"
        }
      ],
      "Name": "Windows.System.UserProfile.AccountPictureKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Success",
          "Value": "0"
        },
        {
          "Name": "ChangeDisabled",
          "Value": "1"
        },
        {
          "Name": "LargeOrDynamicError",
          "Value": "2"
        },
        {
          "Name": "VideoFrameSizeError",
          "Value": "3"
        },
        {
          "Name": "FileSizeError",
          "Value": "4"
        },
        {
          "Name": "Failure",
          "Value": "5"
        }
      ],
      "Name": "Windows.System.UserProfile.SetAccountPictureResult"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Success",
          "Value": "0"
        },
        {
          "Name": "ChangeDisabled",
          "Value": "1"
        },
        {
          "Name": "UserCanceled",
          "Value": "2"
        }
      ],
      "Name": "Windows.System.UserProfile.SetImageFeedResult"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "LeftButton",
          "Value": "1"
        },
        {
          "Name": "RightButton",
          "Value": "2"
        },
        {
          "Name": "Cancel",
          "Value": "3"
        },
        {
          "Name": "MiddleButton",
          "Value": "4"
        },
        {
          "Name": "XButton1",
          "Value": "5"
        },
        {
          "Name": "XButton2",
          "Value": "6"
        },
        {
          "Name": "Back",
          "Value": "8"
        },
        {
          "Name": "Tab",
          "Value": "9"
        },
        {
          "Name": "Clear",
          "Value": "12"
        },
        {
          "Name": "Enter",
          "Value": "13"
        },
        {
          "Name": "Shift",
          "Value": "16"
        },
        {
          "Name": "Control",
          "Value": "17"
        },
        {
          "Name": "Menu",
          "Value": "18"
        },
        {
          "Name": "Pause",
          "Value": "19"
        },
        {
          "Name": "CapitalLock",
          "Value": "20"
        },
        {
          "Name": "Kana",
          "Value": "21"
        },
        {
          "Name": "Hangul",
          "Value": "21"
        },
        {
          "Name": "Junja",
          "Value": "23"
        },
        {
          "Name": "Final",
          "Value": "24"
        },
        {
          "Name": "Hanja",
          "Value": "25"
        },
        {
          "Name": "Kanji",
          "Value": "25"
        },
        {
          "Name": "Escape",
          "Value": "27"
        },
        {
          "Name": "Convert",
          "Value": "28"
        },
        {
          "Name": "NonConvert",
          "Value": "29"
        },
        {
          "Name": "Accept",
          "Value": "30"
        },
        {
          "Name": "ModeChange",
          "Value": "31"
        },
        {
          "Name": "Space",
          "Value": "32"
        },
        {
          "Name": "PageUp",
          "Value": "33"
        },
        {
          "Name": "PageDown",
          "Value": "34"
        },
        {
          "Name": "End",
          "Value": "35"
        },
        {
          "Name": "Home",
          "Value": "36"
        },
        {
          "Name": "Left",
          "Value": "37"
        },
        {
          "Name": "Up",
          "Value": "38"
        },
        {
          "Name": "Right",
          "Value": "39"
        },
        {
          "Name": "Down",
          "Value": "40"
        },
        {
          "Name": "Select",
          "Value": "41"
        },
        {
          "Name": "Print",
          "Value": "42"
        },
        {
          "Name": "Execute",
          "Value": "43"
        },
        {
          "Name": "Snapshot",
          "Value": "44"
        },
        {
          "Name": "Insert",
          "Value": "45"
        },
        {
          "Name": "Delete",
          "Value": "46"
        },
        {
          "Name": "Help",
          "Value": "47"
        },
        {
          "Name": "Number0",
          "Value": "48"
        },
        {
          "Name": "Number1",
          "Value": "49"
        },
        {
          "Name": "Number2",
          "Value": "50"
        },
        {
          "Name": "Number3",
          "Value": "51"
        },
        {
          "Name": "Number4",
          "Value": "52"
        },
        {
          "Name": "Number5",
          "Value": "53"
        },
        {
          "Name": "Number6",
          "Value": "54"
        },
        {
          "Name": "Number7",
          "Value": "55"
        },
        {
          "Name": "Number8",
          "Value": "56"
        },
        {
          "Name": "Number9",
          "Value": "57"
        },
        {
          "Name": "A",
          "Value": "65"
        },
        {
          "Name": "B",
          "Value": "66"
        },
        {
          "Name": "C",
          "Value": "67"
        },
        {
          "Name": "D",
          "Value": "68"
        },
        {
          "Name": "E",
          "Value": "69"
        },
        {
          "Name": "F",
          "Value": "70"
        },
        {
          "Name": "G",
          "Value": "71"
        },
        {
          "Name": "H",
          "Value": "72"
        },
        {
          "Name": "I",
          "Value": "73"
        },
        {
          "Name": "J",
          "Value": "74"
        },
        {
          "Name": "K",
          "Value": "75"
        },
        {
          "Name": "L",
          "Value": "76"
        },
        {
          "Name": "M",
          "Value": "77"
        },
        {
          "Name": "N",
          "Value": "78"
        },
        {
          "Name": "O",
          "Value": "79"
        },
        {
          "Name": "P",
          "Value": "80"
        },
        {
          "Name": "Q",
          "Value": "81"
        },
        {
          "Name": "R",
          "Value": "82"
        },
        {
          "Name": "S",
          "Value": "83"
        },
        {
          "Name": "T",
          "Value": "84"
        },
        {
          "Name": "U",
          "Value": "85"
        },
        {
          "Name": "V",
          "Value": "86"
        },
        {
          "Name": "W",
          "Value": "87"
        },
        {
          "Name": "X",
          "Value": "88"
        },
        {
          "Name": "Y",
          "Value": "89"
        },
        {
          "Name": "Z",
          "Value": "90"
        },
        {
          "Name": "LeftWindows",
          "Value": "91"
        },
        {
          "Name": "RightWindows",
          "Value": "92"
        },
        {
          "Name": "Application",
          "Value": "93"
        },
        {
          "Name": "Sleep",
          "Value": "95"
        },
        {
          "Name": "NumberPad0",
          "Value": "96"
        },
        {
          "Name": "NumberPad1",
          "Value": "97"
        },
        {
          "Name": "NumberPad2",
          "Value": "98"
        },
        {
          "Name": "NumberPad3",
          "Value": "99"
        },
        {
          "Name": "NumberPad4",
          "Value": "100"
        },
        {
          "Name": "NumberPad5",
          "Value": "101"
        },
        {
          "Name": "NumberPad6",
          "Value": "102"
        },
        {
          "Name": "NumberPad7",
          "Value": "103"
        },
        {
          "Name": "NumberPad8",
          "Value": "104"
        },
        {
          "Name": "NumberPad9",
          "Value": "105"
        },
        {
          "Name": "Multiply",
          "Value": "106"
        },
        {
          "Name": "Add",
          "Value": "107"
        },
        {
          "Name": "Separator",
          "Value": "108"
        },
        {
          "Name": "Subtract",
          "Value": "109"
        },
        {
          "Name": "Decimal",
          "Value": "110"
        },
        {
          "Name": "Divide",
          "Value": "111"
        },
        {
          "Name": "F1",
          "Value": "112"
        },
        {
          "Name": "F2",
          "Value": "113"
        },
        {
          "Name": "F3",
          "Value": "114"
        },
        {
          "Name": "F4",
          "Value": "115"
        },
        {
          "Name": "F5",
          "Value": "116"
        },
        {
          "Name": "F6",
          "Value": "117"
        },
        {
          "Name": "F7",
          "Value": "118"
        },
        {
          "Name": "F8",
          "Value": "119"
        },
        {
          "Name": "F9",
          "Value": "120"
        },
        {
          "Name": "F10",
          "Value": "121"
        },
        {
          "Name": "F11",
          "Value": "122"
        },
        {
          "Name": "F12",
          "Value": "123"
        },
        {
          "Name": "F13",
          "Value": "124"
        },
        {
          "Name": "F14",
          "Value": "125"
        },
        {
          "Name": "F15",
          "Value": "126"
        },
        {
          "Name": "F16",
          "Value": "127"
        },
        {
          "Name": "F17",
          "Value": "128"
        },
        {
          "Name": "F18",
          "Value": "129"
        },
        {
          "Name": "F19",
          "Value": "130"
        },
        {
          "Name": "F20",
          "Value": "131"
        },
        {
          "Name": "F21",
          "Value": "132"
        },
        {
          "Name": "F22",
          "Value": "133"
        },
        {
          "Name": "F23",
          "Value": "134"
        },
        {
          "Name": "F24",
          "Value": "135"
        },
        {
          "Name": "NumberKeyLock",
          "Value": "144"
        },
        {
          "Name": "Scroll",
          "Value": "145"
        },
        {
          "Name": "LeftShift",
          "Value": "160"
        },
        {
          "Name": "RightShift",
          "Value": "161"
        },
        {
          "Name": "LeftControl",
          "Value": "162"
        },
        {
          "Name": "RightControl",
          "Value": "163"
        },
        {
          "Name": "LeftMenu",
          "Value": "164"
        },
        {
          "Name": "RightMenu",
          "Value": "165"
        },
        {
          "Name": "GoBack",
          "Value": "166"
        },
        {
          "Name": "GoForward",
          "Value": "167"
        },
        {
          "Name": "Refresh",
          "Value": "168"
        },
        {
          "Name": "Stop",
          "Value": "169"
        },
        {
          "Name": "Search",
          "Value": "170"
        },
        {
          "Name": "Favorites",
          "Value": "171"
        },
        {
          "Name": "GoHome",
          "Value": "172"
        }
      ],
      "Name": "Windows.System.VirtualKey"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Control",
          "Value": "1"
        },
        {
          "Name": "Menu",
          "Value": "2"
        },
        {
          "Name": "Shift",
          "Value": "4"
        },
        {
          "Name": "Windows",
          "Value": "8"
        }
      ],
      "Name": "Windows.System.VirtualKeyModifiers"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "KeyDown",
          "Value": "0"
        },
        {
          "Name": "KeyUp",
          "Value": "1"
        },
        {
          "Name": "Character",
          "Value": "2"
        },
        {
          "Name": "DeadCharacter",
          "Value": "3"
        },
        {
          "Name": "SystemKeyDown",
          "Value": "4"
        },
        {
          "Name": "SystemKeyUp",
          "Value": "5"
        },
        {
          "Name": "SystemCharacter",
          "Value": "6"
        },
        {
          "Name": "SystemDeadCharacter",
          "Value": "7"
        },
        {
          "Name": "UnicodeCharacter",
          "Value": "8"
        }
      ],
      "Name": "Windows.UI.Core.CoreAcceleratorKeyEventType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Arrow",
          "Value": "0"
        },
        {
          "Name": "Cross",
          "Value": "1"
        },
        {
          "Name": "Custom",
          "Value": "2"
        },
        {
          "Name": "Hand",
          "Value": "3"
        },
        {
          "Name": "Help",
          "Value": "4"
        },
        {
          "Name": "IBeam",
          "Value": "5"
        },
        {
          "Name": "SizeAll",
          "Value": "6"
        },
        {
          "Name": "SizeNortheastSouthwest",
          "Value": "7"
        },
        {
          "Name": "SizeNorthSouth",
          "Value": "8"
        },
        {
          "Name": "SizeNorthwestSoutheast",
          "Value": "9"
        },
        {
          "Name": "SizeWestEast",
          "Value": "10"
        },
        {
          "Name": "UniversalNo",
          "Value": "11"
        },
        {
          "Name": "UpArrow",
          "Value": "12"
        },
        {
          "Name": "Wait",
          "Value": "13"
        }
      ],
      "Name": "Windows.UI.Core.CoreCursorType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Idle",
          "Value": "-2"
        },
        {
          "Name": "Low",
          "Value": "-1"
        },
        {
          "Name": "Normal",
          "Value": "0"
        },
        {
          "Name": "High",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Core.CoreDispatcherPriority"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Touch",
          "Value": "1"
        },
        {
          "Name": "Pen",
          "Value": "2"
        },
        {
          "Name": "Mouse",
          "Value": "4"
        }
      ],
      "Name": "Windows.UI.Core.CoreInputDeviceTypes"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "ProcessOneAndAllPending",
          "Value": "0"
        },
        {
          "Name": "ProcessOneIfPresent",
          "Value": "1"
        },
        {
          "Name": "ProcessUntilQuit",
          "Value": "2"
        },
        {
          "Name": "ProcessAllIfPresent",
          "Value": "3"
        }
      ],
      "Name": "Windows.UI.Core.CoreProcessEventsOption"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Closest",
          "Value": "0"
        },
        {
          "Name": "Farthest",
          "Value": "2147483647"
        }
      ],
      "Name": "Windows.UI.Core.CoreProximityEvaluationScore"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Down",
          "Value": "1"
        },
        {
          "Name": "Locked",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Core.CoreVirtualKeyStates"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "CodeActivated",
          "Value": "0"
        },
        {
          "Name": "Deactivated",
          "Value": "1"
        },
        {
          "Name": "PointerActivated",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Core.CoreWindowActivationState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "LeftToRight",
          "Value": "0"
        },
        {
          "Name": "RightToLeft",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Core.CoreWindowFlowDirection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Started",
          "Value": "0"
        },
        {
          "Name": "Dragging",
          "Value": "1"
        },
        {
          "Name": "Selecting",
          "Value": "2"
        },
        {
          "Name": "SelectSpeedBumping",
          "Value": "3"
        },
        {
          "Name": "SpeedBumping",
          "Value": "4"
        },
        {
          "Name": "Rearranging",
          "Value": "5"
        },
        {
          "Name": "Completed",
          "Value": "6"
        }
      ],
      "Name": "Windows.UI.Input.CrossSlidingState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Started",
          "Value": "0"
        },
        {
          "Name": "Continuing",
          "Value": "1"
        },
        {
          "Name": "Completed",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Input.DraggingState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Touch",
          "Value": "0"
        },
        {
          "Name": "Keyboard",
          "Value": "1"
        },
        {
          "Name": "Mouse",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Input.EdgeGestureKind"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Tap",
          "Value": "1"
        },
        {
          "Name": "DoubleTap",
          "Value": "2"
        },
        {
          "Name": "Hold",
          "Value": "4"
        },
        {
          "Name": "HoldWithMouse",
          "Value": "8"
        },
        {
          "Name": "RightTap",
          "Value": "16"
        },
        {
          "Name": "Drag",
          "Value": "32"
        },
        {
          "Name": "ManipulationTranslateX",
          "Value": "64"
        },
        {
          "Name": "ManipulationTranslateY",
          "Value": "128"
        },
        {
          "Name": "ManipulationTranslateRailsX",
          "Value": "256"
        },
        {
          "Name": "ManipulationTranslateRailsY",
          "Value": "512"
        },
        {
          "Name": "ManipulationRotate",
          "Value": "1024"
        },
        {
          "Name": "ManipulationScale",
          "Value": "2048"
        },
        {
          "Name": "ManipulationTranslateInertia",
          "Value": "4096"
        },
        {
          "Name": "ManipulationRotateInertia",
          "Value": "8192"
        },
        {
          "Name": "ManipulationScaleInertia",
          "Value": "16384"
        },
        {
          "Name": "CrossSlide",
          "Value": "32768"
        },
        {
          "Name": "ManipulationMultipleFingerPanning",
          "Value": "65536"
        }
      ],
      "Name": "Windows.UI.Input.GestureSettings"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Started",
          "Value": "0"
        },
        {
          "Name": "Completed",
          "Value": "1"
        },
        {
          "Name": "Canceled",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Input.HoldingState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Other",
          "Value": "0"
        },
        {
          "Name": "LeftButtonPressed",
          "Value": "1"
        },
        {
          "Name": "LeftButtonReleased",
          "Value": "2"
        },
        {
          "Name": "RightButtonPressed",
          "Value": "3"
        },
        {
          "Name": "RightButtonReleased",
          "Value": "4"
        },
        {
          "Name": "MiddleButtonPressed",
          "Value": "5"
        },
        {
          "Name": "MiddleButtonReleased",
          "Value": "6"
        },
        {
          "Name": "XButton1Pressed",
          "Value": "7"
        },
        {
          "Name": "XButton1Released",
          "Value": "8"
        },
        {
          "Name": "XButton2Pressed",
          "Value": "9"
        },
        {
          "Name": "XButton2Released",
          "Value": "10"
        }
      ],
      "Name": "Windows.UI.Input.PointerUpdateKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "BadgeGlyph",
          "Value": "0"
        },
        {
          "Name": "BadgeNumber",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Notifications.BadgeTemplateType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Enabled",
          "Value": "0"
        },
        {
          "Name": "DisabledForApplication",
          "Value": "1"
        },
        {
          "Name": "DisabledForUser",
          "Value": "2"
        },
        {
          "Name": "DisabledByGroupPolicy",
          "Value": "3"
        },
        {
          "Name": "DisabledByManifest",
          "Value": "4"
        }
      ],
      "Name": "Windows.UI.Notifications.NotificationSetting"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "HalfHour",
          "Value": "0"
        },
        {
          "Name": "Hour",
          "Value": "1"
        },
        {
          "Name": "SixHours",
          "Value": "2"
        },
        {
          "Name": "TwelveHours",
          "Value": "3"
        },
        {
          "Name": "Daily",
          "Value": "4"
        }
      ],
      "Name": "Windows.UI.Notifications.PeriodicUpdateRecurrence"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "TileFlyoutTemplate01",
          "Value": "0"
        }
      ],
      "Name": "Windows.UI.Notifications.TileFlyoutTemplateType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "TileSquareImage",
          "Value": "0"
        },
        {
          "Name": "TileSquare150x150Image",
          "Value": "0"
        },
        {
          "Name": "TileSquareBlock",
          "Value": "1"
        },
        {
          "Name": "TileSquare150x150Block",
          "Value": "1"
        },
        {
          "Name": "TileSquareText01",
          "Value": "2"
        },
        {
          "Name": "TileSquare150x150Text01",
          "Value": "2"
        },
        {
          "Name": "TileSquareText02",
          "Value": "3"
        },
        {
          "Name": "TileSquare150x150Text02",
          "Value": "3"
        },
        {
          "Name": "TileSquareText03",
          "Value": "4"
        },
        {
          "Name": "TileSquare150x150Text03",
          "Value": "4"
        },
        {
          "Name": "TileSquareText04",
          "Value": "5"
        },
        {
          "Name": "TileSquare150x150Text04",
          "Value": "5"
        },
        {
          "Name": "TileSquarePeekImageAndText01",
          "Value": "6"
        },
        {
          "Name": "TileSquare150x150PeekImageAndText01",
          "Value": "6"
        },
        {
          "Name": "TileSquarePeekImageAndText02",
          "Value": "7"
        },
        {
          "Name": "TileSquare150x150PeekImageAndText02",
          "Value": "7"
        },
        {
          "Name": "TileSquarePeekImageAndText03",
          "Value": "8"
        },
        {
          "Name": "TileSquare150x150PeekImageAndText03",
          "Value": "8"
        },
        {
          "Name": "TileSquarePeekImageAndText04",
          "Value": "9"
        },
        {
          "Name": "TileSquare150x150PeekImageAndText04",
          "Value": "9"
        },
        {
          "Name": "TileWideImage",
          "Value": "10"
        },
        {
          "Name": "TileWide310x150Image",
          "Value": "10"
        },
        {
          "Name": "TileWideImageCollection",
          "Value": "11"
        },
        {
          "Name": "TileWide310x150ImageCollection",
          "Value": "11"
        },
        {
          "Name": "TileWideImageAndText01",
          "Value": "12"
        },
        {
          "Name": "TileWide310x150ImageAndText01",
          "Value": "12"
        },
        {
          "Name": "TileWideImageAndText02",
          "Value": "13"
        },
        {
          "Name": "TileWide310x150ImageAndText02",
          "Value": "13"
        },
        {
          "Name": "TileWideBlockAndText01",
          "Value": "14"
        },
        {
          "Name": "TileWide310x150BlockAndText01",
          "Value": "14"
        },
        {
          "Name": "TileWideBlockAndText02",
          "Value": "15"
        },
        {
          "Name": "TileWide310x150BlockAndText02",
          "Value": "15"
        },
        {
          "Name": "TileWidePeekImageCollection01",
          "Value": "16"
        },
        {
          "Name": "TileWide310x150PeekImageCollection01",
          "Value": "16"
        },
        {
          "Name": "TileWidePeekImageCollection02",
          "Value": "17"
        },
        {
          "Name": "TileWide310x150PeekImageCollection02",
          "Value": "17"
        },
        {
          "Name": "TileWidePeekImageCollection03",
          "Value": "18"
        },
        {
          "Name": "TileWide310x150PeekImageCollection03",
          "Value": "18"
        },
        {
          "Name": "TileWidePeekImageCollection04",
          "Value": "19"
        },
        {
          "Name": "TileWide310x150PeekImageCollection04",
          "Value": "19"
        },
        {
          "Name": "TileWidePeekImageCollection05",
          "Value": "20"
        },
        {
          "Name": "TileWide310x150PeekImageCollection05",
          "Value": "20"
        },
        {
          "Name": "TileWidePeekImageCollection06",
          "Value": "21"
        },
        {
          "Name": "TileWide310x150PeekImageCollection06",
          "Value": "21"
        },
        {
          "Name": "TileWidePeekImageAndText01",
          "Value": "22"
        },
        {
          "Name": "TileWide310x150PeekImageAndText01",
          "Value": "22"
        },
        {
          "Name": "TileWidePeekImageAndText02",
          "Value": "23"
        },
        {
          "Name": "TileWide310x150PeekImageAndText02",
          "Value": "23"
        },
        {
          "Name": "TileWidePeekImage01",
          "Value": "24"
        },
        {
          "Name": "TileWide310x150PeekImage01",
          "Value": "24"
        },
        {
          "Name": "TileWidePeekImage02",
          "Value": "25"
        },
        {
          "Name": "TileWide310x150PeekImage02",
          "Value": "25"
        },
        {
          "Name": "TileWidePeekImage03",
          "Value": "26"
        },
        {
          "Name": "TileWide310x150PeekImage03",
          "Value": "26"
        },
        {
          "Name": "TileWidePeekImage04",
          "Value": "27"
        },
        {
          "Name": "TileWide310x150PeekImage04",
          "Value": "27"
        },
        {
          "Name": "TileWidePeekImage05",
          "Value": "28"
        },
        {
          "Name": "TileWide310x150PeekImage05",
          "Value": "28"
        },
        {
          "Name": "TileWidePeekImage06",
          "Value": "29"
        },
        {
          "Name": "TileWide310x150PeekImage06",
          "Value": "29"
        },
        {
          "Name": "TileWideSmallImageAndText01",
          "Value": "30"
        },
        {
          "Name": "TileWide310x150SmallImageAndText01",
          "Value": "30"
        },
        {
          "Name": "TileWideSmallImageAndText02",
          "Value": "31"
        },
        {
          "Name": "TileWide310x150SmallImageAndText02",
          "Value": "31"
        },
        {
          "Name": "TileWideSmallImageAndText03",
          "Value": "32"
        },
        {
          "Name": "TileWide310x150SmallImageAndText03",
          "Value": "32"
        },
        {
          "Name": "TileWideSmallImageAndText04",
          "Value": "33"
        },
        {
          "Name": "TileWide310x150SmallImageAndText04",
          "Value": "33"
        },
        {
          "Name": "TileWideSmallImageAndText05",
          "Value": "34"
        },
        {
          "Name": "TileWide310x150SmallImageAndText05",
          "Value": "34"
        },
        {
          "Name": "TileWideText01",
          "Value": "35"
        },
        {
          "Name": "TileWide310x150Text01",
          "Value": "35"
        },
        {
          "Name": "TileWideText02",
          "Value": "36"
        },
        {
          "Name": "TileWide310x150Text02",
          "Value": "36"
        },
        {
          "Name": "TileWideText03",
          "Value": "37"
        },
        {
          "Name": "TileWide310x150Text03",
          "Value": "37"
        },
        {
          "Name": "TileWideText04",
          "Value": "38"
        },
        {
          "Name": "TileWide310x150Text04",
          "Value": "38"
        },
        {
          "Name": "TileWideText05",
          "Value": "39"
        },
        {
          "Name": "TileWide310x150Text05",
          "Value": "39"
        },
        {
          "Name": "TileWideText06",
          "Value": "40"
        },
        {
          "Name": "TileWide310x150Text06",
          "Value": "40"
        },
        {
          "Name": "TileWideText07",
          "Value": "41"
        },
        {
          "Name": "TileWide310x150Text07",
          "Value": "41"
        },
        {
          "Name": "TileWideText08",
          "Value": "42"
        },
        {
          "Name": "TileWide310x150Text08",
          "Value": "42"
        },
        {
          "Name": "TileWideText09",
          "Value": "43"
        },
        {
          "Name": "TileWide310x150Text09",
          "Value": "43"
        },
        {
          "Name": "TileWideText10",
          "Value": "44"
        },
        {
          "Name": "TileWide310x150Text10",
          "Value": "44"
        },
        {
          "Name": "TileWideText11",
          "Value": "45"
        },
        {
          "Name": "TileWide310x150Text11",
          "Value": "45"
        },
        {
          "Name": "TileSquare310x310BlockAndText01",
          "Value": "46"
        },
        {
          "Name": "TileSquare310x310BlockAndText02",
          "Value": "47"
        },
        {
          "Name": "TileSquare310x310Image",
          "Value": "48"
        },
        {
          "Name": "TileSquare310x310ImageAndText01",
          "Value": "49"
        },
        {
          "Name": "TileSquare310x310ImageAndText02",
          "Value": "50"
        },
        {
          "Name": "TileSquare310x310ImageAndTextOverlay01",
          "Value": "51"
        },
        {
          "Name": "TileSquare310x310ImageAndTextOverlay02",
          "Value": "52"
        },
        {
          "Name": "TileSquare310x310ImageAndTextOverlay03",
          "Value": "53"
        },
        {
          "Name": "TileSquare310x310ImageCollectionAndText01",
          "Value": "54"
        },
        {
          "Name": "TileSquare310x310ImageCollectionAndText02",
          "Value": "55"
        },
        {
          "Name": "TileSquare310x310ImageCollection",
          "Value": "56"
        },
        {
          "Name": "TileSquare310x310SmallImagesAndTextList01",
          "Value": "57"
        },
        {
          "Name": "TileSquare310x310SmallImagesAndTextList02",
          "Value": "58"
        },
        {
          "Name": "TileSquare310x310SmallImagesAndTextList03",
          "Value": "59"
        },
        {
          "Name": "TileSquare310x310SmallImagesAndTextList04",
          "Value": "60"
        },
        {
          "Name": "TileSquare310x310Text01",
          "Value": "61"
        },
        {
          "Name": "TileSquare310x310Text02",
          "Value": "62"
        },
        {
          "Name": "TileSquare310x310Text03",
          "Value": "63"
        },
        {
          "Name": "TileSquare310x310Text04",
          "Value": "64"
        },
        {
          "Name": "TileSquare310x310Text05",
          "Value": "65"
        },
        {
          "Name": "TileSquare310x310Text06",
          "Value": "66"
        },
        {
          "Name": "TileSquare310x310Text07",
          "Value": "67"
        },
        {
          "Name": "TileSquare310x310Text08",
          "Value": "68"
        },
        {
          "Name": "TileSquare310x310TextList01",
          "Value": "69"
        },
        {
          "Name": "TileSquare310x310TextList02",
          "Value": "70"
        },
        {
          "Name": "TileSquare310x310TextList03",
          "Value": "71"
        },
        {
          "Name": "TileSquare310x310SmallImageAndText01",
          "Value": "72"
        },
        {
          "Name": "TileSquare310x310SmallImagesAndTextList05",
          "Value": "73"
        },
        {
          "Name": "TileSquare310x310Text09",
          "Value": "74"
        },
        {
          "Name": "TileSquare71x71IconWithBadge",
          "Value": "75"
        },
        {
          "Name": "TileSquare150x150IconWithBadge",
          "Value": "76"
        },
        {
          "Name": "TileWide310x150IconWithBadgeAndText",
          "Value": "77"
        },
        {
          "Name": "TileSquare71x71Image",
          "Value": "78"
        }
      ],
      "Name": "Windows.UI.Notifications.TileTemplateType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "UserCanceled",
          "Value": "0"
        },
        {
          "Name": "ApplicationHidden",
          "Value": "1"
        },
        {
          "Name": "TimedOut",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Notifications.ToastDismissalReason"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "ToastImageAndText01",
          "Value": "0"
        },
        {
          "Name": "ToastImageAndText02",
          "Value": "1"
        },
        {
          "Name": "ToastImageAndText03",
          "Value": "2"
        },
        {
          "Name": "ToastImageAndText04",
          "Value": "3"
        },
        {
          "Name": "ToastText01",
          "Value": "4"
        },
        {
          "Name": "ToastText02",
          "Value": "5"
        },
        {
          "Name": "ToastText03",
          "Value": "6"
        },
        {
          "Name": "ToastText04",
          "Value": "7"
        }
      ],
      "Name": "Windows.UI.Notifications.ToastTemplateType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "AcceptUserInputAfterDelay",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Popups.MessageDialogOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "Above",
          "Value": "1"
        },
        {
          "Name": "Below",
          "Value": "2"
        },
        {
          "Name": "Left",
          "Value": "3"
        },
        {
          "Name": "Right",
          "Value": "4"
        }
      ],
      "Name": "Windows.UI.Popups.Placement"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Dark",
          "Value": "0"
        },
        {
          "Name": "Light",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.StartScreen.ForegroundText"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "ShowNameOnLogo",
          "Value": "1"
        },
        {
          "Name": "ShowNameOnWideLogo",
          "Value": "2"
        },
        {
          "Name": "CopyOnDeployment",
          "Value": "4"
        }
      ],
      "Name": "Windows.UI.StartScreen.TileOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "Square30x30",
          "Value": "1"
        },
        {
          "Name": "Square70x70",
          "Value": "2"
        },
        {
          "Name": "Square150x150",
          "Value": "3"
        },
        {
          "Name": "Wide310x150",
          "Value": "4"
        },
        {
          "Name": "Square310x310",
          "Value": "5"
        },
        {
          "Name": "Square71x71",
          "Value": "6"
        }
      ],
      "Name": "Windows.UI.StartScreen.TileSize"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Normal",
          "Value": "0"
        },
        {
          "Name": "Null",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Text.CaretType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Word",
          "Value": "2"
        },
        {
          "Name": "Case",
          "Value": "4"
        }
      ],
      "Name": "Windows.UI.Text.FindOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Undefined",
          "Value": "0"
        },
        {
          "Name": "UltraCondensed",
          "Value": "1"
        },
        {
          "Name": "ExtraCondensed",
          "Value": "2"
        },
        {
          "Name": "Condensed",
          "Value": "3"
        },
        {
          "Name": "SemiCondensed",
          "Value": "4"
        },
        {
          "Name": "Normal",
          "Value": "5"
        },
        {
          "Name": "SemiExpanded",
          "Value": "6"
        },
        {
          "Name": "Expanded",
          "Value": "7"
        },
        {
          "Name": "ExtraExpanded",
          "Value": "8"
        },
        {
          "Name": "UltraExpanded",
          "Value": "9"
        }
      ],
      "Name": "Windows.UI.Text.FontStretch"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Normal",
          "Value": "0"
        },
        {
          "Name": "Oblique",
          "Value": "1"
        },
        {
          "Name": "Italic",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Text.FontStyle"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Off",
          "Value": "0"
        },
        {
          "Name": "On",
          "Value": "1"
        },
        {
          "Name": "Toggle",
          "Value": "2"
        },
        {
          "Name": "Undefined",
          "Value": "3"
        }
      ],
      "Name": "Windows.UI.Text.FormatEffect"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Left",
          "Value": "0"
        },
        {
          "Name": "Right",
          "Value": "1"
        },
        {
          "Name": "Center",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Text.HorizontalCharacterAlignment"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Lower",
          "Value": "0"
        },
        {
          "Name": "Upper",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Text.LetterCase"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Undefined",
          "Value": "0"
        },
        {
          "Name": "Single",
          "Value": "1"
        },
        {
          "Name": "OneAndHalf",
          "Value": "2"
        },
        {
          "Name": "Double",
          "Value": "3"
        },
        {
          "Name": "AtLeast",
          "Value": "4"
        },
        {
          "Name": "Exactly",
          "Value": "5"
        },
        {
          "Name": "Multiple",
          "Value": "6"
        },
        {
          "Name": "Percent",
          "Value": "7"
        }
      ],
      "Name": "Windows.UI.Text.LineSpacingRule"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Undefined",
          "Value": "0"
        },
        {
          "Name": "NotALink",
          "Value": "1"
        },
        {
          "Name": "ClientLink",
          "Value": "2"
        },
        {
          "Name": "FriendlyLinkName",
          "Value": "3"
        },
        {
          "Name": "FriendlyLinkAddress",
          "Value": "4"
        },
        {
          "Name": "AutoLink",
          "Value": "5"
        },
        {
          "Name": "AutoLinkEmail",
          "Value": "6"
        },
        {
          "Name": "AutoLinkPhone",
          "Value": "7"
        },
        {
          "Name": "AutoLinkPath",
          "Value": "8"
        }
      ],
      "Name": "Windows.UI.Text.LinkType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Undefined",
          "Value": "0"
        },
        {
          "Name": "Left",
          "Value": "1"
        },
        {
          "Name": "Center",
          "Value": "2"
        },
        {
          "Name": "Right",
          "Value": "3"
        }
      ],
      "Name": "Windows.UI.Text.MarkerAlignment"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Undefined",
          "Value": "0"
        },
        {
          "Name": "Parenthesis",
          "Value": "1"
        },
        {
          "Name": "Parentheses",
          "Value": "2"
        },
        {
          "Name": "Period",
          "Value": "3"
        },
        {
          "Name": "Plain",
          "Value": "4"
        },
        {
          "Name": "Minus",
          "Value": "5"
        },
        {
          "Name": "NoNumber",
          "Value": "6"
        }
      ],
      "Name": "Windows.UI.Text.MarkerStyle"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Undefined",
          "Value": "0"
        },
        {
          "Name": "None",
          "Value": "1"
        },
        {
          "Name": "Bullet",
          "Value": "2"
        },
        {
          "Name": "Arabic",
          "Value": "3"
        },
        {
          "Name": "LowercaseEnglishLetter",
          "Value": "4"
        },
        {
          "Name": "UppercaseEnglishLetter",
          "Value": "5"
        },
        {
          "Name": "LowercaseRoman",
          "Value": "6"
        },
        {
          "Name": "UppercaseRoman",
          "Value": "7"
        },
        {
          "Name": "UnicodeSequence",
          "Value": "8"
        },
        {
          "Name": "CircledNumber",
          "Value": "9"
        },
        {
          "Name": "BlackCircleWingding",
          "Value": "10"
        },
        {
          "Name": "WhiteCircleWingding",
          "Value": "11"
        },
        {
          "Name": "ArabicWide",
          "Value": "12"
        },
        {
          "Name": "SimplifiedChinese",
          "Value": "13"
        },
        {
          "Name": "TraditionalChinese",
          "Value": "14"
        },
        {
          "Name": "JapanSimplifiedChinese",
          "Value": "15"
        },
        {
          "Name": "JapanKorea",
          "Value": "16"
        },
        {
          "Name": "ArabicDictionary",
          "Value": "17"
        },
        {
          "Name": "ArabicAbjad",
          "Value": "18"
        },
        {
          "Name": "Hebrew",
          "Value": "19"
        },
        {
          "Name": "ThaiAlphabetic",
          "Value": "20"
        },
        {
          "Name": "ThaiNumeric",
          "Value": "21"
        },
        {
          "Name": "DevanagariVowel",
          "Value": "22"
        },
        {
          "Name": "DevanagariConsonant",
          "Value": "23"
        },
        {
          "Name": "DevanagariNumeric",
          "Value": "24"
        }
      ],
      "Name": "Windows.UI.Text.MarkerType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Undefined",
          "Value": "0"
        },
        {
          "Name": "Left",
          "Value": "1"
        },
        {
          "Name": "Center",
          "Value": "2"
        },
        {
          "Name": "Right",
          "Value": "3"
        },
        {
          "Name": "Justify",
          "Value": "4"
        }
      ],
      "Name": "Windows.UI.Text.ParagraphAlignment"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Undefined",
          "Value": "0"
        },
        {
          "Name": "None",
          "Value": "1"
        },
        {
          "Name": "Normal",
          "Value": "2"
        },
        {
          "Name": "Heading1",
          "Value": "3"
        },
        {
          "Name": "Heading2",
          "Value": "4"
        },
        {
          "Name": "Heading3",
          "Value": "5"
        },
        {
          "Name": "Heading4",
          "Value": "6"
        },
        {
          "Name": "Heading5",
          "Value": "7"
        },
        {
          "Name": "Heading6",
          "Value": "8"
        },
        {
          "Name": "Heading7",
          "Value": "9"
        },
        {
          "Name": "Heading8",
          "Value": "10"
        },
        {
          "Name": "Heading9",
          "Value": "11"
        }
      ],
      "Name": "Windows.UI.Text.ParagraphStyle"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "IncludeInset",
          "Value": "1"
        },
        {
          "Name": "Start",
          "Value": "32"
        },
        {
          "Name": "ClientCoordinates",
          "Value": "256"
        },
        {
          "Name": "AllowOffClient",
          "Value": "512"
        },
        {
          "Name": "Transform",
          "Value": "1024"
        },
        {
          "Name": "NoHorizontalScroll",
          "Value": "65536"
        },
        {
          "Name": "NoVerticalScroll",
          "Value": "262144"
        }
      ],
      "Name": "Windows.UI.Text.PointOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "UIBehavior",
          "Value": "0"
        },
        {
          "Name": "Backward",
          "Value": "1"
        },
        {
          "Name": "Forward",
          "Value": "2"
        },
        {
          "Name": "Inward",
          "Value": "3"
        },
        {
          "Name": "Outward",
          "Value": "4"
        }
      ],
      "Name": "Windows.UI.Text.RangeGravity"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "StartActive",
          "Value": "1"
        },
        {
          "Name": "AtEndOfLine",
          "Value": "2"
        },
        {
          "Name": "Overtype",
          "Value": "4"
        },
        {
          "Name": "Active",
          "Value": "8"
        },
        {
          "Name": "Replace",
          "Value": "16"
        }
      ],
      "Name": "Windows.UI.Text.SelectionOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "InsertionPoint",
          "Value": "1"
        },
        {
          "Name": "Normal",
          "Value": "2"
        },
        {
          "Name": "InlineShape",
          "Value": "7"
        },
        {
          "Name": "Shape",
          "Value": "8"
        }
      ],
      "Name": "Windows.UI.Text.SelectionType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Left",
          "Value": "0"
        },
        {
          "Name": "Center",
          "Value": "1"
        },
        {
          "Name": "Right",
          "Value": "2"
        },
        {
          "Name": "Decimal",
          "Value": "3"
        },
        {
          "Name": "Bar",
          "Value": "4"
        }
      ],
      "Name": "Windows.UI.Text.TabAlignment"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Spaces",
          "Value": "0"
        },
        {
          "Name": "Dots",
          "Value": "1"
        },
        {
          "Name": "Dashes",
          "Value": "2"
        },
        {
          "Name": "Lines",
          "Value": "3"
        },
        {
          "Name": "ThickLines",
          "Value": "4"
        },
        {
          "Name": "Equals",
          "Value": "5"
        }
      ],
      "Name": "Windows.UI.Text.TabLeader"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "AdjustCrlf",
          "Value": "1"
        },
        {
          "Name": "UseCrlf",
          "Value": "2"
        },
        {
          "Name": "UseObjectText",
          "Value": "4"
        },
        {
          "Name": "AllowFinalEop",
          "Value": "8"
        },
        {
          "Name": "NoHidden",
          "Value": "32"
        },
        {
          "Name": "IncludeNumbering",
          "Value": "64"
        },
        {
          "Name": "FormatRtf",
          "Value": "8192"
        }
      ],
      "Name": "Windows.UI.Text.TextGetOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Character",
          "Value": "0"
        },
        {
          "Name": "Word",
          "Value": "1"
        },
        {
          "Name": "Sentence",
          "Value": "2"
        },
        {
          "Name": "Paragraph",
          "Value": "3"
        },
        {
          "Name": "Line",
          "Value": "4"
        },
        {
          "Name": "Story",
          "Value": "5"
        },
        {
          "Name": "Screen",
          "Value": "6"
        },
        {
          "Name": "Section",
          "Value": "7"
        },
        {
          "Name": "Window",
          "Value": "8"
        },
        {
          "Name": "CharacterFormat",
          "Value": "9"
        },
        {
          "Name": "ParagraphFormat",
          "Value": "10"
        },
        {
          "Name": "Object",
          "Value": "11"
        },
        {
          "Name": "HardParagraph",
          "Value": "12"
        },
        {
          "Name": "Cluster",
          "Value": "13"
        },
        {
          "Name": "Bold",
          "Value": "14"
        },
        {
          "Name": "Italic",
          "Value": "15"
        },
        {
          "Name": "Underline",
          "Value": "16"
        },
        {
          "Name": "Strikethrough",
          "Value": "17"
        },
        {
          "Name": "ProtectedText",
          "Value": "18"
        },
        {
          "Name": "Link",
          "Value": "19"
        },
        {
          "Name": "SmallCaps",
          "Value": "20"
        },
        {
          "Name": "AllCaps",
          "Value": "21"
        },
        {
          "Name": "Hidden",
          "Value": "22"
        },
        {
          "Name": "Outline",
          "Value": "23"
        },
        {
          "Name": "Shadow",
          "Value": "24"
        },
        {
          "Name": "Imprint",
          "Value": "25"
        },
        {
          "Name": "Disabled",
          "Value": "26"
        },
        {
          "Name": "Revised",
          "Value": "27"
        },
        {
          "Name": "Subscript",
          "Value": "28"
        },
        {
          "Name": "Superscript",
          "Value": "29"
        },
        {
          "Name": "FontBound",
          "Value": "30"
        },
        {
          "Name": "LinkProtected",
          "Value": "31"
        }
      ],
      "Name": "Windows.UI.Text.TextRangeUnit"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Undefined",
          "Value": "0"
        },
        {
          "Name": "Ansi",
          "Value": "1"
        },
        {
          "Name": "EastEurope",
          "Value": "2"
        },
        {
          "Name": "Cyrillic",
          "Value": "3"
        },
        {
          "Name": "Greek",
          "Value": "4"
        },
        {
          "Name": "Turkish",
          "Value": "5"
        },
        {
          "Name": "Hebrew",
          "Value": "6"
        },
        {
          "Name": "Arabic",
          "Value": "7"
        },
        {
          "Name": "Baltic",
          "Value": "8"
        },
        {
          "Name": "Vietnamese",
          "Value": "9"
        },
        {
          "Name": "Default",
          "Value": "10"
        },
        {
          "Name": "Symbol",
          "Value": "11"
        },
        {
          "Name": "Thai",
          "Value": "12"
        },
        {
          "Name": "ShiftJis",
          "Value": "13"
        },
        {
          "Name": "GB2312",
          "Value": "14"
        },
        {
          "Name": "Hangul",
          "Value": "15"
        },
        {
          "Name": "Big5",
          "Value": "16"
        },
        {
          "Name": "PC437",
          "Value": "17"
        },
        {
          "Name": "Oem",
          "Value": "18"
        },
        {
          "Name": "Mac",
          "Value": "19"
        },
        {
          "Name": "Armenian",
          "Value": "20"
        },
        {
          "Name": "Syriac",
          "Value": "21"
        },
        {
          "Name": "Thaana",
          "Value": "22"
        },
        {
          "Name": "Devanagari",
          "Value": "23"
        },
        {
          "Name": "Bengali",
          "Value": "24"
        },
        {
          "Name": "Gurmukhi",
          "Value": "25"
        },
        {
          "Name": "Gujarati",
          "Value": "26"
        },
        {
          "Name": "Oriya",
          "Value": "27"
        },
        {
          "Name": "Tamil",
          "Value": "28"
        },
        {
          "Name": "Telugu",
          "Value": "29"
        },
        {
          "Name": "Kannada",
          "Value": "30"
        },
        {
          "Name": "Malayalam",
          "Value": "31"
        },
        {
          "Name": "Sinhala",
          "Value": "32"
        },
        {
          "Name": "Lao",
          "Value": "33"
        },
        {
          "Name": "Tibetan",
          "Value": "34"
        },
        {
          "Name": "Myanmar",
          "Value": "35"
        },
        {
          "Name": "Georgian",
          "Value": "36"
        },
        {
          "Name": "Jamo",
          "Value": "37"
        },
        {
          "Name": "Ethiopic",
          "Value": "38"
        },
        {
          "Name": "Cherokee",
          "Value": "39"
        },
        {
          "Name": "Aboriginal",
          "Value": "40"
        },
        {
          "Name": "Ogham",
          "Value": "41"
        },
        {
          "Name": "Runic",
          "Value": "42"
        },
        {
          "Name": "Khmer",
          "Value": "43"
        },
        {
          "Name": "Mongolian",
          "Value": "44"
        },
        {
          "Name": "Braille",
          "Value": "45"
        },
        {
          "Name": "Yi",
          "Value": "46"
        },
        {
          "Name": "Limbu",
          "Value": "47"
        },
        {
          "Name": "TaiLe",
          "Value": "48"
        },
        {
          "Name": "NewTaiLue",
          "Value": "49"
        },
        {
          "Name": "SylotiNagri",
          "Value": "50"
        },
        {
          "Name": "Kharoshthi",
          "Value": "51"
        },
        {
          "Name": "Kayahli",
          "Value": "52"
        },
        {
          "Name": "UnicodeSymbol",
          "Value": "53"
        },
        {
          "Name": "Emoji",
          "Value": "54"
        },
        {
          "Name": "Glagolitic",
          "Value": "55"
        },
        {
          "Name": "Lisu",
          "Value": "56"
        },
        {
          "Name": "Vai",
          "Value": "57"
        },
        {
          "Name": "NKo",
          "Value": "58"
        },
        {
          "Name": "Osmanya",
          "Value": "59"
        },
        {
          "Name": "PhagsPa",
          "Value": "60"
        },
        {
          "Name": "Gothic",
          "Value": "61"
        },
        {
          "Name": "Deseret",
          "Value": "62"
        },
        {
          "Name": "Tifinagh",
          "Value": "63"
        }
      ],
      "Name": "Windows.UI.Text.TextScript"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "UnicodeBidi",
          "Value": "1"
        },
        {
          "Name": "Unlink",
          "Value": "8"
        },
        {
          "Name": "Unhide",
          "Value": "16"
        },
        {
          "Name": "CheckTextLimit",
          "Value": "32"
        },
        {
          "Name": "FormatRtf",
          "Value": "8192"
        },
        {
          "Name": "ApplyRtfDocumentDefaults",
          "Value": "16384"
        }
      ],
      "Name": "Windows.UI.Text.TextSetOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Undefined",
          "Value": "0"
        },
        {
          "Name": "None",
          "Value": "1"
        },
        {
          "Name": "Single",
          "Value": "2"
        },
        {
          "Name": "Words",
          "Value": "3"
        },
        {
          "Name": "Double",
          "Value": "4"
        },
        {
          "Name": "Dotted",
          "Value": "5"
        },
        {
          "Name": "Dash",
          "Value": "6"
        },
        {
          "Name": "DashDot",
          "Value": "7"
        },
        {
          "Name": "DashDotDot",
          "Value": "8"
        },
        {
          "Name": "Wave",
          "Value": "9"
        },
        {
          "Name": "Thick",
          "Value": "10"
        },
        {
          "Name": "Thin",
          "Value": "11"
        },
        {
          "Name": "DoubleWave",
          "Value": "12"
        },
        {
          "Name": "HeavyWave",
          "Value": "13"
        },
        {
          "Name": "LongDash",
          "Value": "14"
        },
        {
          "Name": "ThickDash",
          "Value": "15"
        },
        {
          "Name": "ThickDashDot",
          "Value": "16"
        },
        {
          "Name": "ThickDashDotDot",
          "Value": "17"
        },
        {
          "Name": "ThickDotted",
          "Value": "18"
        },
        {
          "Name": "ThickLongDash",
          "Value": "19"
        }
      ],
      "Name": "Windows.UI.Text.UnderlineType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Top",
          "Value": "0"
        },
        {
          "Name": "Baseline",
          "Value": "1"
        },
        {
          "Name": "Bottom",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Text.VerticalCharacterAlignment"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "UseVisible",
          "Value": "0"
        },
        {
          "Name": "UseCoreWindow",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.ViewManagement.ApplicationViewBoundsMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Landscape",
          "Value": "0"
        },
        {
          "Name": "Portrait",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.ViewManagement.ApplicationViewOrientation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "LeftHanded",
          "Value": "0"
        },
        {
          "Name": "RightHanded",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.ViewManagement.HandPreference"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "ActiveCaption",
          "Value": "0"
        },
        {
          "Name": "Background",
          "Value": "1"
        },
        {
          "Name": "ButtonFace",
          "Value": "2"
        },
        {
          "Name": "ButtonText",
          "Value": "3"
        },
        {
          "Name": "CaptionText",
          "Value": "4"
        },
        {
          "Name": "GrayText",
          "Value": "5"
        },
        {
          "Name": "Highlight",
          "Value": "6"
        },
        {
          "Name": "HighlightText",
          "Value": "7"
        },
        {
          "Name": "Hotlight",
          "Value": "8"
        },
        {
          "Name": "InactiveCaption",
          "Value": "9"
        },
        {
          "Name": "InactiveCaptionText",
          "Value": "10"
        },
        {
          "Name": "Window",
          "Value": "11"
        },
        {
          "Name": "WindowText",
          "Value": "12"
        },
        {
          "Name": "AccentColor",
          "Value": "1000"
        },
        {
          "Name": "TextHigh",
          "Value": "1001"
        },
        {
          "Name": "TextMedium",
          "Value": "1002"
        },
        {
          "Name": "TextLow",
          "Value": "1003"
        },
        {
          "Name": "TextContrastWithHigh",
          "Value": "1004"
        },
        {
          "Name": "NonTextHigh",
          "Value": "1005"
        },
        {
          "Name": "NonTextMediumHigh",
          "Value": "1006"
        },
        {
          "Name": "NonTextMedium",
          "Value": "1007"
        },
        {
          "Name": "NonTextMediumLow",
          "Value": "1008"
        },
        {
          "Name": "NonTextLow",
          "Value": "1009"
        },
        {
          "Name": "PageBackground",
          "Value": "1010"
        },
        {
          "Name": "PopupBackground",
          "Value": "1011"
        },
        {
          "Name": "OverlayOutsidePopup",
          "Value": "1012"
        }
      ],
      "Name": "Windows.UI.ViewManagement.UIElementType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "Minimal",
          "Value": "1"
        },
        {
          "Name": "Compact",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.WebUI.Core.WebUICommandBarClosedDisplayMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Light",
          "Value": "0"
        },
        {
          "Name": "Dark",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.ApplicationTheme"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unknown",
          "Value": "60000"
        },
        {
          "Name": "SpellingError",
          "Value": "60001"
        },
        {
          "Name": "GrammarError",
          "Value": "60002"
        },
        {
          "Name": "Comment",
          "Value": "60003"
        },
        {
          "Name": "FormulaError",
          "Value": "60004"
        },
        {
          "Name": "TrackChanges",
          "Value": "60005"
        },
        {
          "Name": "Header",
          "Value": "60006"
        },
        {
          "Name": "Footer",
          "Value": "60007"
        },
        {
          "Name": "Highlighted",
          "Value": "60008"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.AnnotationType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Top",
          "Value": "0"
        },
        {
          "Name": "Left",
          "Value": "1"
        },
        {
          "Name": "Bottom",
          "Value": "2"
        },
        {
          "Name": "Right",
          "Value": "3"
        },
        {
          "Name": "Fill",
          "Value": "4"
        },
        {
          "Name": "None",
          "Value": "5"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.DockPosition"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Collapsed",
          "Value": "0"
        },
        {
          "Name": "Expanded",
          "Value": "1"
        },
        {
          "Name": "PartiallyExpanded",
          "Value": "2"
        },
        {
          "Name": "LeafNode",
          "Value": "3"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.ExpandCollapseState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Raw",
          "Value": "0"
        },
        {
          "Name": "Control",
          "Value": "1"
        },
        {
          "Name": "Content",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.Peers.AccessibilityView"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Button",
          "Value": "0"
        },
        {
          "Name": "Calendar",
          "Value": "1"
        },
        {
          "Name": "CheckBox",
          "Value": "2"
        },
        {
          "Name": "ComboBox",
          "Value": "3"
        },
        {
          "Name": "Edit",
          "Value": "4"
        },
        {
          "Name": "Hyperlink",
          "Value": "5"
        },
        {
          "Name": "Image",
          "Value": "6"
        },
        {
          "Name": "ListItem",
          "Value": "7"
        },
        {
          "Name": "List",
          "Value": "8"
        },
        {
          "Name": "Menu",
          "Value": "9"
        },
        {
          "Name": "MenuBar",
          "Value": "10"
        },
        {
          "Name": "MenuItem",
          "Value": "11"
        },
        {
          "Name": "ProgressBar",
          "Value": "12"
        },
        {
          "Name": "RadioButton",
          "Value": "13"
        },
        {
          "Name": "ScrollBar",
          "Value": "14"
        },
        {
          "Name": "Slider",
          "Value": "15"
        },
        {
          "Name": "Spinner",
          "Value": "16"
        },
        {
          "Name": "StatusBar",
          "Value": "17"
        },
        {
          "Name": "Tab",
          "Value": "18"
        },
        {
          "Name": "TabItem",
          "Value": "19"
        },
        {
          "Name": "Text",
          "Value": "20"
        },
        {
          "Name": "ToolBar",
          "Value": "21"
        },
        {
          "Name": "ToolTip",
          "Value": "22"
        },
        {
          "Name": "Tree",
          "Value": "23"
        },
        {
          "Name": "TreeItem",
          "Value": "24"
        },
        {
          "Name": "Custom",
          "Value": "25"
        },
        {
          "Name": "Group",
          "Value": "26"
        },
        {
          "Name": "Thumb",
          "Value": "27"
        },
        {
          "Name": "DataGrid",
          "Value": "28"
        },
        {
          "Name": "DataItem",
          "Value": "29"
        },
        {
          "Name": "Document",
          "Value": "30"
        },
        {
          "Name": "SplitButton",
          "Value": "31"
        },
        {
          "Name": "Window",
          "Value": "32"
        },
        {
          "Name": "Pane",
          "Value": "33"
        },
        {
          "Name": "Header",
          "Value": "34"
        },
        {
          "Name": "HeaderItem",
          "Value": "35"
        },
        {
          "Name": "Table",
          "Value": "36"
        },
        {
          "Name": "TitleBar",
          "Value": "37"
        },
        {
          "Name": "Separator",
          "Value": "38"
        },
        {
          "Name": "SemanticZoom",
          "Value": "39"
        },
        {
          "Name": "AppBar",
          "Value": "40"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.Peers.AutomationControlType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "ToolTipOpened",
          "Value": "0"
        },
        {
          "Name": "ToolTipClosed",
          "Value": "1"
        },
        {
          "Name": "MenuOpened",
          "Value": "2"
        },
        {
          "Name": "MenuClosed",
          "Value": "3"
        },
        {
          "Name": "AutomationFocusChanged",
          "Value": "4"
        },
        {
          "Name": "InvokePatternOnInvoked",
          "Value": "5"
        },
        {
          "Name": "SelectionItemPatternOnElementAddedToSelection",
          "Value": "6"
        },
        {
          "Name": "SelectionItemPatternOnElementRemovedFromSelection",
          "Value": "7"
        },
        {
          "Name": "SelectionItemPatternOnElementSelected",
          "Value": "8"
        },
        {
          "Name": "SelectionPatternOnInvalidated",
          "Value": "9"
        },
        {
          "Name": "TextPatternOnTextSelectionChanged",
          "Value": "10"
        },
        {
          "Name": "TextPatternOnTextChanged",
          "Value": "11"
        },
        {
          "Name": "AsyncContentLoaded",
          "Value": "12"
        },
        {
          "Name": "PropertyChanged",
          "Value": "13"
        },
        {
          "Name": "StructureChanged",
          "Value": "14"
        },
        {
          "Name": "DragStart",
          "Value": "15"
        },
        {
          "Name": "DragCancel",
          "Value": "16"
        },
        {
          "Name": "DragComplete",
          "Value": "17"
        },
        {
          "Name": "DragEnter",
          "Value": "18"
        },
        {
          "Name": "DragLeave",
          "Value": "19"
        },
        {
          "Name": "Dropped",
          "Value": "20"
        },
        {
          "Name": "LiveRegionChanged",
          "Value": "21"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.Peers.AutomationEvents"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Off",
          "Value": "0"
        },
        {
          "Name": "Polite",
          "Value": "1"
        },
        {
          "Name": "Assertive",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Horizontal",
          "Value": "1"
        },
        {
          "Name": "Vertical",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.Peers.AutomationOrientation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Invoke",
          "Value": "0"
        },
        {
          "Name": "Selection",
          "Value": "1"
        },
        {
          "Name": "Value",
          "Value": "2"
        },
        {
          "Name": "RangeValue",
          "Value": "3"
        },
        {
          "Name": "Scroll",
          "Value": "4"
        },
        {
          "Name": "ScrollItem",
          "Value": "5"
        },
        {
          "Name": "ExpandCollapse",
          "Value": "6"
        },
        {
          "Name": "Grid",
          "Value": "7"
        },
        {
          "Name": "GridItem",
          "Value": "8"
        },
        {
          "Name": "MultipleView",
          "Value": "9"
        },
        {
          "Name": "Window",
          "Value": "10"
        },
        {
          "Name": "SelectionItem",
          "Value": "11"
        },
        {
          "Name": "Dock",
          "Value": "12"
        },
        {
          "Name": "Table",
          "Value": "13"
        },
        {
          "Name": "TableItem",
          "Value": "14"
        },
        {
          "Name": "Toggle",
          "Value": "15"
        },
        {
          "Name": "Transform",
          "Value": "16"
        },
        {
          "Name": "Text",
          "Value": "17"
        },
        {
          "Name": "ItemContainer",
          "Value": "18"
        },
        {
          "Name": "VirtualizedItem",
          "Value": "19"
        },
        {
          "Name": "Text2",
          "Value": "20"
        },
        {
          "Name": "TextChild",
          "Value": "21"
        },
        {
          "Name": "TextRange",
          "Value": "22"
        },
        {
          "Name": "Annotation",
          "Value": "23"
        },
        {
          "Name": "Drag",
          "Value": "24"
        },
        {
          "Name": "DropTarget",
          "Value": "25"
        },
        {
          "Name": "ObjectModel",
          "Value": "26"
        },
        {
          "Name": "Spreadsheet",
          "Value": "27"
        },
        {
          "Name": "SpreadsheetItem",
          "Value": "28"
        },
        {
          "Name": "Styles",
          "Value": "29"
        },
        {
          "Name": "Transform2",
          "Value": "30"
        },
        {
          "Name": "SynchronizedInput",
          "Value": "31"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.Peers.PatternInterface"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "RowMajor",
          "Value": "0"
        },
        {
          "Name": "ColumnMajor",
          "Value": "1"
        },
        {
          "Name": "Indeterminate",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.RowOrColumnMajor"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "LargeDecrement",
          "Value": "0"
        },
        {
          "Name": "SmallDecrement",
          "Value": "1"
        },
        {
          "Name": "NoAmount",
          "Value": "2"
        },
        {
          "Name": "LargeIncrement",
          "Value": "3"
        },
        {
          "Name": "SmallIncrement",
          "Value": "4"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.ScrollAmount"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Single",
          "Value": "1"
        },
        {
          "Name": "Multiple",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.SupportedTextSelection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "KeyUp",
          "Value": "1"
        },
        {
          "Name": "KeyDown",
          "Value": "2"
        },
        {
          "Name": "LeftMouseUp",
          "Value": "4"
        },
        {
          "Name": "LeftMouseDown",
          "Value": "8"
        },
        {
          "Name": "RightMouseUp",
          "Value": "16"
        },
        {
          "Name": "RightMouseDown",
          "Value": "32"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.SynchronizedInputType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Start",
          "Value": "0"
        },
        {
          "Name": "End",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.Text.TextPatternRangeEndpoint"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Character",
          "Value": "0"
        },
        {
          "Name": "Format",
          "Value": "1"
        },
        {
          "Name": "Word",
          "Value": "2"
        },
        {
          "Name": "Line",
          "Value": "3"
        },
        {
          "Name": "Paragraph",
          "Value": "4"
        },
        {
          "Name": "Page",
          "Value": "5"
        },
        {
          "Name": "Document",
          "Value": "6"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.Text.TextUnit"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Off",
          "Value": "0"
        },
        {
          "Name": "On",
          "Value": "1"
        },
        {
          "Name": "Indeterminate",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.ToggleState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Running",
          "Value": "0"
        },
        {
          "Name": "Closing",
          "Value": "1"
        },
        {
          "Name": "ReadyForUserInteraction",
          "Value": "2"
        },
        {
          "Name": "BlockedByModalWindow",
          "Value": "3"
        },
        {
          "Name": "NotResponding",
          "Value": "4"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.WindowInteractionState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Normal",
          "Value": "0"
        },
        {
          "Name": "Maximized",
          "Value": "1"
        },
        {
          "Name": "Minimized",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.WindowVisualState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "NoAmount",
          "Value": "0"
        },
        {
          "Name": "LargeDecrement",
          "Value": "1"
        },
        {
          "Name": "SmallDecrement",
          "Value": "2"
        },
        {
          "Name": "LargeIncrement",
          "Value": "3"
        },
        {
          "Name": "SmallIncrement",
          "Value": "4"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.ZoomUnit"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Compact",
          "Value": "0"
        },
        {
          "Name": "Minimal",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.AppBarClosedDisplayMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "UserInput",
          "Value": "0"
        },
        {
          "Name": "ProgrammaticChange",
          "Value": "1"
        },
        {
          "Name": "SuggestionChosen",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.AutoSuggestionBoxTextChangeReason"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Release",
          "Value": "0"
        },
        {
          "Name": "Press",
          "Value": "1"
        },
        {
          "Name": "Hover",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ClickMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Primary",
          "Value": "1"
        },
        {
          "Name": "Secondary",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ContentDialogResult"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Edge",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.IncrementalLoadingTrigger"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "KeepItemsInView",
          "Value": "0"
        },
        {
          "Name": "KeepScrollOffset",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ItemsUpdatingScrollMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Single",
          "Value": "0"
        },
        {
          "Name": "Multiple",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ListPickerFlyoutSelectionMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Disabled",
          "Value": "0"
        },
        {
          "Name": "Enabled",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ListViewReorderMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Single",
          "Value": "1"
        },
        {
          "Name": "Multiple",
          "Value": "2"
        },
        {
          "Name": "Extended",
          "Value": "3"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ListViewSelectionMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "None",
          "Value": "1"
        },
        {
          "Name": "Linear",
          "Value": "2"
        },
        {
          "Name": "Bow",
          "Value": "3"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapAnimationKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Light",
          "Value": "0"
        },
        {
          "Name": "Dark",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapColorScheme"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Loading",
          "Value": "0"
        },
        {
          "Name": "Loaded",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapLoadingStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Road",
          "Value": "1"
        },
        {
          "Name": "Aerial",
          "Value": "2"
        },
        {
          "Name": "AerialWithRoads",
          "Value": "3"
        },
        {
          "Name": "Terrain",
          "Value": "4"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapStyle"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "LabelOverlay",
          "Value": "0"
        },
        {
          "Name": "RoadOverlay",
          "Value": "1"
        },
        {
          "Name": "AreaOverlay",
          "Value": "2"
        },
        {
          "Name": "BackgroundOverlay",
          "Value": "3"
        },
        {
          "Name": "BackgroundReplacement",
          "Value": "4"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapTileLayer"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Automatic",
          "Value": "0"
        },
        {
          "Name": "On",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapWatermarkMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Vertical",
          "Value": "0"
        },
        {
          "Name": "Horizontal",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Orientation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Forward",
          "Value": "1"
        },
        {
          "Name": "Backward",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.PanelScrollingDirection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "GroupOne",
          "Value": "1"
        },
        {
          "Name": "GroupTwo",
          "Value": "2"
        },
        {
          "Name": "GroupThree",
          "Value": "3"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.PivotSlideInAnimationGroup"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Left",
          "Value": "0"
        },
        {
          "Name": "Top",
          "Value": "1"
        },
        {
          "Name": "Right",
          "Value": "2"
        },
        {
          "Name": "Bottom",
          "Value": "3"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.AnimationDirection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Application",
          "Value": "0"
        },
        {
          "Name": "Nested",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ComponentResourceLocation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Left",
          "Value": "0"
        },
        {
          "Name": "Top",
          "Value": "1"
        },
        {
          "Name": "Right",
          "Value": "2"
        },
        {
          "Name": "Bottom",
          "Value": "3"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.EdgeTransitionLocation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Top",
          "Value": "0"
        },
        {
          "Name": "Bottom",
          "Value": "1"
        },
        {
          "Name": "Left",
          "Value": "2"
        },
        {
          "Name": "Right",
          "Value": "3"
        },
        {
          "Name": "Full",
          "Value": "4"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.FlyoutPlacementMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Forward",
          "Value": "0"
        },
        {
          "Name": "Backward",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.GeneratorDirection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Top",
          "Value": "0"
        },
        {
          "Name": "Left",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.GroupHeaderPlacement"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Bottom",
          "Value": "2"
        },
        {
          "Name": "Right",
          "Value": "4"
        },
        {
          "Name": "Mouse",
          "Value": "7"
        },
        {
          "Name": "Left",
          "Value": "9"
        },
        {
          "Name": "Top",
          "Value": "10"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.PlacementMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "SmallDecrement",
          "Value": "0"
        },
        {
          "Name": "SmallIncrement",
          "Value": "1"
        },
        {
          "Name": "LargeDecrement",
          "Value": "2"
        },
        {
          "Name": "LargeIncrement",
          "Value": "3"
        },
        {
          "Name": "ThumbPosition",
          "Value": "4"
        },
        {
          "Name": "ThumbTrack",
          "Value": "5"
        },
        {
          "Name": "First",
          "Value": "6"
        },
        {
          "Name": "Last",
          "Value": "7"
        },
        {
          "Name": "EndScroll",
          "Value": "8"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ScrollEventType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "TouchIndicator",
          "Value": "1"
        },
        {
          "Name": "MouseIndicator",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ScrollingIndicatorMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "StepValues",
          "Value": "0"
        },
        {
          "Name": "Ticks",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.SliderSnapsTo"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Near",
          "Value": "0"
        },
        {
          "Name": "Center",
          "Value": "1"
        },
        {
          "Name": "Far",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.SnapPointsAlignment"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "TopLeft",
          "Value": "1"
        },
        {
          "Name": "BottomRight",
          "Value": "2"
        },
        {
          "Name": "Outside",
          "Value": "3"
        },
        {
          "Name": "Inline",
          "Value": "4"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.TickPlacement"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Disabled",
          "Value": "0"
        },
        {
          "Name": "Auto",
          "Value": "1"
        },
        {
          "Name": "Hidden",
          "Value": "2"
        },
        {
          "Name": "Visible",
          "Value": "3"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ScrollBarVisibility"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "Leading",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ScrollIntoViewAlignment"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Disabled",
          "Value": "0"
        },
        {
          "Name": "Enabled",
          "Value": "1"
        },
        {
          "Name": "Auto",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ScrollMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Single",
          "Value": "0"
        },
        {
          "Name": "Multiple",
          "Value": "1"
        },
        {
          "Name": "Extended",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.SelectionMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Optional",
          "Value": "1"
        },
        {
          "Name": "Mandatory",
          "Value": "2"
        },
        {
          "Name": "OptionalSingle",
          "Value": "3"
        },
        {
          "Name": "MandatorySingle",
          "Value": "4"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.SnapPointsType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "UpOnly",
          "Value": "0"
        },
        {
          "Name": "DownOnly",
          "Value": "1"
        },
        {
          "Name": "Both",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.StretchDirection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Previous",
          "Value": "57600"
        },
        {
          "Name": "Next",
          "Value": "57601"
        },
        {
          "Name": "Play",
          "Value": "57602"
        },
        {
          "Name": "Pause",
          "Value": "57603"
        },
        {
          "Name": "Edit",
          "Value": "57604"
        },
        {
          "Name": "Save",
          "Value": "57605"
        },
        {
          "Name": "Clear",
          "Value": "57606"
        },
        {
          "Name": "Delete",
          "Value": "57607"
        },
        {
          "Name": "Remove",
          "Value": "57608"
        },
        {
          "Name": "Add",
          "Value": "57609"
        },
        {
          "Name": "Cancel",
          "Value": "57610"
        },
        {
          "Name": "Accept",
          "Value": "57611"
        },
        {
          "Name": "More",
          "Value": "57612"
        },
        {
          "Name": "Redo",
          "Value": "57613"
        },
        {
          "Name": "Undo",
          "Value": "57614"
        },
        {
          "Name": "Home",
          "Value": "57615"
        },
        {
          "Name": "Up",
          "Value": "57616"
        },
        {
          "Name": "Forward",
          "Value": "57617"
        },
        {
          "Name": "Back",
          "Value": "57618"
        },
        {
          "Name": "Favorite",
          "Value": "57619"
        },
        {
          "Name": "Camera",
          "Value": "57620"
        },
        {
          "Name": "Setting",
          "Value": "57621"
        },
        {
          "Name": "Video",
          "Value": "57622"
        },
        {
          "Name": "Sync",
          "Value": "57623"
        },
        {
          "Name": "Download",
          "Value": "57624"
        },
        {
          "Name": "Mail",
          "Value": "57625"
        },
        {
          "Name": "Find",
          "Value": "57626"
        },
        {
          "Name": "Help",
          "Value": "57627"
        },
        {
          "Name": "Upload",
          "Value": "57628"
        },
        {
          "Name": "Emoji",
          "Value": "57629"
        },
        {
          "Name": "TwoPage",
          "Value": "57630"
        },
        {
          "Name": "LeaveChat",
          "Value": "57631"
        },
        {
          "Name": "MailForward",
          "Value": "57632"
        },
        {
          "Name": "Clock",
          "Value": "57633"
        },
        {
          "Name": "Send",
          "Value": "57634"
        },
        {
          "Name": "Crop",
          "Value": "57635"
        },
        {
          "Name": "RotateCamera",
          "Value": "57636"
        },
        {
          "Name": "People",
          "Value": "57637"
        },
        {
          "Name": "OpenPane",
          "Value": "57638"
        },
        {
          "Name": "ClosePane",
          "Value": "57639"
        },
        {
          "Name": "World",
          "Value": "57640"
        },
        {
          "Name": "Flag",
          "Value": "57641"
        },
        {
          "Name": "PreviewLink",
          "Value": "57642"
        },
        {
          "Name": "Globe",
          "Value": "57643"
        },
        {
          "Name": "Trim",
          "Value": "57644"
        },
        {
          "Name": "AttachCamera",
          "Value": "57645"
        },
        {
          "Name": "ZoomIn",
          "Value": "57646"
        },
        {
          "Name": "Bookmarks",
          "Value": "57647"
        },
        {
          "Name": "Document",
          "Value": "57648"
        },
        {
          "Name": "ProtectedDocument",
          "Value": "57649"
        },
        {
          "Name": "Page",
          "Value": "57650"
        },
        {
          "Name": "Bullets",
          "Value": "57651"
        },
        {
          "Name": "Comment",
          "Value": "57652"
        },
        {
          "Name": "MailFilled",
          "Value": "57653"
        },
        {
          "Name": "ContactInfo",
          "Value": "57654"
        },
        {
          "Name": "HangUp",
          "Value": "57655"
        },
        {
          "Name": "ViewAll",
          "Value": "57656"
        },
        {
          "Name": "MapPin",
          "Value": "57657"
        },
        {
          "Name": "Phone",
          "Value": "57658"
        },
        {
          "Name": "VideoChat",
          "Value": "57659"
        },
        {
          "Name": "Switch",
          "Value": "57660"
        },
        {
          "Name": "Contact",
          "Value": "57661"
        },
        {
          "Name": "Rename",
          "Value": "57662"
        },
        {
          "Name": "Pin",
          "Value": "57665"
        },
        {
          "Name": "MusicInfo",
          "Value": "57666"
        },
        {
          "Name": "Go",
          "Value": "57667"
        },
        {
          "Name": "Keyboard",
          "Value": "57668"
        },
        {
          "Name": "DockLeft",
          "Value": "57669"
        },
        {
          "Name": "DockRight",
          "Value": "57670"
        },
        {
          "Name": "DockBottom",
          "Value": "57671"
        },
        {
          "Name": "Remote",
          "Value": "57672"
        },
        {
          "Name": "Refresh",
          "Value": "57673"
        },
        {
          "Name": "Rotate",
          "Value": "57674"
        },
        {
          "Name": "Shuffle",
          "Value": "57675"
        },
        {
          "Name": "List",
          "Value": "57676"
        },
        {
          "Name": "Shop",
          "Value": "57677"
        },
        {
          "Name": "SelectAll",
          "Value": "57678"
        },
        {
          "Name": "Orientation",
          "Value": "57679"
        },
        {
          "Name": "Import",
          "Value": "57680"
        },
        {
          "Name": "ImportAll",
          "Value": "57681"
        },
        {
          "Name": "BrowsePhotos",
          "Value": "57685"
        },
        {
          "Name": "WebCam",
          "Value": "57686"
        },
        {
          "Name": "Pictures",
          "Value": "57688"
        },
        {
          "Name": "SaveLocal",
          "Value": "57689"
        },
        {
          "Name": "Caption",
          "Value": "57690"
        },
        {
          "Name": "Stop",
          "Value": "57691"
        },
        {
          "Name": "ShowResults",
          "Value": "57692"
        },
        {
          "Name": "Volume",
          "Value": "57693"
        },
        {
          "Name": "Repair",
          "Value": "57694"
        },
        {
          "Name": "Message",
          "Value": "57695"
        },
        {
          "Name": "Page2",
          "Value": "57696"
        },
        {
          "Name": "CalendarDay",
          "Value": "57697"
        },
        {
          "Name": "CalendarWeek",
          "Value": "57698"
        },
        {
          "Name": "Calendar",
          "Value": "57699"
        },
        {
          "Name": "Character",
          "Value": "57700"
        },
        {
          "Name": "MailReplyAll",
          "Value": "57701"
        },
        {
          "Name": "Read",
          "Value": "57702"
        },
        {
          "Name": "Link",
          "Value": "57703"
        },
        {
          "Name": "Account",
          "Value": "57704"
        },
        {
          "Name": "ShowBcc",
          "Value": "57705"
        },
        {
          "Name": "HideBcc",
          "Value": "57706"
        },
        {
          "Name": "Cut",
          "Value": "57707"
        },
        {
          "Name": "Attach",
          "Value": "57708"
        },
        {
          "Name": "Paste",
          "Value": "57709"
        },
        {
          "Name": "Filter",
          "Value": "57710"
        },
        {
          "Name": "Copy",
          "Value": "57711"
        },
        {
          "Name": "Emoji2",
          "Value": "57712"
        },
        {
          "Name": "Important",
          "Value": "57713"
        },
        {
          "Name": "MailReply",
          "Value": "57714"
        },
        {
          "Name": "SlideShow",
          "Value": "57715"
        },
        {
          "Name": "Sort",
          "Value": "57716"
        },
        {
          "Name": "Manage",
          "Value": "57720"
        },
        {
          "Name": "AllApps",
          "Value": "57721"
        },
        {
          "Name": "DisconnectDrive",
          "Value": "57722"
        },
        {
          "Name": "MapDrive",
          "Value": "57723"
        },
        {
          "Name": "NewWindow",
          "Value": "57724"
        },
        {
          "Name": "OpenWith",
          "Value": "57725"
        },
        {
          "Name": "ContactPresence",
          "Value": "57729"
        },
        {
          "Name": "Priority",
          "Value": "57730"
        },
        {
          "Name": "GoToToday",
          "Value": "57732"
        },
        {
          "Name": "Font",
          "Value": "57733"
        },
        {
          "Name": "FontColor",
          "Value": "57734"
        },
        {
          "Name": "Contact2",
          "Value": "57735"
        },
        {
          "Name": "Folder",
          "Value": "57736"
        },
        {
          "Name": "Audio",
          "Value": "57737"
        },
        {
          "Name": "Placeholder",
          "Value": "57738"
        },
        {
          "Name": "View",
          "Value": "57739"
        },
        {
          "Name": "SetLockScreen",
          "Value": "57740"
        },
        {
          "Name": "SetTile",
          "Value": "57741"
        },
        {
          "Name": "ClosedCaption",
          "Value": "57744"
        },
        {
          "Name": "StopSlideShow",
          "Value": "57745"
        },
        {
          "Name": "Permissions",
          "Value": "57746"
        },
        {
          "Name": "Highlight",
          "Value": "57747"
        },
        {
          "Name": "DisableUpdates",
          "Value": "57748"
        },
        {
          "Name": "UnFavorite",
          "Value": "57749"
        },
        {
          "Name": "UnPin",
          "Value": "57750"
        },
        {
          "Name": "OpenLocal",
          "Value": "57751"
        },
        {
          "Name": "Mute",
          "Value": "57752"
        },
        {
          "Name": "Italic",
          "Value": "57753"
        },
        {
          "Name": "Underline",
          "Value": "57754"
        },
        {
          "Name": "Bold",
          "Value": "57755"
        },
        {
          "Name": "MoveToFolder",
          "Value": "57756"
        },
        {
          "Name": "LikeDislike",
          "Value": "57757"
        },
        {
          "Name": "Dislike",
          "Value": "57758"
        },
        {
          "Name": "Like",
          "Value": "57759"
        },
        {
          "Name": "AlignRight",
          "Value": "57760"
        },
        {
          "Name": "AlignCenter",
          "Value": "57761"
        },
        {
          "Name": "AlignLeft",
          "Value": "57762"
        },
        {
          "Name": "Zoom",
          "Value": "57763"
        },
        {
          "Name": "ZoomOut",
          "Value": "57764"
        },
        {
          "Name": "OpenFile",
          "Value": "57765"
        },
        {
          "Name": "OtherUser",
          "Value": "57766"
        },
        {
          "Name": "Admin",
          "Value": "57767"
        },
        {
          "Name": "Street",
          "Value": "57795"
        },
        {
          "Name": "Map",
          "Value": "57796"
        },
        {
          "Name": "ClearSelection",
          "Value": "57797"
        },
        {
          "Name": "FontDecrease",
          "Value": "57798"
        },
        {
          "Name": "FontIncrease",
          "Value": "57799"
        },
        {
          "Name": "FontSize",
          "Value": "57800"
        },
        {
          "Name": "CellPhone",
          "Value": "57801"
        },
        {
          "Name": "ReShare",
          "Value": "57802"
        },
        {
          "Name": "Tag",
          "Value": "57803"
        },
        {
          "Name": "RepeatOne",
          "Value": "57804"
        },
        {
          "Name": "RepeatAll",
          "Value": "57805"
        },
        {
          "Name": "OutlineStar",
          "Value": "57806"
        },
        {
          "Name": "SolidStar",
          "Value": "57807"
        },
        {
          "Name": "Calculator",
          "Value": "57808"
        },
        {
          "Name": "Directions",
          "Value": "57809"
        },
        {
          "Name": "Target",
          "Value": "57810"
        },
        {
          "Name": "Library",
          "Value": "57811"
        },
        {
          "Name": "PhoneBook",
          "Value": "57812"
        },
        {
          "Name": "Memo",
          "Value": "57813"
        },
        {
          "Name": "Microphone",
          "Value": "57814"
        },
        {
          "Name": "PostUpdate",
          "Value": "57815"
        },
        {
          "Name": "BackToWindow",
          "Value": "57816"
        },
        {
          "Name": "FullScreen",
          "Value": "57817"
        },
        {
          "Name": "NewFolder",
          "Value": "57818"
        },
        {
          "Name": "CalendarReply",
          "Value": "57819"
        },
        {
          "Name": "UnSyncFolder",
          "Value": "57821"
        },
        {
          "Name": "ReportHacked",
          "Value": "57822"
        },
        {
          "Name": "SyncFolder",
          "Value": "57823"
        },
        {
          "Name": "BlockContact",
          "Value": "57824"
        },
        {
          "Name": "SwitchApps",
          "Value": "57825"
        },
        {
          "Name": "AddFriend",
          "Value": "57826"
        },
        {
          "Name": "TouchPointer",
          "Value": "57827"
        },
        {
          "Name": "GoToStart",
          "Value": "57828"
        },
        {
          "Name": "ZeroBars",
          "Value": "57829"
        },
        {
          "Name": "OneBar",
          "Value": "57830"
        },
        {
          "Name": "TwoBars",
          "Value": "57831"
        },
        {
          "Name": "ThreeBars",
          "Value": "57832"
        },
        {
          "Name": "FourBars",
          "Value": "57833"
        },
        {
          "Name": "Scan",
          "Value": "58004"
        },
        {
          "Name": "Preview",
          "Value": "58005"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Symbol"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Standard",
          "Value": "0"
        },
        {
          "Name": "Recycling",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.VirtualizationMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Disabled",
          "Value": "0"
        },
        {
          "Name": "Enabled",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ZoomMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "OneWay",
          "Value": "1"
        },
        {
          "Name": "OneTime",
          "Value": "2"
        },
        {
          "Name": "TwoWay",
          "Value": "3"
        }
      ],
      "Name": "Windows.UI.Xaml.Data.BindingMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "TemplatedParent",
          "Value": "1"
        },
        {
          "Name": "Self",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Data.RelativeSourceMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "PropertyChanged",
          "Value": "1"
        },
        {
          "Name": "Explicit",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Data.UpdateSourceTrigger"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Backward",
          "Value": "0"
        },
        {
          "Name": "Forward",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Documents.LogicalDirection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "Light",
          "Value": "1"
        },
        {
          "Name": "Dark",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.ElementTheme"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "LeftToRight",
          "Value": "0"
        },
        {
          "Name": "RightToLeft",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.FlowDirection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unfocused",
          "Value": "0"
        },
        {
          "Name": "Pointer",
          "Value": "1"
        },
        {
          "Name": "Keyboard",
          "Value": "2"
        },
        {
          "Name": "Programmatic",
          "Value": "3"
        }
      ],
      "Name": "Windows.UI.Xaml.FocusState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Normal",
          "Value": "0"
        },
        {
          "Name": "AllSmallCaps",
          "Value": "1"
        },
        {
          "Name": "SmallCaps",
          "Value": "2"
        },
        {
          "Name": "AllPetiteCaps",
          "Value": "3"
        },
        {
          "Name": "PetiteCaps",
          "Value": "4"
        },
        {
          "Name": "Unicase",
          "Value": "5"
        },
        {
          "Name": "Titling",
          "Value": "6"
        }
      ],
      "Name": "Windows.UI.Xaml.FontCapitals"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Normal",
          "Value": "0"
        },
        {
          "Name": "HojoKanji",
          "Value": "1"
        },
        {
          "Name": "Jis04",
          "Value": "2"
        },
        {
          "Name": "Jis78",
          "Value": "3"
        },
        {
          "Name": "Jis83",
          "Value": "4"
        },
        {
          "Name": "Jis90",
          "Value": "5"
        },
        {
          "Name": "NlcKanji",
          "Value": "6"
        },
        {
          "Name": "Simplified",
          "Value": "7"
        },
        {
          "Name": "Traditional",
          "Value": "8"
        },
        {
          "Name": "TraditionalNames",
          "Value": "9"
        }
      ],
      "Name": "Windows.UI.Xaml.FontEastAsianLanguage"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Normal",
          "Value": "0"
        },
        {
          "Name": "Full",
          "Value": "1"
        },
        {
          "Name": "Half",
          "Value": "2"
        },
        {
          "Name": "Proportional",
          "Value": "3"
        },
        {
          "Name": "Quarter",
          "Value": "4"
        },
        {
          "Name": "Third",
          "Value": "5"
        }
      ],
      "Name": "Windows.UI.Xaml.FontEastAsianWidths"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Normal",
          "Value": "0"
        },
        {
          "Name": "Stacked",
          "Value": "1"
        },
        {
          "Name": "Slashed",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.FontFraction"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Normal",
          "Value": "0"
        },
        {
          "Name": "Proportional",
          "Value": "1"
        },
        {
          "Name": "Tabular",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.FontNumeralAlignment"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Normal",
          "Value": "0"
        },
        {
          "Name": "Lining",
          "Value": "1"
        },
        {
          "Name": "OldStyle",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.FontNumeralStyle"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Normal",
          "Value": "0"
        },
        {
          "Name": "Superscript",
          "Value": "1"
        },
        {
          "Name": "Subscript",
          "Value": "2"
        },
        {
          "Name": "Ordinal",
          "Value": "3"
        },
        {
          "Name": "Inferior",
          "Value": "4"
        },
        {
          "Name": "Ruby",
          "Value": "5"
        }
      ],
      "Name": "Windows.UI.Xaml.FontVariants"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Left",
          "Value": "0"
        },
        {
          "Name": "Center",
          "Value": "1"
        },
        {
          "Name": "Right",
          "Value": "2"
        },
        {
          "Name": "Stretch",
          "Value": "3"
        }
      ],
      "Name": "Windows.UI.Xaml.HorizontalAlignment"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Next",
          "Value": "0"
        },
        {
          "Name": "Previous",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.FocusNavigationDirection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "Url",
          "Value": "1"
        },
        {
          "Name": "EmailSmtpAddress",
          "Value": "5"
        },
        {
          "Name": "CurrencyAmountAndSymbol",
          "Value": "20"
        },
        {
          "Name": "Number",
          "Value": "29"
        },
        {
          "Name": "TelephoneNumber",
          "Value": "32"
        },
        {
          "Name": "NumberFullWidth",
          "Value": "39"
        },
        {
          "Name": "AlphanumericHalfWidth",
          "Value": "40"
        },
        {
          "Name": "AlphanumericFullWidth",
          "Value": "41"
        },
        {
          "Name": "Hiragana",
          "Value": "44"
        },
        {
          "Name": "KatakanaHalfWidth",
          "Value": "45"
        },
        {
          "Name": "KatakanaFullWidth",
          "Value": "46"
        },
        {
          "Name": "Hanja",
          "Value": "47"
        },
        {
          "Name": "HangulHalfWidth",
          "Value": "48"
        },
        {
          "Name": "HangulFullWidth",
          "Value": "49"
        },
        {
          "Name": "Search",
          "Value": "50"
        },
        {
          "Name": "Formula",
          "Value": "51"
        },
        {
          "Name": "SearchIncremental",
          "Value": "52"
        },
        {
          "Name": "ChineseHalfWidth",
          "Value": "53"
        },
        {
          "Name": "ChineseFullWidth",
          "Value": "54"
        },
        {
          "Name": "NativeScript",
          "Value": "55"
        },
        {
          "Name": "Chat",
          "Value": "58"
        },
        {
          "Name": "NameOrPhoneNumber",
          "Value": "59"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.InputScopeNameValue"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Local",
          "Value": "0"
        },
        {
          "Name": "Cycle",
          "Value": "1"
        },
        {
          "Name": "Once",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.KeyboardNavigationMode"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "TranslateX",
          "Value": "1"
        },
        {
          "Name": "TranslateY",
          "Value": "2"
        },
        {
          "Name": "TranslateRailsX",
          "Value": "4"
        },
        {
          "Name": "TranslateRailsY",
          "Value": "8"
        },
        {
          "Name": "Rotate",
          "Value": "16"
        },
        {
          "Name": "Scale",
          "Value": "32"
        },
        {
          "Name": "TranslateInertia",
          "Value": "64"
        },
        {
          "Name": "RotateInertia",
          "Value": "128"
        },
        {
          "Name": "ScaleInertia",
          "Value": "256"
        },
        {
          "Name": "All",
          "Value": "65535"
        },
        {
          "Name": "System",
          "Value": "65536"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.ManipulationModes"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Primitive",
          "Value": "0"
        },
        {
          "Name": "Metadata",
          "Value": "1"
        },
        {
          "Name": "Custom",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Interop.TypeKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "MaxHeight",
          "Value": "0"
        },
        {
          "Name": "BlockLineHeight",
          "Value": "1"
        },
        {
          "Name": "BaselineToBaseline",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.LineStackingStrategy"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Left",
          "Value": "0"
        },
        {
          "Name": "Center",
          "Value": "1"
        },
        {
          "Name": "Right",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.AlignmentX"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Top",
          "Value": "0"
        },
        {
          "Name": "Center",
          "Value": "1"
        },
        {
          "Name": "Bottom",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.AlignmentY"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Active",
          "Value": "0"
        },
        {
          "Name": "Filling",
          "Value": "1"
        },
        {
          "Name": "Stopped",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.Animation.ClockState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "EaseOut",
          "Value": "0"
        },
        {
          "Name": "EaseIn",
          "Value": "1"
        },
        {
          "Name": "EaseInOut",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.Animation.EasingMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "HoldEnd",
          "Value": "0"
        },
        {
          "Name": "Stop",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.Animation.FillBehavior"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Other",
          "Value": "0"
        },
        {
          "Name": "ForegroundOnlyMedia",
          "Value": "1"
        },
        {
          "Name": "BackgroundCapableMedia",
          "Value": "2"
        },
        {
          "Name": "Communications",
          "Value": "3"
        },
        {
          "Name": "Alerts",
          "Value": "4"
        },
        {
          "Name": "SoundEffects",
          "Value": "5"
        },
        {
          "Name": "GameEffects",
          "Value": "6"
        },
        {
          "Name": "GameMedia",
          "Value": "7"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.AudioCategory"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Console",
          "Value": "0"
        },
        {
          "Name": "Multimedia",
          "Value": "1"
        },
        {
          "Name": "Communications",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.AudioDeviceType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Absolute",
          "Value": "0"
        },
        {
          "Name": "RelativeToBoundingBox",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.BrushMappingMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "ScRgbLinearInterpolation",
          "Value": "0"
        },
        {
          "Name": "SRgbLinearInterpolation",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.ColorInterpolationMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Inherit",
          "Value": "0"
        },
        {
          "Name": "SourceOver",
          "Value": "1"
        },
        {
          "Name": "MinBlend",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.ElementCompositeMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "EvenOdd",
          "Value": "0"
        },
        {
          "Name": "Nonzero",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.FillRule"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Pad",
          "Value": "0"
        },
        {
          "Name": "Reflect",
          "Value": "1"
        },
        {
          "Name": "Repeat",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.GradientSpreadMethod"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "IgnoreImageCache",
          "Value": "8"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.Imaging.BitmapCreateOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Physical",
          "Value": "0"
        },
        {
          "Name": "Logical",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.Imaging.DecodePixelType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "NotSupported",
          "Value": "0"
        },
        {
          "Name": "Maybe",
          "Value": "1"
        },
        {
          "Name": "Probably",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.MediaCanPlayResponse"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Closed",
          "Value": "0"
        },
        {
          "Name": "Opening",
          "Value": "1"
        },
        {
          "Name": "Buffering",
          "Value": "2"
        },
        {
          "Name": "Playing",
          "Value": "3"
        },
        {
          "Name": "Paused",
          "Value": "4"
        },
        {
          "Name": "Stopped",
          "Value": "5"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.MediaElementState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Flat",
          "Value": "0"
        },
        {
          "Name": "Square",
          "Value": "1"
        },
        {
          "Name": "Round",
          "Value": "2"
        },
        {
          "Name": "Triangle",
          "Value": "3"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.PenLineCap"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Miter",
          "Value": "0"
        },
        {
          "Name": "Bevel",
          "Value": "1"
        },
        {
          "Name": "Round",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.PenLineJoin"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "SideBySide",
          "Value": "1"
        },
        {
          "Name": "TopBottom",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.Stereo3DVideoPackingMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Mono",
          "Value": "0"
        },
        {
          "Name": "Stereo",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.Stereo3DVideoRenderMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Fill",
          "Value": "1"
        },
        {
          "Name": "Uniform",
          "Value": "2"
        },
        {
          "Name": "UniformToFill",
          "Value": "3"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.Stretch"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "BoldSimulation",
          "Value": "1"
        },
        {
          "Name": "ItalicSimulation",
          "Value": "2"
        },
        {
          "Name": "BoldItalicSimulation",
          "Value": "3"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.StyleSimulations"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Counterclockwise",
          "Value": "0"
        },
        {
          "Name": "Clockwise",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.SweepDirection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Disabled",
          "Value": "0"
        },
        {
          "Name": "Required",
          "Value": "1"
        },
        {
          "Name": "Enabled",
          "Value": "2"
        }
      ],
      "Name": "Windows.UI.Xaml.Navigation.NavigationCacheMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "New",
          "Value": "0"
        },
        {
          "Name": "Back",
          "Value": "1"
        },
        {
          "Name": "Forward",
          "Value": "2"
        },
        {
          "Name": "Refresh",
          "Value": "3"
        }
      ],
      "Name": "Windows.UI.Xaml.Navigation.NavigationMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "TrimSideBearings",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.OpticalMarginAlignment"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Center",
          "Value": "0"
        },
        {
          "Name": "Left",
          "Value": "1"
        },
        {
          "Name": "Right",
          "Value": "2"
        },
        {
          "Name": "Justify",
          "Value": "3"
        }
      ],
      "Name": "Windows.UI.Xaml.TextAlignment"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Full",
          "Value": "0"
        },
        {
          "Name": "TrimToCapHeight",
          "Value": "1"
        },
        {
          "Name": "TrimToBaseline",
          "Value": "2"
        },
        {
          "Name": "Tight",
          "Value": "3"
        }
      ],
      "Name": "Windows.UI.Xaml.TextLineBounds"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "DetectFromContent",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.TextReadingOrder"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "CharacterEllipsis",
          "Value": "1"
        },
        {
          "Name": "WordEllipsis",
          "Value": "2"
        },
        {
          "Name": "Clip",
          "Value": "3"
        }
      ],
      "Name": "Windows.UI.Xaml.TextTrimming"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "NoWrap",
          "Value": "1"
        },
        {
          "Name": "Wrap",
          "Value": "2"
        },
        {
          "Name": "WrapWholeWords",
          "Value": "3"
        }
      ],
      "Name": "Windows.UI.Xaml.TextWrapping"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Top",
          "Value": "0"
        },
        {
          "Name": "Center",
          "Value": "1"
        },
        {
          "Name": "Bottom",
          "Value": "2"
        },
        {
          "Name": "Stretch",
          "Value": "3"
        }
      ],
      "Name": "Windows.UI.Xaml.VerticalAlignment"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Visible",
          "Value": "0"
        },
        {
          "Name": "Collapsed",
          "Value": "1"
        }
      ],
      "Name": "Windows.UI.Xaml.Visibility"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "MostRecent",
          "Value": "1"
        },
        {
          "Name": "OnlyFromCache",
          "Value": "2"
        }
      ],
      "Name": "Windows.Web.Http.Filters.HttpCacheReadBehavior"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "NoCache",
          "Value": "1"
        }
      ],
      "Name": "Windows.Web.Http.Filters.HttpCacheWriteBehavior"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "ResponseContentRead",
          "Value": "0"
        },
        {
          "Name": "ResponseHeadersRead",
          "Value": "1"
        }
      ],
      "Name": "Windows.Web.Http.HttpCompletionOption"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "DetectingProxy",
          "Value": "10"
        },
        {
          "Name": "ResolvingName",
          "Value": "20"
        },
        {
          "Name": "ConnectingToServer",
          "Value": "30"
        },
        {
          "Name": "NegotiatingSsl",
          "Value": "40"
        },
        {
          "Name": "SendingHeaders",
          "Value": "50"
        },
        {
          "Name": "SendingContent",
          "Value": "60"
        },
        {
          "Name": "WaitingForResponse",
          "Value": "70"
        },
        {
          "Name": "ReceivingHeaders",
          "Value": "80"
        },
        {
          "Name": "ReceivingContent",
          "Value": "90"
        }
      ],
      "Name": "Windows.Web.Http.HttpProgressStage"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Cache",
          "Value": "1"
        },
        {
          "Name": "Network",
          "Value": "2"
        }
      ],
      "Name": "Windows.Web.Http.HttpResponseMessageSource"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Continue",
          "Value": "100"
        },
        {
          "Name": "SwitchingProtocols",
          "Value": "101"
        },
        {
          "Name": "Processing",
          "Value": "102"
        },
        {
          "Name": "Ok",
          "Value": "200"
        },
        {
          "Name": "Created",
          "Value": "201"
        },
        {
          "Name": "Accepted",
          "Value": "202"
        },
        {
          "Name": "NonAuthoritativeInformation",
          "Value": "203"
        },
        {
          "Name": "NoContent",
          "Value": "204"
        },
        {
          "Name": "ResetContent",
          "Value": "205"
        },
        {
          "Name": "PartialContent",
          "Value": "206"
        },
        {
          "Name": "MultiStatus",
          "Value": "207"
        },
        {
          "Name": "AlreadyReported",
          "Value": "208"
        },
        {
          "Name": "IMUsed",
          "Value": "226"
        },
        {
          "Name": "MultipleChoices",
          "Value": "300"
        },
        {
          "Name": "MovedPermanently",
          "Value": "301"
        },
        {
          "Name": "Found",
          "Value": "302"
        },
        {
          "Name": "SeeOther",
          "Value": "303"
        },
        {
          "Name": "NotModified",
          "Value": "304"
        },
        {
          "Name": "UseProxy",
          "Value": "305"
        },
        {
          "Name": "TemporaryRedirect",
          "Value": "307"
        },
        {
          "Name": "PermanentRedirect",
          "Value": "308"
        },
        {
          "Name": "BadRequest",
          "Value": "400"
        },
        {
          "Name": "Unauthorized",
          "Value": "401"
        },
        {
          "Name": "PaymentRequired",
          "Value": "402"
        },
        {
          "Name": "Forbidden",
          "Value": "403"
        },
        {
          "Name": "NotFound",
          "Value": "404"
        },
        {
          "Name": "MethodNotAllowed",
          "Value": "405"
        },
        {
          "Name": "NotAcceptable",
          "Value": "406"
        },
        {
          "Name": "ProxyAuthenticationRequired",
          "Value": "407"
        },
        {
          "Name": "RequestTimeout",
          "Value": "408"
        },
        {
          "Name": "Conflict",
          "Value": "409"
        },
        {
          "Name": "Gone",
          "Value": "410"
        },
        {
          "Name": "LengthRequired",
          "Value": "411"
        },
        {
          "Name": "PreconditionFailed",
          "Value": "412"
        },
        {
          "Name": "RequestEntityTooLarge",
          "Value": "413"
        },
        {
          "Name": "RequestUriTooLong",
          "Value": "414"
        },
        {
          "Name": "UnsupportedMediaType",
          "Value": "415"
        },
        {
          "Name": "RequestedRangeNotSatisfiable",
          "Value": "416"
        },
        {
          "Name": "ExpectationFailed",
          "Value": "417"
        },
        {
          "Name": "UnprocessableEntity",
          "Value": "422"
        },
        {
          "Name": "Locked",
          "Value": "423"
        },
        {
          "Name": "FailedDependency",
          "Value": "424"
        },
        {
          "Name": "UpgradeRequired",
          "Value": "426"
        },
        {
          "Name": "PreconditionRequired",
          "Value": "428"
        },
        {
          "Name": "TooManyRequests",
          "Value": "429"
        },
        {
          "Name": "RequestHeaderFieldsTooLarge",
          "Value": "431"
        },
        {
          "Name": "InternalServerError",
          "Value": "500"
        },
        {
          "Name": "NotImplemented",
          "Value": "501"
        },
        {
          "Name": "BadGateway",
          "Value": "502"
        },
        {
          "Name": "ServiceUnavailable",
          "Value": "503"
        },
        {
          "Name": "GatewayTimeout",
          "Value": "504"
        },
        {
          "Name": "HttpVersionNotSupported",
          "Value": "505"
        },
        {
          "Name": "VariantAlsoNegotiates",
          "Value": "506"
        },
        {
          "Name": "InsufficientStorage",
          "Value": "507"
        },
        {
          "Name": "LoopDetected",
          "Value": "508"
        },
        {
          "Name": "NotExtended",
          "Value": "510"
        },
        {
          "Name": "NetworkAuthenticationRequired",
          "Value": "511"
        }
      ],
      "Name": "Windows.Web.Http.HttpStatusCode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Http10",
          "Value": "1"
        },
        {
          "Name": "Http11",
          "Value": "2"
        }
      ],
      "Name": "Windows.Web.Http.HttpVersion"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unknown",
          "Value": "0"
        },
        {
          "Name": "MissingRequiredElement",
          "Value": "1"
        },
        {
          "Name": "MissingRequiredAttribute",
          "Value": "2"
        },
        {
          "Name": "InvalidXml",
          "Value": "3"
        },
        {
          "Name": "UnexpectedContent",
          "Value": "4"
        },
        {
          "Name": "UnsupportedFormat",
          "Value": "5"
        }
      ],
      "Name": "Windows.Web.Syndication.SyndicationErrorStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Atom10",
          "Value": "0"
        },
        {
          "Name": "Rss20",
          "Value": "1"
        },
        {
          "Name": "Rss10",
          "Value": "2"
        },
        {
          "Name": "Rss092",
          "Value": "3"
        },
        {
          "Name": "Rss091",
          "Value": "4"
        },
        {
          "Name": "Atom03",
          "Value": "5"
        }
      ],
      "Name": "Windows.Web.Syndication.SyndicationFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Text",
          "Value": "0"
        },
        {
          "Name": "Html",
          "Value": "1"
        },
        {
          "Name": "Xhtml",
          "Value": "2"
        }
      ],
      "Name": "Windows.Web.Syndication.SyndicationTextType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unknown",
          "Value": "0"
        },
        {
          "Name": "CertificateCommonNameIsIncorrect",
          "Value": "1"
        },
        {
          "Name": "CertificateExpired",
          "Value": "2"
        },
        {
          "Name": "CertificateContainsErrors",
          "Value": "3"
        },
        {
          "Name": "CertificateRevoked",
          "Value": "4"
        },
        {
          "Name": "CertificateIsInvalid",
          "Value": "5"
        },
        {
          "Name": "ServerUnreachable",
          "Value": "6"
        },
        {
          "Name": "Timeout",
          "Value": "7"
        },
        {
          "Name": "ErrorHttpInvalidServerResponse",
          "Value": "8"
        },
        {
          "Name": "ConnectionAborted",
          "Value": "9"
        },
        {
          "Name": "ConnectionReset",
          "Value": "10"
        },
        {
          "Name": "Disconnected",
          "Value": "11"
        },
        {
          "Name": "HttpToHttpsOnRedirection",
          "Value": "12"
        },
        {
          "Name": "HttpsToHttpOnRedirection",
          "Value": "13"
        },
        {
          "Name": "CannotConnect",
          "Value": "14"
        },
        {
          "Name": "HostNameNotResolved",
          "Value": "15"
        },
        {
          "Name": "OperationCanceled",
          "Value": "16"
        },
        {
          "Name": "RedirectFailed",
          "Value": "17"
        },
        {
          "Name": "UnexpectedStatusCode",
          "Value": "18"
        },
        {
          "Name": "UnexpectedRedirection",
          "Value": "19"
        },
        {
          "Name": "UnexpectedClientError",
          "Value": "20"
        },
        {
          "Name": "UnexpectedServerError",
          "Value": "21"
        },
        {
          "Name": "MultipleChoices",
          "Value": "300"
        },
        {
          "Name": "MovedPermanently",
          "Value": "301"
        },
        {
          "Name": "Found",
          "Value": "302"
        },
        {
          "Name": "SeeOther",
          "Value": "303"
        },
        {
          "Name": "NotModified",
          "Value": "304"
        },
        {
          "Name": "UseProxy",
          "Value": "305"
        },
        {
          "Name": "TemporaryRedirect",
          "Value": "307"
        },
        {
          "Name": "BadRequest",
          "Value": "400"
        },
        {
          "Name": "Unauthorized",
          "Value": "401"
        },
        {
          "Name": "PaymentRequired",
          "Value": "402"
        },
        {
          "Name": "Forbidden",
          "Value": "403"
        },
        {
          "Name": "NotFound",
          "Value": "404"
        },
        {
          "Name": "MethodNotAllowed",
          "Value": "405"
        },
        {
          "Name": "NotAcceptable",
          "Value": "406"
        },
        {
          "Name": "ProxyAuthenticationRequired",
          "Value": "407"
        },
        {
          "Name": "RequestTimeout",
          "Value": "408"
        },
        {
          "Name": "Conflict",
          "Value": "409"
        },
        {
          "Name": "Gone",
          "Value": "410"
        },
        {
          "Name": "LengthRequired",
          "Value": "411"
        },
        {
          "Name": "PreconditionFailed",
          "Value": "412"
        },
        {
          "Name": "RequestEntityTooLarge",
          "Value": "413"
        },
        {
          "Name": "RequestUriTooLong",
          "Value": "414"
        },
        {
          "Name": "UnsupportedMediaType",
          "Value": "415"
        },
        {
          "Name": "RequestedRangeNotSatisfiable",
          "Value": "416"
        },
        {
          "Name": "ExpectationFailed",
          "Value": "417"
        },
        {
          "Name": "InternalServerError",
          "Value": "500"
        },
        {
          "Name": "NotImplemented",
          "Value": "501"
        },
        {
          "Name": "BadGateway",
          "Value": "502"
        },
        {
          "Name": "ServiceUnavailable",
          "Value": "503"
        },
        {
          "Name": "GatewayTimeout",
          "Value": "504"
        },
        {
          "Name": "HttpVersionNotSupported",
          "Value": "505"
        }
      ],
      "Name": "Windows.Web.WebErrorStatus"
    }
  ],
  "Delegates": [
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "IBackgroundTaskInstance"
        },
        {
          "Name": "reason",
          "Type": "BackgroundTaskCancellationReason"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.BackgroundTaskCanceledEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "BackgroundTaskRegistration"
        },
        {
          "Name": "args",
          "Type": "BackgroundTaskProgressEventArgs"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.BackgroundTaskProgressEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "BackgroundTaskRegistration"
        },
        {
          "Name": "args",
          "Type": "BackgroundTaskCompletedEventArgs"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.BackgroundTaskCompletedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "request",
          "Type": "DataProviderRequest"
        }
      ],
      "Name": "Windows.ApplicationModel.DataTransfer.DataProviderHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        }
      ],
      "Name": "Windows.Graphics.Display.DisplayPropertiesEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "command",
          "Type": "IUICommand"
        }
      ],
      "Name": "Windows.UI.Popups.UICommandInvokedHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "stream",
          "Type": "StreamedFileDataRequest"
        }
      ],
      "Name": "Windows.Storage.StreamedFileDataRequestedHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "timer",
          "Type": "ThreadPoolTimer"
        }
      ],
      "Name": "Windows.System.Threading.TimerElapsedHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "timer",
          "Type": "ThreadPoolTimer"
        }
      ],
      "Name": "Windows.System.Threading.TimerDestroyedHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "operation",
          "Type": "IAsyncAction"
        }
      ],
      "Name": "Windows.System.Threading.WorkItemHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "signalNotifier",
          "Type": "SignalNotifier"
        },
        {
          "Name": "timedOut",
          "Type": "Boolean"
        }
      ],
      "Name": "Windows.System.Threading.Core.SignalHandler"
    },
    {
      "ReturnType": "Void",
      "Name": "Windows.ApplicationModel.Store.LicenseChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "SmartCardProvisioning"
        },
        {
          "Name": "request",
          "Type": "SmartCardPinResetRequest"
        }
      ],
      "Name": "Windows.Devices.SmartCards.SmartCardPinResetHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "asyncInfo",
          "Type": "IAsyncAction"
        },
        {
          "Name": "asyncStatus",
          "Type": "AsyncStatus"
        }
      ],
      "Name": "Windows.Foundation.AsyncActionCompletedHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "IObservableVector<T>"
        },
        {
          "Name": "event",
          "Type": "IVectorChangedEventArgs"
        }
      ],
      "Name": "Windows.Foundation.Collections.VectorChangedEventHandler<T>"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "IObservableMap<K,V>"
        },
        {
          "Name": "event",
          "Type": "IMapChangedEventArgs<K>"
        }
      ],
      "Name": "Windows.Foundation.Collections.MapChangedEventHandler<K,V>"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "asyncInfo",
          "Type": "IAsyncOperationWithProgress<TResult,TProgress>"
        },
        {
          "Name": "asyncStatus",
          "Type": "AsyncStatus"
        }
      ],
      "Name": "Windows.Foundation.AsyncOperationWithProgressCompletedHandler<TResult,TProgress>"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "asyncInfo",
          "Type": "IAsyncOperation<TResult>"
        },
        {
          "Name": "asyncStatus",
          "Type": "AsyncStatus"
        }
      ],
      "Name": "Windows.Foundation.AsyncOperationCompletedHandler<TResult>"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "asyncInfo",
          "Type": "IAsyncActionWithProgress<TProgress>"
        },
        {
          "Name": "asyncStatus",
          "Type": "AsyncStatus"
        }
      ],
      "Name": "Windows.Foundation.AsyncActionWithProgressCompletedHandler<TProgress>"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "asyncInfo",
          "Type": "IAsyncOperationWithProgress<TResult,TProgress>"
        },
        {
          "Name": "progressInfo",
          "Type": "TProgress"
        }
      ],
      "Name": "Windows.Foundation.AsyncOperationProgressHandler<TResult,TProgress>"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "asyncInfo",
          "Type": "IAsyncActionWithProgress<TProgress>"
        },
        {
          "Name": "progressInfo",
          "Type": "TProgress"
        }
      ],
      "Name": "Windows.Foundation.AsyncActionProgressHandler<TProgress>"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "TSender"
        },
        {
          "Name": "args",
          "Type": "TResult"
        }
      ],
      "Name": "Windows.Foundation.TypedEventHandler<TSender,TResult>"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "MediaCapture"
        },
        {
          "Name": "errorEventArgs",
          "Type": "MediaCaptureFailedEventArgs"
        }
      ],
      "Name": "Windows.Media.Capture.MediaCaptureFailedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "MediaCapture"
        }
      ],
      "Name": "Windows.Media.Capture.RecordLimitationExceededEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "MediaProtectionManager"
        },
        {
          "Name": "e",
          "Type": "ServiceRequestedEventArgs"
        }
      ],
      "Name": "Windows.Media.Protection.ServiceRequestedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "MediaProtectionManager"
        }
      ],
      "Name": "Windows.Media.Protection.RebootNeededEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "MediaProtectionManager"
        },
        {
          "Name": "e",
          "Type": "ComponentLoadFailedEventArgs"
        }
      ],
      "Name": "Windows.Media.Protection.ComponentLoadFailedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "ProximityDevice"
        },
        {
          "Name": "message",
          "Type": "ProximityMessage"
        }
      ],
      "Name": "Windows.Networking.Proximity.MessageReceivedHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "ProximityDevice"
        },
        {
          "Name": "messageId",
          "Type": "Int64"
        }
      ],
      "Name": "Windows.Networking.Proximity.MessageTransmittedHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "ProximityDevice"
        }
      ],
      "Name": "Windows.Networking.Proximity.DeviceArrivedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "ProximityDevice"
        }
      ],
      "Name": "Windows.Networking.Proximity.DeviceDepartedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkStatusChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "setVersionRequest",
          "Type": "SetVersionRequest"
        }
      ],
      "Name": "Windows.Storage.ApplicationDataSetVersionHandler"
    },
    {
      "ReturnType": "Void",
      "Name": "Windows.UI.Core.DispatchedHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "e",
          "Type": "IdleDispatchedHandlerArgs"
        }
      ],
      "Name": "Windows.UI.Core.IdleDispatchedHandler"
    },
    {
      "ReturnType": "Void",
      "Name": "Windows.UI.WebUI.Core.MenuOpenedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Name": "Windows.UI.WebUI.Core.MenuClosedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "eventArgs",
          "Type": "WebUICommandBarSizeChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.WebUI.Core.SizeChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "eventArgs",
          "Type": "IActivatedEventArgs"
        }
      ],
      "Name": "Windows.UI.WebUI.ActivatedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        }
      ],
      "Name": "Windows.UI.WebUI.ResumingEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "ISuspendingEventArgs"
        }
      ],
      "Name": "Windows.UI.WebUI.SuspendingEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "IWebUINavigatedEventArgs"
        }
      ],
      "Name": "Windows.UI.WebUI.NavigatedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "BackClickEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.BackClickEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "CleanUpVirtualizedItemEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.CleanUpVirtualizedItemEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "ContextMenuEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "DragItemsStartingEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.DragItemsStartingEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "ItemClickEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ItemClickEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "NotifyEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.NotifyEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "SelectionChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.SelectionChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "SemanticZoomViewChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.SemanticZoomViewChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "TextChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.TextChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "TextControlPasteEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.TextControlPasteEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "DragCompletedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.DragCompletedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "DragDeltaEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.DragDeltaEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "DragStartedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.DragStartedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "ItemsChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ItemsChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "RangeBaseValueChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "ScrollEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ScrollEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "NavigationEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Navigation.LoadCompletedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "NavigationEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Navigation.NavigatedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "NavigatingCancelEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "NavigationFailedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Navigation.NavigationFailedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "NavigationEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "HubSectionHeaderClickEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.HubSectionHeaderClickEventHandler"
    },
    {
      "ReturnType": "String",
      "Parameters": [
        {
          "Name": "item",
          "Type": "Object"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ListViewItemToKeyHandler"
    },
    {
      "ReturnType": "IAsyncOperation<Object>",
      "Parameters": [
        {
          "Name": "key",
          "Type": "String"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ListViewKeyToItemHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "SectionsInViewChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.SectionsInViewChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "WebViewNavigationFailedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.WebViewNavigationFailedEventHandler"
    },
    {
      "ReturnType": "Object",
      "Name": "Windows.UI.Xaml.CreateDefaultValueCallback"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "d",
          "Type": "DependencyObject"
        },
        {
          "Name": "e",
          "Type": "DependencyPropertyChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.PropertyChangedCallback"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "p",
          "Type": "ApplicationInitializationCallbackParams"
        }
      ],
      "Name": "Windows.UI.Xaml.ApplicationInitializationCallback"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "BindingFailedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.BindingFailedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "DependencyPropertyChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.DependencyPropertyChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "DragEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.DragEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "ExceptionRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.ExceptionRoutedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "RoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.RoutedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "SizeChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.SizeChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "SuspendingEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.SuspendingEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "UnhandledExceptionEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.UnhandledExceptionEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "VisualStateChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.VisualStateChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "WindowActivatedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.WindowActivatedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "CoreWindowEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.WindowClosedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "WindowSizeChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.WindowSizeChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "VisibilityChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.WindowVisibilityChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "RateChangedRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.RateChangedRoutedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "TimelineMarkerRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.TimelineMarkerRoutedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "DoubleTappedRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.DoubleTappedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "HoldingRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.HoldingEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "KeyRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.KeyEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "ManipulationCompletedRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.ManipulationCompletedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "ManipulationDeltaRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.ManipulationDeltaEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "ManipulationInertiaStartingRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "ManipulationStartedRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.ManipulationStartedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "ManipulationStartingRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.ManipulationStartingEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "PointerRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.PointerEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "RightTappedRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.RightTappedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "TappedRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.TappedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "DownloadProgressEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.Imaging.DownloadProgressEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "CurrentChangingEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Data.CurrentChangingEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "vector",
          "Type": "IBindableObservableVector"
        },
        {
          "Name": "e",
          "Type": "Object"
        }
      ],
      "Name": "Windows.UI.Xaml.Interop.BindableVectorChangedEventHandler"
    }
  ]
}