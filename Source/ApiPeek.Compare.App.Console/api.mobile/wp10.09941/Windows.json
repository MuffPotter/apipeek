{
  "Name": "Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime",
  "Classes": [
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IAppointmentsProviderActivatedEventArgs",
        "IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "Name": "InstanceStartDate"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "LocalId"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RoamingId"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Verb"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.AppointmentsProviderShowAppointmentDetailsActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "ICachedFileUpdaterActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "CachedFileUpdaterUI",
          "IsGet": true,
          "Name": "CachedFileUpdaterUI"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.CachedFileUpdaterActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IFileActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<IStorageItem>",
          "IsGet": true,
          "Name": "Files"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Verb"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.FileActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IFileOpenPickerActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "FileOpenPickerUI",
          "IsGet": true,
          "Name": "FileOpenPickerUI"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.FileOpenPickerActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IContinuationActivatedEventArgs",
        "IFileOpenPickerContinuationEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ValueSet",
          "IsGet": true,
          "Name": "ContinuationData"
        },
        {
          "Type": "IReadOnlyList<StorageFile>",
          "IsGet": true,
          "Name": "Files"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.FileOpenPickerContinuationEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IFileSavePickerActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "FileSavePickerUI",
          "IsGet": true,
          "Name": "FileSavePickerUI"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.FileSavePickerActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IContinuationActivatedEventArgs",
        "IFileSavePickerContinuationEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ValueSet",
          "IsGet": true,
          "Name": "ContinuationData"
        },
        {
          "Type": "StorageFile",
          "IsGet": true,
          "Name": "File"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.FileSavePickerContinuationEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IContinuationActivatedEventArgs",
        "IFolderPickerContinuationEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ValueSet",
          "IsGet": true,
          "Name": "ContinuationData"
        },
        {
          "Type": "StorageFolder",
          "IsGet": true,
          "Name": "Folder"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.FolderPickerContinuationEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "ILaunchActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Arguments"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "TileId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.LaunchActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "ILockScreenActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Info"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.LockScreenActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IPickerReturnedActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "PickerOperationId"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.PickerReturnedActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IProtocolActivatedEventArgs",
        "IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "CallerPackageFamilyName"
        },
        {
          "Type": "ValueSet",
          "IsGet": true,
          "Name": "Data"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "Uri"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.ProtocolActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IProtocolActivatedEventArgs",
        "IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "CallerPackageFamilyName"
        },
        {
          "Type": "ValueSet",
          "IsGet": true,
          "Name": "Data"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "ProtocolForResultsOperation",
          "IsGet": true,
          "Name": "ProtocolForResultsOperation"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "Uri"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.ProtocolForResultsActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IContinuationActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ValueSet",
          "IsGet": true,
          "Name": "ContinuationData"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "ValueSet",
          "IsGet": true,
          "Name": "Result"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.ProtocolWithResultsContinuationActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "ISearchActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Language"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "QueryText"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.SearchActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IShareTargetActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "ShareOperation",
          "IsGet": true,
          "Name": "ShareOperation"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.ShareTargetActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISplashScreen"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Rect",
          "IsGet": true,
          "Name": "ImageLocation"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "TypedEventHandler<SplashScreen,Object>",
          "Name": "Dismissed"
        }
      ],
      "Name": "Windows.ApplicationModel.Activation.SplashScreen"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IVoiceCommandActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SpeechRecognitionResult",
          "IsGet": true,
          "Name": "Result"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.VoiceCommandActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IWalletActionActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ActionId"
        },
        {
          "Type": "WalletActionKind",
          "IsGet": true,
          "Name": "ActionKind"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ItemId"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.WalletActionActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IWebAccountProviderActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "IWebAccountProviderOperation",
          "IsGet": true,
          "Name": "Operation"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.WebAccountProviderActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IWebAccountProviderContinuationEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "WebTokenRequestResult",
          "IsGet": true,
          "Name": "Result"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.WebAccountProviderContinuationEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IContinuationActivatedEventArgs",
        "IWebAuthenticationBrokerContinuationEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ValueSet",
          "IsGet": true,
          "Name": "ContinuationData"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        },
        {
          "Type": "WebAuthenticationResult",
          "IsGet": true,
          "Name": "WebAuthenticationResult"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.WebAuthenticationBrokerContinuationEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AllDay"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AllowNewTimeProposal"
        },
        {
          "Type": "AppointmentBusyStatus",
          "IsGet": true,
          "IsSet": true,
          "Name": "BusyStatus"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "CalendarId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Details"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "Duration"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasInvitees"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "ChangeNumber"
        },
        {
          "Type": "IList<AppointmentInvitee>",
          "IsGet": true,
          "Name": "Invitees"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsCanceledMeeting"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsOrganizedByUser"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsResponseRequested"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "LocalId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Location"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "OnlineMeetingLink"
        },
        {
          "Type": "AppointmentOrganizer",
          "IsGet": true,
          "IsSet": true,
          "Name": "Organizer"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "Name": "OriginalStartTime"
        },
        {
          "Type": "AppointmentRecurrence",
          "IsGet": true,
          "IsSet": true,
          "Name": "Recurrence"
        },
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Reminder"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReplyTime"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "RoamingId"
        },
        {
          "Type": "AppointmentSensitivity",
          "IsGet": true,
          "IsSet": true,
          "Name": "Sensitivity"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServerChangeNumber"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "StartTime"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Subject"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "Uri"
        },
        {
          "Type": "AppointmentParticipantResponse",
          "IsGet": true,
          "IsSet": true,
          "Name": "UserResponse"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.Appointment"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Color",
          "IsGet": true,
          "Name": "DisplayColor"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsHidden"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "LocalId"
        },
        {
          "Type": "AppointmentCalendarOtherAppReadAccess",
          "IsGet": true,
          "IsSet": true,
          "Name": "OtherAppReadAccess"
        },
        {
          "Type": "AppointmentCalendarOtherAppWriteAccess",
          "IsGet": true,
          "IsSet": true,
          "Name": "OtherAppWriteAccess"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "SourceDisplayName"
        },
        {
          "Type": "AppointmentSummaryCardView",
          "IsGet": true,
          "IsSet": true,
          "Name": "SummaryCardView"
        },
        {
          "Type": "AppointmentCalendarSyncAdapter",
          "IsGet": true,
          "Name": "SyncAdapter"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localId",
              "Type": "String"
            }
          ],
          "Name": "DeleteAppointmentAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localId",
              "Type": "String"
            },
            {
              "Name": "instanceStartTime",
              "Type": "DateTimeOffset"
            }
          ],
          "Name": "DeleteAppointmentInstanceAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "DeleteAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<Appointment>>",
          "Parameters": [
            {
              "Name": "masterLocalId",
              "Type": "String"
            },
            {
              "Name": "rangeStart",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "rangeLength",
              "Type": "TimeSpan"
            }
          ],
          "Name": "FindAllInstancesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<Appointment>>",
          "Parameters": [
            {
              "Name": "masterLocalId",
              "Type": "String"
            },
            {
              "Name": "rangeStart",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "rangeLength",
              "Type": "TimeSpan"
            },
            {
              "Name": "pOptions",
              "Type": "FindAppointmentsOptions"
            }
          ],
          "Name": "FindAllInstancesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<Appointment>>",
          "Parameters": [
            {
              "Name": "rangeStart",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "rangeLength",
              "Type": "TimeSpan"
            }
          ],
          "Name": "FindAppointmentsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<Appointment>>",
          "Parameters": [
            {
              "Name": "rangeStart",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "rangeLength",
              "Type": "TimeSpan"
            },
            {
              "Name": "options",
              "Type": "FindAppointmentsOptions"
            }
          ],
          "Name": "FindAppointmentsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<AppointmentException>>",
          "Parameters": [
            {
              "Name": "masterLocalId",
              "Type": "String"
            }
          ],
          "Name": "FindExceptionsFromMasterAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<Appointment>>",
          "Name": "FindUnexpandedAppointmentsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<Appointment>>",
          "Parameters": [
            {
              "Name": "options",
              "Type": "FindAppointmentsOptions"
            }
          ],
          "Name": "FindUnexpandedAppointmentsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Appointment>",
          "Parameters": [
            {
              "Name": "localId",
              "Type": "String"
            }
          ],
          "Name": "GetAppointmentAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Appointment>",
          "Parameters": [
            {
              "Name": "localId",
              "Type": "String"
            },
            {
              "Name": "instanceStartTime",
              "Type": "DateTimeOffset"
            }
          ],
          "Name": "GetAppointmentInstanceAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pAppointment",
              "Type": "Appointment"
            }
          ],
          "Name": "SaveAppointmentAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "SaveAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentCalendar"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AppointmentCalendarSyncState",
          "IsGet": true,
          "Name": "CurrentState"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "LastAttemptedSyncTime"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "LastSuccessfulSyncTime"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Name": "SyncAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<AppointmentCalendar,AppointmentCalendarSyncStatusChangedEventArgs>",
          "Name": "SyncStatusChanged"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentCalendarSyncAdapter"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AppointmentCalendarSyncState",
          "IsGet": true,
          "Name": "CurrentState"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "LastAttemptedSyncTime"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "LastSuccessfulSyncTime"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentCalendarSyncStatusChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Date"
        },
        {
          "Type": "AppointmentConflictType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentConflictResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Appointment",
          "IsGet": true,
          "Name": "Appointment"
        },
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "ExceptionProperties"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsDeleted"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentException"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IAppointmentParticipant"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Address"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "AppointmentParticipantResponse",
          "IsGet": true,
          "IsSet": true,
          "Name": "Response"
        },
        {
          "Type": "AppointmentParticipantRole",
          "IsGet": true,
          "IsSet": true,
          "Name": "Role"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentInvitee"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<AppointmentStore>",
          "Parameters": [
            {
              "Name": "options",
              "Type": "AppointmentStoreAccessType"
            }
          ],
          "Name": "RequestStoreAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "appointment",
              "Type": "Appointment"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            }
          ],
          "Name": "ShowAddAppointmentAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "appointment",
              "Type": "Appointment"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            }
          ],
          "Name": "ShowAddAppointmentAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "appointmentId",
              "Type": "String"
            }
          ],
          "Name": "ShowAppointmentDetailsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "appointmentId",
              "Type": "String"
            },
            {
              "Name": "instanceStartDate",
              "Type": "DateTimeOffset"
            }
          ],
          "Name": "ShowAppointmentDetailsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "appointment",
              "Type": "Appointment"
            }
          ],
          "Name": "ShowEditNewAppointmentAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "appointmentId",
              "Type": "String"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            }
          ],
          "Name": "ShowRemoveAppointmentAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "appointmentId",
              "Type": "String"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            }
          ],
          "Name": "ShowRemoveAppointmentAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "appointmentId",
              "Type": "String"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            },
            {
              "Name": "instanceStartDate",
              "Type": "DateTimeOffset"
            }
          ],
          "Name": "ShowRemoveAppointmentAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "appointmentId",
              "Type": "String"
            },
            {
              "Name": "appointment",
              "Type": "Appointment"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            }
          ],
          "Name": "ShowReplaceAppointmentAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "appointmentId",
              "Type": "String"
            },
            {
              "Name": "appointment",
              "Type": "Appointment"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            }
          ],
          "Name": "ShowReplaceAppointmentAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "appointmentId",
              "Type": "String"
            },
            {
              "Name": "appointment",
              "Type": "Appointment"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            },
            {
              "Name": "instanceStartDate",
              "Type": "DateTimeOffset"
            }
          ],
          "Name": "ShowReplaceAppointmentAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "timeToShow",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "duration",
              "Type": "TimeSpan"
            }
          ],
          "Name": "ShowTimeFrameAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IAppointmentParticipant"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Address"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentOrganizer"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AllDay"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AllowNewTimeProposal"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BusyStatus"
        },
        {
          "Type": "IList<String>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DefaultProperties"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Details"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Duration"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HasInvitees"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ChangeNumber"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Invitees"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsCanceledMeeting"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsOrganizedByUser"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsResponseRequested"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Location"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OnlineMeetingLink"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Organizer"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OriginalStartTime"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Recurrence"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Reminder"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ReplyTime"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Sensitivity"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ServerChangeNumber"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StartTime"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Subject"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Uri"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UserResponse"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Day"
        },
        {
          "Type": "AppointmentDaysOfWeek",
          "IsGet": true,
          "IsSet": true,
          "Name": "DaysOfWeek"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Interval"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Month"
        },
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Occurrences"
        },
        {
          "Type": "RecurrenceType",
          "IsGet": true,
          "Name": "RecurrenceType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "TimeZone"
        },
        {
          "Type": "AppointmentRecurrenceUnit",
          "IsGet": true,
          "IsSet": true,
          "Name": "Unit"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Until"
        },
        {
          "Type": "AppointmentWeekOfMonth",
          "IsGet": true,
          "IsSet": true,
          "Name": "WeekOfMonth"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentRecurrence"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ShowAppointmentDetails"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentsProvider.AppointmentsProviderLaunchActionVerbs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AppointmentStoreChangeTracker",
          "IsGet": true,
          "Name": "ChangeTracker"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<AppointmentCalendar>",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "CreateAppointmentCalendarAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<AppointmentCalendar>>",
          "Name": "FindAppointmentCalendarsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<AppointmentCalendar>>",
          "Parameters": [
            {
              "Name": "options",
              "Type": "FindAppointmentCalendarsOptions"
            }
          ],
          "Name": "FindAppointmentCalendarsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<Appointment>>",
          "Parameters": [
            {
              "Name": "rangeStart",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "rangeLength",
              "Type": "TimeSpan"
            }
          ],
          "Name": "FindAppointmentsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<Appointment>>",
          "Parameters": [
            {
              "Name": "rangeStart",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "rangeLength",
              "Type": "TimeSpan"
            },
            {
              "Name": "options",
              "Type": "FindAppointmentsOptions"
            }
          ],
          "Name": "FindAppointmentsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<AppointmentConflictResult>",
          "Parameters": [
            {
              "Name": "appointment",
              "Type": "Appointment"
            }
          ],
          "Name": "FindConflictAsync"
        },
        {
          "ReturnType": "IAsyncOperation<AppointmentConflictResult>",
          "Parameters": [
            {
              "Name": "appointment",
              "Type": "Appointment"
            },
            {
              "Name": "instanceStartTime",
              "Type": "DateTimeOffset"
            }
          ],
          "Name": "FindConflictAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<String>>",
          "Parameters": [
            {
              "Name": "roamingId",
              "Type": "String"
            }
          ],
          "Name": "FindLocalIdsFromRoamingIdAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Appointment>",
          "Parameters": [
            {
              "Name": "localId",
              "Type": "String"
            }
          ],
          "Name": "GetAppointmentAsync"
        },
        {
          "ReturnType": "IAsyncOperation<AppointmentCalendar>",
          "Parameters": [
            {
              "Name": "calendarId",
              "Type": "String"
            }
          ],
          "Name": "GetAppointmentCalendarAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Appointment>",
          "Parameters": [
            {
              "Name": "localId",
              "Type": "String"
            },
            {
              "Name": "instanceStartTime",
              "Type": "DateTimeOffset"
            }
          ],
          "Name": "GetAppointmentInstanceAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "appointment",
              "Type": "Appointment"
            },
            {
              "Name": "destinationCalendar",
              "Type": "AppointmentCalendar"
            }
          ],
          "Name": "MoveAppointmentAsync"
        },
        {
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "appointment",
              "Type": "Appointment"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            }
          ],
          "Name": "ShowAddAppointmentAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localId",
              "Type": "String"
            }
          ],
          "Name": "ShowAppointmentDetailsAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localId",
              "Type": "String"
            },
            {
              "Name": "instanceStartDate",
              "Type": "DateTimeOffset"
            }
          ],
          "Name": "ShowAppointmentDetailsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "appointment",
              "Type": "Appointment"
            }
          ],
          "Name": "ShowEditNewAppointmentAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "localId",
              "Type": "String"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            }
          ],
          "Name": "ShowRemoveAppointmentAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "localId",
              "Type": "String"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            },
            {
              "Name": "instanceStartDate",
              "Type": "DateTimeOffset"
            }
          ],
          "Name": "ShowRemoveAppointmentAsync"
        },
        {
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "localId",
              "Type": "String"
            },
            {
              "Name": "appointment",
              "Type": "Appointment"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            }
          ],
          "Name": "ShowReplaceAppointmentAsync"
        },
        {
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "localId",
              "Type": "String"
            },
            {
              "Name": "appointment",
              "Type": "Appointment"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            },
            {
              "Name": "instanceStartDate",
              "Type": "DateTimeOffset"
            }
          ],
          "Name": "ShowReplaceAppointmentAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<AppointmentStore,AppointmentStoreChangedEventArgs>",
          "Name": "StoreChanged"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentStore"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Appointment",
          "IsGet": true,
          "Name": "Appointment"
        },
        {
          "Type": "AppointmentCalendar",
          "IsGet": true,
          "Name": "Calendar"
        },
        {
          "Type": "AppointmentStoreChangeType",
          "IsGet": true,
          "Name": "ChangeType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentStoreChange"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentStoreChangedDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "AppointmentStoreChangedDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentStoreChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "AcceptChanges"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "lastChangeToAccept",
              "Type": "AppointmentStoreChange"
            }
          ],
          "Name": "AcceptChangesThrough"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<AppointmentStoreChange>>",
          "Name": "ReadBatchAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentStoreChangeReader"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Enable"
        },
        {
          "ReturnType": "AppointmentStoreChangeReader",
          "Name": "GetChangeReader"
        },
        {
          "ReturnType": "Void",
          "Name": "Reset"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentStoreChangeTracker"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentStoreNotificationTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "CalendarIds"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "FetchProperties"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IncludeHidden"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxCount"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.FindAppointmentsOptions"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AppServiceClosedStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.AppService.AppServiceClosedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "AppServiceName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "PackageFamilyName"
        },
        {
          "Type": "User",
          "IsGet": true,
          "IsSet": true,
          "Name": "User"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperation<AppServiceConnectionStatus>",
          "Name": "OpenAsync"
        },
        {
          "ReturnType": "IAsyncOperation<AppServiceResponse>",
          "Parameters": [
            {
              "Name": "message",
              "Type": "ValueSet"
            }
          ],
          "Name": "SendMessageAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<AppServiceConnection,AppServiceRequestReceivedEventArgs>",
          "Name": "RequestReceived"
        },
        {
          "Type": "TypedEventHandler<AppServiceConnection,AppServiceClosedEventArgs>",
          "Name": "ServiceClosed"
        }
      ],
      "Name": "Windows.ApplicationModel.AppService.AppServiceConnection"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.AppService.AppServiceDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ValueSet",
          "IsGet": true,
          "Name": "Message"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<AppServiceResponseStatus>",
          "Parameters": [
            {
              "Name": "message",
              "Type": "ValueSet"
            }
          ],
          "Name": "SendResponseAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.AppService.AppServiceRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AppServiceRequest",
          "IsGet": true,
          "Name": "Request"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "AppServiceDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.AppService.AppServiceRequestReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ValueSet",
          "IsGet": true,
          "Name": "Message"
        },
        {
          "Type": "AppServiceResponseStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.AppService.AppServiceResponse"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AppServiceConnection",
          "IsGet": true,
          "Name": "AppServiceConnection"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "CallerPackageFamilyName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.AppService.AppServiceTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "reportIntervalInMilliseconds",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MinimumReportInterval"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "ReportInterval"
        },
        {
          "Type": "IList<ActivityType>",
          "IsGet": true,
          "Name": "SubscribedActivities"
        },
        {
          "Type": "IReadOnlyList<ActivityType>",
          "IsGet": true,
          "Name": "SupportedActivities"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.ActivitySensorTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<ApplicationTriggerResult>",
          "Name": "RequestAsync"
        },
        {
          "ReturnType": "IAsyncOperation<ApplicationTriggerResult>",
          "Parameters": [
            {
              "Name": "arguments",
              "Type": "ValueSet"
            }
          ],
          "Name": "RequestAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.ApplicationTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ValueSet",
          "IsGet": true,
          "Name": "Arguments"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.ApplicationTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.AppointmentStoreNotificationTrigger"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "BackgroundAccessStatus",
          "Name": "GetAccessStatus"
        },
        {
          "IsStatic": true,
          "ReturnType": "BackgroundAccessStatus",
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ],
          "Name": "GetAccessStatus"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "RemoveAccess"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ],
          "Name": "RemoveAccess"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BackgroundAccessStatus>",
          "Name": "RequestAccessAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BackgroundAccessStatus>",
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ],
          "Name": "RequestAccessAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.BackgroundExecutionManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "CancelOnConditionLoss"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsNetworkRequested"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Name"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "TaskEntryPoint"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "condition",
              "Type": "IBackgroundCondition"
            }
          ],
          "Name": "AddCondition"
        },
        {
          "ReturnType": "BackgroundTaskRegistration",
          "Name": "Register"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "trigger",
              "Type": "IBackgroundTrigger"
            }
          ],
          "Name": "SetTrigger"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.BackgroundTaskBuilder"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "InstanceId"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "CheckResult"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.BackgroundTaskCompletedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.BackgroundTaskDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "InstanceId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Progress"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.BackgroundTaskProgressEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTaskRegistration",
        "IBackgroundTaskRegistration2"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyDictionary<Guid,IBackgroundTaskRegistration>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AllTasks"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "TaskId"
        },
        {
          "Type": "IBackgroundTrigger",
          "IsGet": true,
          "Name": "Trigger"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "cancelTask",
              "Type": "Boolean"
            }
          ],
          "Name": "Unregister"
        }
      ],
      "Events": [
        {
          "Type": "BackgroundTaskCompletedEventHandler",
          "Name": "Completed"
        },
        {
          "Type": "BackgroundTaskProgressEventHandler",
          "Name": "Progress"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.BackgroundTaskRegistration"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BackgroundWorkCostValue",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CurrentBackgroundWorkCost"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.BackgroundWorkCost"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BluetoothLEAdvertisement",
          "IsGet": true,
          "Name": "Advertisement"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.BluetoothLEAdvertisementPublisherTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BluetoothLEAdvertisementFilter",
          "IsGet": true,
          "IsSet": true,
          "Name": "AdvertisementFilter"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "MaxOutOfRangeTimeout"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "MaxSamplingInterval"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "MinOutOfRangeTimeout"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "MinSamplingInterval"
        },
        {
          "Type": "BluetoothSignalStrengthFilter",
          "IsGet": true,
          "IsSet": true,
          "Name": "SignalStrengthFilter"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.BluetoothLEAdvertisementWatcherTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.CachedFileUpdaterTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanRequestUserInput"
        },
        {
          "Type": "FileUpdateRequest",
          "IsGet": true,
          "Name": "UpdateRequest"
        },
        {
          "Type": "CachedFileTarget",
          "IsGet": true,
          "Name": "UpdateTarget"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.CachedFileUpdaterTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.ContactStoreNotificationTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanMaintainConnection"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaintainConnection"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<DeviceConnectionChangeTrigger>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ],
          "Name": "FromIdAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.DeviceConnectionChangeTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "triggerQualifier",
              "Type": "String"
            },
            {
              "Name": "oneShot",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "OneShot"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "TriggerQualifier"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.DeviceManufacturerNotificationTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<DeviceTriggerResult>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            },
            {
              "Name": "expectedDuration",
              "Type": "TimeSpan"
            }
          ],
          "Name": "RequestAsync"
        },
        {
          "ReturnType": "IAsyncOperation<DeviceTriggerResult>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            },
            {
              "Name": "expectedDuration",
              "Type": "TimeSpan"
            },
            {
              "Name": "arguments",
              "Type": "String"
            }
          ],
          "Name": "RequestAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.DeviceServicingTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<DeviceTriggerResult>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ],
          "Name": "RequestAsync"
        },
        {
          "ReturnType": "IAsyncOperation<DeviceTriggerResult>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            },
            {
              "Name": "arguments",
              "Type": "String"
            }
          ],
          "Name": "RequestAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.DeviceUseTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.EmailStoreNotificationTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "characteristic",
              "Type": "GattCharacteristic"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "GattCharacteristic",
          "IsGet": true,
          "Name": "Characteristic"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.GattCharacteristicNotificationTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.ChatMessageNotificationTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "triggerType",
              "Type": "LocationTriggerType"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "LocationTriggerType",
          "IsGet": true,
          "Name": "TriggerType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.LocationTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "freshnessTime",
              "Type": "UInt32"
            },
            {
              "Name": "oneShot",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "FreshnessTime"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "OneShot"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.MaintenanceTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.NetworkOperatorHotspotAuthenticationTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "networkAccountId",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NetworkAccountId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.NetworkOperatorNotificationTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "type",
              "Type": "PhoneTriggerType"
            },
            {
              "Name": "oneShot",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "OneShot"
        },
        {
          "Type": "PhoneTriggerType",
          "IsGet": true,
          "Name": "TriggerType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.PhoneTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.PushNotificationTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AllowMultipleConnections"
        },
        {
          "Type": "RfcommInboundConnectionInformation",
          "IsGet": true,
          "Name": "InboundConnection"
        },
        {
          "Type": "RfcommOutboundConnectionInformation",
          "IsGet": true,
          "Name": "OutboundConnection"
        },
        {
          "Type": "SocketProtectionLevel",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProtectionLevel"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "IsSet": true,
          "Name": "RemoteHostName"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.RfcommConnectionTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "threshold",
              "Type": "ISensorDataThreshold"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.SensorDataThresholdTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "triggerType",
              "Type": "SmartCardTriggerType"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "SmartCardTriggerType",
          "IsGet": true,
          "Name": "TriggerType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.SmartCardTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.SocketActivityTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundCondition"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "conditionType",
              "Type": "SystemConditionType"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "SystemConditionType",
          "IsGet": true,
          "Name": "ConditionType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.SystemCondition"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "triggerType",
              "Type": "SystemTriggerType"
            },
            {
              "Name": "oneShot",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "OneShot"
        },
        {
          "Type": "SystemTriggerType",
          "IsGet": true,
          "Name": "TriggerType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.SystemTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "freshnessTime",
              "Type": "UInt32"
            },
            {
              "Name": "oneShot",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "FreshnessTime"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "OneShot"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.TimeTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTrigger"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.ToastNotificationHistoryChangedTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "ActiveCallCount"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "EndedCallCount"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "IncomingCallCount"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Calls.Background.PhoneCallStateChangedTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PhoneLineChangeType",
          "IsGet": true,
          "Name": "ChangeType"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "LineId"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "lineProperty",
              "Type": "PhoneLineProperties"
            }
          ],
          "Name": "HasLinePropertyChanged"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Calls.Background.PhoneLineChangedTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "LineId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "VoicemailCount"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "VoicemailMessage"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Calls.Background.PhoneVoicemailCountChangedTriggerDetails"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsCallActive"
        },
        {
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsCallIncoming"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PhoneCallStore>",
          "Name": "RequestStoreAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "ShowPhoneCallSettingsUI"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "phoneNumber",
              "Type": "String"
            },
            {
              "Name": "displayName",
              "Type": "String"
            }
          ],
          "Name": "ShowPhoneCallUI"
        }
      ],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "IsStatic": true,
          "Name": "CallStateChanged"
        }
      ],
      "Name": "Windows.ApplicationModel.Calls.PhoneCallManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<Guid>",
          "Name": "GetDefaultLineAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IObservableMap<Guid,PhoneLine>>",
          "Name": "GetPhoneLinesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "number",
              "Type": "String"
            }
          ],
          "Name": "IsEmergencyPhoneNumberAsync"
        },
        {
          "ReturnType": "PhoneLineWatcher",
          "Name": "RequestLineWatcher"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "lineId",
              "Type": "Guid"
            }
          ],
          "Name": "SaveDefaultLineAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Calls.PhoneCallStore"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PhoneAudioRoutingEndpoint",
          "IsGet": true,
          "IsSet": true,
          "Name": "AudioEndpoint"
        },
        {
          "Type": "Contact",
          "IsGet": true,
          "IsSet": true,
          "Name": "Contact"
        },
        {
          "Type": "ContactPhone",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContactPhone"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "PhoneCallMedia",
          "IsGet": true,
          "IsSet": true,
          "Name": "Media"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Number"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Calls.PhoneDialOptions"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanDial"
        },
        {
          "Type": "PhoneLineCellularDetails",
          "IsGet": true,
          "Name": "CellularDetails"
        },
        {
          "Type": "Color",
          "IsGet": true,
          "Name": "DisplayColor"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsCallFilteringEnabled"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NetworkName"
        },
        {
          "Type": "PhoneLineNetworkOperatorDisplayOptions",
          "IsGet": true,
          "Name": "NetworkOperatorDisplayOptions"
        },
        {
          "Type": "PhoneNetworkState",
          "IsGet": true,
          "Name": "NetworkState"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "SupportsTile"
        },
        {
          "Type": "PhoneLineTransport",
          "IsGet": true,
          "Name": "Transport"
        },
        {
          "Type": "PhoneVoicemail",
          "IsGet": true,
          "Name": "Voicemail"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "number",
              "Type": "String"
            },
            {
              "Name": "displayName",
              "Type": "String"
            }
          ],
          "Name": "Dial"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "options",
              "Type": "PhoneDialOptions"
            }
          ],
          "Name": "DialWithOptions"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PhoneLine>",
          "Parameters": [
            {
              "Name": "lineId",
              "Type": "Guid"
            }
          ],
          "Name": "FromIdAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "number",
              "Type": "String"
            }
          ],
          "Name": "IsImmediateDialNumberAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<PhoneLine,Object>",
          "Name": "LineChanged"
        }
      ],
      "Name": "Windows.ApplicationModel.Calls.PhoneLine"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsModemOn"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "RegistrationRejectCode"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "SimSlotIndex"
        },
        {
          "Type": "PhoneSimState",
          "IsGet": true,
          "Name": "SimState"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Calls.PhoneLineCellularDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "ShouldDisplayEmergencyCallState"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "ShouldDisplayExtendedRejectCodes"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "ShouldDisplayNetworkStateInCallHistory"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "ShouldDisplayNetworkStateInDialer"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Calls.PhoneLineNetworkOperatorDisplayOptions"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PhoneLineWatcherStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Start"
        },
        {
          "ReturnType": "Void",
          "Name": "Stop"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<PhoneLineWatcher,Object>",
          "Name": "EnumerationCompleted"
        },
        {
          "Type": "TypedEventHandler<PhoneLineWatcher,PhoneLineWatcherEventArgs>",
          "Name": "LineAdded"
        },
        {
          "Type": "TypedEventHandler<PhoneLineWatcher,PhoneLineWatcherEventArgs>",
          "Name": "LineRemoved"
        },
        {
          "Type": "TypedEventHandler<PhoneLineWatcher,PhoneLineWatcherEventArgs>",
          "Name": "LineUpdated"
        },
        {
          "Type": "TypedEventHandler<PhoneLineWatcher,Object>",
          "Name": "Stopped"
        }
      ],
      "Name": "Windows.ApplicationModel.Calls.PhoneLineWatcher"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "LineId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Calls.PhoneLineWatcherEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MessageCount"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Number"
        },
        {
          "Type": "PhoneVoicemailType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Name": "DialVoicemailAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Calls.PhoneVoicemail"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "ShowInstalledApplicationsUI"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.CameraApplicationManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<ContactAddress>",
          "IsGet": true,
          "Name": "Addresses"
        },
        {
          "Type": "IList<ContactConnectedServiceAccount>",
          "IsGet": true,
          "Name": "ConnectedServiceAccounts"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "DataSuppliers"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "IList<ContactEmail>",
          "IsGet": true,
          "Name": "Emails"
        },
        {
          "Type": "IList<IContactField>",
          "IsGet": true,
          "Name": "Fields"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "FirstName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "HonorificNamePrefix"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "HonorificNameSuffix"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Id"
        },
        {
          "Type": "IList<ContactDate>",
          "IsGet": true,
          "Name": "ImportantDates"
        },
        {
          "Type": "IList<ContactJobInfo>",
          "IsGet": true,
          "Name": "JobInfo"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "LastName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "MiddleName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Name"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Notes"
        },
        {
          "Type": "IList<ContactPhone>",
          "IsGet": true,
          "Name": "Phones"
        },
        {
          "Type": "IPropertySet",
          "IsGet": true,
          "Name": "ProviderProperties"
        },
        {
          "Type": "IList<ContactSignificantOther>",
          "IsGet": true,
          "Name": "SignificantOthers"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true,
          "Name": "Thumbnail"
        },
        {
          "Type": "IList<ContactWebsite>",
          "IsGet": true,
          "Name": "Websites"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "YomiDisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "YomiFamilyName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "YomiGivenName"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.Contact"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Country"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Description"
        },
        {
          "Type": "ContactAddressKind",
          "IsGet": true,
          "IsSet": true,
          "Name": "Kind"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Locality"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "PostalCode"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Region"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "StreetAddress"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactAddress"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "contact",
              "Type": "Contact"
            }
          ],
          "Name": "SetData"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactCardDelayedDataLoader"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Id"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServiceName"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactConnectedServiceAccount"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Day"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Description"
        },
        {
          "Type": "ContactDateKind",
          "IsGet": true,
          "IsSet": true,
          "Name": "Kind"
        },
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Month"
        },
        {
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Year"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactDate"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Address"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Description"
        },
        {
          "Type": "ContactEmailKind",
          "IsGet": true,
          "IsSet": true,
          "Name": "Kind"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactEmail"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContactField"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "ContactFieldCategory",
          "IsGet": true,
          "Name": "Category"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "ContactFieldType",
          "IsGet": true,
          "Name": "Type"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactField"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContactFieldFactory",
        "IContactInstantMessageFieldFactory",
        "IContactLocationFieldFactory"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "ContactField",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            }
          ],
          "Name": "CreateField"
        },
        {
          "ReturnType": "ContactField",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ],
          "Name": "CreateField"
        },
        {
          "ReturnType": "ContactField",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ],
          "Name": "CreateField"
        },
        {
          "ReturnType": "ContactInstantMessageField",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            }
          ],
          "Name": "CreateInstantMessage"
        },
        {
          "ReturnType": "ContactInstantMessageField",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ],
          "Name": "CreateInstantMessage"
        },
        {
          "ReturnType": "ContactInstantMessageField",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            },
            {
              "Name": "service",
              "Type": "String"
            },
            {
              "Name": "displayText",
              "Type": "String"
            },
            {
              "Name": "verb",
              "Type": "Uri"
            }
          ],
          "Name": "CreateInstantMessage"
        },
        {
          "ReturnType": "ContactLocationField",
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            }
          ],
          "Name": "CreateLocation"
        },
        {
          "ReturnType": "ContactLocationField",
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ],
          "Name": "CreateLocation"
        },
        {
          "ReturnType": "ContactLocationField",
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            },
            {
              "Name": "street",
              "Type": "String"
            },
            {
              "Name": "city",
              "Type": "String"
            },
            {
              "Name": "region",
              "Type": "String"
            },
            {
              "Name": "country",
              "Type": "String"
            },
            {
              "Name": "postalCode",
              "Type": "String"
            }
          ],
          "Name": "CreateLocation"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactFieldFactory"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<ContactField>",
          "IsGet": true,
          "Name": "CustomFields"
        },
        {
          "Type": "IReadOnlyList<ContactField>",
          "IsGet": true,
          "Name": "Emails"
        },
        {
          "Type": "IReadOnlyList<ContactInstantMessageField>",
          "IsGet": true,
          "Name": "InstantMessages"
        },
        {
          "Type": "IReadOnlyList<ContactLocationField>",
          "IsGet": true,
          "Name": "Locations"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "IReadOnlyList<ContactField>",
          "IsGet": true,
          "Name": "PhoneNumbers"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStreamWithContentType>",
          "Name": "GetThumbnailAsync"
        },
        {
          "ReturnType": "IReadOnlyList<ContactField>",
          "Parameters": [
            {
              "Name": "customName",
              "Type": "String"
            }
          ],
          "Name": "QueryCustomFields"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContactField"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            },
            {
              "Name": "service",
              "Type": "String"
            },
            {
              "Name": "displayText",
              "Type": "String"
            },
            {
              "Name": "verb",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "ContactFieldCategory",
          "IsGet": true,
          "Name": "Category"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayText"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "LaunchUri"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Service"
        },
        {
          "Type": "ContactFieldType",
          "IsGet": true,
          "Name": "Type"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "UserName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactInstantMessageField"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "CompanyAddress"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "CompanyName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "CompanyYomiName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Department"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Description"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Manager"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Office"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactJobInfo"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContactField"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            },
            {
              "Name": "street",
              "Type": "String"
            },
            {
              "Name": "city",
              "Type": "String"
            },
            {
              "Name": "region",
              "Type": "String"
            },
            {
              "Name": "country",
              "Type": "String"
            },
            {
              "Name": "postalCode",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "ContactFieldCategory",
          "IsGet": true,
          "Name": "Category"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "City"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Country"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "PostalCode"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Region"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Street"
        },
        {
          "Type": "ContactFieldType",
          "IsGet": true,
          "Name": "Type"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "UnstructuredAddress"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactLocationField"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ContactStore>",
          "Name": "RequestStoreAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "contact",
              "Type": "Contact"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            }
          ],
          "Name": "ShowContactCard"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "contact",
              "Type": "Contact"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            }
          ],
          "Name": "ShowContactCard"
        },
        {
          "IsStatic": true,
          "ReturnType": "ContactCardDelayedDataLoader",
          "Parameters": [
            {
              "Name": "contact",
              "Type": "Contact"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            }
          ],
          "Name": "ShowDelayLoadedContactCard"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Description"
        },
        {
          "Type": "ContactPhoneKind",
          "IsGet": true,
          "IsSet": true,
          "Name": "Kind"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Number"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactPhone"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "CommitButtonText"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "DesiredFields"
        },
        {
          "Type": "IList<ContactFieldType>",
          "IsGet": true,
          "Name": "DesiredFieldsWithContactFieldType"
        },
        {
          "Type": "ContactSelectionMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectionMode"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<Contact>",
          "Name": "PickContactAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IList<Contact>>",
          "Name": "PickContactsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<ContactInformation>>",
          "Name": "PickMultipleContactsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<ContactInformation>",
          "Name": "PickSingleContactAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactPicker"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Description"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Name"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactSignificantOther"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<Contact>>",
          "Name": "FindContactsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<Contact>>",
          "Parameters": [
            {
              "Name": "searchText",
              "Type": "String"
            }
          ],
          "Name": "FindContactsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Contact>",
          "Parameters": [
            {
              "Name": "aggregateContactId",
              "Type": "String"
            }
          ],
          "Name": "GetContactAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactStore"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Description"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "Uri"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.ContactWebsite"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<Contact>>",
          "Parameters": [
            {
              "Name": "contact",
              "Type": "Contact"
            }
          ],
          "Name": "FindRawContactsAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "aggregateContact",
              "Type": "Contact"
            }
          ],
          "Name": "SaveAggregateContactAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Contact>",
          "Parameters": [
            {
              "Name": "primaryContact",
              "Type": "Contact"
            },
            {
              "Name": "secondaryContact",
              "Type": "Contact"
            }
          ],
          "Name": "TryLinkContactsAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "contact",
              "Type": "Contact"
            }
          ],
          "Name": "UnlinkRawContactAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.AggregateContactManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<ContactAddress>",
          "IsGet": true,
          "Name": "Addresses"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AggregateId"
        },
        {
          "Type": "IList<ContactConnectedServiceAccount>",
          "IsGet": true,
          "Name": "ConnectedServiceAccounts"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ContactListId"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "DataSuppliers"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayPictureUserUpdateTime"
        },
        {
          "Type": "IList<ContactEmail>",
          "IsGet": true,
          "Name": "Emails"
        },
        {
          "Type": "IList<IContactField>",
          "IsGet": true,
          "Name": "Fields"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "FirstName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "FullName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "HonorificNamePrefix"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "HonorificNameSuffix"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Id"
        },
        {
          "Type": "IList<ContactDate>",
          "IsGet": true,
          "Name": "ImportantDates"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsAggregate"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsDisplayPictureManuallySet"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsMe"
        },
        {
          "Type": "IList<ContactJobInfo>",
          "IsGet": true,
          "Name": "JobInfo"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "Name": "LargeDisplayPicture"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "LastName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ManualDisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "MiddleName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Name"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Nickname"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Notes"
        },
        {
          "Type": "IList<ContactPhone>",
          "IsGet": true,
          "Name": "Phones"
        },
        {
          "Type": "IPropertySet",
          "IsGet": true,
          "Name": "ProviderProperties"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "RemoteId"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true,
          "Name": "RingTone"
        },
        {
          "Type": "IList<ContactSignificantOther>",
          "IsGet": true,
          "Name": "SignificantOthers"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "Name": "SmallDisplayPicture"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true,
          "Name": "SourceDisplayPicture"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true,
          "Name": "TextTone"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true,
          "Name": "Thumbnail"
        },
        {
          "Type": "IList<ContactWebsite>",
          "IsGet": true,
          "Name": "Websites"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "YomiDisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "YomiFamilyName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "YomiGivenName"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.Contact"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Country"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Description"
        },
        {
          "Type": "ContactAddressKind",
          "IsGet": true,
          "IsSet": true,
          "Name": "Kind"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Locality"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "PostalCode"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Region"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "StreetAddress"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactAddress"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<Contact>",
          "IsGet": true,
          "Name": "Contacts"
        },
        {
          "Type": "ContactBatchStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactBatch"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "contact",
              "Type": "Contact"
            }
          ],
          "Name": "SetData"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactCardDelayedDataLoader"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Id"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServiceName"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactConnectedServiceAccount"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Day"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Description"
        },
        {
          "Type": "ContactDateKind",
          "IsGet": true,
          "IsSet": true,
          "Name": "Kind"
        },
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Month"
        },
        {
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Year"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactDate"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Address"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Description"
        },
        {
          "Type": "ContactEmailKind",
          "IsGet": true,
          "IsSet": true,
          "Name": "Kind"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactEmail"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContactField"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "ContactFieldCategory",
          "IsGet": true,
          "Name": "Category"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "ContactFieldType",
          "IsGet": true,
          "Name": "Type"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactField"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContactFieldFactory",
        "IContactInstantMessageFieldFactory",
        "IContactLocationFieldFactory"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "ContactField",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            }
          ],
          "Name": "CreateField"
        },
        {
          "ReturnType": "ContactField",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ],
          "Name": "CreateField"
        },
        {
          "ReturnType": "ContactField",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ],
          "Name": "CreateField"
        },
        {
          "ReturnType": "ContactInstantMessageField",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            }
          ],
          "Name": "CreateInstantMessage"
        },
        {
          "ReturnType": "ContactInstantMessageField",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ],
          "Name": "CreateInstantMessage"
        },
        {
          "ReturnType": "ContactInstantMessageField",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            },
            {
              "Name": "service",
              "Type": "String"
            },
            {
              "Name": "displayText",
              "Type": "String"
            },
            {
              "Name": "verb",
              "Type": "Uri"
            }
          ],
          "Name": "CreateInstantMessage"
        },
        {
          "ReturnType": "ContactLocationField",
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            }
          ],
          "Name": "CreateLocation"
        },
        {
          "ReturnType": "ContactLocationField",
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ],
          "Name": "CreateLocation"
        },
        {
          "ReturnType": "ContactLocationField",
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            },
            {
              "Name": "street",
              "Type": "String"
            },
            {
              "Name": "city",
              "Type": "String"
            },
            {
              "Name": "region",
              "Type": "String"
            },
            {
              "Name": "country",
              "Type": "String"
            },
            {
              "Name": "postalCode",
              "Type": "String"
            }
          ],
          "Name": "CreateLocation"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactFieldFactory"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "ContactGroupKind",
          "IsGet": true,
          "IsSet": true,
          "Name": "Kind"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "MemberIds"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactGroup"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ContactGroup",
          "IsGet": true,
          "Name": "ContactGroup"
        },
        {
          "Type": "ContactGroupChangeType",
          "IsGet": true,
          "Name": "ChangeType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactGroupChange"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactGroupChangedDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "ContactGroupChangedDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactGroupChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "AcceptChanges"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "lastChangeToAccept",
              "Type": "ContactGroupChange"
            }
          ],
          "Name": "AcceptChangesThrough"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<ContactGroupChange>>",
          "Name": "ReadBatchAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactGroupChangeReader"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Enable"
        },
        {
          "ReturnType": "ContactGroupChangeReader",
          "Name": "GetChangeReader"
        },
        {
          "ReturnType": "Void",
          "Name": "Reset"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactGroupChangeTracker"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Contact",
          "IsGet": true,
          "Name": "Contact"
        },
        {
          "Type": "ContactChangeType",
          "IsGet": true,
          "Name": "ChangeType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactChange"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactChangedDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "ContactChangedDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "AcceptChanges"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "lastChangeToAccept",
              "Type": "ContactChange"
            }
          ],
          "Name": "AcceptChangesThrough"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<ContactChange>>",
          "Name": "ReadBatchAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactChangeReader"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Enable"
        },
        {
          "ReturnType": "ContactChangeReader",
          "Name": "GetChangeReader"
        },
        {
          "ReturnType": "Void",
          "Name": "Reset"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactChangeTracker"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<ContactField>",
          "IsGet": true,
          "Name": "CustomFields"
        },
        {
          "Type": "IReadOnlyList<ContactField>",
          "IsGet": true,
          "Name": "Emails"
        },
        {
          "Type": "IReadOnlyList<ContactInstantMessageField>",
          "IsGet": true,
          "Name": "InstantMessages"
        },
        {
          "Type": "IReadOnlyList<ContactLocationField>",
          "IsGet": true,
          "Name": "Locations"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "IReadOnlyList<ContactField>",
          "IsGet": true,
          "Name": "PhoneNumbers"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStreamWithContentType>",
          "Name": "GetThumbnailAsync"
        },
        {
          "ReturnType": "IReadOnlyList<ContactField>",
          "Parameters": [
            {
              "Name": "customName",
              "Type": "String"
            }
          ],
          "Name": "QueryCustomFields"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContactField"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            },
            {
              "Name": "service",
              "Type": "String"
            },
            {
              "Name": "displayText",
              "Type": "String"
            },
            {
              "Name": "verb",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "ContactFieldCategory",
          "IsGet": true,
          "Name": "Category"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayText"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "LaunchUri"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Service"
        },
        {
          "Type": "ContactFieldType",
          "IsGet": true,
          "Name": "Type"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "UserName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactInstantMessageField"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "CompanyAddress"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "CompanyName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "CompanyYomiName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Department"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Description"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Manager"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Office"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactJobInfo"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ContactPropertiesConstraints",
          "IsGet": true,
          "IsSet": true,
          "Name": "Constraints"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "ContactChangeTracker",
          "IsGet": true,
          "Name": "ChangeTracker"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsHidden"
        },
        {
          "Type": "ContactListOtherAppReadAccess",
          "IsGet": true,
          "IsSet": true,
          "Name": "OtherAppReadAccess"
        },
        {
          "Type": "ContactListOtherAppWriteAccess",
          "IsGet": true,
          "IsSet": true,
          "Name": "OtherAppWriteAccess"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "SourceDisplayName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "SupportsServerSearch"
        },
        {
          "Type": "ContactListSyncAdapter",
          "IsGet": true,
          "Name": "SyncAdapter"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Name": "DeleteAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "contact",
              "Type": "Contact"
            }
          ],
          "Name": "DeleteContactAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Contact>",
          "Parameters": [
            {
              "Name": "contactId",
              "Type": "String"
            }
          ],
          "Name": "GetContactAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Contact>",
          "Parameters": [
            {
              "Name": "remoteId",
              "Type": "String"
            }
          ],
          "Name": "GetContactFromRemoteIdAsync"
        },
        {
          "ReturnType": "ContactReader",
          "Name": "GetContactReader"
        },
        {
          "ReturnType": "ContactReader",
          "Parameters": [
            {
              "Name": "options",
              "Type": "ContactQuery"
            }
          ],
          "Name": "GetContactReader"
        },
        {
          "ReturnType": "IAsyncOperation<Contact>",
          "Name": "GetMeContactAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "SaveAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "contact",
              "Type": "Contact"
            }
          ],
          "Name": "SaveContactAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<ContactList,ContactChangedEventArgs>",
          "Name": "ContactChanged"
        }
      ],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactList"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ContactListSyncState",
          "IsGet": true,
          "Name": "CurrentState"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "LastAttemptedSyncTime"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "LastSuccessfulSyncTime"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Name": "SyncAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<ContactList,ContactListSyncStatusChangedEventArgs>",
          "Name": "SyncStatusChanged"
        }
      ],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactListSyncAdapter"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ContactListSyncState",
          "IsGet": true,
          "Name": "CurrentState"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "LastAttemptedSyncTime"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "LastSuccessfulSyncTime"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactListSyncStatusChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContactField"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            },
            {
              "Name": "street",
              "Type": "String"
            },
            {
              "Name": "city",
              "Type": "String"
            },
            {
              "Name": "region",
              "Type": "String"
            },
            {
              "Name": "country",
              "Type": "String"
            },
            {
              "Name": "postalCode",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "ContactFieldCategory",
          "IsGet": true,
          "Name": "Category"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "City"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Country"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "PostalCode"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Region"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Street"
        },
        {
          "Type": "ContactFieldType",
          "IsGet": true,
          "Name": "Type"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "UnstructuredAddress"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactLocationField"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<RandomAccessStreamReference>",
          "Parameters": [
            {
              "Name": "contact",
              "Type": "Contact"
            }
          ],
          "Name": "ConvertContactToVCardAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<RandomAccessStreamReference>",
          "Parameters": [
            {
              "Name": "contact",
              "Type": "Contact"
            },
            {
              "Name": "maxBytes",
              "Type": "UInt32"
            }
          ],
          "Name": "ConvertContactToVCardAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Contact>",
          "Parameters": [
            {
              "Name": "vCard",
              "Type": "RandomAccessStreamReference"
            }
          ],
          "Name": "ConvertVCardToContactAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ContactStore>",
          "Parameters": [
            {
              "Name": "accessType",
              "Type": "ContactStoreAccessType"
            }
          ],
          "Name": "RequestStoreAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ContactStore>",
          "Name": "RequestStoreAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "contact",
              "Type": "Contact"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            }
          ],
          "Name": "ShowContactCard"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "contact",
              "Type": "Contact"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            }
          ],
          "Name": "ShowContactCard"
        },
        {
          "IsStatic": true,
          "ReturnType": "ContactCardDelayedDataLoader",
          "Parameters": [
            {
              "Name": "contact",
              "Type": "Contact"
            },
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            }
          ],
          "Name": "ShowDelayLoadedContactCard"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ContactMatchReasonType",
          "IsGet": true,
          "Name": "MatchedField"
        },
        {
          "Type": "IReadOnlyList<TextSegment>",
          "IsGet": true,
          "Name": "MatchedSegments"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "MatchedText"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactMatchReason"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Description"
        },
        {
          "Type": "ContactPhoneKind",
          "IsGet": true,
          "IsSet": true,
          "Name": "Kind"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Number"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactPhone"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxCompanyPhoneCount"
        },
        {
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxHomeAddressCount"
        },
        {
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxHomeEmailCount"
        },
        {
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxHomeFaxPhoneCount"
        },
        {
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxHomePhoneCount"
        },
        {
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxChildCountCount"
        },
        {
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxMobilePhoneCount"
        },
        {
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxOtherAddressCount"
        },
        {
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxOtherEmailCount"
        },
        {
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxPagerPhoneCount"
        },
        {
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxParentCount"
        },
        {
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxSiblingCountCount"
        },
        {
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxWebsiteCount"
        },
        {
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxWorkAddressCount"
        },
        {
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxWorkEmailCount"
        },
        {
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxWorkFaxPhoneCount"
        },
        {
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxWorkPhoneCount"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "NoPropertyDescriptions"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "UseFirstNameOnly"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactPropertiesConstraints"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "ContactListIds"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IncludeContactsFromHiddenLists"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "OnlyServerSearchResults"
        },
        {
          "Type": "ContactQueryRequiredFields",
          "IsGet": true,
          "IsSet": true,
          "Name": "RequiredFields"
        },
        {
          "Type": "ContactQuerySearchFields",
          "IsGet": true,
          "IsSet": true,
          "Name": "SearchFields"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "SearchText"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactQuery"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IReadOnlyList<ContactMatchReason>",
          "Parameters": [
            {
              "Name": "contact",
              "Type": "Contact"
            }
          ],
          "Name": "GetMatchingPropertiesWithMatchReason"
        },
        {
          "ReturnType": "IAsyncOperation<ContactBatch>",
          "Name": "ReadBatchAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactReader"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Description"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Name"
        },
        {
          "Type": "ContactRelationship",
          "IsGet": true,
          "IsSet": true,
          "Name": "Relationship"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactSignificantOther"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AggregateContactManager",
          "IsGet": true,
          "Name": "AggregateContactManager"
        },
        {
          "Type": "ContactGroupChangeTracker",
          "IsGet": true,
          "Name": "GroupChangeTracker"
        },
        {
          "Type": "ContactChangeTracker",
          "IsGet": true,
          "Name": "ChangeTracker"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<ContactList>",
          "Parameters": [
            {
              "Name": "displayName",
              "Type": "String"
            }
          ],
          "Name": "CreateContactListAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "contactGroup",
              "Type": "ContactGroup"
            }
          ],
          "Name": "DeleteContactGroupAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<ContactGroup>>",
          "Name": "FindContactGroupsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<ContactList>>",
          "Name": "FindContactListsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<Contact>>",
          "Name": "FindContactsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<Contact>>",
          "Parameters": [
            {
              "Name": "searchText",
              "Type": "String"
            }
          ],
          "Name": "FindContactsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Contact>",
          "Parameters": [
            {
              "Name": "contactId",
              "Type": "String"
            }
          ],
          "Name": "GetContactAsync"
        },
        {
          "ReturnType": "IAsyncOperation<ContactGroup>",
          "Parameters": [
            {
              "Name": "contactGroupId",
              "Type": "String"
            }
          ],
          "Name": "GetContactGroupAsync"
        },
        {
          "ReturnType": "IAsyncOperation<ContactList>",
          "Parameters": [
            {
              "Name": "contactListId",
              "Type": "String"
            }
          ],
          "Name": "GetContactListAsync"
        },
        {
          "ReturnType": "ContactReader",
          "Name": "GetContactReader"
        },
        {
          "ReturnType": "ContactReader",
          "Parameters": [
            {
              "Name": "options",
              "Type": "ContactQuery"
            }
          ],
          "Name": "GetContactReader"
        },
        {
          "ReturnType": "IAsyncOperation<Contact>",
          "Name": "GetMeContactAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "contactGroup",
              "Type": "ContactGroup"
            }
          ],
          "Name": "SaveContactGroupAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<ContactStore,ContactGroupChangedEventArgs>",
          "Name": "ContactGroupChanged"
        },
        {
          "Type": "TypedEventHandler<ContactStore,ContactChangedEventArgs>",
          "Name": "ContactChanged"
        }
      ],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactStore"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactStoreNotificationTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Description"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "RawUri"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "Uri"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactWebsite"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "CoreApplicationView",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MainView"
        },
        {
          "Type": "IPropertySet",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Properties"
        },
        {
          "Type": "IReadOnlyList<CoreApplicationView>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Views"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "CoreApplicationView",
          "Parameters": [
            {
              "Name": "runtimeType",
              "Type": "String"
            },
            {
              "Name": "entryPoint",
              "Type": "String"
            }
          ],
          "Name": "CreateNewView"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "DecrementApplicationUseCount"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "Exit"
        },
        {
          "IsStatic": true,
          "ReturnType": "CoreApplicationView",
          "Name": "GetCurrentView"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "IncrementApplicationUseCount"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "viewSource",
              "Type": "IFrameworkViewSource"
            }
          ],
          "Name": "Run"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activationFactoryCallback",
              "Type": "IGetActivationFactory"
            }
          ],
          "Name": "RunWithActivationFactories"
        }
      ],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "IsStatic": true,
          "Name": "Exiting"
        },
        {
          "Type": "EventHandler<Object>",
          "IsStatic": true,
          "Name": "Resuming"
        },
        {
          "Type": "EventHandler<SuspendingEventArgs>",
          "IsStatic": true,
          "Name": "Suspending"
        },
        {
          "Type": "EventHandler<UnhandledErrorDetectedEventArgs>",
          "IsStatic": true,
          "Name": "UnhandledErrorDetected"
        }
      ],
      "Name": "Windows.ApplicationModel.Core.CoreApplication"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "CoreWindow",
          "IsGet": true,
          "Name": "CoreWindow"
        },
        {
          "Type": "CoreDispatcher",
          "IsGet": true,
          "Name": "Dispatcher"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsHosted"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsMain"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "TypedEventHandler<CoreApplicationView,IActivatedEventArgs>",
          "Name": "Activated"
        }
      ],
      "Name": "Windows.ApplicationModel.Core.CoreApplicationView"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Handled"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Propagate"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Core.UnhandledError"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UnhandledError",
          "IsGet": true,
          "Name": "UnhandledError"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "Clear"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "Flush"
        },
        {
          "IsStatic": true,
          "ReturnType": "DataPackageView",
          "Name": "GetContent"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "content",
              "Type": "DataPackage"
            }
          ],
          "Name": "SetContent"
        }
      ],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "IsStatic": true,
          "Name": "ContentChanged"
        }
      ],
      "Name": "Windows.ApplicationModel.DataTransfer.Clipboard"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DataPackagePropertySet",
          "IsGet": true,
          "Name": "Properties"
        },
        {
          "Type": "DataPackageOperation",
          "IsGet": true,
          "IsSet": true,
          "Name": "RequestedOperation"
        },
        {
          "Type": "IDictionary<String,RandomAccessStreamReference>",
          "IsGet": true,
          "Name": "ResourceMap"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "DataPackageView",
          "Name": "GetView"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Uri"
            }
          ],
          "Name": "SetApplicationLink"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "RandomAccessStreamReference"
            }
          ],
          "Name": "SetBitmap"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "formatId",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "SetData"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "formatId",
              "Type": "String"
            },
            {
              "Name": "delayRenderer",
              "Type": "DataProviderHandler"
            }
          ],
          "Name": "SetDataProvider"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "SetHtmlFormat"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "SetRtf"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "IEnumerable<IStorageItem>"
            }
          ],
          "Name": "SetStorageItems"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "IEnumerable<IStorageItem>"
            },
            {
              "Name": "readOnly",
              "Type": "Boolean"
            }
          ],
          "Name": "SetStorageItems"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "SetText"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Uri"
            }
          ],
          "Name": "SetUri"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Uri"
            }
          ],
          "Name": "SetWebLink"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<DataPackage,Object>",
          "Name": "Destroyed"
        },
        {
          "Type": "TypedEventHandler<DataPackage,OperationCompletedEventArgs>",
          "Name": "OperationCompleted"
        }
      ],
      "Name": "Windows.ApplicationModel.DataTransfer.DataPackage"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,Object>>",
        "IDictionary<String,Object>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,Object>>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "ApplicationListingUri"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ApplicationName"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentSourceApplicationLink"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentSourceWebLink"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Description"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "FileTypes"
        },
        {
          "Type": "Color",
          "IsGet": true,
          "IsSet": true,
          "Name": "LogoBackgroundColor"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "PackageFamilyName"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true,
          "Name": "Square30x30Logo"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true,
          "Name": "Thumbnail"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.DataPackagePropertySet"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,Object>>",
        "IReadOnlyCollection<KeyValuePair<String,Object>>",
        "IReadOnlyDictionary<String,Object>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "ApplicationListingUri"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ApplicationName"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "ContentSourceApplicationLink"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "ContentSourceWebLink"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Description"
        },
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "FileTypes"
        },
        {
          "Type": "Color",
          "IsGet": true,
          "Name": "LogoBackgroundColor"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "PackageFamilyName"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "Name": "Square30x30Logo"
        },
        {
          "Type": "RandomAccessStreamReference",
          "IsGet": true,
          "Name": "Thumbnail"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Title"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.DataPackagePropertySetView"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "AvailableFormats"
        },
        {
          "Type": "DataPackagePropertySetView",
          "IsGet": true,
          "Name": "Properties"
        },
        {
          "Type": "DataPackageOperation",
          "IsGet": true,
          "Name": "RequestedOperation"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "formatId",
              "Type": "String"
            }
          ],
          "Name": "Contains"
        },
        {
          "ReturnType": "IAsyncOperation<Uri>",
          "Name": "GetApplicationLinkAsync"
        },
        {
          "ReturnType": "IAsyncOperation<RandomAccessStreamReference>",
          "Name": "GetBitmapAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Object>",
          "Parameters": [
            {
              "Name": "formatId",
              "Type": "String"
            }
          ],
          "Name": "GetDataAsync"
        },
        {
          "ReturnType": "IAsyncOperation<String>",
          "Name": "GetHtmlFormatAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyDictionary<String,RandomAccessStreamReference>>",
          "Name": "GetResourceMapAsync"
        },
        {
          "ReturnType": "IAsyncOperation<String>",
          "Name": "GetRtfAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<IStorageItem>>",
          "Name": "GetStorageItemsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<String>",
          "Name": "GetTextAsync"
        },
        {
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "formatId",
              "Type": "String"
            }
          ],
          "Name": "GetTextAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Uri>",
          "Name": "GetUriAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Uri>",
          "Name": "GetWebLinkAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "DataPackageOperation"
            }
          ],
          "Name": "ReportOperationCompleted"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.DataPackageView"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.DataProviderDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Deadline"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "FormatId"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "DataProviderDeferral",
          "Name": "GetDeferral"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "SetData"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.DataProviderRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DataPackage",
          "IsGet": true,
          "IsSet": true,
          "Name": "Data"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Deadline"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "FailWithDisplayText"
        },
        {
          "ReturnType": "DataRequestDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.DataRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.DataRequestDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DataRequest",
          "IsGet": true,
          "Name": "Request"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.DataRequestedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "DataTransferManager",
          "Name": "GetForCurrentView"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "ShowShareUI"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<DataTransferManager,DataRequestedEventArgs>",
          "Name": "DataRequested"
        },
        {
          "Type": "TypedEventHandler<DataTransferManager,TargetApplicationChosenEventArgs>",
          "Name": "TargetApplicationChosen"
        }
      ],
      "Name": "Windows.ApplicationModel.DataTransfer.DataTransferManager"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "htmlFragment",
              "Type": "String"
            }
          ],
          "Name": "CreateHtmlFormat"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "htmlFormat",
              "Type": "String"
            }
          ],
          "Name": "GetStaticFragment"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.HtmlFormatHelper"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DataPackageOperation",
          "IsGet": true,
          "Name": "Operation"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.OperationCompletedEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ],
          "Name": "AddFile"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ],
          "Name": "RedeemTokenForFileAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ],
          "Name": "RemoveFile"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.SharedStorageAccessManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Id"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "SupportedDataFormats"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "SupportedFileTypes"
        },
        {
          "Type": "RandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true,
          "Name": "Thumbnail"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.ShareTarget.QuickLink"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DataPackageView",
          "IsGet": true,
          "Name": "Data"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "QuickLinkId"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "RemoveThisQuickLink"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "quicklink",
              "Type": "QuickLink"
            }
          ],
          "Name": "ReportCompleted"
        },
        {
          "ReturnType": "Void",
          "Name": "ReportCompleted"
        },
        {
          "ReturnType": "Void",
          "Name": "ReportDataRetrieved"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "ReportError"
        },
        {
          "ReturnType": "Void",
          "Name": "ReportStarted"
        },
        {
          "ReturnType": "Void",
          "Name": "ReportSubmittedBackgroundTask"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.ShareTarget.ShareOperation"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ApplicationLink"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Bitmap"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Html"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Rtf"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StorageItems"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Text"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Uri"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "WebLink"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.StandardDataFormats"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ApplicationName"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.DataTransfer.TargetApplicationChosenEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DesignModeEnabled"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.DesignMode"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "fileName",
              "Type": "String"
            },
            {
              "Name": "data",
              "Type": "IRandomAccessStreamReference"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "fileName",
              "Type": "String"
            },
            {
              "Name": "data",
              "Type": "IRandomAccessStreamReference"
            },
            {
              "Name": "mimeType",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentLocation"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true,
          "Name": "Data"
        },
        {
          "Type": "EmailAttachmentDownloadState",
          "IsGet": true,
          "IsSet": true,
          "Name": "DownloadState"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "FileName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsInline"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "MimeType"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "IsSet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailAttachment"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "EmailFlagState",
          "IsGet": true,
          "Name": "FlagState"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasAttachment"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "EmailImportance",
          "IsGet": true,
          "Name": "Importance"
        },
        {
          "Type": "EmailMessageResponseType",
          "IsGet": true,
          "Name": "LastEmailResponseType"
        },
        {
          "Type": "EmailRecipient",
          "IsGet": true,
          "Name": "LatestSender"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "MailboxId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MessageCount"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "MostRecentMessageId"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "MostRecentMessageTime"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Preview"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Subject"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "UnreadMessageCount"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<EmailMessage>>",
          "Name": "FindMessagesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<EmailMessage>>",
          "Parameters": [
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ],
          "Name": "FindMessagesAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailConversation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<EmailConversation>",
          "IsGet": true,
          "Name": "Conversations"
        },
        {
          "Type": "EmailBatchStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailConversationBatch"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<EmailConversationBatch>",
          "Name": "ReadBatchAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailConversationReader"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "FolderIds"
        },
        {
          "Type": "EmailMessageTypeFilter",
          "IsGet": true,
          "IsSet": true,
          "Name": "MessageTypeFilter"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "OnlyServerSearchResults"
        },
        {
          "Type": "EmailSearchFields",
          "IsGet": true,
          "IsSet": true,
          "Name": "SearchFields"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "SearchString"
        },
        {
          "Type": "EmailSortDirection",
          "IsGet": true,
          "IsSet": true,
          "Name": "SortDirection"
        },
        {
          "Type": "EmailSortProperty",
          "IsGet": true,
          "IsSet": true,
          "Name": "SortProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailFetchOptions"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsSyncing"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "LastSync"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "MailboxId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ParentFolderId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "RemoteId"
        },
        {
          "Type": "EmailSpecialFolderType",
          "IsGet": true,
          "Name": "SpecialFolderType"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<EmailFolder>",
          "Parameters": [
            {
              "Name": "Name",
              "Type": "String"
            }
          ],
          "Name": "CreateFolderAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "DeleteAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<EmailFolder>>",
          "Name": "FindChildFoldersAsync"
        },
        {
          "ReturnType": "EmailConversationReader",
          "Name": "GetConversationReader"
        },
        {
          "ReturnType": "EmailConversationReader",
          "Parameters": [
            {
              "Name": "options",
              "Type": "EmailFetchOptions"
            }
          ],
          "Name": "GetConversationReader"
        },
        {
          "ReturnType": "IAsyncOperation<EmailMessage>",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ],
          "Name": "GetMessageAsync"
        },
        {
          "ReturnType": "IAsyncOperation<EmailItemCounts>",
          "Name": "GetMessageCountsAsync"
        },
        {
          "ReturnType": "EmailMessageReader",
          "Name": "GetMessageReader"
        },
        {
          "ReturnType": "EmailMessageReader",
          "Parameters": [
            {
              "Name": "options",
              "Type": "EmailFetchOptions"
            }
          ],
          "Name": "GetMessageReader"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "message",
              "Type": "EmailMessage"
            }
          ],
          "Name": "SaveMessageAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "newParentFolder",
              "Type": "EmailFolder"
            }
          ],
          "Name": "TryMoveAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "newParentFolder",
              "Type": "EmailFolder"
            },
            {
              "Name": "newFolderName",
              "Type": "String"
            }
          ],
          "Name": "TryMoveAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Name": "TrySaveAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailFolder"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            },
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "description",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Description"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Id"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Name"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailIrmTemplate"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AllowSmimeEncryptionAlgorithmNegotiation"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AllowSmimeSoftCerts"
        },
        {
          "Type": "EmailMailboxCapabilities",
          "IsGet": true,
          "Name": "Capabilities"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "EmailMailboxChangeTracker",
          "IsGet": true,
          "Name": "ChangeTracker"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsAppOwnedMailbox"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "MailAddress"
        },
        {
          "Type": "EmailMailboxType",
          "IsGet": true,
          "Name": "MailboxType"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "MustEncryptSmimeMessages"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "MustEncryptUnderLockscreen"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "MustSignSmimeMessages"
        },
        {
          "Type": "EmailMailboxOtherAppReadAccess",
          "IsGet": true,
          "IsSet": true,
          "Name": "OtherAppReadAccess"
        },
        {
          "Type": "EmailMailboxOtherAppWriteAccess",
          "IsGet": true,
          "IsSet": true,
          "Name": "OtherAppWriteAccess"
        },
        {
          "Type": "SmimeEncryptionAlgorithm",
          "IsGet": true,
          "Name": "RequiredSmimeEncryptionAlgorithm"
        },
        {
          "Type": "SmimeSigningAlgorithm",
          "IsGet": true,
          "Name": "RequiredSmimeSigningAlgorithm"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "SourceDisplayName"
        },
        {
          "Type": "EmailMailboxSyncAdapter",
          "IsGet": true,
          "Name": "SyncAdapter"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "calendar",
              "Type": "AppointmentCalendar"
            },
            {
              "Name": "meeting",
              "Type": "Appointment"
            }
          ],
          "Name": "CreateMeetingAsync"
        },
        {
          "ReturnType": "IAsyncOperation<EmailMessage>",
          "Parameters": [
            {
              "Name": "messageId",
              "Type": "String"
            },
            {
              "Name": "responseType",
              "Type": "EmailMessageResponseType"
            },
            {
              "Name": "subject",
              "Type": "String"
            },
            {
              "Name": "responseHeaderType",
              "Type": "EmailMessageBodyType"
            },
            {
              "Name": "responseHeader",
              "Type": "String"
            }
          ],
          "Name": "CreateResponseMessageAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "DeleteAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "messageId",
              "Type": "String"
            }
          ],
          "Name": "DeleteMessageAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "attachmentId",
              "Type": "String"
            }
          ],
          "Name": "DownloadAttachmentAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "messageId",
              "Type": "String"
            }
          ],
          "Name": "DownloadMessageAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "meeting",
              "Type": "Appointment"
            },
            {
              "Name": "recipients",
              "Type": "IList<EmailRecipient>"
            },
            {
              "Name": "subject",
              "Type": "String"
            },
            {
              "Name": "forwardHeaderType",
              "Type": "EmailMessageBodyType"
            },
            {
              "Name": "forwardHeader",
              "Type": "String"
            },
            {
              "Name": "comment",
              "Type": "String"
            }
          ],
          "Name": "ForwardMeetingAppointmentAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "meeting",
              "Type": "EmailMessage"
            },
            {
              "Name": "recipients",
              "Type": "IList<EmailRecipient>"
            },
            {
              "Name": "subject",
              "Type": "String"
            },
            {
              "Name": "forwardHeaderType",
              "Type": "EmailMessageBodyType"
            },
            {
              "Name": "forwardHeader",
              "Type": "String"
            },
            {
              "Name": "comment",
              "Type": "String"
            }
          ],
          "Name": "ForwardMeetingAsync"
        },
        {
          "ReturnType": "IAsyncOperation<EmailConversation>",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ],
          "Name": "GetConversationAsync"
        },
        {
          "ReturnType": "EmailConversationReader",
          "Name": "GetConversationReader"
        },
        {
          "ReturnType": "EmailConversationReader",
          "Parameters": [
            {
              "Name": "options",
              "Type": "EmailFetchOptions"
            }
          ],
          "Name": "GetConversationReader"
        },
        {
          "ReturnType": "IAsyncOperation<EmailFolder>",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ],
          "Name": "GetFolderAsync"
        },
        {
          "ReturnType": "IAsyncOperation<EmailMessage>",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ],
          "Name": "GetMessageAsync"
        },
        {
          "ReturnType": "EmailMessageReader",
          "Name": "GetMessageReader"
        },
        {
          "ReturnType": "EmailMessageReader",
          "Parameters": [
            {
              "Name": "options",
              "Type": "EmailFetchOptions"
            }
          ],
          "Name": "GetMessageReader"
        },
        {
          "ReturnType": "IAsyncOperation<EmailFolder>",
          "Parameters": [
            {
              "Name": "folderType",
              "Type": "EmailSpecialFolderType"
            }
          ],
          "Name": "GetSpecialFolderAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<EmailIrmTemplate>>",
          "Name": "GetSupportedIrmTemplatesAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "messageId",
              "Type": "String"
            },
            {
              "Name": "flagState",
              "Type": "EmailFlagState"
            }
          ],
          "Name": "ChangeMessageFlagStateAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "folderId",
              "Type": "String"
            }
          ],
          "Name": "MarkFolderAsSeenAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "folderId",
              "Type": "String"
            },
            {
              "Name": "isSyncing",
              "Type": "Boolean"
            }
          ],
          "Name": "MarkFolderSyncingAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "messageId",
              "Type": "String"
            }
          ],
          "Name": "MarkMessageAsSeenAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "messageId",
              "Type": "String"
            },
            {
              "Name": "isRead",
              "Type": "Boolean"
            }
          ],
          "Name": "MarkMessageReadAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "meeting",
              "Type": "Appointment"
            },
            {
              "Name": "newStartTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "newDuration",
              "Type": "TimeSpan"
            },
            {
              "Name": "subject",
              "Type": "String"
            },
            {
              "Name": "comment",
              "Type": "String"
            }
          ],
          "Name": "ProposeNewTimeForMeetingAppointmentAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "meeting",
              "Type": "EmailMessage"
            },
            {
              "Name": "newStartTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "newDuration",
              "Type": "TimeSpan"
            },
            {
              "Name": "subject",
              "Type": "String"
            },
            {
              "Name": "comment",
              "Type": "String"
            }
          ],
          "Name": "ProposeNewTimeForMeetingAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "meeting",
              "Type": "Appointment"
            },
            {
              "Name": "response",
              "Type": "EmailMeetingResponseType"
            },
            {
              "Name": "subject",
              "Type": "String"
            },
            {
              "Name": "comment",
              "Type": "String"
            },
            {
              "Name": "sendUpdate",
              "Type": "Boolean"
            }
          ],
          "Name": "RespondToMeetingAppointmentAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "meeting",
              "Type": "EmailMessage"
            },
            {
              "Name": "response",
              "Type": "EmailMeetingResponseType"
            },
            {
              "Name": "subject",
              "Type": "String"
            },
            {
              "Name": "comment",
              "Type": "String"
            },
            {
              "Name": "sendUpdate",
              "Type": "Boolean"
            }
          ],
          "Name": "RespondToMeetingAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "SaveAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "message",
              "Type": "EmailMessage"
            }
          ],
          "Name": "SaveDraftAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "message",
              "Type": "EmailMessage"
            }
          ],
          "Name": "SendMessageAsync"
        },
        {
          "ReturnType": "IAsyncOperation<EmailMailboxSyncStatus>",
          "Name": "SyncAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "folderId",
              "Type": "String"
            },
            {
              "Name": "newParentFolderId",
              "Type": "String"
            }
          ],
          "Name": "TryMoveFolderAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "folderId",
              "Type": "String"
            },
            {
              "Name": "newParentFolderId",
              "Type": "String"
            },
            {
              "Name": "newFolderName",
              "Type": "String"
            }
          ],
          "Name": "TryMoveFolderAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "messageId",
              "Type": "String"
            },
            {
              "Name": "newParentFolderId",
              "Type": "String"
            }
          ],
          "Name": "TryMoveMessageAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "meeting",
              "Type": "Appointment"
            }
          ],
          "Name": "UpdateMeetingAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<EmailMailbox,EmailMailboxChangedEventArgs>",
          "Name": "MailboxChanged"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailMailbox"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "EmailMailboxActionType",
          "IsGet": true,
          "Name": "ActionType"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "ChangeNumber"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailMailboxAction"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "EmailFolder",
          "IsGet": true,
          "Name": "Folder"
        },
        {
          "Type": "EmailMailboxChangeType",
          "IsGet": true,
          "Name": "ChangeType"
        },
        {
          "Type": "IList<EmailMailboxAction>",
          "IsGet": true,
          "Name": "MailboxActions"
        },
        {
          "Type": "EmailMessage",
          "IsGet": true,
          "Name": "Message"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailMailboxChange"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailMailboxChangedDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "EmailMailboxChangedDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailMailboxChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "AcceptChanges"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "lastChangeToAcknowledge",
              "Type": "EmailMailboxChange"
            }
          ],
          "Name": "AcceptChangesThrough"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<EmailMailboxChange>>",
          "Name": "ReadBatchAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailMailboxChangeReader"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsTracking"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Enable"
        },
        {
          "ReturnType": "EmailMailboxChangeReader",
          "Name": "GetChangeReader"
        },
        {
          "ReturnType": "Void",
          "Name": "Reset"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailMailboxChangeTracker"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "EmailMailboxSyncState",
          "IsGet": true,
          "Name": "CurrentState"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "LastAttemptedSyncTime"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "LastSuccessfulSyncTime"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Name": "SyncAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<EmailMailbox,EmailMailboxSyncStatusChangedEventArgs>",
          "Name": "SyncStatusChanged"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailMailboxSyncAdapter"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "EmailMailboxSyncState",
          "IsGet": true,
          "Name": "CurrentState"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "LastAttemptedSyncTime"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "LastSuccessfulSyncTime"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailMailboxSyncStatusChangedEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<EmailStore>",
          "Parameters": [
            {
              "Name": "accessType",
              "Type": "EmailStoreAccessType"
            }
          ],
          "Name": "RequestStoreAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "message",
              "Type": "EmailMessage"
            }
          ],
          "Name": "ShowComposeNewEmailAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AllowNewTimeProposal"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true,
          "Name": "AppointmentOriginalStartTime"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "AppointmentRoamingId"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "Duration"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsAllDay"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsResponseRequested"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Location"
        },
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProposedDuration"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProposedStartTime"
        },
        {
          "Type": "AppointmentRecurrence",
          "IsGet": true,
          "IsSet": true,
          "Name": "Recurrence"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true,
          "Name": "RecurrenceStartTime"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServerChangeNumber"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "StartTime"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailMeetingInfo"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AllowInternetImage"
        },
        {
          "Type": "IList<EmailAttachment>",
          "IsGet": true,
          "Name": "Attachments"
        },
        {
          "Type": "IList<EmailRecipient>",
          "IsGet": true,
          "Name": "Bcc"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Body"
        },
        {
          "Type": "IList<EmailRecipient>",
          "IsGet": true,
          "Name": "CC"
        },
        {
          "Type": "EmailClassification",
          "IsGet": true,
          "IsSet": true,
          "Name": "Classification"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ConversationId"
        },
        {
          "Type": "EmailFlagState",
          "IsGet": true,
          "IsSet": true,
          "Name": "FlagState"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "FolderId"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "ChangeNumber"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "EmailImportance",
          "IsGet": true,
          "IsSet": true,
          "Name": "Importance"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true,
          "Name": "IrmExpiration"
        },
        {
          "Type": "EmailIrmPermissions",
          "IsGet": true,
          "IsSet": true,
          "Name": "IrmPermissions"
        },
        {
          "Type": "EmailIrmTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "IrmTemplate"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsDraftMessage"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsRead"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsSeen"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsTruncated"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "MailboxId"
        },
        {
          "Type": "EmailMeetingInfo",
          "IsGet": true,
          "IsSet": true,
          "Name": "MeetingInfo"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "MessageClass"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "MessageSize"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NormalizedSubject"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "OriginalCodePage"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "PreferredCodePage"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Preview"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "RemoteId"
        },
        {
          "Type": "EmailMessageResponseType",
          "IsGet": true,
          "IsSet": true,
          "Name": "ResponseType"
        },
        {
          "Type": "EmailRecipient",
          "IsGet": true,
          "IsSet": true,
          "Name": "Sender"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true,
          "Name": "SentTime"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Subject"
        },
        {
          "Type": "IList<EmailRecipient>",
          "IsGet": true,
          "Name": "To"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "TransportCodePage"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IRandomAccessStreamReference",
          "Parameters": [
            {
              "Name": "type",
              "Type": "EmailMessageBodyType"
            }
          ],
          "Name": "GetBodyStream"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "type",
              "Type": "EmailMessageBodyType"
            },
            {
              "Name": "stream",
              "Type": "IRandomAccessStreamReference"
            }
          ],
          "Name": "SetBodyStream"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailMessage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<EmailMessage>",
          "IsGet": true,
          "Name": "Messages"
        },
        {
          "Type": "EmailBatchStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailMessageBatch"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<EmailMessageBatch>",
          "Name": "ReadBatchAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailMessageReader"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "address",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "address",
              "Type": "String"
            },
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Address"
        },
        {
          "Type": "EmailRecipientAddressType",
          "IsGet": true,
          "IsSet": true,
          "Name": "AddressType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Name"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailRecipient"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<EmailMailbox>",
          "Parameters": [
            {
              "Name": "accountName",
              "Type": "String"
            },
            {
              "Name": "accountAddress",
              "Type": "String"
            }
          ],
          "Name": "CreateMailboxAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<EmailMailbox>>",
          "Name": "FindMailboxesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<EmailConversation>",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ],
          "Name": "GetConversationAsync"
        },
        {
          "ReturnType": "EmailConversationReader",
          "Name": "GetConversationReader"
        },
        {
          "ReturnType": "EmailConversationReader",
          "Parameters": [
            {
              "Name": "options",
              "Type": "EmailFetchOptions"
            }
          ],
          "Name": "GetConversationReader"
        },
        {
          "ReturnType": "IAsyncOperation<EmailFolder>",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ],
          "Name": "GetFolderAsync"
        },
        {
          "ReturnType": "IAsyncOperation<EmailMailbox>",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ],
          "Name": "GetMailboxAsync"
        },
        {
          "ReturnType": "IAsyncOperation<EmailMessage>",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ],
          "Name": "GetMessageAsync"
        },
        {
          "ReturnType": "EmailMessageReader",
          "Name": "GetMessageReader"
        },
        {
          "ReturnType": "EmailMessageReader",
          "Parameters": [
            {
              "Name": "options",
              "Type": "EmailFetchOptions"
            }
          ],
          "Name": "GetMessageReader"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailStore"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailStoreNotificationTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasUnreadMessages"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsConversationMuted"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "MostRecentMessageId"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "Participants"
        },
        {
          "Type": "ChatConversationThreadingInfo",
          "IsGet": true,
          "Name": "ThreadingInfo"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Name": "DeleteAsync"
        },
        {
          "ReturnType": "ChatMessageReader",
          "Name": "GetMessageReader"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "MarkAsReadAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "SaveAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatConversation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<ChatConversation>>",
          "Name": "ReadBatchAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatConversationReader"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContactId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ConversationId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Custom"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "Participants"
        },
        {
          "Type": "ChatConversationThreadingType",
          "IsGet": true,
          "IsSet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatConversationThreadingInfo"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<ChatMessageAttachment>",
          "IsGet": true,
          "Name": "Attachments"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Body"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "IsSet": true,
          "Name": "DownloadSize"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "From"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsDraft"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsForwardingDisabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsIncoming"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsRead"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsSIMMessage"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "LocalTimestamp"
        },
        {
          "Type": "ChatMessageType",
          "IsGet": true,
          "IsSet": true,
          "Name": "MessageType"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "NetworkTimestamp"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "Recipients"
        },
        {
          "Type": "IReadOnlyDictionary<String,ChatMessageStatus>",
          "IsGet": true,
          "Name": "RecipientSendStatuses"
        },
        {
          "Type": "IList<ChatRecipient>",
          "IsGet": true,
          "Name": "RecipientsInfo"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "RemoteId"
        },
        {
          "Type": "ChatMessageStatus",
          "IsGet": true,
          "IsSet": true,
          "Name": "Status"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Subject"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "SupressNotification"
        },
        {
          "Type": "ChatConversationThreadingInfo",
          "IsGet": true,
          "IsSet": true,
          "Name": "ThreadingInfo"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "TransportFriendlyName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "TransportId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatMessage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "mimeType",
              "Type": "String"
            },
            {
              "Name": "dataStreamReference",
              "Type": "IRandomAccessStreamReference"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true,
          "Name": "DataStreamReference"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "GroupId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "MimeType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Text"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageAttachment"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ChatMessageChangeType",
          "IsGet": true,
          "Name": "ChangeType"
        },
        {
          "Type": "ChatMessage",
          "IsGet": true,
          "Name": "Message"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageChange"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageChangedDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "ChatMessageChangedDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "AcceptChanges"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "lastChangeToAcknowledge",
              "Type": "ChatMessageChange"
            }
          ],
          "Name": "AcceptChangesThrough"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<ChatMessageChange>>",
          "Name": "ReadBatchAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageChangeReader"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Enable"
        },
        {
          "ReturnType": "ChatMessageChangeReader",
          "Name": "GetChangeReader"
        },
        {
          "ReturnType": "Void",
          "Name": "Reset"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageChangeTracker"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<ChatMessageTransport>>",
          "Name": "GetTransportsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ChatMessageStore>",
          "Name": "RequestStoreAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "message",
              "Type": "ChatMessage"
            }
          ],
          "Name": "ShowComposeSmsMessageAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "ShowSmsSettings"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Name": "TryRegisterAsTransportAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ChatMessageNotificationAction",
          "IsGet": true,
          "Name": "Actions"
        },
        {
          "Type": "ChatMessage",
          "IsGet": true,
          "Name": "ChatMessage"
        },
        {
          "Type": "ChatMessageNotificationPretreatment",
          "IsGet": true,
          "Name": "Pretreatments"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageNotificationTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<ChatMessage>>",
          "Name": "ReadBatchAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageReader"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ChatMessageChangeTracker",
          "IsGet": true,
          "Name": "ChangeTracker"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localMessageId",
              "Type": "String"
            }
          ],
          "Name": "DeleteMessageAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localChatMessageId",
              "Type": "String"
            }
          ],
          "Name": "DownloadMessageAsync"
        },
        {
          "ReturnType": "IAsyncOperation<ChatConversation>",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ],
          "Name": "GetConversationAsync"
        },
        {
          "ReturnType": "IAsyncOperation<ChatConversation>",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            },
            {
              "Name": "transportIds",
              "Type": "IReadOnlyList<String>"
            }
          ],
          "Name": "GetConversationAsync"
        },
        {
          "ReturnType": "ChatConversationReader",
          "Name": "GetConversationReader"
        },
        {
          "ReturnType": "ChatConversationReader",
          "Parameters": [
            {
              "Name": "transportIds",
              "Type": "IReadOnlyList<String>"
            }
          ],
          "Name": "GetConversationReader"
        },
        {
          "ReturnType": "IAsyncOperation<ChatMessage>",
          "Parameters": [
            {
              "Name": "localChatMessageId",
              "Type": "String"
            }
          ],
          "Name": "GetMessageAsync"
        },
        {
          "ReturnType": "IAsyncOperation<ChatMessage>",
          "Parameters": [
            {
              "Name": "transportId",
              "Type": "String"
            },
            {
              "Name": "remoteId",
              "Type": "String"
            }
          ],
          "Name": "GetMessageByRemoteIdAsync"
        },
        {
          "ReturnType": "ChatMessageReader",
          "Name": "GetMessageReader"
        },
        {
          "ReturnType": "ChatMessageReader",
          "Parameters": [
            {
              "Name": "recentTimeLimit",
              "Type": "TimeSpan"
            }
          ],
          "Name": "GetMessageReader"
        },
        {
          "ReturnType": "IAsyncOperation<UInt32>",
          "Name": "GetUnseenCountAsync"
        },
        {
          "ReturnType": "IAsyncOperation<UInt32>",
          "Parameters": [
            {
              "Name": "transportIds",
              "Type": "IReadOnlyList<String>"
            }
          ],
          "Name": "GetUnseenCountAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "MarkAsSeenAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "transportIds",
              "Type": "IReadOnlyList<String>"
            }
          ],
          "Name": "MarkAsSeenAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localChatMessageId",
              "Type": "String"
            }
          ],
          "Name": "MarkMessageReadAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localChatMessageId",
              "Type": "String"
            }
          ],
          "Name": "RetrySendMessageAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "chatMessage",
              "Type": "ChatMessage"
            }
          ],
          "Name": "SaveMessageAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "chatMessage",
              "Type": "ChatMessage"
            }
          ],
          "Name": "SendMessageAsync"
        },
        {
          "ReturnType": "ChatMessageValidationResult",
          "Parameters": [
            {
              "Name": "chatMessage",
              "Type": "ChatMessage"
            }
          ],
          "Name": "ValidateMessage"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<ChatMessageStore,ChatMessageChangedEventArgs>",
          "Name": "MessageChanged"
        },
        {
          "Type": "TypedEventHandler<ChatMessageStore,ChatStoreChangedEventArgs>",
          "Name": "StoreChanged"
        }
      ],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageStore"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsActive"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsAppSetAsNotificationProvider"
        },
        {
          "Type": "ChatMessageTransportSettings",
          "IsGet": true,
          "Name": "Settings"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "TransportFriendlyName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "TransportId"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Name": "RequestSetAsNotificationProviderAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageTransport"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "AttachmentLimit"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MaxSize"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "RecipientLimit"
        },
        {
          "Type": "ChatMessageVideoFormat",
          "IsGet": true,
          "Name": "VideoFormat"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageTransportSettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "Name": "MaxPartCount"
        },
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "Name": "PartCount"
        },
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "Name": "RemainingCharacterCountInPart"
        },
        {
          "Type": "ChatMessageValidationStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageValidationResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Address"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true,
          "Name": "DeliveryTime"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReadTime"
        },
        {
          "Type": "ChatRecipientStatus",
          "IsGet": true,
          "IsSet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatRecipient"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "ErrorCode1"
        },
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "ErrorCode2"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "HasPermanentError"
        },
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Result"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatRecipientStatus"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "ChatStoreChangedEventType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Chat.ChatStoreChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "LockApplicationHost",
          "Name": "GetForCurrentView"
        },
        {
          "ReturnType": "Void",
          "Name": "RequestUnlock"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<LockApplicationHost,LockScreenUnlockingEventArgs>",
          "Name": "Unlocking"
        }
      ],
      "Name": "Windows.ApplicationModel.LockScreen.LockApplicationHost"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AutomationName"
        },
        {
          "Type": "IRandomAccessStream",
          "IsGet": true,
          "Name": "Glyph"
        },
        {
          "Type": "IRandomAccessStream",
          "IsGet": true,
          "Name": "Logo"
        },
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "Name": "Number"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "LaunchApp"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.LockScreen.LockScreenBadge"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IRandomAccessStream",
          "IsGet": true,
          "Name": "AlarmIcon"
        },
        {
          "Type": "IReadOnlyList<LockScreenBadge>",
          "IsGet": true,
          "Name": "Badges"
        },
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "DetailText"
        },
        {
          "Type": "IRandomAccessStream",
          "IsGet": true,
          "Name": "LockScreenImage"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "TypedEventHandler<LockScreenInfo,Object>",
          "Name": "AlarmIconChanged"
        },
        {
          "Type": "TypedEventHandler<LockScreenInfo,Object>",
          "Name": "BadgesChanged"
        },
        {
          "Type": "TypedEventHandler<LockScreenInfo,Object>",
          "Name": "DetailTextChanged"
        },
        {
          "Type": "TypedEventHandler<LockScreenInfo,Object>",
          "Name": "LockScreenImageChanged"
        }
      ],
      "Name": "Windows.ApplicationModel.LockScreen.LockScreenInfo"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.LockScreen.LockScreenUnlockingDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Deadline"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "LockScreenUnlockingDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.LockScreen.LockScreenUnlockingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Package",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Current"
        },
        {
          "Type": "IReadOnlyList<Package>",
          "IsGet": true,
          "Name": "Dependencies"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Description"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "PackageId",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "InstallDate"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "InstalledDate"
        },
        {
          "Type": "StorageFolder",
          "IsGet": true,
          "Name": "InstalledLocation"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsBundle"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsDevelopmentMode"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsFramework"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsResourcePackage"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "Logo"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "PublisherDisplayName"
        },
        {
          "Type": "PackageStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "String",
          "Name": "GetThumbnailToken"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "parameters",
              "Type": "String"
            }
          ],
          "Name": "Launch"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Package"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ProcessorArchitecture",
          "IsGet": true,
          "Name": "Architecture"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Author"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "FamilyName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "FullName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ProductId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Publisher"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "PublisherId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ResourceId"
        },
        {
          "Type": "PackageVersion",
          "IsGet": true,
          "Name": "Version"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.PackageId"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "DataOffline"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "DependencyIssue"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "DeploymentInProgress"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Disabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "LicenseIssue"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Modified"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "NeedsRemediation"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "NotAvailable"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "PackageOffline"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Servicing"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Tampered"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Name": "VerifyIsOK"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.PackageStatus"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<ResourceCandidate>",
          "IsGet": true,
          "Name": "Candidates"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "Uri"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "ResourceCandidate",
          "Name": "Resolve"
        },
        {
          "ReturnType": "ResourceCandidate",
          "Parameters": [
            {
              "Name": "resourceContext",
              "Type": "ResourceContext"
            }
          ],
          "Name": "Resolve"
        },
        {
          "ReturnType": "IReadOnlyList<ResourceCandidate>",
          "Name": "ResolveAll"
        },
        {
          "ReturnType": "IReadOnlyList<ResourceCandidate>",
          "Parameters": [
            {
              "Name": "resourceContext",
              "Type": "ResourceContext"
            }
          ],
          "Name": "ResolveAll"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.NamedResource"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsDefault"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsMatch"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsMatchAsDefault"
        },
        {
          "Type": "IReadOnlyList<ResourceQualifier>",
          "IsGet": true,
          "Name": "Qualifiers"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ValueAsString"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "qualifierName",
              "Type": "String"
            }
          ],
          "Name": "GetQualifierValue"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Name": "GetValueAsFileAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Name": "GetValueAsStreamAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceCandidate"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<ResourceCandidate>",
        "IReadOnlyCollection<ResourceCandidate>",
        "IReadOnlyList<ResourceCandidate>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceCandidateVectorView"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Languages"
        },
        {
          "Type": "IObservableMap<String,String>",
          "IsGet": true,
          "Name": "QualifierValues"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "ResourceContext",
          "Name": "Clone"
        },
        {
          "IsStatic": true,
          "ReturnType": "ResourceContext",
          "Parameters": [
            {
              "Name": "result",
              "Type": "IEnumerable<ResourceQualifier>"
            }
          ],
          "Name": "CreateMatchingContext"
        },
        {
          "IsStatic": true,
          "ReturnType": "ResourceContext",
          "Name": "GetForCurrentView"
        },
        {
          "IsStatic": true,
          "ReturnType": "ResourceContext",
          "Name": "GetForViewIndependentUse"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "result",
              "Type": "IEnumerable<ResourceQualifier>"
            }
          ],
          "Name": "OverrideToMatch"
        },
        {
          "ReturnType": "Void",
          "Name": "Reset"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "qualifierNames",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "Reset"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "ResetGlobalQualifierValues"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "qualifierNames",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "ResetGlobalQualifierValues"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "key",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "SetGlobalQualifierValue"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceContext"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<String>",
        "IReadOnlyCollection<String>",
        "IReadOnlyList<String>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceContextLanguagesVectorView"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyDictionary<String,ResourceMap>",
          "IsGet": true,
          "Name": "AllResourceMaps"
        },
        {
          "Type": "ResourceManager",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Current"
        },
        {
          "Type": "ResourceContext",
          "IsGet": true,
          "Name": "DefaultContext"
        },
        {
          "Type": "ResourceMap",
          "IsGet": true,
          "Name": "MainResourceMap"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IReadOnlyList<NamedResource>",
          "Parameters": [
            {
              "Name": "packageName",
              "Type": "String"
            },
            {
              "Name": "resourceLayoutInfo",
              "Type": "ResourceLayoutInfo"
            }
          ],
          "Name": "GetAllNamedResourcesForPackage"
        },
        {
          "ReturnType": "IReadOnlyList<ResourceMap>",
          "Parameters": [
            {
              "Name": "packageName",
              "Type": "String"
            },
            {
              "Name": "resourceLayoutInfo",
              "Type": "ResourceLayoutInfo"
            }
          ],
          "Name": "GetAllSubtreesForPackage"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "resourceReference",
              "Type": "String"
            }
          ],
          "Name": "IsResourceReference"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "files",
              "Type": "IEnumerable<IStorageFile>"
            }
          ],
          "Name": "LoadPriFiles"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "files",
              "Type": "IEnumerable<IStorageFile>"
            }
          ],
          "Name": "UnloadPriFiles"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,NamedResource>>",
        "IReadOnlyCollection<KeyValuePair<String,NamedResource>>",
        "IReadOnlyDictionary<String,NamedResource>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "Uri"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "ResourceMap",
          "Parameters": [
            {
              "Name": "reference",
              "Type": "String"
            }
          ],
          "Name": "GetSubtree"
        },
        {
          "ReturnType": "ResourceCandidate",
          "Parameters": [
            {
              "Name": "resource",
              "Type": "String"
            }
          ],
          "Name": "GetValue"
        },
        {
          "ReturnType": "ResourceCandidate",
          "Parameters": [
            {
              "Name": "resource",
              "Type": "String"
            },
            {
              "Name": "context",
              "Type": "ResourceContext"
            }
          ],
          "Name": "GetValue"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceMap"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IIterator<KeyValuePair<String,NamedResource>>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "KeyValuePair<String,NamedResource>",
          "IsGet": true,
          "Name": "Current"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasCurrent"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "UInt32",
          "Parameters": [
            {
              "Name": "items",
              "Type": "KeyValuePair`2[]",
              "Out": true
            }
          ],
          "Name": "GetMany"
        },
        {
          "ReturnType": "Boolean",
          "Name": "MoveNext"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceMapIterator"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,ResourceMap>>",
        "IReadOnlyCollection<KeyValuePair<String,ResourceMap>>",
        "IReadOnlyDictionary<String,ResourceMap>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceMapMapView"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IIterator<KeyValuePair<String,ResourceMap>>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "KeyValuePair<String,ResourceMap>",
          "IsGet": true,
          "Name": "Current"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasCurrent"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "UInt32",
          "Parameters": [
            {
              "Name": "items",
              "Type": "KeyValuePair`2[]",
              "Out": true
            }
          ],
          "Name": "GetMany"
        },
        {
          "ReturnType": "Boolean",
          "Name": "MoveNext"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceMapMapViewIterator"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsDefault"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsMatch"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "QualifierName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "QualifierValue"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "Score"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceQualifier"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,String>>",
        "IReadOnlyCollection<KeyValuePair<String,String>>",
        "IReadOnlyDictionary<String,String>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceQualifierMapView"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,String>>",
        "IDictionary<String,String>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,String>>",
        "IObservableMap<String,String>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "MapChangedEventHandler<String,String>",
          "Name": "MapChanged"
        }
      ],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceQualifierObservableMap"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<ResourceQualifier>",
        "IReadOnlyCollection<ResourceQualifier>",
        "IReadOnlyList<ResourceQualifier>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceQualifierVectorView"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "ResourceLoader",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "GetForCurrentView"
        },
        {
          "IsStatic": true,
          "ReturnType": "ResourceLoader",
          "Name": "GetForCurrentView"
        },
        {
          "IsStatic": true,
          "ReturnType": "ResourceLoader",
          "Name": "GetForViewIndependentUse"
        },
        {
          "IsStatic": true,
          "ReturnType": "ResourceLoader",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "GetForViewIndependentUse"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "resource",
              "Type": "String"
            }
          ],
          "Name": "GetString"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "GetStringForReference"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "GetStringForUri"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.ResourceLoader"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "AqsFilter"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Enabled"
        },
        {
          "Type": "IList<StorageFolder>",
          "IsGet": true,
          "Name": "Locations"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "PropertiesToMatch"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Search.LocalContentSuggestionSettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "queryTextAlternatives",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "queryTextCompositionStart",
              "Type": "UInt32"
            },
            {
              "Name": "queryTextCompositionLength",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "QueryTextAlternatives"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "QueryTextCompositionLength"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "QueryTextCompositionStart"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Search.SearchQueryLinguisticDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ],
          "Name": "AppendQuerySuggestion"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "suggestions",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "AppendQuerySuggestions"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            },
            {
              "Name": "detailText",
              "Type": "String"
            },
            {
              "Name": "tag",
              "Type": "String"
            },
            {
              "Name": "image",
              "Type": "IRandomAccessStreamReference"
            },
            {
              "Name": "imageAlternateText",
              "Type": "String"
            }
          ],
          "Name": "AppendResultSuggestion"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "label",
              "Type": "String"
            }
          ],
          "Name": "AppendSearchSeparator"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Search.SearchSuggestionCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsCanceled"
        },
        {
          "Type": "SearchSuggestionCollection",
          "IsGet": true,
          "Name": "SearchSuggestionCollection"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "SearchSuggestionsRequestDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Search.SearchSuggestionsRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Search.SearchSuggestionsRequestDeferral"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AppId"
        },
        {
          "Type": "LicenseInformation",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LicenseInformation"
        },
        {
          "Type": "Uri",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LinkUri"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Name": "GetAppReceiptAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "productId",
              "Type": "String"
            }
          ],
          "Name": "GetProductReceiptAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<UnfulfilledConsumable>>",
          "Name": "GetUnfulfilledConsumablesAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ListingInformation>",
          "Name": "LoadListingInformationAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ListingInformation>",
          "Parameters": [
            {
              "Name": "keywords",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "LoadListingInformationByKeywordsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ListingInformation>",
          "Parameters": [
            {
              "Name": "productIds",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "LoadListingInformationByProductIdsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<FulfillmentResult>",
          "Parameters": [
            {
              "Name": "productId",
              "Type": "String"
            },
            {
              "Name": "transactionId",
              "Type": "Guid"
            }
          ],
          "Name": "ReportConsumableFulfillmentAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "productId",
              "Type": "String"
            }
          ],
          "Name": "ReportProductFulfillment"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "includeReceipt",
              "Type": "Boolean"
            }
          ],
          "Name": "RequestAppPurchaseAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "productId",
              "Type": "String"
            },
            {
              "Name": "includeReceipt",
              "Type": "Boolean"
            }
          ],
          "Name": "RequestProductPurchaseAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PurchaseResults>",
          "Parameters": [
            {
              "Name": "productId",
              "Type": "String"
            }
          ],
          "Name": "RequestProductPurchaseAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PurchaseResults>",
          "Parameters": [
            {
              "Name": "productId",
              "Type": "String"
            },
            {
              "Name": "offerId",
              "Type": "String"
            },
            {
              "Name": "displayProperties",
              "Type": "ProductPurchaseDisplayProperties"
            }
          ],
          "Name": "RequestProductPurchaseAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Store.CurrentApp"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AppId"
        },
        {
          "Type": "LicenseInformation",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LicenseInformation"
        },
        {
          "Type": "Uri",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LinkUri"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Name": "GetAppReceiptAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "productId",
              "Type": "String"
            }
          ],
          "Name": "GetProductReceiptAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<UnfulfilledConsumable>>",
          "Name": "GetUnfulfilledConsumablesAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ListingInformation>",
          "Name": "LoadListingInformationAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ListingInformation>",
          "Parameters": [
            {
              "Name": "keywords",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "LoadListingInformationByKeywordsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ListingInformation>",
          "Parameters": [
            {
              "Name": "productIds",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "LoadListingInformationByProductIdsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "simulatorSettingsFile",
              "Type": "StorageFile"
            }
          ],
          "Name": "ReloadSimulatorAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<FulfillmentResult>",
          "Parameters": [
            {
              "Name": "productId",
              "Type": "String"
            },
            {
              "Name": "transactionId",
              "Type": "Guid"
            }
          ],
          "Name": "ReportConsumableFulfillmentAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "includeReceipt",
              "Type": "Boolean"
            }
          ],
          "Name": "RequestAppPurchaseAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "productId",
              "Type": "String"
            },
            {
              "Name": "includeReceipt",
              "Type": "Boolean"
            }
          ],
          "Name": "RequestProductPurchaseAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PurchaseResults>",
          "Parameters": [
            {
              "Name": "productId",
              "Type": "String"
            }
          ],
          "Name": "RequestProductPurchaseAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PurchaseResults>",
          "Parameters": [
            {
              "Name": "productId",
              "Type": "String"
            },
            {
              "Name": "offerId",
              "Type": "String"
            },
            {
              "Name": "displayProperties",
              "Type": "ProductPurchaseDisplayProperties"
            }
          ],
          "Name": "RequestProductPurchaseAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Store.CurrentAppSimulator"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "ExpirationDate"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsActive"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsTrial"
        },
        {
          "Type": "IReadOnlyDictionary<String,ProductLicense>",
          "IsGet": true,
          "Name": "ProductLicenses"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "LicenseChangedEventHandler",
          "Name": "LicenseChanged"
        }
      ],
      "Name": "Windows.ApplicationModel.Store.LicenseInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "AgeRating"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "CurrentMarket"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Description"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "FormattedPrice"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "IReadOnlyDictionary<String,ProductListing>",
          "IsGet": true,
          "Name": "ProductListings"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Store.ListingInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "ExpirationDate"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsActive"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsConsumable"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ProductId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Store.ProductLicense"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Description"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "FormattedPrice"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "ImageUri"
        },
        {
          "Type": "IEnumerable<String>",
          "IsGet": true,
          "Name": "Keywords"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ProductId"
        },
        {
          "Type": "ProductType",
          "IsGet": true,
          "Name": "ProductType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Tag"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Store.ProductListing"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Description"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "Image"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Name"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Store.ProductPurchaseDisplayProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "OfferId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ReceiptXml"
        },
        {
          "Type": "ProductPurchaseStatus",
          "IsGet": true,
          "Name": "Status"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "TransactionId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Store.PurchaseResults"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "OfferId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ProductId"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "TransactionId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Store.UnfulfilledConsumable"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISuspendingDeferral"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.SuspendingDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISuspendingEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SuspendingOperation",
          "IsGet": true,
          "Name": "SuspendingOperation"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.SuspendingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISuspendingOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Deadline"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "SuspendingDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.SuspendingOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "streamToBarcodeImage",
              "Type": "IRandomAccessStreamReference"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "symbology",
              "Type": "WalletBarcodeSymbology"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "WalletBarcodeSymbology",
          "IsGet": true,
          "Name": "Symbology"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStreamReference>",
          "Name": "GetImageAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Wallet.WalletBarcode"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "kind",
              "Type": "WalletItemKind"
            },
            {
              "Name": "displayName",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "WalletBarcode",
          "IsGet": true,
          "IsSet": true,
          "Name": "Barcode"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true,
          "Name": "BodyBackgroundImage"
        },
        {
          "Type": "Color",
          "IsGet": true,
          "IsSet": true,
          "Name": "BodyColor"
        },
        {
          "Type": "Color",
          "IsGet": true,
          "IsSet": true,
          "Name": "BodyFontColor"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayMessage"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "IDictionary<String,WalletItemCustomProperty>",
          "IsGet": true,
          "Name": "DisplayProperties"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true,
          "Name": "ExpirationDate"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true,
          "Name": "HeaderBackgroundImage"
        },
        {
          "Type": "Color",
          "IsGet": true,
          "IsSet": true,
          "Name": "HeaderColor"
        },
        {
          "Type": "Color",
          "IsGet": true,
          "IsSet": true,
          "Name": "HeaderFontColor"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsAcknowledged"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsDisplayMessageLaunchable"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsMoreTransactionHistoryLaunchable"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "IssuerDisplayName"
        },
        {
          "Type": "WalletItemKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true,
          "Name": "LastUpdated"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true,
          "Name": "Logo159x159"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true,
          "Name": "Logo336x336"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true,
          "Name": "Logo99x99"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true,
          "Name": "LogoImage"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "LogoText"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true,
          "Name": "PromotionalImage"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true,
          "Name": "RelevantDate"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "RelevantDateDisplayMessage"
        },
        {
          "Type": "IDictionary<String,WalletRelevantLocation>",
          "IsGet": true,
          "Name": "RelevantLocations"
        },
        {
          "Type": "IDictionary<String,WalletTransaction>",
          "IsGet": true,
          "Name": "TransactionHistory"
        },
        {
          "Type": "IDictionary<String,WalletVerb>",
          "IsGet": true,
          "Name": "Verbs"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Wallet.WalletItem"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AutoDetectLinks"
        },
        {
          "Type": "WalletDetailViewPosition",
          "IsGet": true,
          "IsSet": true,
          "Name": "DetailViewPosition"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Name"
        },
        {
          "Type": "WalletSummaryViewPosition",
          "IsGet": true,
          "IsSet": true,
          "Name": "SummaryViewPosition"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Wallet.WalletItemCustomProperty"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            },
            {
              "Name": "item",
              "Type": "WalletItem"
            }
          ],
          "Name": "AddAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "ClearAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ],
          "Name": "DeleteAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<WalletItem>>",
          "Name": "GetItemsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<WalletItem>>",
          "Parameters": [
            {
              "Name": "kind",
              "Type": "WalletItemKind"
            }
          ],
          "Name": "GetItemsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<WalletItem>",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ],
          "Name": "GetWalletItemAsync"
        },
        {
          "ReturnType": "IAsyncOperation<WalletItem>",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IRandomAccessStreamReference"
            }
          ],
          "Name": "ImportItemAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "ShowAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ],
          "Name": "ShowAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "item",
              "Type": "WalletItem"
            }
          ],
          "Name": "UpdateAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Wallet.WalletItemStore"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<WalletItemStore>",
          "Name": "RequestStoreAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Wallet.WalletManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayMessage"
        },
        {
          "Type": "BasicGeoposition",
          "IsGet": true,
          "IsSet": true,
          "Name": "Position"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Wallet.WalletRelevantLocation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Description"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayAmount"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayLocation"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IgnoreTimeOfDay"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsLaunchable"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true,
          "Name": "TransactionDate"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Wallet.WalletTransaction"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Name"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Wallet.WalletVerb"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "html",
              "Type": "String"
            }
          ],
          "Name": "ConvertToText"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Html.HtmlUtilities"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<IJsonValue>",
        "IEnumerable",
        "IEnumerable<IJsonValue>",
        "IJsonValue",
        "IList<IJsonValue>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        },
        {
          "Type": "JsonValueType",
          "IsGet": true,
          "Name": "ValueType"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "JsonArray",
          "Name": "GetArray"
        },
        {
          "ReturnType": "JsonArray",
          "Parameters": [
            {
              "Name": "index",
              "Type": "UInt32"
            }
          ],
          "Name": "GetArrayAt"
        },
        {
          "ReturnType": "Boolean",
          "Name": "GetBoolean"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "index",
              "Type": "UInt32"
            }
          ],
          "Name": "GetBooleanAt"
        },
        {
          "ReturnType": "Double",
          "Name": "GetNumber"
        },
        {
          "ReturnType": "Double",
          "Parameters": [
            {
              "Name": "index",
              "Type": "UInt32"
            }
          ],
          "Name": "GetNumberAt"
        },
        {
          "ReturnType": "JsonObject",
          "Name": "GetObject"
        },
        {
          "ReturnType": "JsonObject",
          "Parameters": [
            {
              "Name": "index",
              "Type": "UInt32"
            }
          ],
          "Name": "GetObjectAt"
        },
        {
          "ReturnType": "String",
          "Name": "GetString"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "index",
              "Type": "UInt32"
            }
          ],
          "Name": "GetStringAt"
        },
        {
          "IsStatic": true,
          "ReturnType": "JsonArray",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "Parse"
        },
        {
          "ReturnType": "String",
          "Name": "Stringify"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "result",
              "Type": "JsonArray&",
              "Out": true
            }
          ],
          "Name": "TryParse"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Json.JsonArray"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "JsonErrorStatus",
          "Parameters": [
            {
              "Name": "hresult",
              "Type": "Int32"
            }
          ],
          "Name": "GetJsonStatus"
        },
        {
          "IsStatic": true,
          "ReturnType": "JsonErrorStatus",
          "Parameters": [
            {
              "Name": "hresult",
              "Type": "Int32"
            }
          ],
          "Name": "GetStatus"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Json.JsonError"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,IJsonValue>>",
        "IDictionary<String,IJsonValue>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,IJsonValue>>",
        "IJsonValue",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        },
        {
          "Type": "JsonValueType",
          "IsGet": true,
          "Name": "ValueType"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "JsonArray",
          "Name": "GetArray"
        },
        {
          "ReturnType": "Boolean",
          "Name": "GetBoolean"
        },
        {
          "ReturnType": "JsonArray",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "GetNamedArray"
        },
        {
          "ReturnType": "JsonArray",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "defaultValue",
              "Type": "JsonArray"
            }
          ],
          "Name": "GetNamedArray"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "GetNamedBoolean"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "defaultValue",
              "Type": "Boolean"
            }
          ],
          "Name": "GetNamedBoolean"
        },
        {
          "ReturnType": "Double",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "GetNamedNumber"
        },
        {
          "ReturnType": "Double",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "defaultValue",
              "Type": "Double"
            }
          ],
          "Name": "GetNamedNumber"
        },
        {
          "ReturnType": "JsonObject",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "GetNamedObject"
        },
        {
          "ReturnType": "JsonObject",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "defaultValue",
              "Type": "JsonObject"
            }
          ],
          "Name": "GetNamedObject"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "GetNamedString"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "defaultValue",
              "Type": "String"
            }
          ],
          "Name": "GetNamedString"
        },
        {
          "ReturnType": "JsonValue",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "GetNamedValue"
        },
        {
          "ReturnType": "JsonValue",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "defaultValue",
              "Type": "JsonValue"
            }
          ],
          "Name": "GetNamedValue"
        },
        {
          "ReturnType": "Double",
          "Name": "GetNumber"
        },
        {
          "ReturnType": "JsonObject",
          "Name": "GetObject"
        },
        {
          "ReturnType": "String",
          "Name": "GetString"
        },
        {
          "IsStatic": true,
          "ReturnType": "JsonObject",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "Parse"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "IJsonValue"
            }
          ],
          "Name": "SetNamedValue"
        },
        {
          "ReturnType": "String",
          "Name": "Stringify"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "result",
              "Type": "JsonObject&",
              "Out": true
            }
          ],
          "Name": "TryParse"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Json.JsonObject"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IJsonValue",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "JsonValueType",
          "IsGet": true,
          "Name": "ValueType"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "JsonValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "Boolean"
            }
          ],
          "Name": "CreateBooleanValue"
        },
        {
          "IsStatic": true,
          "ReturnType": "JsonValue",
          "Name": "CreateNullValue"
        },
        {
          "IsStatic": true,
          "ReturnType": "JsonValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "Double"
            }
          ],
          "Name": "CreateNumberValue"
        },
        {
          "IsStatic": true,
          "ReturnType": "JsonValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "CreateStringValue"
        },
        {
          "ReturnType": "JsonArray",
          "Name": "GetArray"
        },
        {
          "ReturnType": "Boolean",
          "Name": "GetBoolean"
        },
        {
          "ReturnType": "Double",
          "Name": "GetNumber"
        },
        {
          "ReturnType": "JsonObject",
          "Name": "GetObject"
        },
        {
          "ReturnType": "String",
          "Name": "GetString"
        },
        {
          "IsStatic": true,
          "ReturnType": "JsonValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "Parse"
        },
        {
          "ReturnType": "String",
          "Name": "Stringify"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "result",
              "Type": "JsonValue&",
              "Out": true
            }
          ],
          "Name": "TryParse"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Json.JsonValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AlternateText"
        },
        {
          "Type": "AlternateNormalizationFormat",
          "IsGet": true,
          "Name": "NormalizationFormat"
        },
        {
          "Type": "TextSegment",
          "IsGet": true,
          "Name": "SourceTextSegment"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Data.Text.AlternateWordForm"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TextSegment",
          "IsGet": true,
          "Name": "SourceTextSegment"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Text"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Data.Text.SelectableWordSegment"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "language",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ResolvedLanguage"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "SelectableWordSegment",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            },
            {
              "Name": "startIndex",
              "Type": "UInt32"
            }
          ],
          "Name": "GetTokenAt"
        },
        {
          "ReturnType": "IReadOnlyList<SelectableWordSegment>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ],
          "Name": "GetTokens"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            },
            {
              "Name": "startIndex",
              "Type": "UInt32"
            },
            {
              "Name": "handler",
              "Type": "SelectableWordSegmentsTokenizingHandler"
            }
          ],
          "Name": "Tokenize"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Text.SelectableWordsSegmenter"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "aqsFilter",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "aqsFilter",
              "Type": "String"
            },
            {
              "Name": "filterLanguage",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IReadOnlyList<TextSegment>",
          "Parameters": [
            {
              "Name": "content",
              "Type": "String"
            }
          ],
          "Name": "Find"
        },
        {
          "ReturnType": "IReadOnlyList<TextSegment>",
          "Parameters": [
            {
              "Name": "propertyContent",
              "Type": "String"
            },
            {
              "Name": "propertyName",
              "Type": "String"
            }
          ],
          "Name": "FindInProperty"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Text.SemanticTextQuery"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "languageTag",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ResolvedLanguage"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<String>>",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "GetCandidatesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<String>>",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "maxCandidates",
              "Type": "UInt32"
            }
          ],
          "Name": "GetCandidatesAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Text.TextConversionGenerator"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "languageTag",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ResolvedLanguage"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<String>>",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "GetCandidatesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<String>>",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "maxCandidates",
              "Type": "UInt32"
            }
          ],
          "Name": "GetCandidatesAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Text.TextPredictionGenerator"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "languageTag",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ResolvedLanguage"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "ConvertBackAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Text.TextReverseConversionGenerator"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "UInt32",
          "Parameters": [
            {
              "Name": "highSurrogate",
              "Type": "UInt32"
            },
            {
              "Name": "lowSurrogate",
              "Type": "UInt32"
            }
          ],
          "Name": "GetCodepointFromSurrogatePair"
        },
        {
          "IsStatic": true,
          "ReturnType": "UnicodeGeneralCategory",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ],
          "Name": "GetGeneralCategory"
        },
        {
          "IsStatic": true,
          "ReturnType": "UnicodeNumericType",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ],
          "Name": "GetNumericType"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            },
            {
              "Name": "highSurrogate",
              "Type": "Char&",
              "Out": true
            },
            {
              "Name": "lowSurrogate",
              "Type": "Char&",
              "Out": true
            }
          ],
          "Name": "GetSurrogatePairFromCodepoint"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ],
          "Name": "IsAlphabetic"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ],
          "Name": "IsCased"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ],
          "Name": "IsGraphemeBase"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ],
          "Name": "IsGraphemeExtend"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ],
          "Name": "IsHighSurrogate"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ],
          "Name": "IsIdContinue"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ],
          "Name": "IsIdStart"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ],
          "Name": "IsLowercase"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ],
          "Name": "IsLowSurrogate"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ],
          "Name": "IsNoncharacter"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ],
          "Name": "IsSupplementary"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ],
          "Name": "IsUppercase"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "codepoint",
              "Type": "UInt32"
            }
          ],
          "Name": "IsWhitespace"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Text.UnicodeCharacters"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<AlternateWordForm>",
          "IsGet": true,
          "Name": "AlternateForms"
        },
        {
          "Type": "TextSegment",
          "IsGet": true,
          "Name": "SourceTextSegment"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Text"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Data.Text.WordSegment"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "language",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ResolvedLanguage"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "WordSegment",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            },
            {
              "Name": "startIndex",
              "Type": "UInt32"
            }
          ],
          "Name": "GetTokenAt"
        },
        {
          "ReturnType": "IReadOnlyList<WordSegment>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ],
          "Name": "GetTokens"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            },
            {
              "Name": "startIndex",
              "Type": "UInt32"
            },
            {
              "Name": "handler",
              "Type": "WordSegmentsTokenizingHandler"
            }
          ],
          "Name": "Tokenize"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Text.WordsSegmenter"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "XmlNamedNodeMap",
          "IsGet": true,
          "Name": "Attributes"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "FirstChild"
        },
        {
          "Type": "XmlNodeList",
          "IsGet": true,
          "Name": "ChildNodes"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "InnerText"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "LastChild"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "LocalName"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "NamespaceUri"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "NextSibling"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NodeName"
        },
        {
          "Type": "NodeType",
          "IsGet": true,
          "Name": "NodeType"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "NotationName"
        },
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "Name": "OwnerDocument"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "ParentNode"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Prefix"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "PreviousSibling"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "PublicId"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "SystemId"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "AppendChild"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ],
          "Name": "CloneNode"
        },
        {
          "ReturnType": "String",
          "Name": "GetXml"
        },
        {
          "ReturnType": "Boolean",
          "Name": "HasChildNodes"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "InsertBefore"
        },
        {
          "ReturnType": "Void",
          "Name": "Normalize"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ],
          "Name": "RemoveChild"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "ReplaceChild"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectNodes"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectNodesNS"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectSingleNode"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectSingleNodeNS"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.DtdEntity"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "XmlNamedNodeMap",
          "IsGet": true,
          "Name": "Attributes"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "FirstChild"
        },
        {
          "Type": "XmlNodeList",
          "IsGet": true,
          "Name": "ChildNodes"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "InnerText"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "LastChild"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "LocalName"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "NamespaceUri"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "NextSibling"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NodeName"
        },
        {
          "Type": "NodeType",
          "IsGet": true,
          "Name": "NodeType"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        },
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "Name": "OwnerDocument"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "ParentNode"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Prefix"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "PreviousSibling"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "PublicId"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "SystemId"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "AppendChild"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ],
          "Name": "CloneNode"
        },
        {
          "ReturnType": "String",
          "Name": "GetXml"
        },
        {
          "ReturnType": "Boolean",
          "Name": "HasChildNodes"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "InsertBefore"
        },
        {
          "ReturnType": "Void",
          "Name": "Normalize"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ],
          "Name": "RemoveChild"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "ReplaceChild"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectNodes"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectNodesNS"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectSingleNode"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectSingleNodeNS"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.DtdNotation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "XmlNamedNodeMap",
          "IsGet": true,
          "Name": "Attributes"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "FirstChild"
        },
        {
          "Type": "XmlNodeList",
          "IsGet": true,
          "Name": "ChildNodes"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "InnerText"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "LastChild"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "LocalName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "NamespaceUri"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "NextSibling"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NodeName"
        },
        {
          "Type": "NodeType",
          "IsGet": true,
          "Name": "NodeType"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        },
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "Name": "OwnerDocument"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "ParentNode"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Prefix"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "PreviousSibling"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Specified"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "AppendChild"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ],
          "Name": "CloneNode"
        },
        {
          "ReturnType": "String",
          "Name": "GetXml"
        },
        {
          "ReturnType": "Boolean",
          "Name": "HasChildNodes"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "InsertBefore"
        },
        {
          "ReturnType": "Void",
          "Name": "Normalize"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ],
          "Name": "RemoveChild"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "ReplaceChild"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectNodes"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectNodesNS"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectSingleNode"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectSingleNodeNS"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlAttribute"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IXmlCharacterData",
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer",
        "IXmlText"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "XmlNamedNodeMap",
          "IsGet": true,
          "Name": "Attributes"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Data"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "FirstChild"
        },
        {
          "Type": "XmlNodeList",
          "IsGet": true,
          "Name": "ChildNodes"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "InnerText"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "LastChild"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Length"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "LocalName"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "NamespaceUri"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "NextSibling"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NodeName"
        },
        {
          "Type": "NodeType",
          "IsGet": true,
          "Name": "NodeType"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        },
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "Name": "OwnerDocument"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "ParentNode"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Prefix"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "PreviousSibling"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "data",
              "Type": "String"
            }
          ],
          "Name": "AppendData"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "AppendChild"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ],
          "Name": "CloneNode"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ],
          "Name": "DeleteData"
        },
        {
          "ReturnType": "String",
          "Name": "GetXml"
        },
        {
          "ReturnType": "Boolean",
          "Name": "HasChildNodes"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "InsertBefore"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "data",
              "Type": "String"
            }
          ],
          "Name": "InsertData"
        },
        {
          "ReturnType": "Void",
          "Name": "Normalize"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ],
          "Name": "RemoveChild"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "data",
              "Type": "String"
            }
          ],
          "Name": "ReplaceData"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "ReplaceChild"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectNodes"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectNodesNS"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectSingleNode"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectSingleNodeNS"
        },
        {
          "ReturnType": "IXmlText",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            }
          ],
          "Name": "SplitText"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ],
          "Name": "SubstringData"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlCDataSection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IXmlCharacterData",
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "XmlNamedNodeMap",
          "IsGet": true,
          "Name": "Attributes"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Data"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "FirstChild"
        },
        {
          "Type": "XmlNodeList",
          "IsGet": true,
          "Name": "ChildNodes"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "InnerText"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "LastChild"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Length"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "LocalName"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "NamespaceUri"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "NextSibling"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NodeName"
        },
        {
          "Type": "NodeType",
          "IsGet": true,
          "Name": "NodeType"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        },
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "Name": "OwnerDocument"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "ParentNode"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Prefix"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "PreviousSibling"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "data",
              "Type": "String"
            }
          ],
          "Name": "AppendData"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "AppendChild"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ],
          "Name": "CloneNode"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ],
          "Name": "DeleteData"
        },
        {
          "ReturnType": "String",
          "Name": "GetXml"
        },
        {
          "ReturnType": "Boolean",
          "Name": "HasChildNodes"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "InsertBefore"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "data",
              "Type": "String"
            }
          ],
          "Name": "InsertData"
        },
        {
          "ReturnType": "Void",
          "Name": "Normalize"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ],
          "Name": "RemoveChild"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "data",
              "Type": "String"
            }
          ],
          "Name": "ReplaceData"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "ReplaceChild"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectNodes"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectNodesNS"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectSingleNode"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectSingleNodeNS"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ],
          "Name": "SubstringData"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlComment"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "XmlNamedNodeMap",
          "IsGet": true,
          "Name": "Attributes"
        },
        {
          "Type": "XmlDocumentType",
          "IsGet": true,
          "Name": "Doctype"
        },
        {
          "Type": "XmlElement",
          "IsGet": true,
          "Name": "DocumentElement"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DocumentUri"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "FirstChild"
        },
        {
          "Type": "XmlNodeList",
          "IsGet": true,
          "Name": "ChildNodes"
        },
        {
          "Type": "XmlDomImplementation",
          "IsGet": true,
          "Name": "Implementation"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "InnerText"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "LastChild"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "LocalName"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "NamespaceUri"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "NextSibling"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NodeName"
        },
        {
          "Type": "NodeType",
          "IsGet": true,
          "Name": "NodeType"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        },
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "Name": "OwnerDocument"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "ParentNode"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Prefix"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "PreviousSibling"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "AppendChild"
        },
        {
          "ReturnType": "XmlDocument",
          "Name": "CloneDocument"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ],
          "Name": "CloneNode"
        },
        {
          "ReturnType": "XmlAttribute",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "CreateAttribute"
        },
        {
          "ReturnType": "XmlAttribute",
          "Parameters": [
            {
              "Name": "namespaceUri",
              "Type": "Object"
            },
            {
              "Name": "qualifiedName",
              "Type": "String"
            }
          ],
          "Name": "CreateAttributeNS"
        },
        {
          "ReturnType": "XmlCDataSection",
          "Parameters": [
            {
              "Name": "data",
              "Type": "String"
            }
          ],
          "Name": "CreateCDataSection"
        },
        {
          "ReturnType": "XmlComment",
          "Parameters": [
            {
              "Name": "data",
              "Type": "String"
            }
          ],
          "Name": "CreateComment"
        },
        {
          "ReturnType": "XmlDocumentFragment",
          "Name": "CreateDocumentFragment"
        },
        {
          "ReturnType": "XmlElement",
          "Parameters": [
            {
              "Name": "tagName",
              "Type": "String"
            }
          ],
          "Name": "CreateElement"
        },
        {
          "ReturnType": "XmlElement",
          "Parameters": [
            {
              "Name": "namespaceUri",
              "Type": "Object"
            },
            {
              "Name": "qualifiedName",
              "Type": "String"
            }
          ],
          "Name": "CreateElementNS"
        },
        {
          "ReturnType": "XmlEntityReference",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "CreateEntityReference"
        },
        {
          "ReturnType": "XmlProcessingInstruction",
          "Parameters": [
            {
              "Name": "target",
              "Type": "String"
            },
            {
              "Name": "data",
              "Type": "String"
            }
          ],
          "Name": "CreateProcessingInstruction"
        },
        {
          "ReturnType": "XmlText",
          "Parameters": [
            {
              "Name": "data",
              "Type": "String"
            }
          ],
          "Name": "CreateTextNode"
        },
        {
          "ReturnType": "XmlElement",
          "Parameters": [
            {
              "Name": "elementId",
              "Type": "String"
            }
          ],
          "Name": "GetElementById"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "tagName",
              "Type": "String"
            }
          ],
          "Name": "GetElementsByTagName"
        },
        {
          "ReturnType": "String",
          "Name": "GetXml"
        },
        {
          "ReturnType": "Boolean",
          "Name": "HasChildNodes"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "node",
              "Type": "IXmlNode"
            },
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ],
          "Name": "ImportNode"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "InsertBefore"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<XmlDocument>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ],
          "Name": "LoadFromFileAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<XmlDocument>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "loadSettings",
              "Type": "XmlLoadSettings"
            }
          ],
          "Name": "LoadFromFileAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<XmlDocument>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "LoadFromUriAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<XmlDocument>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "loadSettings",
              "Type": "XmlLoadSettings"
            }
          ],
          "Name": "LoadFromUriAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "xml",
              "Type": "String"
            }
          ],
          "Name": "LoadXml"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "xml",
              "Type": "String"
            },
            {
              "Name": "loadSettings",
              "Type": "XmlLoadSettings"
            }
          ],
          "Name": "LoadXml"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "LoadXmlFromBuffer"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "loadSettings",
              "Type": "XmlLoadSettings"
            }
          ],
          "Name": "LoadXmlFromBuffer"
        },
        {
          "ReturnType": "Void",
          "Name": "Normalize"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ],
          "Name": "RemoveChild"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "ReplaceChild"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ],
          "Name": "SaveToFileAsync"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectNodes"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectNodesNS"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectSingleNode"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectSingleNodeNS"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlDocument"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "XmlNamedNodeMap",
          "IsGet": true,
          "Name": "Attributes"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "FirstChild"
        },
        {
          "Type": "XmlNodeList",
          "IsGet": true,
          "Name": "ChildNodes"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "InnerText"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "LastChild"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "LocalName"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "NamespaceUri"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "NextSibling"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NodeName"
        },
        {
          "Type": "NodeType",
          "IsGet": true,
          "Name": "NodeType"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        },
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "Name": "OwnerDocument"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "ParentNode"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Prefix"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "PreviousSibling"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "AppendChild"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ],
          "Name": "CloneNode"
        },
        {
          "ReturnType": "String",
          "Name": "GetXml"
        },
        {
          "ReturnType": "Boolean",
          "Name": "HasChildNodes"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "InsertBefore"
        },
        {
          "ReturnType": "Void",
          "Name": "Normalize"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ],
          "Name": "RemoveChild"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "ReplaceChild"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectNodes"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectNodesNS"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectSingleNode"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectSingleNodeNS"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlDocumentFragment"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "XmlNamedNodeMap",
          "IsGet": true,
          "Name": "Attributes"
        },
        {
          "Type": "XmlNamedNodeMap",
          "IsGet": true,
          "Name": "Entities"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "FirstChild"
        },
        {
          "Type": "XmlNodeList",
          "IsGet": true,
          "Name": "ChildNodes"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "InnerText"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "LastChild"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "LocalName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "NamespaceUri"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "NextSibling"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NodeName"
        },
        {
          "Type": "NodeType",
          "IsGet": true,
          "Name": "NodeType"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        },
        {
          "Type": "XmlNamedNodeMap",
          "IsGet": true,
          "Name": "Notations"
        },
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "Name": "OwnerDocument"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "ParentNode"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Prefix"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "PreviousSibling"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "AppendChild"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ],
          "Name": "CloneNode"
        },
        {
          "ReturnType": "String",
          "Name": "GetXml"
        },
        {
          "ReturnType": "Boolean",
          "Name": "HasChildNodes"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "InsertBefore"
        },
        {
          "ReturnType": "Void",
          "Name": "Normalize"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ],
          "Name": "RemoveChild"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "ReplaceChild"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectNodes"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectNodesNS"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectSingleNode"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectSingleNodeNS"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlDocumentType"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "feature",
              "Type": "String"
            },
            {
              "Name": "version",
              "Type": "Object"
            }
          ],
          "Name": "HasFeature"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlDomImplementation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "XmlNamedNodeMap",
          "IsGet": true,
          "Name": "Attributes"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "FirstChild"
        },
        {
          "Type": "XmlNodeList",
          "IsGet": true,
          "Name": "ChildNodes"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "InnerText"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "LastChild"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "LocalName"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "NamespaceUri"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "NextSibling"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NodeName"
        },
        {
          "Type": "NodeType",
          "IsGet": true,
          "Name": "NodeType"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        },
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "Name": "OwnerDocument"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "ParentNode"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Prefix"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "PreviousSibling"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "TagName"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "AppendChild"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ],
          "Name": "CloneNode"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "attributeName",
              "Type": "String"
            }
          ],
          "Name": "GetAttribute"
        },
        {
          "ReturnType": "XmlAttribute",
          "Parameters": [
            {
              "Name": "attributeName",
              "Type": "String"
            }
          ],
          "Name": "GetAttributeNode"
        },
        {
          "ReturnType": "XmlAttribute",
          "Parameters": [
            {
              "Name": "namespaceUri",
              "Type": "Object"
            },
            {
              "Name": "localName",
              "Type": "String"
            }
          ],
          "Name": "GetAttributeNodeNS"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "namespaceUri",
              "Type": "Object"
            },
            {
              "Name": "localName",
              "Type": "String"
            }
          ],
          "Name": "GetAttributeNS"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "tagName",
              "Type": "String"
            }
          ],
          "Name": "GetElementsByTagName"
        },
        {
          "ReturnType": "String",
          "Name": "GetXml"
        },
        {
          "ReturnType": "Boolean",
          "Name": "HasChildNodes"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "InsertBefore"
        },
        {
          "ReturnType": "Void",
          "Name": "Normalize"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "attributeName",
              "Type": "String"
            }
          ],
          "Name": "RemoveAttribute"
        },
        {
          "ReturnType": "XmlAttribute",
          "Parameters": [
            {
              "Name": "attributeNode",
              "Type": "XmlAttribute"
            }
          ],
          "Name": "RemoveAttributeNode"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "namespaceUri",
              "Type": "Object"
            },
            {
              "Name": "localName",
              "Type": "String"
            }
          ],
          "Name": "RemoveAttributeNS"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ],
          "Name": "RemoveChild"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "ReplaceChild"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectNodes"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectNodesNS"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectSingleNode"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectSingleNodeNS"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "attributeName",
              "Type": "String"
            },
            {
              "Name": "attributeValue",
              "Type": "String"
            }
          ],
          "Name": "SetAttribute"
        },
        {
          "ReturnType": "XmlAttribute",
          "Parameters": [
            {
              "Name": "newAttribute",
              "Type": "XmlAttribute"
            }
          ],
          "Name": "SetAttributeNode"
        },
        {
          "ReturnType": "XmlAttribute",
          "Parameters": [
            {
              "Name": "newAttribute",
              "Type": "XmlAttribute"
            }
          ],
          "Name": "SetAttributeNodeNS"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "namespaceUri",
              "Type": "Object"
            },
            {
              "Name": "qualifiedName",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "SetAttributeNS"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlElement"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "XmlNamedNodeMap",
          "IsGet": true,
          "Name": "Attributes"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "FirstChild"
        },
        {
          "Type": "XmlNodeList",
          "IsGet": true,
          "Name": "ChildNodes"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "InnerText"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "LastChild"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "LocalName"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "NamespaceUri"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "NextSibling"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NodeName"
        },
        {
          "Type": "NodeType",
          "IsGet": true,
          "Name": "NodeType"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        },
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "Name": "OwnerDocument"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "ParentNode"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Prefix"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "PreviousSibling"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "AppendChild"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ],
          "Name": "CloneNode"
        },
        {
          "ReturnType": "String",
          "Name": "GetXml"
        },
        {
          "ReturnType": "Boolean",
          "Name": "HasChildNodes"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "InsertBefore"
        },
        {
          "ReturnType": "Void",
          "Name": "Normalize"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ],
          "Name": "RemoveChild"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "ReplaceChild"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectNodes"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectNodesNS"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectSingleNode"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectSingleNodeNS"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlEntityReference"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "ElementContentWhiteSpace"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxElementDepth"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProhibitDtd"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "ResolveExternals"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "ValidateOnParse"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlLoadSettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<IXmlNode>",
        "IReadOnlyCollection<IXmlNode>",
        "IReadOnlyList<IXmlNode>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Length"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "GetNamedItem"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "namespaceUri",
              "Type": "Object"
            },
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "GetNamedItemNS"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "index",
              "Type": "UInt32"
            }
          ],
          "Name": "Item"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "RemoveNamedItem"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "namespaceUri",
              "Type": "Object"
            },
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "RemoveNamedItemNS"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "node",
              "Type": "IXmlNode"
            }
          ],
          "Name": "SetNamedItem"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "node",
              "Type": "IXmlNode"
            }
          ],
          "Name": "SetNamedItemNS"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlNamedNodeMap"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<IXmlNode>",
        "IReadOnlyCollection<IXmlNode>",
        "IReadOnlyList<IXmlNode>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Length"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "index",
              "Type": "UInt32"
            }
          ],
          "Name": "Item"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlNodeList"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "XmlNamedNodeMap",
          "IsGet": true,
          "Name": "Attributes"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Data"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "FirstChild"
        },
        {
          "Type": "XmlNodeList",
          "IsGet": true,
          "Name": "ChildNodes"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "InnerText"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "LastChild"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "LocalName"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "NamespaceUri"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "NextSibling"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NodeName"
        },
        {
          "Type": "NodeType",
          "IsGet": true,
          "Name": "NodeType"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        },
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "Name": "OwnerDocument"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "ParentNode"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Prefix"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "PreviousSibling"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Target"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "AppendChild"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ],
          "Name": "CloneNode"
        },
        {
          "ReturnType": "String",
          "Name": "GetXml"
        },
        {
          "ReturnType": "Boolean",
          "Name": "HasChildNodes"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "InsertBefore"
        },
        {
          "ReturnType": "Void",
          "Name": "Normalize"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ],
          "Name": "RemoveChild"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "ReplaceChild"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectNodes"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectNodesNS"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectSingleNode"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectSingleNodeNS"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlProcessingInstruction"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IXmlCharacterData",
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer",
        "IXmlText"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "XmlNamedNodeMap",
          "IsGet": true,
          "Name": "Attributes"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Data"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "FirstChild"
        },
        {
          "Type": "XmlNodeList",
          "IsGet": true,
          "Name": "ChildNodes"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "InnerText"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "LastChild"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Length"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "LocalName"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "NamespaceUri"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "NextSibling"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NodeName"
        },
        {
          "Type": "NodeType",
          "IsGet": true,
          "Name": "NodeType"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        },
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "Name": "OwnerDocument"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "ParentNode"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Prefix"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "PreviousSibling"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "data",
              "Type": "String"
            }
          ],
          "Name": "AppendData"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "AppendChild"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ],
          "Name": "CloneNode"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ],
          "Name": "DeleteData"
        },
        {
          "ReturnType": "String",
          "Name": "GetXml"
        },
        {
          "ReturnType": "Boolean",
          "Name": "HasChildNodes"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "InsertBefore"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "data",
              "Type": "String"
            }
          ],
          "Name": "InsertData"
        },
        {
          "ReturnType": "Void",
          "Name": "Normalize"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ],
          "Name": "RemoveChild"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "data",
              "Type": "String"
            }
          ],
          "Name": "ReplaceData"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "ReplaceChild"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectNodes"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectNodesNS"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectSingleNode"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectSingleNodeNS"
        },
        {
          "ReturnType": "IXmlText",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            }
          ],
          "Name": "SplitText"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ],
          "Name": "SubstringData"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.XmlText"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "document",
              "Type": "XmlDocument"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "inputNode",
              "Type": "IXmlNode"
            }
          ],
          "Name": "TransformToDocument"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "inputNode",
              "Type": "IXmlNode"
            }
          ],
          "Name": "TransformToString"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Xsl.XsltProcessor"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Arguments"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "ExpectedDuration"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Background.DeviceServicingDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Arguments"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Background.DeviceUseDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<BluetoothLEAdvertisementDataSection>",
          "IsGet": true,
          "Name": "DataSections"
        },
        {
          "Type": "Nullable<BluetoothLEAdvertisementFlags>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Flags"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "LocalName"
        },
        {
          "Type": "IList<BluetoothLEManufacturerData>",
          "IsGet": true,
          "Name": "ManufacturerData"
        },
        {
          "Type": "IList<Guid>",
          "IsGet": true,
          "Name": "ServiceUuids"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IReadOnlyList<BluetoothLEManufacturerData>",
          "Parameters": [
            {
              "Name": "companyId",
              "Type": "UInt16"
            }
          ],
          "Name": "GetManufacturerDataByCompanyId"
        },
        {
          "ReturnType": "IReadOnlyList<BluetoothLEAdvertisementDataSection>",
          "Parameters": [
            {
              "Name": "type",
              "Type": "Byte"
            }
          ],
          "Name": "GetSectionsByType"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisement"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "dataType",
              "Type": "Byte"
            },
            {
              "Name": "offset",
              "Type": "Int16"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IBuffer",
          "IsGet": true,
          "IsSet": true,
          "Name": "Data"
        },
        {
          "Type": "Byte",
          "IsGet": true,
          "IsSet": true,
          "Name": "DataType"
        },
        {
          "Type": "Int16",
          "IsGet": true,
          "IsSet": true,
          "Name": "Offset"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisementBytePattern"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "dataType",
              "Type": "Byte"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IBuffer",
          "IsGet": true,
          "IsSet": true,
          "Name": "Data"
        },
        {
          "Type": "Byte",
          "IsGet": true,
          "IsSet": true,
          "Name": "DataType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisementDataSection"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AdvertisingInterval"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Appearance"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CompleteLocalName"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CompleteService128BitUuids"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CompleteService16BitUuids"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CompleteService32BitUuids"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Flags"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IncompleteService128BitUuids"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IncompleteService16BitUuids"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IncompleteService32BitUuids"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ManufacturerSpecificData"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PublicTargetAddress"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RandomTargetAddress"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ServiceData128BitUuids"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ServiceData16BitUuids"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ServiceData32BitUuids"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ServiceSolicitation128BitUuids"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ServiceSolicitation16BitUuids"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ServiceSolicitation32BitUuids"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ShortenedLocalName"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SlaveConnectionIntervalRange"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TxPowerLevel"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisementDataTypes"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BluetoothLEAdvertisement",
          "IsGet": true,
          "IsSet": true,
          "Name": "Advertisement"
        },
        {
          "Type": "IList<BluetoothLEAdvertisementBytePattern>",
          "IsGet": true,
          "Name": "BytePatterns"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisementFilter"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "advertisement",
              "Type": "BluetoothLEAdvertisement"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "BluetoothLEAdvertisement",
          "IsGet": true,
          "Name": "Advertisement"
        },
        {
          "Type": "BluetoothLEAdvertisementPublisherStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Start"
        },
        {
          "ReturnType": "Void",
          "Name": "Stop"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<BluetoothLEAdvertisementPublisher,BluetoothLEAdvertisementPublisherStatusChangedEventArgs>",
          "Name": "StatusChanged"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisementPublisher"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BluetoothError",
          "IsGet": true,
          "Name": "Error"
        },
        {
          "Type": "BluetoothLEAdvertisementPublisherStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisementPublisherStatusChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BluetoothLEAdvertisement",
          "IsGet": true,
          "Name": "Advertisement"
        },
        {
          "Type": "BluetoothLEAdvertisementType",
          "IsGet": true,
          "Name": "AdvertisementType"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "BluetoothAddress"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "Int16",
          "IsGet": true,
          "Name": "RawSignalStrengthInDBm"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisementReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "advertisementFilter",
              "Type": "BluetoothLEAdvertisementFilter"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "BluetoothLEAdvertisementFilter",
          "IsGet": true,
          "IsSet": true,
          "Name": "AdvertisementFilter"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "MaxOutOfRangeTimeout"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "MaxSamplingInterval"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "MinOutOfRangeTimeout"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "MinSamplingInterval"
        },
        {
          "Type": "BluetoothLEScanningMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "ScanningMode"
        },
        {
          "Type": "BluetoothSignalStrengthFilter",
          "IsGet": true,
          "IsSet": true,
          "Name": "SignalStrengthFilter"
        },
        {
          "Type": "BluetoothLEAdvertisementWatcherStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Start"
        },
        {
          "ReturnType": "Void",
          "Name": "Stop"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<BluetoothLEAdvertisementWatcher,BluetoothLEAdvertisementReceivedEventArgs>",
          "Name": "Received"
        },
        {
          "Type": "TypedEventHandler<BluetoothLEAdvertisementWatcher,BluetoothLEAdvertisementWatcherStoppedEventArgs>",
          "Name": "Stopped"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisementWatcher"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BluetoothError",
          "IsGet": true,
          "Name": "Error"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisementWatcherStoppedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "companyId",
              "Type": "UInt16"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "UInt16",
          "IsGet": true,
          "IsSet": true,
          "Name": "CompanyId"
        },
        {
          "Type": "IBuffer",
          "IsGet": true,
          "IsSet": true,
          "Name": "Data"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.Advertisement.BluetoothLEManufacturerData"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BluetoothError",
          "IsGet": true,
          "Name": "Error"
        },
        {
          "Type": "BluetoothLEAdvertisementPublisherStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementPublisherTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<BluetoothLEAdvertisementReceivedEventArgs>",
          "IsGet": true,
          "Name": "Advertisements"
        },
        {
          "Type": "BluetoothError",
          "IsGet": true,
          "Name": "Error"
        },
        {
          "Type": "BluetoothSignalStrengthFilter",
          "IsGet": true,
          "Name": "SignalStrengthFilter"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementWatcherTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "GattCharacteristic",
          "IsGet": true,
          "Name": "Characteristic"
        },
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.Background.GattCharacteristicNotificationTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Incoming"
        },
        {
          "Type": "BluetoothDevice",
          "IsGet": true,
          "Name": "RemoteDevice"
        },
        {
          "Type": "StreamSocket",
          "IsGet": true,
          "Name": "Socket"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.Background.RfcommConnectionTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "RfcommServiceId",
          "IsGet": true,
          "IsSet": true,
          "Name": "LocalServiceId"
        },
        {
          "Type": "IBuffer",
          "IsGet": true,
          "IsSet": true,
          "Name": "SdpRecord"
        },
        {
          "Type": "BluetoothServiceCapabilities",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServiceCapabilities"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.Background.RfcommInboundConnectionInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "RfcommServiceId",
          "IsGet": true,
          "IsSet": true,
          "Name": "RemoteServiceId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.Background.RfcommOutboundConnectionInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BluetoothMajorClass",
          "IsGet": true,
          "Name": "MajorClass"
        },
        {
          "Type": "BluetoothMinorClass",
          "IsGet": true,
          "Name": "MinorClass"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "RawValue"
        },
        {
          "Type": "BluetoothServiceCapabilities",
          "IsGet": true,
          "Name": "ServiceCapabilities"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "BluetoothClassOfDevice",
          "Parameters": [
            {
              "Name": "majorClass",
              "Type": "BluetoothMajorClass"
            },
            {
              "Name": "minorClass",
              "Type": "BluetoothMinorClass"
            },
            {
              "Name": "serviceCapabilities",
              "Type": "BluetoothServiceCapabilities"
            }
          ],
          "Name": "FromParts"
        },
        {
          "IsStatic": true,
          "ReturnType": "BluetoothClassOfDevice",
          "Parameters": [
            {
              "Name": "rawValue",
              "Type": "UInt32"
            }
          ],
          "Name": "FromRawValue"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.BluetoothClassOfDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "BluetoothAddress"
        },
        {
          "Type": "BluetoothClassOfDevice",
          "IsGet": true,
          "Name": "ClassOfDevice"
        },
        {
          "Type": "BluetoothConnectionStatus",
          "IsGet": true,
          "Name": "ConnectionStatus"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "HostName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "IReadOnlyList<RfcommDeviceService>",
          "IsGet": true,
          "Name": "RfcommServices"
        },
        {
          "Type": "IReadOnlyList<IBuffer>",
          "IsGet": true,
          "Name": "SdpRecords"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BluetoothDevice>",
          "Parameters": [
            {
              "Name": "address",
              "Type": "UInt64"
            }
          ],
          "Name": "FromBluetoothAddressAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BluetoothDevice>",
          "Parameters": [
            {
              "Name": "hostName",
              "Type": "HostName"
            }
          ],
          "Name": "FromHostNameAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BluetoothDevice>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ],
          "Name": "FromIdAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Name": "GetDeviceSelector"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<BluetoothDevice,Object>",
          "Name": "ConnectionStatusChanged"
        },
        {
          "Type": "TypedEventHandler<BluetoothDevice,Object>",
          "Name": "NameChanged"
        },
        {
          "Type": "TypedEventHandler<BluetoothDevice,Object>",
          "Name": "SdpRecordsChanged"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.BluetoothDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "BluetoothAddress"
        },
        {
          "Type": "BluetoothConnectionStatus",
          "IsGet": true,
          "Name": "ConnectionStatus"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "IReadOnlyList<GattDeviceService>",
          "IsGet": true,
          "Name": "GattServices"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BluetoothLEDevice>",
          "Parameters": [
            {
              "Name": "bluetoothAddress",
              "Type": "UInt64"
            }
          ],
          "Name": "FromBluetoothAddressAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BluetoothLEDevice>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ],
          "Name": "FromIdAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Name": "GetDeviceSelector"
        },
        {
          "ReturnType": "GattDeviceService",
          "Parameters": [
            {
              "Name": "serviceUuid",
              "Type": "Guid"
            }
          ],
          "Name": "GetGattService"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<BluetoothLEDevice,Object>",
          "Name": "ConnectionStatusChanged"
        },
        {
          "Type": "TypedEventHandler<BluetoothLEDevice,Object>",
          "Name": "GattServicesChanged"
        },
        {
          "Type": "TypedEventHandler<BluetoothLEDevice,Object>",
          "Name": "NameChanged"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.BluetoothLEDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<Int16>",
          "IsGet": true,
          "IsSet": true,
          "Name": "InRangeThresholdInDBm"
        },
        {
          "Type": "Nullable<Int16>",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutOfRangeThresholdInDBm"
        },
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutOfRangeTimeout"
        },
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "SamplingInterval"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt16",
          "IsGet": true,
          "Name": "AttributeHandle"
        },
        {
          "Type": "GattProtectionLevel",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProtectionLevel"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "Uuid"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Guid",
          "Parameters": [
            {
              "Name": "shortId",
              "Type": "UInt16"
            }
          ],
          "Name": "ConvertShortIdToUuid"
        },
        {
          "ReturnType": "IAsyncOperation<GattReadResult>",
          "Name": "ReadValueAsync"
        },
        {
          "ReturnType": "IAsyncOperation<GattReadResult>",
          "Parameters": [
            {
              "Name": "cacheMode",
              "Type": "BluetoothCacheMode"
            }
          ],
          "Name": "ReadValueAsync"
        },
        {
          "ReturnType": "IAsyncOperation<GattCommunicationStatus>",
          "Parameters": [
            {
              "Name": "value",
              "Type": "IBuffer"
            }
          ],
          "Name": "WriteValueAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ClientCharacteristicConfiguration"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CharacteristicAggregateFormat"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CharacteristicExtendedProperties"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CharacteristicPresentationFormat"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CharacteristicUserDescription"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ServerCharacteristicConfiguration"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorUuids"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt16",
          "IsGet": true,
          "Name": "AttributeHandle"
        },
        {
          "Type": "BluetoothLEDevice",
          "IsGet": true,
          "Name": "Device"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "IReadOnlyList<GattDeviceService>",
          "IsGet": true,
          "Name": "ParentServices"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "Uuid"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Guid",
          "Parameters": [
            {
              "Name": "shortId",
              "Type": "UInt16"
            }
          ],
          "Name": "ConvertShortIdToUuid"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<GattDeviceService>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ],
          "Name": "FromIdAsync"
        },
        {
          "ReturnType": "IReadOnlyList<GattCharacteristic>",
          "Name": "GetAllCharacteristics"
        },
        {
          "ReturnType": "IReadOnlyList<GattDeviceService>",
          "Name": "GetAllIncludedServices"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "serviceShortId",
              "Type": "UInt16"
            }
          ],
          "Name": "GetDeviceSelectorFromShortId"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "serviceUuid",
              "Type": "Guid"
            }
          ],
          "Name": "GetDeviceSelectorFromUuid"
        },
        {
          "ReturnType": "IReadOnlyList<GattCharacteristic>",
          "Parameters": [
            {
              "Name": "characteristicUuid",
              "Type": "Guid"
            }
          ],
          "Name": "GetCharacteristics"
        },
        {
          "ReturnType": "IReadOnlyList<GattDeviceService>",
          "Parameters": [
            {
              "Name": "serviceUuid",
              "Type": "Guid"
            }
          ],
          "Name": "GetIncludedServices"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt16",
          "IsGet": true,
          "Name": "AttributeHandle"
        },
        {
          "Type": "GattCharacteristicProperties",
          "IsGet": true,
          "Name": "CharacteristicProperties"
        },
        {
          "Type": "IReadOnlyList<GattPresentationFormat>",
          "IsGet": true,
          "Name": "PresentationFormats"
        },
        {
          "Type": "GattProtectionLevel",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProtectionLevel"
        },
        {
          "Type": "GattDeviceService",
          "IsGet": true,
          "Name": "Service"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "UserDescription"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "Uuid"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Guid",
          "Parameters": [
            {
              "Name": "shortId",
              "Type": "UInt16"
            }
          ],
          "Name": "ConvertShortIdToUuid"
        },
        {
          "ReturnType": "IReadOnlyList<GattDescriptor>",
          "Name": "GetAllDescriptors"
        },
        {
          "ReturnType": "IReadOnlyList<GattDescriptor>",
          "Parameters": [
            {
              "Name": "descriptorUuid",
              "Type": "Guid"
            }
          ],
          "Name": "GetDescriptors"
        },
        {
          "ReturnType": "IAsyncOperation<GattReadClientCharacteristicConfigurationDescriptorResult>",
          "Name": "ReadClientCharacteristicConfigurationDescriptorAsync"
        },
        {
          "ReturnType": "IAsyncOperation<GattReadResult>",
          "Name": "ReadValueAsync"
        },
        {
          "ReturnType": "IAsyncOperation<GattReadResult>",
          "Parameters": [
            {
              "Name": "cacheMode",
              "Type": "BluetoothCacheMode"
            }
          ],
          "Name": "ReadValueAsync"
        },
        {
          "ReturnType": "IAsyncOperation<GattCommunicationStatus>",
          "Parameters": [
            {
              "Name": "clientCharacteristicConfigurationDescriptorValue",
              "Type": "GattClientCharacteristicConfigurationDescriptorValue"
            }
          ],
          "Name": "WriteClientCharacteristicConfigurationDescriptorAsync"
        },
        {
          "ReturnType": "IAsyncOperation<GattCommunicationStatus>",
          "Parameters": [
            {
              "Name": "value",
              "Type": "IBuffer"
            }
          ],
          "Name": "WriteValueAsync"
        },
        {
          "ReturnType": "IAsyncOperation<GattCommunicationStatus>",
          "Parameters": [
            {
              "Name": "value",
              "Type": "IBuffer"
            },
            {
              "Name": "writeOption",
              "Type": "GattWriteOption"
            }
          ],
          "Name": "WriteValueAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<GattCharacteristic,GattValueChangedEventArgs>",
          "Name": "ValueChanged"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AlertCategoryId"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AlertCategoryIdBitMask"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AlertLevel"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AlertNotificationControlPoint"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AlertStatus"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BatteryLevel"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BloodPressureFeature"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BloodPressureMeasurement"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BodySensorLocation"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BootKeyboardInputReport"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BootKeyboardOutputReport"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BootMouseInputReport"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CscFeature"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CscMeasurement"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CurrentTime"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CyclingPowerControlPoint"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CyclingPowerFeature"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CyclingPowerMeasurement"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CyclingPowerVector"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DateTime"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DayDateTime"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DayOfWeek"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DstOffset"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ExactTime256"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FirmwareRevisionString"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GapAppearance"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GapDeviceName"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GapPeripheralPreferredConnectionParameters"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GapPeripheralPrivacyFlag"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GapReconnectionAddress"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GattServiceChanged"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GlucoseFeature"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GlucoseMeasurement"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GlucoseMeasurementContext"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HardwareRevisionString"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeartRateControlPoint"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeartRateMeasurement"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HidControlPoint"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HidInformation"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Ieee1107320601RegulatoryCertificationDataList"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IntermediateCuffPressure"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IntermediateTemperature"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LnControlPoint"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LnFeature"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LocalTimeInformation"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LocationAndSpeed"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ManufacturerNameString"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MeasurementInterval"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ModelNumberString"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Navigation"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NewAlert"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PnpId"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PositionQuality"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ProtocolMode"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RecordAccessControlPoint"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ReferenceTimeInformation"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Report"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ReportMap"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RingerControlPoint"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RingerSetting"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RscFeature"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RscMeasurement"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ScanIntervalWindow"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ScanRefresh"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SCControlPoint"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SensorLocation"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SerialNumberString"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SoftwareRevisionString"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SupportedNewAlertCategory"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SupportUnreadAlertCategory"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SystemId"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TemperatureMeasurement"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TemperatureType"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TimeAccuracy"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TimeSource"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TimeUpdateControlPoint"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TimeUpdateState"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TimeWithDst"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TimeZone"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TxPowerLevel"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UnreadAlertStatus"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicUuids"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BluetoothSigAssignedNumbers"
        },
        {
          "Type": "UInt16",
          "IsGet": true,
          "Name": "Description"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "Exponent"
        },
        {
          "Type": "Byte",
          "IsGet": true,
          "Name": "FormatType"
        },
        {
          "Type": "Byte",
          "IsGet": true,
          "Name": "Namespace"
        },
        {
          "Type": "UInt16",
          "IsGet": true,
          "Name": "Unit"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Bit2"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Boolean"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DUInt16"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Float"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Float32"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Float64"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Nibble"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SFloat"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SInt12"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SInt128"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SInt16"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SInt24"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SInt32"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SInt48"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SInt64"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SInt8"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Struct"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UInt12"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UInt128"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UInt16"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UInt24"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UInt32"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UInt48"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UInt64"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UInt8"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Utf16"
        },
        {
          "Type": "Byte",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Utf8"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormatTypes"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "GattClientCharacteristicConfigurationDescriptorValue",
          "IsGet": true,
          "Name": "ClientCharacteristicConfigurationDescriptor"
        },
        {
          "Type": "GattCommunicationStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "GattCommunicationStatus",
          "IsGet": true,
          "Name": "Status"
        },
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<GattCommunicationStatus>",
          "Name": "CommitAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "characteristic",
              "Type": "GattCharacteristic"
            },
            {
              "Name": "value",
              "Type": "IBuffer"
            }
          ],
          "Name": "WriteValue"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattReliableWriteTransaction"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AlertNotification"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Battery"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BloodPressure"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CurrentTime"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CyclingPower"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CyclingSpeedAndCadence"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DeviceInformation"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GenericAccess"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GenericAttribute"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Glucose"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HealthThermometer"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeartRate"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HumanInterfaceDevice"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ImmediateAlert"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LinkLoss"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LocationAndNavigation"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NextDstChange"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PhoneAlertStatus"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ReferenceTimeUpdate"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RunningSpeedAndCadence"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ScanParameters"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TxPower"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceUuids"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "CharacteristicValue"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "ConnectionHostName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ConnectionServiceName"
        },
        {
          "Type": "BluetoothDevice",
          "IsGet": true,
          "Name": "Device"
        },
        {
          "Type": "SocketProtectionLevel",
          "IsGet": true,
          "Name": "MaxProtectionLevel"
        },
        {
          "Type": "SocketProtectionLevel",
          "IsGet": true,
          "Name": "ProtectionLevel"
        },
        {
          "Type": "RfcommServiceId",
          "IsGet": true,
          "Name": "ServiceId"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<RfcommDeviceService>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ],
          "Name": "FromIdAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "serviceId",
              "Type": "RfcommServiceId"
            }
          ],
          "Name": "GetDeviceSelector"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyDictionary<UInt32,IBuffer>>",
          "Name": "GetSdpRawAttributesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyDictionary<UInt32,IBuffer>>",
          "Parameters": [
            {
              "Name": "cacheMode",
              "Type": "BluetoothCacheMode"
            }
          ],
          "Name": "GetSdpRawAttributesAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceService"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "RfcommServiceId",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GenericFileTransfer"
        },
        {
          "Type": "RfcommServiceId",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ObexFileTransfer"
        },
        {
          "Type": "RfcommServiceId",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ObexObjectPush"
        },
        {
          "Type": "RfcommServiceId",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PhoneBookAccessPce"
        },
        {
          "Type": "RfcommServiceId",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PhoneBookAccessPse"
        },
        {
          "Type": "RfcommServiceId",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SerialPort"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "Uuid"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "UInt32",
          "Name": "AsShortId"
        },
        {
          "ReturnType": "String",
          "Name": "AsString"
        },
        {
          "IsStatic": true,
          "ReturnType": "RfcommServiceId",
          "Parameters": [
            {
              "Name": "shortId",
              "Type": "UInt32"
            }
          ],
          "Name": "FromShortId"
        },
        {
          "IsStatic": true,
          "ReturnType": "RfcommServiceId",
          "Parameters": [
            {
              "Name": "uuid",
              "Type": "Guid"
            }
          ],
          "Name": "FromUuid"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.Rfcomm.RfcommServiceId"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IDictionary<UInt32,IBuffer>",
          "IsGet": true,
          "Name": "SdpRawAttributes"
        },
        {
          "Type": "RfcommServiceId",
          "IsGet": true,
          "Name": "ServiceId"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<RfcommServiceProvider>",
          "Parameters": [
            {
              "Name": "serviceId",
              "Type": "RfcommServiceId"
            }
          ],
          "Name": "CreateAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "listener",
              "Type": "StreamSocketListener"
            }
          ],
          "Name": "StartAdvertising"
        },
        {
          "ReturnType": "Void",
          "Name": "StopAdvertising"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Bluetooth.Rfcomm.RfcommServiceProvider"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DeviceAccessStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Enumeration.DeviceAccessChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DeviceAccessStatus",
          "IsGet": true,
          "Name": "CurrentStatus"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "DeviceAccessInformation",
          "Parameters": [
            {
              "Name": "deviceClass",
              "Type": "DeviceClass"
            }
          ],
          "Name": "CreateFromDeviceClass"
        },
        {
          "IsStatic": true,
          "ReturnType": "DeviceAccessInformation",
          "Parameters": [
            {
              "Name": "deviceClassId",
              "Type": "Guid"
            }
          ],
          "Name": "CreateFromDeviceClassId"
        },
        {
          "IsStatic": true,
          "ReturnType": "DeviceAccessInformation",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ],
          "Name": "CreateFromId"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<DeviceAccessInformation,DeviceAccessChangedEventArgs>",
          "Name": "AccessChanged"
        }
      ],
      "Name": "Windows.Devices.Enumeration.DeviceAccessInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Enumeration.DeviceConnectionChangeTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "EnclosureLocation",
          "IsGet": true,
          "Name": "EnclosureLocation"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsDefault"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsEnabled"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "IReadOnlyDictionary<String,Object>",
          "IsGet": true,
          "Name": "Properties"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<DeviceInformation>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ],
          "Name": "CreateFromIdAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<DeviceInformation>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            },
            {
              "Name": "additionalProperties",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "CreateFromIdAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "DeviceWatcher",
          "Name": "CreateWatcher"
        },
        {
          "IsStatic": true,
          "ReturnType": "DeviceWatcher",
          "Parameters": [
            {
              "Name": "deviceClass",
              "Type": "DeviceClass"
            }
          ],
          "Name": "CreateWatcher"
        },
        {
          "IsStatic": true,
          "ReturnType": "DeviceWatcher",
          "Parameters": [
            {
              "Name": "aqsFilter",
              "Type": "String"
            }
          ],
          "Name": "CreateWatcher"
        },
        {
          "IsStatic": true,
          "ReturnType": "DeviceWatcher",
          "Parameters": [
            {
              "Name": "aqsFilter",
              "Type": "String"
            },
            {
              "Name": "additionalProperties",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "CreateWatcher"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<DeviceInformationCollection>",
          "Name": "FindAllAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<DeviceInformationCollection>",
          "Parameters": [
            {
              "Name": "deviceClass",
              "Type": "DeviceClass"
            }
          ],
          "Name": "FindAllAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<DeviceInformationCollection>",
          "Parameters": [
            {
              "Name": "aqsFilter",
              "Type": "String"
            }
          ],
          "Name": "FindAllAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<DeviceInformationCollection>",
          "Parameters": [
            {
              "Name": "aqsFilter",
              "Type": "String"
            },
            {
              "Name": "additionalProperties",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "FindAllAsync"
        },
        {
          "ReturnType": "IAsyncOperation<DeviceThumbnail>",
          "Name": "GetGlyphThumbnailAsync"
        },
        {
          "ReturnType": "IAsyncOperation<DeviceThumbnail>",
          "Name": "GetThumbnailAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "updateInfo",
              "Type": "DeviceInformationUpdate"
            }
          ],
          "Name": "Update"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Enumeration.DeviceInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<DeviceInformation>",
        "IReadOnlyCollection<DeviceInformation>",
        "IReadOnlyList<DeviceInformation>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Enumeration.DeviceInformationCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "IReadOnlyDictionary<String,Object>",
          "IsGet": true,
          "Name": "Properties"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Enumeration.DeviceInformationUpdate"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContentTypeProvider",
        "IDisposable",
        "IInputStream",
        "IOutputStream",
        "IRandomAccessStream",
        "IRandomAccessStreamWithContentType"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanRead"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanWrite"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ContentType"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "Position"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "IsSet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IRandomAccessStream",
          "Name": "CloneStream"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Name": "FlushAsync"
        },
        {
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "GetInputStreamAt"
        },
        {
          "ReturnType": "IOutputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "GetOutputStreamAt"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "InputStreamOptions"
            }
          ],
          "Name": "ReadAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "Seek"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "WriteAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Enumeration.DeviceThumbnail"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DeviceWatcherStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Start"
        },
        {
          "ReturnType": "Void",
          "Name": "Stop"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<DeviceWatcher,DeviceInformation>",
          "Name": "Added"
        },
        {
          "Type": "TypedEventHandler<DeviceWatcher,Object>",
          "Name": "EnumerationCompleted"
        },
        {
          "Type": "TypedEventHandler<DeviceWatcher,DeviceInformationUpdate>",
          "Name": "Removed"
        },
        {
          "Type": "TypedEventHandler<DeviceWatcher,Object>",
          "Name": "Stopped"
        },
        {
          "Type": "TypedEventHandler<DeviceWatcher,DeviceInformationUpdate>",
          "Name": "Updated"
        }
      ],
      "Name": "Windows.Devices.Enumeration.DeviceWatcher"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "InDock"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "InLid"
        },
        {
          "Type": "Panel",
          "IsGet": true,
          "Name": "Panel"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Enumeration.EnclosureLocation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "IReadOnlyDictionary<String,Object>",
          "IsGet": true,
          "Name": "Properties"
        },
        {
          "Type": "PnpObjectType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PnpObject>",
          "Parameters": [
            {
              "Name": "type",
              "Type": "PnpObjectType"
            },
            {
              "Name": "id",
              "Type": "String"
            },
            {
              "Name": "requestedProperties",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "CreateFromIdAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "PnpObjectWatcher",
          "Parameters": [
            {
              "Name": "type",
              "Type": "PnpObjectType"
            },
            {
              "Name": "requestedProperties",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "CreateWatcher"
        },
        {
          "IsStatic": true,
          "ReturnType": "PnpObjectWatcher",
          "Parameters": [
            {
              "Name": "type",
              "Type": "PnpObjectType"
            },
            {
              "Name": "requestedProperties",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "aqsFilter",
              "Type": "String"
            }
          ],
          "Name": "CreateWatcher"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PnpObjectCollection>",
          "Parameters": [
            {
              "Name": "type",
              "Type": "PnpObjectType"
            },
            {
              "Name": "requestedProperties",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "FindAllAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PnpObjectCollection>",
          "Parameters": [
            {
              "Name": "type",
              "Type": "PnpObjectType"
            },
            {
              "Name": "requestedProperties",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "aqsFilter",
              "Type": "String"
            }
          ],
          "Name": "FindAllAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "updateInfo",
              "Type": "PnpObjectUpdate"
            }
          ],
          "Name": "Update"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Enumeration.Pnp.PnpObject"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<PnpObject>",
        "IReadOnlyCollection<PnpObject>",
        "IReadOnlyList<PnpObject>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Enumeration.Pnp.PnpObjectCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "IReadOnlyDictionary<String,Object>",
          "IsGet": true,
          "Name": "Properties"
        },
        {
          "Type": "PnpObjectType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Enumeration.Pnp.PnpObjectUpdate"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DeviceWatcherStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Start"
        },
        {
          "ReturnType": "Void",
          "Name": "Stop"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<PnpObjectWatcher,PnpObject>",
          "Name": "Added"
        },
        {
          "Type": "TypedEventHandler<PnpObjectWatcher,Object>",
          "Name": "EnumerationCompleted"
        },
        {
          "Type": "TypedEventHandler<PnpObjectWatcher,PnpObjectUpdate>",
          "Name": "Removed"
        },
        {
          "Type": "TypedEventHandler<PnpObjectWatcher,Object>",
          "Name": "Stopped"
        },
        {
          "Type": "TypedEventHandler<PnpObjectWatcher,PnpObjectUpdate>",
          "Name": "Updated"
        }
      ],
      "Name": "Windows.Devices.Enumeration.Pnp.PnpObjectWatcher"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "City"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Country"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "PostalCode"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "State"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.CivicAddress"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IGeoshape"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "northwestCorner",
              "Type": "BasicGeoposition"
            },
            {
              "Name": "southeastCorner",
              "Type": "BasicGeoposition"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "northwestCorner",
              "Type": "BasicGeoposition"
            },
            {
              "Name": "southeastCorner",
              "Type": "BasicGeoposition"
            },
            {
              "Name": "altitudeReferenceSystem",
              "Type": "AltitudeReferenceSystem"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "northwestCorner",
              "Type": "BasicGeoposition"
            },
            {
              "Name": "southeastCorner",
              "Type": "BasicGeoposition"
            },
            {
              "Name": "altitudeReferenceSystem",
              "Type": "AltitudeReferenceSystem"
            },
            {
              "Name": "spatialReferenceId",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "AltitudeReferenceSystem",
          "IsGet": true,
          "Name": "AltitudeReferenceSystem"
        },
        {
          "Type": "BasicGeoposition",
          "IsGet": true,
          "Name": "Center"
        },
        {
          "Type": "GeoshapeType",
          "IsGet": true,
          "Name": "GeoshapeType"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "MaxAltitude"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "MinAltitude"
        },
        {
          "Type": "BasicGeoposition",
          "IsGet": true,
          "Name": "NorthwestCorner"
        },
        {
          "Type": "BasicGeoposition",
          "IsGet": true,
          "Name": "SoutheastCorner"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "SpatialReferenceId"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "GeoboundingBox",
          "Parameters": [
            {
              "Name": "positions",
              "Type": "IEnumerable<BasicGeoposition>"
            }
          ],
          "Name": "TryCompute"
        },
        {
          "IsStatic": true,
          "ReturnType": "GeoboundingBox",
          "Parameters": [
            {
              "Name": "positions",
              "Type": "IEnumerable<BasicGeoposition>"
            },
            {
              "Name": "altitudeRefSystem",
              "Type": "AltitudeReferenceSystem"
            }
          ],
          "Name": "TryCompute"
        },
        {
          "IsStatic": true,
          "ReturnType": "GeoboundingBox",
          "Parameters": [
            {
              "Name": "positions",
              "Type": "IEnumerable<BasicGeoposition>"
            },
            {
              "Name": "altitudeRefSystem",
              "Type": "AltitudeReferenceSystem"
            },
            {
              "Name": "spatialReferenceId",
              "Type": "UInt32"
            }
          ],
          "Name": "TryCompute"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.GeoboundingBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IGeoshape"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "position",
              "Type": "BasicGeoposition"
            },
            {
              "Name": "radius",
              "Type": "Double"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "position",
              "Type": "BasicGeoposition"
            },
            {
              "Name": "radius",
              "Type": "Double"
            },
            {
              "Name": "altitudeReferenceSystem",
              "Type": "AltitudeReferenceSystem"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "position",
              "Type": "BasicGeoposition"
            },
            {
              "Name": "radius",
              "Type": "Double"
            },
            {
              "Name": "altitudeReferenceSystem",
              "Type": "AltitudeReferenceSystem"
            },
            {
              "Name": "spatialReferenceId",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "AltitudeReferenceSystem",
          "IsGet": true,
          "Name": "AltitudeReferenceSystem"
        },
        {
          "Type": "BasicGeoposition",
          "IsGet": true,
          "Name": "Center"
        },
        {
          "Type": "GeoshapeType",
          "IsGet": true,
          "Name": "GeoshapeType"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "Radius"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "SpatialReferenceId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.Geocircle"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "Accuracy"
        },
        {
          "Type": "Nullable<Double>",
          "IsGet": true,
          "Name": "Altitude"
        },
        {
          "Type": "Nullable<Double>",
          "IsGet": true,
          "Name": "AltitudeAccuracy"
        },
        {
          "Type": "Nullable<Double>",
          "IsGet": true,
          "Name": "Heading"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "Latitude"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "Longitude"
        },
        {
          "Type": "Geopoint",
          "IsGet": true,
          "Name": "Point"
        },
        {
          "Type": "PositionSource",
          "IsGet": true,
          "Name": "PositionSource"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "Name": "PositionSourceTimestamp"
        },
        {
          "Type": "GeocoordinateSatelliteData",
          "IsGet": true,
          "Name": "SatelliteData"
        },
        {
          "Type": "Nullable<Double>",
          "IsGet": true,
          "Name": "Speed"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.Geocoordinate"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<Double>",
          "IsGet": true,
          "Name": "HorizontalDilutionOfPrecision"
        },
        {
          "Type": "Nullable<Double>",
          "IsGet": true,
          "Name": "PositionDilutionOfPrecision"
        },
        {
          "Type": "Nullable<Double>",
          "IsGet": true,
          "Name": "VerticalDilutionOfPrecision"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.GeocoordinateSatelliteData"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            },
            {
              "Name": "geoshape",
              "Type": "IGeoshape"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            },
            {
              "Name": "geoshape",
              "Type": "IGeoshape"
            },
            {
              "Name": "monitoredStates",
              "Type": "MonitoredGeofenceStates"
            },
            {
              "Name": "singleUse",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            },
            {
              "Name": "geoshape",
              "Type": "IGeoshape"
            },
            {
              "Name": "monitoredStates",
              "Type": "MonitoredGeofenceStates"
            },
            {
              "Name": "singleUse",
              "Type": "Boolean"
            },
            {
              "Name": "dwellTime",
              "Type": "TimeSpan"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            },
            {
              "Name": "geoshape",
              "Type": "IGeoshape"
            },
            {
              "Name": "monitoredStates",
              "Type": "MonitoredGeofenceStates"
            },
            {
              "Name": "singleUse",
              "Type": "Boolean"
            },
            {
              "Name": "dwellTime",
              "Type": "TimeSpan"
            },
            {
              "Name": "startTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "duration",
              "Type": "TimeSpan"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "Duration"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "DwellTime"
        },
        {
          "Type": "IGeoshape",
          "IsGet": true,
          "Name": "Geoshape"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "MonitoredGeofenceStates",
          "IsGet": true,
          "Name": "MonitoredStates"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "SingleUse"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "StartTime"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.Geofencing.Geofence"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "GeofenceMonitor",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Current"
        },
        {
          "Type": "IList<Geofence>",
          "IsGet": true,
          "Name": "Geofences"
        },
        {
          "Type": "Geoposition",
          "IsGet": true,
          "Name": "LastKnownGeoposition"
        },
        {
          "Type": "GeofenceMonitorStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IReadOnlyList<GeofenceStateChangeReport>",
          "Name": "ReadReports"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<GeofenceMonitor,Object>",
          "Name": "GeofenceStateChanged"
        },
        {
          "Type": "TypedEventHandler<GeofenceMonitor,Object>",
          "Name": "StatusChanged"
        }
      ],
      "Name": "Windows.Devices.Geolocation.Geofencing.GeofenceMonitor"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Geofence",
          "IsGet": true,
          "Name": "Geofence"
        },
        {
          "Type": "Geoposition",
          "IsGet": true,
          "Name": "Geoposition"
        },
        {
          "Type": "GeofenceState",
          "IsGet": true,
          "Name": "NewState"
        },
        {
          "Type": "GeofenceRemovalReason",
          "IsGet": true,
          "Name": "RemovalReason"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.Geofencing.GeofenceStateChangeReport"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PositionAccuracy",
          "IsGet": true,
          "IsSet": true,
          "Name": "DesiredAccuracy"
        },
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "DesiredAccuracyInMeters"
        },
        {
          "Type": "PositionStatus",
          "IsGet": true,
          "Name": "LocationStatus"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "MovementThreshold"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReportInterval"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<Geoposition>",
          "Name": "GetGeopositionAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Geoposition>",
          "Parameters": [
            {
              "Name": "maximumAge",
              "Type": "TimeSpan"
            },
            {
              "Name": "timeout",
              "Type": "TimeSpan"
            }
          ],
          "Name": "GetGeopositionAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<Geoposition>>",
          "Parameters": [
            {
              "Name": "startTime",
              "Type": "DateTimeOffset"
            }
          ],
          "Name": "GetGeopositionHistoryAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<Geoposition>>",
          "Parameters": [
            {
              "Name": "startTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "duration",
              "Type": "TimeSpan"
            }
          ],
          "Name": "GetGeopositionHistoryAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<GeolocationAccessStatus>",
          "Name": "RequestAccessAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<Geolocator,PositionChangedEventArgs>",
          "Name": "PositionChanged"
        },
        {
          "Type": "TypedEventHandler<Geolocator,StatusChangedEventArgs>",
          "Name": "StatusChanged"
        }
      ],
      "Name": "Windows.Devices.Geolocation.Geolocator"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IGeoshape"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "positions",
              "Type": "IEnumerable<BasicGeoposition>"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "positions",
              "Type": "IEnumerable<BasicGeoposition>"
            },
            {
              "Name": "altitudeReferenceSystem",
              "Type": "AltitudeReferenceSystem"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "positions",
              "Type": "IEnumerable<BasicGeoposition>"
            },
            {
              "Name": "altitudeReferenceSystem",
              "Type": "AltitudeReferenceSystem"
            },
            {
              "Name": "spatialReferenceId",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "AltitudeReferenceSystem",
          "IsGet": true,
          "Name": "AltitudeReferenceSystem"
        },
        {
          "Type": "GeoshapeType",
          "IsGet": true,
          "Name": "GeoshapeType"
        },
        {
          "Type": "IReadOnlyList<BasicGeoposition>",
          "IsGet": true,
          "Name": "Positions"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "SpatialReferenceId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.Geopath"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IGeoshape"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "position",
              "Type": "BasicGeoposition"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "position",
              "Type": "BasicGeoposition"
            },
            {
              "Name": "altitudeReferenceSystem",
              "Type": "AltitudeReferenceSystem"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "position",
              "Type": "BasicGeoposition"
            },
            {
              "Name": "altitudeReferenceSystem",
              "Type": "AltitudeReferenceSystem"
            },
            {
              "Name": "spatialReferenceId",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "AltitudeReferenceSystem",
          "IsGet": true,
          "Name": "AltitudeReferenceSystem"
        },
        {
          "Type": "GeoshapeType",
          "IsGet": true,
          "Name": "GeoshapeType"
        },
        {
          "Type": "BasicGeoposition",
          "IsGet": true,
          "Name": "Position"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "SpatialReferenceId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.Geopoint"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "CivicAddress",
          "IsGet": true,
          "Name": "CivicAddress"
        },
        {
          "Type": "Geocoordinate",
          "IsGet": true,
          "Name": "Coordinate"
        },
        {
          "Type": "VenueData",
          "IsGet": true,
          "Name": "VenueData"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.Geoposition"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Geoposition",
          "IsGet": true,
          "Name": "Position"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.PositionChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PositionStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.StatusChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Level"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.VenueData"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "HidBooleanControlDescription",
          "IsGet": true,
          "Name": "ControlDescription"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsActive"
        },
        {
          "Type": "UInt16",
          "IsGet": true,
          "Name": "UsageId"
        },
        {
          "Type": "UInt16",
          "IsGet": true,
          "Name": "UsagePage"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.HumanInterfaceDevice.HidBooleanControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "IReadOnlyList<HidCollection>",
          "IsGet": true,
          "Name": "ParentCollections"
        },
        {
          "Type": "UInt16",
          "IsGet": true,
          "Name": "ReportId"
        },
        {
          "Type": "HidReportType",
          "IsGet": true,
          "Name": "ReportType"
        },
        {
          "Type": "UInt16",
          "IsGet": true,
          "Name": "UsageId"
        },
        {
          "Type": "UInt16",
          "IsGet": true,
          "Name": "UsagePage"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.HumanInterfaceDevice.HidBooleanControlDescription"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "HidCollectionType",
          "IsGet": true,
          "Name": "Type"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "UsageId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "UsagePage"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.HumanInterfaceDevice.HidCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt16",
          "IsGet": true,
          "Name": "ProductId"
        },
        {
          "Type": "UInt16",
          "IsGet": true,
          "Name": "UsageId"
        },
        {
          "Type": "UInt16",
          "IsGet": true,
          "Name": "UsagePage"
        },
        {
          "Type": "UInt16",
          "IsGet": true,
          "Name": "VendorId"
        },
        {
          "Type": "UInt16",
          "IsGet": true,
          "Name": "Version"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "HidFeatureReport",
          "Name": "CreateFeatureReport"
        },
        {
          "ReturnType": "HidFeatureReport",
          "Parameters": [
            {
              "Name": "reportId",
              "Type": "UInt16"
            }
          ],
          "Name": "CreateFeatureReport"
        },
        {
          "ReturnType": "HidOutputReport",
          "Name": "CreateOutputReport"
        },
        {
          "ReturnType": "HidOutputReport",
          "Parameters": [
            {
              "Name": "reportId",
              "Type": "UInt16"
            }
          ],
          "Name": "CreateOutputReport"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<HidDevice>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            },
            {
              "Name": "accessMode",
              "Type": "FileAccessMode"
            }
          ],
          "Name": "FromIdAsync"
        },
        {
          "ReturnType": "IReadOnlyList<HidBooleanControlDescription>",
          "Parameters": [
            {
              "Name": "reportType",
              "Type": "HidReportType"
            },
            {
              "Name": "usagePage",
              "Type": "UInt16"
            },
            {
              "Name": "usageId",
              "Type": "UInt16"
            }
          ],
          "Name": "GetBooleanControlDescriptions"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "usagePage",
              "Type": "UInt16"
            },
            {
              "Name": "usageId",
              "Type": "UInt16"
            }
          ],
          "Name": "GetDeviceSelector"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "usagePage",
              "Type": "UInt16"
            },
            {
              "Name": "usageId",
              "Type": "UInt16"
            },
            {
              "Name": "vendorId",
              "Type": "UInt16"
            },
            {
              "Name": "productId",
              "Type": "UInt16"
            }
          ],
          "Name": "GetDeviceSelector"
        },
        {
          "ReturnType": "IAsyncOperation<HidFeatureReport>",
          "Name": "GetFeatureReportAsync"
        },
        {
          "ReturnType": "IAsyncOperation<HidFeatureReport>",
          "Parameters": [
            {
              "Name": "reportId",
              "Type": "UInt16"
            }
          ],
          "Name": "GetFeatureReportAsync"
        },
        {
          "ReturnType": "IAsyncOperation<HidInputReport>",
          "Name": "GetInputReportAsync"
        },
        {
          "ReturnType": "IAsyncOperation<HidInputReport>",
          "Parameters": [
            {
              "Name": "reportId",
              "Type": "UInt16"
            }
          ],
          "Name": "GetInputReportAsync"
        },
        {
          "ReturnType": "IReadOnlyList<HidNumericControlDescription>",
          "Parameters": [
            {
              "Name": "reportType",
              "Type": "HidReportType"
            },
            {
              "Name": "usagePage",
              "Type": "UInt16"
            },
            {
              "Name": "usageId",
              "Type": "UInt16"
            }
          ],
          "Name": "GetNumericControlDescriptions"
        },
        {
          "ReturnType": "IAsyncOperation<UInt32>",
          "Parameters": [
            {
              "Name": "featureReport",
              "Type": "HidFeatureReport"
            }
          ],
          "Name": "SendFeatureReportAsync"
        },
        {
          "ReturnType": "IAsyncOperation<UInt32>",
          "Parameters": [
            {
              "Name": "outputReport",
              "Type": "HidOutputReport"
            }
          ],
          "Name": "SendOutputReportAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<HidDevice,HidInputReportReceivedEventArgs>",
          "Name": "InputReportReceived"
        }
      ],
      "Name": "Windows.Devices.HumanInterfaceDevice.HidDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IBuffer",
          "IsGet": true,
          "IsSet": true,
          "Name": "Data"
        },
        {
          "Type": "UInt16",
          "IsGet": true,
          "Name": "Id"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "HidBooleanControl",
          "Parameters": [
            {
              "Name": "usagePage",
              "Type": "UInt16"
            },
            {
              "Name": "usageId",
              "Type": "UInt16"
            }
          ],
          "Name": "GetBooleanControl"
        },
        {
          "ReturnType": "HidBooleanControl",
          "Parameters": [
            {
              "Name": "controlDescription",
              "Type": "HidBooleanControlDescription"
            }
          ],
          "Name": "GetBooleanControlByDescription"
        },
        {
          "ReturnType": "HidNumericControl",
          "Parameters": [
            {
              "Name": "usagePage",
              "Type": "UInt16"
            },
            {
              "Name": "usageId",
              "Type": "UInt16"
            }
          ],
          "Name": "GetNumericControl"
        },
        {
          "ReturnType": "HidNumericControl",
          "Parameters": [
            {
              "Name": "controlDescription",
              "Type": "HidNumericControlDescription"
            }
          ],
          "Name": "GetNumericControlByDescription"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.HumanInterfaceDevice.HidFeatureReport"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<HidBooleanControl>",
          "IsGet": true,
          "Name": "ActivatedBooleanControls"
        },
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "Data"
        },
        {
          "Type": "UInt16",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "IReadOnlyList<HidBooleanControl>",
          "IsGet": true,
          "Name": "TransitionedBooleanControls"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "HidBooleanControl",
          "Parameters": [
            {
              "Name": "usagePage",
              "Type": "UInt16"
            },
            {
              "Name": "usageId",
              "Type": "UInt16"
            }
          ],
          "Name": "GetBooleanControl"
        },
        {
          "ReturnType": "HidBooleanControl",
          "Parameters": [
            {
              "Name": "controlDescription",
              "Type": "HidBooleanControlDescription"
            }
          ],
          "Name": "GetBooleanControlByDescription"
        },
        {
          "ReturnType": "HidNumericControl",
          "Parameters": [
            {
              "Name": "usagePage",
              "Type": "UInt16"
            },
            {
              "Name": "usageId",
              "Type": "UInt16"
            }
          ],
          "Name": "GetNumericControl"
        },
        {
          "ReturnType": "HidNumericControl",
          "Parameters": [
            {
              "Name": "controlDescription",
              "Type": "HidNumericControlDescription"
            }
          ],
          "Name": "GetNumericControlByDescription"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.HumanInterfaceDevice.HidInputReport"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "HidInputReport",
          "IsGet": true,
          "Name": "Report"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.HumanInterfaceDevice.HidInputReportReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "HidNumericControlDescription",
          "IsGet": true,
          "Name": "ControlDescription"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsGrouped"
        },
        {
          "Type": "Int64",
          "IsGet": true,
          "IsSet": true,
          "Name": "ScaledValue"
        },
        {
          "Type": "UInt16",
          "IsGet": true,
          "Name": "UsageId"
        },
        {
          "Type": "UInt16",
          "IsGet": true,
          "Name": "UsagePage"
        },
        {
          "Type": "Int64",
          "IsGet": true,
          "IsSet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.HumanInterfaceDevice.HidNumericControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasNull"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsAbsolute"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "LogicalMaximum"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "LogicalMinimum"
        },
        {
          "Type": "IReadOnlyList<HidCollection>",
          "IsGet": true,
          "Name": "ParentCollections"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "PhysicalMaximum"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "PhysicalMinimum"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "ReportCount"
        },
        {
          "Type": "UInt16",
          "IsGet": true,
          "Name": "ReportId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "ReportSize"
        },
        {
          "Type": "HidReportType",
          "IsGet": true,
          "Name": "ReportType"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Unit"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "UnitExponent"
        },
        {
          "Type": "UInt16",
          "IsGet": true,
          "Name": "UsageId"
        },
        {
          "Type": "UInt16",
          "IsGet": true,
          "Name": "UsagePage"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.HumanInterfaceDevice.HidNumericControlDescription"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IBuffer",
          "IsGet": true,
          "IsSet": true,
          "Name": "Data"
        },
        {
          "Type": "UInt16",
          "IsGet": true,
          "Name": "Id"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "HidBooleanControl",
          "Parameters": [
            {
              "Name": "usagePage",
              "Type": "UInt16"
            },
            {
              "Name": "usageId",
              "Type": "UInt16"
            }
          ],
          "Name": "GetBooleanControl"
        },
        {
          "ReturnType": "HidBooleanControl",
          "Parameters": [
            {
              "Name": "controlDescription",
              "Type": "HidBooleanControlDescription"
            }
          ],
          "Name": "GetBooleanControlByDescription"
        },
        {
          "ReturnType": "HidNumericControl",
          "Parameters": [
            {
              "Name": "usagePage",
              "Type": "UInt16"
            },
            {
              "Name": "usageId",
              "Type": "UInt16"
            }
          ],
          "Name": "GetNumericControl"
        },
        {
          "ReturnType": "HidNumericControl",
          "Parameters": [
            {
              "Name": "controlDescription",
              "Type": "HidNumericControlDescription"
            }
          ],
          "Name": "GetNumericControlByDescription"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.HumanInterfaceDevice.HidOutputReport"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "KeyboardPresent"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Input.KeyboardCapabilities"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "HorizontalWheelPresent"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "MousePresent"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "NumberOfButtons"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "SwapButtons"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "VerticalWheelPresent"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Input.MouseCapabilities"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "MouseDevice",
          "Name": "GetForCurrentView"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<MouseDevice,MouseEventArgs>",
          "Name": "MouseMoved"
        }
      ],
      "Name": "Windows.Devices.Input.MouseDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MouseDelta",
          "IsGet": true,
          "Name": "MouseDelta"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Input.MouseEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsIntegrated"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MaxContacts"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MaxPointersWithZDistance"
        },
        {
          "Type": "Rect",
          "IsGet": true,
          "Name": "PhysicalDeviceRect"
        },
        {
          "Type": "PointerDeviceType",
          "IsGet": true,
          "Name": "PointerDeviceType"
        },
        {
          "Type": "Rect",
          "IsGet": true,
          "Name": "ScreenRect"
        },
        {
          "Type": "IReadOnlyList<PointerDeviceUsage>",
          "IsGet": true,
          "Name": "SupportedUsages"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "PointerDevice",
          "Parameters": [
            {
              "Name": "pointerId",
              "Type": "UInt32"
            }
          ],
          "Name": "GetPointerDevice"
        },
        {
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<PointerDevice>",
          "Name": "GetPointerDevices"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Input.PointerDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Contacts"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "TouchPresent"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Input.TouchCapabilities"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "BrightnessLevel"
        },
        {
          "Type": "Color",
          "IsGet": true,
          "IsSet": true,
          "Name": "Color"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsColorSettable"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsEnabled"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Lamp>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ],
          "Name": "FromIdAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Lamp>",
          "Name": "GetDefaultAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Name": "GetDeviceSelector"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<Lamp,LampAvailabilityChangedEventArgs>",
          "Name": "AvailabilityChanged"
        }
      ],
      "Name": "Windows.Devices.Lights.Lamp"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsAvailable"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Lights.LampAvailabilityChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Battery",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AggregateBattery"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Battery>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ],
          "Name": "FromIdAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Name": "GetDeviceSelector"
        },
        {
          "ReturnType": "BatteryReport",
          "Name": "GetReport"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<Battery,Object>",
          "Name": "ReportUpdated"
        }
      ],
      "Name": "Windows.Devices.Power.Battery"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "Name": "DesignCapacityInMilliwattHours"
        },
        {
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "Name": "FullChargeCapacityInMilliwattHours"
        },
        {
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "Name": "ChargeRateInMilliwatts"
        },
        {
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "Name": "RemainingCapacityInMilliwattHours"
        },
        {
          "Type": "BatteryStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Power.BatteryReport"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MinimumReportInterval"
        },
        {
          "Type": "DisplayOrientations",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReadingTransform"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReportInterval"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "AccelerometerReading",
          "Name": "GetCurrentReading"
        },
        {
          "IsStatic": true,
          "ReturnType": "Accelerometer",
          "Name": "GetDefault"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<Accelerometer,AccelerometerReadingChangedEventArgs>",
          "Name": "ReadingChanged"
        },
        {
          "Type": "TypedEventHandler<Accelerometer,AccelerometerShakenEventArgs>",
          "Name": "Shaken"
        }
      ],
      "Name": "Windows.Devices.Sensors.Accelerometer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "AccelerationX"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "AccelerationY"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "AccelerationZ"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.AccelerometerReading"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AccelerometerReading",
          "IsGet": true,
          "Name": "Reading"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.AccelerometerReadingChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.AccelerometerShakenEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MinimumReportInterval"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "PowerInMilliwatts"
        },
        {
          "Type": "ActivitySensorStatus",
          "IsGet": true,
          "Name": "Status"
        },
        {
          "Type": "IList<ActivityType>",
          "IsGet": true,
          "Name": "SubscribedActivities"
        },
        {
          "Type": "IReadOnlyList<ActivityType>",
          "IsGet": true,
          "Name": "SupportedActivities"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ActivitySensor>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ],
          "Name": "FromIdAsync"
        },
        {
          "ReturnType": "IAsyncOperation<ActivitySensorReading>",
          "Name": "GetCurrentReadingAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ActivitySensor>",
          "Name": "GetDefaultAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Name": "GetDeviceSelector"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<ActivitySensorReading>>",
          "Parameters": [
            {
              "Name": "fromTime",
              "Type": "DateTimeOffset"
            }
          ],
          "Name": "GetSystemHistoryAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<ActivitySensorReading>>",
          "Parameters": [
            {
              "Name": "fromTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "duration",
              "Type": "TimeSpan"
            }
          ],
          "Name": "GetSystemHistoryAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<ActivitySensor,ActivitySensorReadingChangedEventArgs>",
          "Name": "ReadingChanged"
        },
        {
          "Type": "TypedEventHandler<ActivitySensor,ActivitySensorStatusChangedEventArgs>",
          "Name": "StatusChanged"
        }
      ],
      "Name": "Windows.Devices.Sensors.ActivitySensor"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivityType",
          "IsGet": true,
          "Name": "Activity"
        },
        {
          "Type": "ActivitySensorReadingConfidence",
          "IsGet": true,
          "Name": "Confidence"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.ActivitySensorReading"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivitySensorReading",
          "IsGet": true,
          "Name": "Reading"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.ActivitySensorReadingChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivitySensorReading",
          "IsGet": true,
          "Name": "Reading"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.ActivitySensorReadingChangeReport"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivitySensorStatus",
          "IsGet": true,
          "Name": "Status"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.ActivitySensorStatusChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IReadOnlyList<ActivitySensorReadingChangeReport>",
          "Name": "ReadReports"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.Sensors.ActivitySensorTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MinimumReportInterval"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReportInterval"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "AltimeterReading",
          "Name": "GetCurrentReading"
        },
        {
          "IsStatic": true,
          "ReturnType": "Altimeter",
          "Name": "GetDefault"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<Altimeter,AltimeterReadingChangedEventArgs>",
          "Name": "ReadingChanged"
        }
      ],
      "Name": "Windows.Devices.Sensors.Altimeter"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "AltitudeChangeInMeters"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.AltimeterReading"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AltimeterReading",
          "IsGet": true,
          "Name": "Reading"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.AltimeterReadingChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MinimumReportInterval"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReportInterval"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "BarometerReading",
          "Name": "GetCurrentReading"
        },
        {
          "IsStatic": true,
          "ReturnType": "Barometer",
          "Name": "GetDefault"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<Barometer,BarometerReadingChangedEventArgs>",
          "Name": "ReadingChanged"
        }
      ],
      "Name": "Windows.Devices.Sensors.Barometer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "StationPressureInHectopascals"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.BarometerReading"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BarometerReading",
          "IsGet": true,
          "Name": "Reading"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.BarometerReadingChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MinimumReportInterval"
        },
        {
          "Type": "DisplayOrientations",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReadingTransform"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReportInterval"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "CompassReading",
          "Name": "GetCurrentReading"
        },
        {
          "IsStatic": true,
          "ReturnType": "Compass",
          "Name": "GetDefault"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<Compass,CompassReadingChangedEventArgs>",
          "Name": "ReadingChanged"
        }
      ],
      "Name": "Windows.Devices.Sensors.Compass"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MagnetometerAccuracy",
          "IsGet": true,
          "Name": "HeadingAccuracy"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "HeadingMagneticNorth"
        },
        {
          "Type": "Nullable<Double>",
          "IsGet": true,
          "Name": "HeadingTrueNorth"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.CompassReading"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "CompassReading",
          "IsGet": true,
          "Name": "Reading"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.CompassReadingChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MinimumReportInterval"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReportInterval"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<CustomSensor>",
          "Parameters": [
            {
              "Name": "sensorId",
              "Type": "String"
            }
          ],
          "Name": "FromIdAsync"
        },
        {
          "ReturnType": "CustomSensorReading",
          "Name": "GetCurrentReading"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "interfaceId",
              "Type": "Guid"
            }
          ],
          "Name": "GetDeviceSelector"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<CustomSensor,CustomSensorReadingChangedEventArgs>",
          "Name": "ReadingChanged"
        }
      ],
      "Name": "Windows.Devices.Sensors.Custom.CustomSensor"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyDictionary<String,Object>",
          "IsGet": true,
          "Name": "Properties"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.Custom.CustomSensorReading"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "CustomSensorReading",
          "IsGet": true,
          "Name": "Reading"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.Custom.CustomSensorReadingChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MinimumReportInterval"
        },
        {
          "Type": "DisplayOrientations",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReadingTransform"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReportInterval"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "GyrometerReading",
          "Name": "GetCurrentReading"
        },
        {
          "IsStatic": true,
          "ReturnType": "Gyrometer",
          "Name": "GetDefault"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<Gyrometer,GyrometerReadingChangedEventArgs>",
          "Name": "ReadingChanged"
        }
      ],
      "Name": "Windows.Devices.Sensors.Gyrometer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "AngularVelocityX"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "AngularVelocityY"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "AngularVelocityZ"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.GyrometerReading"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "GyrometerReading",
          "IsGet": true,
          "Name": "Reading"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.GyrometerReadingChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MinimumReportInterval"
        },
        {
          "Type": "DisplayOrientations",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReadingTransform"
        },
        {
          "Type": "SensorReadingType",
          "IsGet": true,
          "Name": "ReadingType"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReportInterval"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "InclinometerReading",
          "Name": "GetCurrentReading"
        },
        {
          "IsStatic": true,
          "ReturnType": "Inclinometer",
          "Name": "GetDefault"
        },
        {
          "IsStatic": true,
          "ReturnType": "Inclinometer",
          "Name": "GetDefaultForRelativeReadings"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<Inclinometer,InclinometerReadingChangedEventArgs>",
          "Name": "ReadingChanged"
        }
      ],
      "Name": "Windows.Devices.Sensors.Inclinometer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "PitchDegrees"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "RollDegrees"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Timestamp"
        },
        {
          "Type": "MagnetometerAccuracy",
          "IsGet": true,
          "Name": "YawAccuracy"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "YawDegrees"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.InclinometerReading"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "InclinometerReading",
          "IsGet": true,
          "Name": "Reading"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.InclinometerReadingChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MinimumReportInterval"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReportInterval"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "LightSensorReading",
          "Name": "GetCurrentReading"
        },
        {
          "IsStatic": true,
          "ReturnType": "LightSensor",
          "Name": "GetDefault"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<LightSensor,LightSensorReadingChangedEventArgs>",
          "Name": "ReadingChanged"
        }
      ],
      "Name": "Windows.Devices.Sensors.LightSensor"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "IlluminanceInLux"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.LightSensorReading"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "LightSensorReading",
          "IsGet": true,
          "Name": "Reading"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.LightSensorReadingChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MinimumReportInterval"
        },
        {
          "Type": "DisplayOrientations",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReadingTransform"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReportInterval"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "MagnetometerReading",
          "Name": "GetCurrentReading"
        },
        {
          "IsStatic": true,
          "ReturnType": "Magnetometer",
          "Name": "GetDefault"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<Magnetometer,MagnetometerReadingChangedEventArgs>",
          "Name": "ReadingChanged"
        }
      ],
      "Name": "Windows.Devices.Sensors.Magnetometer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MagnetometerAccuracy",
          "IsGet": true,
          "Name": "DirectionalAccuracy"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "MagneticFieldX"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "MagneticFieldY"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "MagneticFieldZ"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.MagnetometerReading"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MagnetometerReading",
          "IsGet": true,
          "Name": "Reading"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.MagnetometerReadingChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MinimumReportInterval"
        },
        {
          "Type": "DisplayOrientations",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReadingTransform"
        },
        {
          "Type": "SensorReadingType",
          "IsGet": true,
          "Name": "ReadingType"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReportInterval"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "OrientationSensorReading",
          "Name": "GetCurrentReading"
        },
        {
          "IsStatic": true,
          "ReturnType": "OrientationSensor",
          "Name": "GetDefault"
        },
        {
          "IsStatic": true,
          "ReturnType": "OrientationSensor",
          "Name": "GetDefaultForRelativeReadings"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<OrientationSensor,OrientationSensorReadingChangedEventArgs>",
          "Name": "ReadingChanged"
        }
      ],
      "Name": "Windows.Devices.Sensors.OrientationSensor"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SensorQuaternion",
          "IsGet": true,
          "Name": "Quaternion"
        },
        {
          "Type": "SensorRotationMatrix",
          "IsGet": true,
          "Name": "RotationMatrix"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Timestamp"
        },
        {
          "Type": "MagnetometerAccuracy",
          "IsGet": true,
          "Name": "YawAccuracy"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.OrientationSensorReading"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "OrientationSensorReading",
          "IsGet": true,
          "Name": "Reading"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.OrientationSensorReadingChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MinimumReportInterval"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "PowerInMilliwatts"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReportInterval"
        },
        {
          "Type": "PedometerStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Pedometer>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ],
          "Name": "FromIdAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Pedometer>",
          "Name": "GetDefaultAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Name": "GetDeviceSelector"
        },
        {
          "ReturnType": "IReadOnlyList<PedometerReading>",
          "Parameters": [
            {
              "Name": "triggerDetails",
              "Type": "SensorDataThresholdTriggerDetails"
            }
          ],
          "Name": "GetReadingsFromTriggerDetails"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<PedometerReading>>",
          "Parameters": [
            {
              "Name": "fromTime",
              "Type": "DateTimeOffset"
            }
          ],
          "Name": "GetSystemHistoryAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<PedometerReading>>",
          "Parameters": [
            {
              "Name": "fromTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "duration",
              "Type": "TimeSpan"
            }
          ],
          "Name": "GetSystemHistoryAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<Pedometer,PedometerReadingChangedEventArgs>",
          "Name": "ReadingChanged"
        },
        {
          "Type": "TypedEventHandler<Pedometer,PedometerStatusChangedEventArgs>",
          "Name": "StatusChanged"
        }
      ],
      "Name": "Windows.Devices.Sensors.Pedometer"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISensorDataThreshold"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.PedometerDataThreshold"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "CumulativeSteps"
        },
        {
          "Type": "PedometerStepKind",
          "IsGet": true,
          "Name": "StepKind"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.PedometerReading"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PedometerReading",
          "IsGet": true,
          "Name": "Reading"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.PedometerReadingChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PedometerStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.PedometerStatusChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "Name": "MaxDistanceInMillimeters"
        },
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "Name": "MinDistanceInMillimeters"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "ProximitySensor",
          "Parameters": [
            {
              "Name": "sensorId",
              "Type": "String"
            }
          ],
          "Name": "FromId"
        },
        {
          "ReturnType": "ProximitySensorReading",
          "Name": "GetCurrentReading"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Name": "GetDeviceSelector"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<ProximitySensor,ProximitySensorReadingChangedEventArgs>",
          "Name": "ReadingChanged"
        }
      ],
      "Name": "Windows.Devices.Sensors.ProximitySensor"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "Name": "DistanceInMillimeters"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsDetected"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.ProximitySensorReading"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ProximitySensorReading",
          "IsGet": true,
          "Name": "Reading"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.ProximitySensorReadingChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "SensorType",
          "IsGet": true,
          "Name": "SensorType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.SensorDataThresholdTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "W"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "X"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "Y"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "Z"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.SensorQuaternion"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "M11"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "M12"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "M13"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "M21"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "M22"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "M23"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "M31"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "M32"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "M33"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.SensorRotationMatrix"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "DisplayOrientations",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReadingTransform"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "SimpleOrientation",
          "Name": "GetCurrentOrientation"
        },
        {
          "IsStatic": true,
          "ReturnType": "SimpleOrientationSensor",
          "Name": "GetDefault"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<SimpleOrientationSensor,SimpleOrientationSensorOrientationChangedEventArgs>",
          "Name": "OrientationChanged"
        }
      ],
      "Name": "Windows.Devices.Sensors.SimpleOrientationSensor"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SimpleOrientation",
          "IsGet": true,
          "Name": "Orientation"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.SimpleOrientationSensorOrientationChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SmartCard",
          "IsGet": true,
          "Name": "SmartCard"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.CardAddedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SmartCard",
          "IsGet": true,
          "Name": "SmartCard"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.CardRemovedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SmartCardReader",
          "IsGet": true,
          "Name": "Reader"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<SmartCardConnection>",
          "Name": "ConnectAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IBuffer>",
          "Name": "GetAnswerToResetAsync"
        },
        {
          "ReturnType": "IAsyncOperation<SmartCardStatus>",
          "Name": "GetStatusAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.SmartCard"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "displayName",
              "Type": "String"
            },
            {
              "Name": "appletIds",
              "Type": "IList<IBuffer>"
            },
            {
              "Name": "emulationCategory",
              "Type": "SmartCardEmulationCategory"
            },
            {
              "Name": "emulationType",
              "Type": "SmartCardEmulationType"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IList<IBuffer>",
          "IsGet": true,
          "Name": "AppletIds"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "SmartCardEmulationCategory",
          "IsGet": true,
          "IsSet": true,
          "Name": "SmartCardEmulationCategory"
        },
        {
          "Type": "SmartCardEmulationType",
          "IsGet": true,
          "IsSet": true,
          "Name": "SmartCardEmulationType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.SmartCardAppletIdGroup"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SmartCardAppletIdGroupActivationPolicy",
          "IsGet": true,
          "Name": "ActivationPolicy"
        },
        {
          "Type": "SmartCardAppletIdGroup",
          "IsGet": true,
          "Name": "AppletIdGroup"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<SmartCardActivationPolicyChangeResult>",
          "Parameters": [
            {
              "Name": "policy",
              "Type": "SmartCardAppletIdGroupActivationPolicy"
            }
          ],
          "Name": "RequestActivationPolicyChangeAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.SmartCardAppletIdGroupRegistration"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperation<IBuffer>",
          "Parameters": [
            {
              "Name": "command",
              "Type": "IBuffer"
            }
          ],
          "Name": "TransmitAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.SmartCardConnection"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SmartCardEmulatorEnablementPolicy",
          "IsGet": true,
          "Name": "EnablementPolicy"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<SmartCardAppletIdGroupRegistration>>",
          "Name": "GetAppletIdGroupRegistrationsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<SmartCardEmulator>",
          "Name": "GetDefaultAsync"
        },
        {
          "ReturnType": "Boolean",
          "Name": "IsHostCardEmulationSupported"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<SmartCardAppletIdGroupRegistration>",
          "Parameters": [
            {
              "Name": "appletIdGroup",
              "Type": "SmartCardAppletIdGroup"
            }
          ],
          "Name": "RegisterAppletIdGroupAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Start"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "registration",
              "Type": "SmartCardAppletIdGroupRegistration"
            }
          ],
          "Name": "UnregisterAppletIdGroupAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<SmartCardEmulator,SmartCardEmulatorApduReceivedEventArgs>",
          "Name": "ApduReceived"
        },
        {
          "Type": "TypedEventHandler<SmartCardEmulator,SmartCardEmulatorConnectionDeactivatedEventArgs>",
          "Name": "ConnectionDeactivated"
        }
      ],
      "Name": "Windows.Devices.SmartCards.SmartCardEmulator"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "CommandApdu"
        },
        {
          "Type": "SmartCardEmulatorConnectionProperties",
          "IsGet": true,
          "Name": "ConnectionProperties"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "responseApdu",
              "Type": "IBuffer"
            }
          ],
          "Name": "TryRespondAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.SmartCardEmulatorApduReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SmartCardEmulatorConnectionProperties",
          "IsGet": true,
          "Name": "ConnectionProperties"
        },
        {
          "Type": "SmartCardEmulatorConnectionDeactivatedReason",
          "IsGet": true,
          "Name": "Reason"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.SmartCardEmulatorConnectionDeactivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "SmartCardEmulatorConnectionSource",
          "IsGet": true,
          "Name": "Source"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.SmartCardEmulatorConnectionProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "Challenge"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "response",
              "Type": "IBuffer"
            },
            {
              "Name": "newAdministrativeKey",
              "Type": "IBuffer"
            }
          ],
          "Name": "ChangeAdministrativeKeyAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "response",
              "Type": "IBuffer"
            },
            {
              "Name": "formatCard",
              "Type": "Boolean"
            }
          ],
          "Name": "ProvisionAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "response",
              "Type": "IBuffer"
            },
            {
              "Name": "formatCard",
              "Type": "Boolean"
            },
            {
              "Name": "newCardId",
              "Type": "Guid"
            }
          ],
          "Name": "ProvisionAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "response",
              "Type": "IBuffer"
            }
          ],
          "Name": "VerifyResponseAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.SmartCardChallengeContext"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SmartCardPinCharacterPolicyOption",
          "IsGet": true,
          "IsSet": true,
          "Name": "Digits"
        },
        {
          "Type": "SmartCardPinCharacterPolicyOption",
          "IsGet": true,
          "IsSet": true,
          "Name": "LowercaseLetters"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxLength"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "MinLength"
        },
        {
          "Type": "SmartCardPinCharacterPolicyOption",
          "IsGet": true,
          "IsSet": true,
          "Name": "SpecialCharacters"
        },
        {
          "Type": "SmartCardPinCharacterPolicyOption",
          "IsGet": true,
          "IsSet": true,
          "Name": "UppercaseLetters"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.SmartCardPinPolicy"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.SmartCardPinResetDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Deadline"
        },
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "Challenge"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "SmartCardPinResetDeferral",
          "Name": "GetDeferral"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "response",
              "Type": "IBuffer"
            }
          ],
          "Name": "SetResponse"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.SmartCardPinResetRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SmartCard",
          "IsGet": true,
          "Name": "SmartCard"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<SmartCardProvisioning>",
          "Parameters": [
            {
              "Name": "card",
              "Type": "SmartCard"
            }
          ],
          "Name": "FromSmartCardAsync"
        },
        {
          "ReturnType": "IAsyncOperation<SmartCardChallengeContext>",
          "Name": "GetChallengeContextAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Guid>",
          "Name": "GetIdAsync"
        },
        {
          "ReturnType": "IAsyncOperation<String>",
          "Name": "GetNameAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Name": "RequestPinChangeAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "handler",
              "Type": "SmartCardPinResetHandler"
            }
          ],
          "Name": "RequestPinResetAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<SmartCardProvisioning>",
          "Parameters": [
            {
              "Name": "friendlyName",
              "Type": "String"
            },
            {
              "Name": "administrativeKey",
              "Type": "IBuffer"
            },
            {
              "Name": "pinPolicy",
              "Type": "SmartCardPinPolicy"
            }
          ],
          "Name": "RequestVirtualSmartCardCreationAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<SmartCardProvisioning>",
          "Parameters": [
            {
              "Name": "friendlyName",
              "Type": "String"
            },
            {
              "Name": "administrativeKey",
              "Type": "IBuffer"
            },
            {
              "Name": "pinPolicy",
              "Type": "SmartCardPinPolicy"
            },
            {
              "Name": "cardId",
              "Type": "Guid"
            }
          ],
          "Name": "RequestVirtualSmartCardCreationAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "card",
              "Type": "SmartCard"
            }
          ],
          "Name": "RequestVirtualSmartCardDeletionAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.SmartCardProvisioning"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "SmartCardReaderKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<SmartCard>>",
          "Name": "FindAllCardsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<SmartCardReader>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ],
          "Name": "FromIdAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Name": "GetDeviceSelector"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "kind",
              "Type": "SmartCardReaderKind"
            }
          ],
          "Name": "GetDeviceSelector"
        },
        {
          "ReturnType": "IAsyncOperation<SmartCardReaderStatus>",
          "Name": "GetStatusAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<SmartCardReader,CardAddedEventArgs>",
          "Name": "CardAdded"
        },
        {
          "Type": "TypedEventHandler<SmartCardReader,CardRemovedEventArgs>",
          "Name": "CardRemoved"
        }
      ],
      "Name": "Windows.Devices.SmartCards.SmartCardReader"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SmartCardEmulator",
          "IsGet": true,
          "Name": "Emulator"
        },
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "SourceAppletId"
        },
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "TriggerData"
        },
        {
          "Type": "SmartCardTriggerType",
          "IsGet": true,
          "Name": "TriggerType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.SmartCards.SmartCardTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "PreferGroupOwnerMode"
        },
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "RemoteServiceInfo"
        },
        {
          "Type": "WiFiDirectServiceError",
          "IsGet": true,
          "Name": "ServiceError"
        },
        {
          "Type": "IBuffer",
          "IsGet": true,
          "IsSet": true,
          "Name": "SessionInfo"
        },
        {
          "Type": "IReadOnlyList<WiFiDirectServiceConfigurationMethod>",
          "IsGet": true,
          "Name": "SupportedConfigurationMethods"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<WiFiDirectServiceSession>",
          "Name": "ConnectAsync"
        },
        {
          "ReturnType": "IAsyncOperation<WiFiDirectServiceSession>",
          "Parameters": [
            {
              "Name": "pin",
              "Type": "String"
            }
          ],
          "Name": "ConnectAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "WiFiDirectService",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ],
          "Name": "FromId"
        },
        {
          "ReturnType": "IAsyncOperation<WiFiDirectServiceProvisioningInfo>",
          "Parameters": [
            {
              "Name": "selectedConfigurationMethod",
              "Type": "WiFiDirectServiceConfigurationMethod"
            }
          ],
          "Name": "GetProvisioningInfoAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "serviceName",
              "Type": "String"
            }
          ],
          "Name": "GetSelector"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "serviceName",
              "Type": "String"
            },
            {
              "Name": "serviceInfoFilter",
              "Type": "IBuffer"
            }
          ],
          "Name": "GetSelector"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<WiFiDirectService,WiFiDirectServiceSessionDeferredEventArgs>",
          "Name": "SessionDeferred"
        }
      ],
      "Name": "Windows.Devices.WiFiDirect.Services.WiFiDirectService"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "serviceName",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "WiFiDirectServiceAdvertisementStatus",
          "IsGet": true,
          "Name": "AdvertisementStatus"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AutoAcceptSession"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "CustomServiceStatusCode"
        },
        {
          "Type": "IBuffer",
          "IsGet": true,
          "IsSet": true,
          "Name": "DeferredSessionInfo"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "PreferGroupOwnerMode"
        },
        {
          "Type": "IList<WiFiDirectServiceConfigurationMethod>",
          "IsGet": true,
          "Name": "PreferredConfigurationMethods"
        },
        {
          "Type": "WiFiDirectServiceError",
          "IsGet": true,
          "Name": "ServiceError"
        },
        {
          "Type": "IBuffer",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServiceInfo"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ServiceName"
        },
        {
          "Type": "WiFiDirectServiceStatus",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServiceStatus"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<WiFiDirectServiceSession>",
          "Parameters": [
            {
              "Name": "deviceInfo",
              "Type": "DeviceInformation"
            }
          ],
          "Name": "ConnectAsync"
        },
        {
          "ReturnType": "IAsyncOperation<WiFiDirectServiceSession>",
          "Parameters": [
            {
              "Name": "deviceInfo",
              "Type": "DeviceInformation"
            },
            {
              "Name": "pin",
              "Type": "String"
            }
          ],
          "Name": "ConnectAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Start"
        },
        {
          "ReturnType": "Void",
          "Name": "Stop"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<WiFiDirectServiceAdvertiser,Object>",
          "Name": "AdvertisementStatusChanged"
        },
        {
          "Type": "TypedEventHandler<WiFiDirectServiceAdvertiser,WiFiDirectServiceAutoAcceptSessionConnectedEventArgs>",
          "Name": "AutoAcceptSessionConnected"
        },
        {
          "Type": "TypedEventHandler<WiFiDirectServiceAdvertiser,WiFiDirectServiceSessionRequestedEventArgs>",
          "Name": "SessionRequested"
        }
      ],
      "Name": "Windows.Devices.WiFiDirect.Services.WiFiDirectServiceAdvertiser"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "WiFiDirectServiceSession",
          "IsGet": true,
          "Name": "Session"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.WiFiDirect.Services.WiFiDirectServiceAutoAcceptSessionConnectedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsGroupFormationNeeded"
        },
        {
          "Type": "WiFiDirectServiceConfigurationMethod",
          "IsGet": true,
          "Name": "SelectedConfigurationMethod"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.WiFiDirect.Services.WiFiDirectServiceProvisioningInfo"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<EndpointPair>",
          "IsGet": true,
          "Name": "EndpointPairs"
        },
        {
          "Type": "WiFiDirectServiceIPProtocol",
          "IsGet": true,
          "Name": "Protocol"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.WiFiDirect.Services.WiFiDirectServiceRemotePortAddedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "AdvertisementId"
        },
        {
          "Type": "WiFiDirectServiceSessionErrorStatus",
          "IsGet": true,
          "Name": "ErrorStatus"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ServiceAddress"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ServiceName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "SessionAddress"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "SessionId"
        },
        {
          "Type": "WiFiDirectServiceSessionStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "value",
              "Type": "DatagramSocket"
            }
          ],
          "Name": "AddDatagramSocketAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "value",
              "Type": "StreamSocketListener"
            }
          ],
          "Name": "AddStreamSocketListenerAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IReadOnlyList<EndpointPair>",
          "Name": "GetConnectionEndpointPairs"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<WiFiDirectServiceSession,WiFiDirectServiceRemotePortAddedEventArgs>",
          "Name": "RemotePortAdded"
        },
        {
          "Type": "TypedEventHandler<WiFiDirectServiceSession,Object>",
          "Name": "SessionStatusChanged"
        }
      ],
      "Name": "Windows.Devices.WiFiDirect.Services.WiFiDirectServiceSession"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "DeferredSessionInfo"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.WiFiDirect.Services.WiFiDirectServiceSessionDeferredEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DeviceInformation",
          "IsGet": true,
          "Name": "DeviceInformation"
        },
        {
          "Type": "WiFiDirectServiceProvisioningInfo",
          "IsGet": true,
          "Name": "ProvisioningInfo"
        },
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "SessionInfo"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.WiFiDirect.Services.WiFiDirectServiceSessionRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "WiFiDirectServiceSessionRequest",
          "Name": "GetSessionRequest"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.WiFiDirect.Services.WiFiDirectServiceSessionRequestedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<WiFiDirectInformationElement>",
          "IsGet": true,
          "IsSet": true,
          "Name": "InformationElements"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsAutonomousGroupOwnerEnabled"
        },
        {
          "Type": "WiFiDirectAdvertisementListenStateDiscoverability",
          "IsGet": true,
          "IsSet": true,
          "Name": "ListenStateDiscoverability"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.WiFiDirect.WiFiDirectAdvertisement"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "WiFiDirectAdvertisement",
          "IsGet": true,
          "Name": "Advertisement"
        },
        {
          "Type": "WiFiDirectAdvertisementPublisherStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Start"
        },
        {
          "ReturnType": "Void",
          "Name": "Stop"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<WiFiDirectAdvertisementPublisher,WiFiDirectAdvertisementPublisherStatusChangedEventArgs>",
          "Name": "StatusChanged"
        }
      ],
      "Name": "Windows.Devices.WiFiDirect.WiFiDirectAdvertisementPublisher"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "WiFiDirectError",
          "IsGet": true,
          "Name": "Error"
        },
        {
          "Type": "WiFiDirectAdvertisementPublisherStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.WiFiDirect.WiFiDirectAdvertisementPublisherStatusChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "TypedEventHandler<WiFiDirectConnectionListener,WiFiDirectConnectionRequestedEventArgs>",
          "Name": "ConnectionRequested"
        }
      ],
      "Name": "Windows.Devices.WiFiDirect.WiFiDirectConnectionListener"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int16",
          "IsGet": true,
          "IsSet": true,
          "Name": "GroupOwnerIntent"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.WiFiDirect.WiFiDirectConnectionParameters"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DeviceInformation",
          "IsGet": true,
          "Name": "DeviceInformation"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.WiFiDirect.WiFiDirectConnectionRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "WiFiDirectConnectionRequest",
          "Name": "GetConnectionRequest"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.WiFiDirect.WiFiDirectConnectionRequestedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "WiFiDirectConnectionStatus",
          "IsGet": true,
          "Name": "ConnectionStatus"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<WiFiDirectDevice>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            },
            {
              "Name": "connectionParameters",
              "Type": "WiFiDirectConnectionParameters"
            }
          ],
          "Name": "FromIdAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<WiFiDirectDevice>",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ],
          "Name": "FromIdAsync"
        },
        {
          "ReturnType": "IReadOnlyList<EndpointPair>",
          "Name": "GetConnectionEndpointPairs"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "type",
              "Type": "WiFiDirectDeviceSelectorType"
            }
          ],
          "Name": "GetDeviceSelector"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Name": "GetDeviceSelector"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<WiFiDirectDevice,Object>",
          "Name": "ConnectionStatusChanged"
        }
      ],
      "Name": "Windows.Devices.WiFiDirect.WiFiDirectDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IBuffer",
          "IsGet": true,
          "IsSet": true,
          "Name": "Oui"
        },
        {
          "Type": "Byte",
          "IsGet": true,
          "IsSet": true,
          "Name": "OuiType"
        },
        {
          "Type": "IBuffer",
          "IsGet": true,
          "IsSet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IList<WiFiDirectInformationElement>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "CreateFromBuffer"
        },
        {
          "IsStatic": true,
          "ReturnType": "IList<WiFiDirectInformationElement>",
          "Parameters": [
            {
              "Name": "deviceInformation",
              "Type": "DeviceInformation"
            }
          ],
          "Name": "CreateFromDeviceInformation"
        }
      ],
      "Events": [],
      "Name": "Windows.Devices.WiFiDirect.WiFiDirectInformationElement"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,Object>>",
        "IDictionary<String,Object>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,Object>>",
        "IObservableMap<String,Object>",
        "IPropertySet"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "MapChangedEventHandler<String,Object>",
          "Name": "MapChanged"
        }
      ],
      "Name": "Windows.Foundation.Collections.PropertySet"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,Object>>",
        "IDictionary<String,Object>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,Object>>",
        "IObservableMap<String,Object>",
        "IPropertySet"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "MapChangedEventHandler<String,Object>",
          "Name": "MapChanged"
        }
      ],
      "Name": "Windows.Foundation.Collections.ValueSet"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "handler",
              "Type": "DeferralCompletedHandler"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.Deferral"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "traceLevel",
              "Type": "CausalityTraceLevel"
            },
            {
              "Name": "source",
              "Type": "CausalitySource"
            },
            {
              "Name": "platformId",
              "Type": "Guid"
            },
            {
              "Name": "operationId",
              "Type": "UInt64"
            },
            {
              "Name": "status",
              "Type": "AsyncStatus"
            }
          ],
          "Name": "TraceOperationCompletion"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "traceLevel",
              "Type": "CausalityTraceLevel"
            },
            {
              "Name": "source",
              "Type": "CausalitySource"
            },
            {
              "Name": "platformId",
              "Type": "Guid"
            },
            {
              "Name": "operationId",
              "Type": "UInt64"
            },
            {
              "Name": "operationName",
              "Type": "String"
            },
            {
              "Name": "relatedContext",
              "Type": "UInt64"
            }
          ],
          "Name": "TraceOperationCreation"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "traceLevel",
              "Type": "CausalityTraceLevel"
            },
            {
              "Name": "source",
              "Type": "CausalitySource"
            },
            {
              "Name": "platformId",
              "Type": "Guid"
            },
            {
              "Name": "operationId",
              "Type": "UInt64"
            },
            {
              "Name": "relation",
              "Type": "CausalityRelation"
            }
          ],
          "Name": "TraceOperationRelation"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "traceLevel",
              "Type": "CausalityTraceLevel"
            },
            {
              "Name": "source",
              "Type": "CausalitySource"
            },
            {
              "Name": "work",
              "Type": "CausalitySynchronousWork"
            }
          ],
          "Name": "TraceSynchronousWorkCompletion"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "traceLevel",
              "Type": "CausalityTraceLevel"
            },
            {
              "Name": "source",
              "Type": "CausalitySource"
            },
            {
              "Name": "platformId",
              "Type": "Guid"
            },
            {
              "Name": "operationId",
              "Type": "UInt64"
            },
            {
              "Name": "work",
              "Type": "CausalitySynchronousWork"
            }
          ],
          "Name": "TraceSynchronousWorkStart"
        }
      ],
      "Events": [
        {
          "Type": "EventHandler<TracingStatusChangedEventArgs>",
          "IsStatic": true,
          "Name": "TracingStatusChanged"
        }
      ],
      "Name": "Windows.Foundation.Diagnostics.AsyncCausalityTracer"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IFileLoggingSession"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            }
          ],
          "Name": "AddLoggingChannel"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            },
            {
              "Name": "maxLevel",
              "Type": "LoggingLevel"
            }
          ],
          "Name": "AddLoggingChannel"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Name": "CloseAndSaveToFileAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            }
          ],
          "Name": "RemoveLoggingChannel"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<IFileLoggingSession,LogFileGeneratedEventArgs>",
          "Name": "LogFileGenerated"
        }
      ],
      "Name": "Windows.Foundation.Diagnostics.FileLoggingSession"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "StorageFile",
          "IsGet": true,
          "Name": "File"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Diagnostics.LogFileGeneratedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "activityName",
              "Type": "String"
            },
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "activityName",
              "Type": "String"
            },
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            },
            {
              "Name": "level",
              "Type": "LoggingLevel"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.Diagnostics.LoggingActivity"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "AddBoolean"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddBoolean"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddBoolean"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Boolean[]"
            }
          ],
          "Name": "AddBooleanArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Boolean[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddBooleanArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Boolean[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddBooleanArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "DateTimeOffset"
            }
          ],
          "Name": "AddDateTime"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddDateTime"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddDateTime"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "DateTimeOffset[]"
            }
          ],
          "Name": "AddDateTimeArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "DateTimeOffset[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddDateTimeArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "DateTimeOffset[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddDateTimeArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Double"
            }
          ],
          "Name": "AddDouble"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Double"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddDouble"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Double"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddDouble"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Double[]"
            }
          ],
          "Name": "AddDoubleArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Double[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddDoubleArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Double[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddDoubleArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "AddEmpty"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddEmpty"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddEmpty"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Guid"
            }
          ],
          "Name": "AddGuid"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Guid"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddGuid"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Guid"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddGuid"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Guid[]"
            }
          ],
          "Name": "AddGuidArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Guid[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddGuidArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Guid[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddGuidArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Char"
            }
          ],
          "Name": "AddChar16"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Char"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddChar16"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Char"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddChar16"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Char[]"
            }
          ],
          "Name": "AddChar16Array"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Char[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddChar16Array"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Char[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddChar16Array"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Int16"
            }
          ],
          "Name": "AddInt16"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Int16"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddInt16"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Int16"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddInt16"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Int16[]"
            }
          ],
          "Name": "AddInt16Array"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Int16[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddInt16Array"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Int16[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddInt16Array"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Int32"
            }
          ],
          "Name": "AddInt32"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Int32"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddInt32"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Int32"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddInt32"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Int32[]"
            }
          ],
          "Name": "AddInt32Array"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Int32[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddInt32Array"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Int32[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddInt32Array"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Int64"
            }
          ],
          "Name": "AddInt64"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Int64"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddInt64"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Int64"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddInt64"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Int64[]"
            }
          ],
          "Name": "AddInt64Array"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Int64[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddInt64Array"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Int64[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddInt64Array"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Point"
            }
          ],
          "Name": "AddPoint"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Point"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddPoint"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Point"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddPoint"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Point[]"
            }
          ],
          "Name": "AddPointArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Point[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddPointArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Point[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddPointArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Rect"
            }
          ],
          "Name": "AddRect"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Rect"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddRect"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Rect"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddRect"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Rect[]"
            }
          ],
          "Name": "AddRectArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Rect[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddRectArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Rect[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddRectArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Single"
            }
          ],
          "Name": "AddSingle"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Single"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddSingle"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Single"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddSingle"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Single[]"
            }
          ],
          "Name": "AddSingleArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Single[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddSingleArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Single[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddSingleArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Size"
            }
          ],
          "Name": "AddSize"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Size"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddSize"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Size"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddSize"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Size[]"
            }
          ],
          "Name": "AddSizeArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Size[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddSizeArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Size[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddSizeArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "AddString"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddString"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddString"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String[]"
            }
          ],
          "Name": "AddStringArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddStringArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddStringArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "TimeSpan"
            }
          ],
          "Name": "AddTimeSpan"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "TimeSpan"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddTimeSpan"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "TimeSpan"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddTimeSpan"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "TimeSpan[]"
            }
          ],
          "Name": "AddTimeSpanArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "TimeSpan[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddTimeSpanArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "TimeSpan[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddTimeSpanArray"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "UInt16"
            }
          ],
          "Name": "AddUInt16"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "UInt16"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddUInt16"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "UInt16"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddUInt16"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "UInt16[]"
            }
          ],
          "Name": "AddUInt16Array"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "UInt16[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddUInt16Array"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "UInt16[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddUInt16Array"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "UInt32"
            }
          ],
          "Name": "AddUInt32"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "UInt32"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddUInt32"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "UInt32"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddUInt32"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "UInt32[]"
            }
          ],
          "Name": "AddUInt32Array"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "UInt32[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddUInt32Array"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "UInt32[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddUInt32Array"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ],
          "Name": "AddUInt64"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "UInt64"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddUInt64"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "UInt64"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddUInt64"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "UInt64[]"
            }
          ],
          "Name": "AddUInt64Array"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "UInt64[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddUInt64Array"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "UInt64[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddUInt64Array"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Byte"
            }
          ],
          "Name": "AddUInt8"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Byte"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddUInt8"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Byte"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddUInt8"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Byte[]"
            }
          ],
          "Name": "AddUInt8Array"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Byte[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            }
          ],
          "Name": "AddUInt8Array"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "Byte[]"
            },
            {
              "Name": "format",
              "Type": "LoggingFieldFormat"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "AddUInt8Array"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "BeginStruct"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "tags",
              "Type": "Int32"
            }
          ],
          "Name": "BeginStruct"
        },
        {
          "ReturnType": "Void",
          "Name": "Clear"
        },
        {
          "ReturnType": "Void",
          "Name": "EndStruct"
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.Diagnostics.LoggingFields"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "ILoggingChannel"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "LoggingChannelOptions"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "LoggingChannelOptions"
            },
            {
              "Name": "id",
              "Type": "Guid"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Enabled"
        },
        {
          "Type": "LoggingLevel",
          "IsGet": true,
          "Name": "Level"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "eventString",
              "Type": "String"
            }
          ],
          "Name": "LogMessage"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "eventString",
              "Type": "String"
            },
            {
              "Name": "level",
              "Type": "LoggingLevel"
            }
          ],
          "Name": "LogMessage"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value1",
              "Type": "String"
            },
            {
              "Name": "value2",
              "Type": "Int32"
            }
          ],
          "Name": "LogValuePair"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value1",
              "Type": "String"
            },
            {
              "Name": "value2",
              "Type": "Int32"
            },
            {
              "Name": "level",
              "Type": "LoggingLevel"
            }
          ],
          "Name": "LogValuePair"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<ILoggingChannel,Object>",
          "Name": "LoggingEnabled"
        }
      ],
      "Name": "Windows.Foundation.Diagnostics.LoggingChannel"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "group",
              "Type": "Guid"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Guid",
          "IsGet": true,
          "IsSet": true,
          "Name": "Group"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Diagnostics.LoggingChannelOptions"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "keywords",
              "Type": "Int64"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Guid",
          "IsGet": true,
          "IsSet": true,
          "Name": "ActivityId"
        },
        {
          "Type": "Int64",
          "IsGet": true,
          "IsSet": true,
          "Name": "Keywords"
        },
        {
          "Type": "LoggingOpcode",
          "IsGet": true,
          "IsSet": true,
          "Name": "Opcode"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "IsSet": true,
          "Name": "RelatedActivityId"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Tags"
        },
        {
          "Type": "Int16",
          "IsGet": true,
          "IsSet": true,
          "Name": "Task"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Diagnostics.LoggingOptions"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "ILoggingSession"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            }
          ],
          "Name": "AddLoggingChannel"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            },
            {
              "Name": "maxLevel",
              "Type": "LoggingLevel"
            }
          ],
          "Name": "AddLoggingChannel"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            }
          ],
          "Name": "RemoveLoggingChannel"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "folder",
              "Type": "IStorageFolder"
            },
            {
              "Name": "fileName",
              "Type": "String"
            }
          ],
          "Name": "SaveToFileAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.Diagnostics.LoggingSession"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IErrorReportingSettings"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "ErrorOptions",
          "Name": "GetErrorOptions"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "ErrorOptions"
            }
          ],
          "Name": "SetErrorOptions"
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.Diagnostics.RuntimeBrokerErrorSettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Enabled"
        },
        {
          "Type": "CausalityTraceLevel",
          "IsGet": true,
          "Name": "TraceLevel"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "type",
              "Type": "Type"
            },
            {
              "Name": "version",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "type",
              "Type": "Type"
            },
            {
              "Name": "version",
              "Type": "UInt32"
            },
            {
              "Name": "platform",
              "Type": "Platform"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "type",
              "Type": "Type"
            },
            {
              "Name": "version",
              "Type": "UInt32"
            },
            {
              "Name": "contractName",
              "Type": "Type"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "version",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "version",
              "Type": "UInt32"
            },
            {
              "Name": "platform",
              "Type": "Platform"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "version",
              "Type": "UInt32"
            },
            {
              "Name": "type",
              "Type": "Type"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.ActivatableAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.AllowForWebAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.AllowMultipleAttribute"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "contractName",
              "Type": "String"
            },
            {
              "Name": "majorVersion",
              "Type": "UInt16"
            }
          ],
          "Name": "IsApiContractPresent"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "contractName",
              "Type": "String"
            },
            {
              "Name": "majorVersion",
              "Type": "UInt16"
            },
            {
              "Name": "minorVersion",
              "Type": "UInt16"
            }
          ],
          "Name": "IsApiContractPresent"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "enumTypeName",
              "Type": "String"
            },
            {
              "Name": "valueName",
              "Type": "String"
            }
          ],
          "Name": "IsEnumNamedValuePresent"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "typeName",
              "Type": "String"
            },
            {
              "Name": "eventName",
              "Type": "String"
            }
          ],
          "Name": "IsEventPresent"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "typeName",
              "Type": "String"
            },
            {
              "Name": "methodName",
              "Type": "String"
            }
          ],
          "Name": "IsMethodPresent"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "typeName",
              "Type": "String"
            },
            {
              "Name": "methodName",
              "Type": "String"
            },
            {
              "Name": "inputParameterCount",
              "Type": "UInt32"
            }
          ],
          "Name": "IsMethodPresent"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "typeName",
              "Type": "String"
            },
            {
              "Name": "propertyName",
              "Type": "String"
            }
          ],
          "Name": "IsPropertyPresent"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "typeName",
              "Type": "String"
            },
            {
              "Name": "propertyName",
              "Type": "String"
            }
          ],
          "Name": "IsReadOnlyPropertyPresent"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "typeName",
              "Type": "String"
            }
          ],
          "Name": "IsTypePresent"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "typeName",
              "Type": "String"
            },
            {
              "Name": "propertyName",
              "Type": "String"
            }
          ],
          "Name": "IsWriteablePropertyPresent"
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.ApiInformation"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "type",
              "Type": "Type"
            },
            {
              "Name": "compositionType",
              "Type": "CompositionType"
            },
            {
              "Name": "version",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "type",
              "Type": "Type"
            },
            {
              "Name": "compositionType",
              "Type": "CompositionType"
            },
            {
              "Name": "version",
              "Type": "UInt32"
            },
            {
              "Name": "platform",
              "Type": "Platform"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "type",
              "Type": "Type"
            },
            {
              "Name": "compositionType",
              "Type": "CompositionType"
            },
            {
              "Name": "version",
              "Type": "UInt32"
            },
            {
              "Name": "contract",
              "Type": "Type"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.ComposableAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.DefaultAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.DefaultOverloadAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "message",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "DeprecationType"
            },
            {
              "Name": "version",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "message",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "DeprecationType"
            },
            {
              "Name": "version",
              "Type": "UInt32"
            },
            {
              "Name": "platform",
              "Type": "Platform"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "message",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "DeprecationType"
            },
            {
              "Name": "version",
              "Type": "UInt32"
            },
            {
              "Name": "contract",
              "Type": "Type"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.DeprecatedAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "UInt32",
          "Name": "version"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.DualApiPartitionAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "typeName",
              "Type": "Type"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.ExclusiveToAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.ExperimentalAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "a",
              "Type": "UInt32"
            },
            {
              "Name": "b",
              "Type": "UInt16"
            },
            {
              "Name": "c",
              "Type": "UInt16"
            },
            {
              "Name": "d",
              "Type": "Byte"
            },
            {
              "Name": "e",
              "Type": "Byte"
            },
            {
              "Name": "f",
              "Type": "Byte"
            },
            {
              "Name": "g",
              "Type": "Byte"
            },
            {
              "Name": "h",
              "Type": "Byte"
            },
            {
              "Name": "i",
              "Type": "Byte"
            },
            {
              "Name": "j",
              "Type": "Byte"
            },
            {
              "Name": "k",
              "Type": "Byte"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.GuidAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.HasVariantAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "indexLengthParameter",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.LengthIsAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "behavior",
              "Type": "MarshalingType"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.MarshalingBehaviorAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "UInt32",
          "Name": "Version"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.MuseAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "method",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.OverloadAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.OverridableAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "platform",
              "Type": "Platform"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.PlatformAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.ProtectedAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "minValue",
              "Type": "Int32"
            },
            {
              "Name": "maxValue",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.RangeAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.RemoteAsyncAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "type",
              "Type": "Type"
            },
            {
              "Name": "version",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "type",
              "Type": "Type"
            },
            {
              "Name": "version",
              "Type": "UInt32"
            },
            {
              "Name": "platform",
              "Type": "Platform"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "type",
              "Type": "Type"
            },
            {
              "Name": "version",
              "Type": "UInt32"
            },
            {
              "Name": "contractName",
              "Type": "Type"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.StaticAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "model",
              "Type": "ThreadingModel"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.ThreadingAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.VariantAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "version",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "version",
              "Type": "UInt32"
            },
            {
              "Name": "platform",
              "Type": "Platform"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.VersionAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Metadata.WebHostHiddenAttribute"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "CreateBoolean"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Boolean[]"
            }
          ],
          "Name": "CreateBooleanArray"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "DateTimeOffset"
            }
          ],
          "Name": "CreateDateTime"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "DateTimeOffset[]"
            }
          ],
          "Name": "CreateDateTimeArray"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ],
          "Name": "CreateDouble"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double[]"
            }
          ],
          "Name": "CreateDoubleArray"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Name": "CreateEmpty"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Guid"
            }
          ],
          "Name": "CreateGuid"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Guid[]"
            }
          ],
          "Name": "CreateGuidArray"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Char"
            }
          ],
          "Name": "CreateChar16"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Char[]"
            }
          ],
          "Name": "CreateChar16Array"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "CreateInspectable"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object[]"
            }
          ],
          "Name": "CreateInspectableArray"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int16"
            }
          ],
          "Name": "CreateInt16"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int16[]"
            }
          ],
          "Name": "CreateInt16Array"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int32"
            }
          ],
          "Name": "CreateInt32"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int32[]"
            }
          ],
          "Name": "CreateInt32Array"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ],
          "Name": "CreateInt64"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64[]"
            }
          ],
          "Name": "CreateInt64Array"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Point"
            }
          ],
          "Name": "CreatePoint"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Point[]"
            }
          ],
          "Name": "CreatePointArray"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Rect"
            }
          ],
          "Name": "CreateRect"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Rect[]"
            }
          ],
          "Name": "CreateRectArray"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Single"
            }
          ],
          "Name": "CreateSingle"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Single[]"
            }
          ],
          "Name": "CreateSingleArray"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Size"
            }
          ],
          "Name": "CreateSize"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Size[]"
            }
          ],
          "Name": "CreateSizeArray"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "CreateString"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String[]"
            }
          ],
          "Name": "CreateStringArray"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "TimeSpan"
            }
          ],
          "Name": "CreateTimeSpan"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "TimeSpan[]"
            }
          ],
          "Name": "CreateTimeSpanArray"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt16"
            }
          ],
          "Name": "CreateUInt16"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt16[]"
            }
          ],
          "Name": "CreateUInt16Array"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt32"
            }
          ],
          "Name": "CreateUInt32"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt32[]"
            }
          ],
          "Name": "CreateUInt32Array"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ],
          "Name": "CreateUInt64"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64[]"
            }
          ],
          "Name": "CreateUInt64Array"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte"
            }
          ],
          "Name": "CreateUInt8"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]"
            }
          ],
          "Name": "CreateUInt8Array"
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.PropertyValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<IWwwFormUrlDecoderEntry>",
        "IReadOnlyCollection<IWwwFormUrlDecoderEntry>",
        "IReadOnlyList<IWwwFormUrlDecoderEntry>"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "query",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "GetFirstValueByName"
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.WwwFormUrlDecoder"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<String>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Languages"
        },
        {
          "Type": "IReadOnlyList<String>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ManifestLanguages"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true,
          "Name": "PrimaryLanguageOverride"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Globalization.ApplicationLanguages"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "languages",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "languages",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "calendar",
              "Type": "String"
            },
            {
              "Name": "clock",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "languages",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "calendar",
              "Type": "String"
            },
            {
              "Name": "clock",
              "Type": "String"
            },
            {
              "Name": "timeZoneId",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Day"
        },
        {
          "Type": "DayOfWeek",
          "IsGet": true,
          "Name": "DayOfWeek"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Era"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "FirstDayInThisMonth"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "FirstEra"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "FirstHourInThisPeriod"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "FirstMinuteInThisHour"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "FirstMonthInThisYear"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "FirstPeriodInThisDay"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "FirstSecondInThisMinute"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "FirstYearInThisEra"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Hour"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsDaylightSavingTime"
        },
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "Languages"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "LastDayInThisMonth"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "LastEra"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "LastHourInThisPeriod"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "LastMinuteInThisHour"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "LastMonthInThisYear"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "LastPeriodInThisDay"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "LastSecondInThisMinute"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "LastYearInThisEra"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Minute"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Month"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Nanosecond"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "NumberOfDaysInThisMonth"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "NumberOfEras"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "NumberOfHoursInThisPeriod"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "NumberOfMinutesInThisHour"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "NumberOfMonthsInThisYear"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "NumberOfPeriodsInThisDay"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "NumberOfSecondsInThisMinute"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "NumberOfYearsInThisEra"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NumeralSystem"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Period"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ResolvedLanguage"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Second"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Year"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "days",
              "Type": "Int32"
            }
          ],
          "Name": "AddDays"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "eras",
              "Type": "Int32"
            }
          ],
          "Name": "AddEras"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "hours",
              "Type": "Int32"
            }
          ],
          "Name": "AddHours"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "minutes",
              "Type": "Int32"
            }
          ],
          "Name": "AddMinutes"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "months",
              "Type": "Int32"
            }
          ],
          "Name": "AddMonths"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "nanoseconds",
              "Type": "Int32"
            }
          ],
          "Name": "AddNanoseconds"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "periods",
              "Type": "Int32"
            }
          ],
          "Name": "AddPeriods"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "seconds",
              "Type": "Int32"
            }
          ],
          "Name": "AddSeconds"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "weeks",
              "Type": "Int32"
            }
          ],
          "Name": "AddWeeks"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "years",
              "Type": "Int32"
            }
          ],
          "Name": "AddYears"
        },
        {
          "ReturnType": "Calendar",
          "Name": "Clone"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "other",
              "Type": "Calendar"
            }
          ],
          "Name": "Compare"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "other",
              "Type": "DateTimeOffset"
            }
          ],
          "Name": "CompareDateTime"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "other",
              "Type": "Calendar"
            }
          ],
          "Name": "CopyTo"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "minDigits",
              "Type": "Int32"
            }
          ],
          "Name": "DayAsPaddedString"
        },
        {
          "ReturnType": "String",
          "Name": "DayAsString"
        },
        {
          "ReturnType": "String",
          "Name": "DayOfWeekAsSoloString"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "idealLength",
              "Type": "Int32"
            }
          ],
          "Name": "DayOfWeekAsSoloString"
        },
        {
          "ReturnType": "String",
          "Name": "DayOfWeekAsString"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "idealLength",
              "Type": "Int32"
            }
          ],
          "Name": "DayOfWeekAsString"
        },
        {
          "ReturnType": "String",
          "Name": "EraAsString"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "idealLength",
              "Type": "Int32"
            }
          ],
          "Name": "EraAsString"
        },
        {
          "ReturnType": "String",
          "Name": "GetCalendarSystem"
        },
        {
          "ReturnType": "String",
          "Name": "GetClock"
        },
        {
          "ReturnType": "DateTimeOffset",
          "Name": "GetDateTime"
        },
        {
          "ReturnType": "String",
          "Name": "GetTimeZone"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "minDigits",
              "Type": "Int32"
            }
          ],
          "Name": "HourAsPaddedString"
        },
        {
          "ReturnType": "String",
          "Name": "HourAsString"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "ChangeCalendarSystem"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "ChangeClock"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "timeZoneId",
              "Type": "String"
            }
          ],
          "Name": "ChangeTimeZone"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "minDigits",
              "Type": "Int32"
            }
          ],
          "Name": "MinuteAsPaddedString"
        },
        {
          "ReturnType": "String",
          "Name": "MinuteAsString"
        },
        {
          "ReturnType": "String",
          "Name": "MonthAsNumericString"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "minDigits",
              "Type": "Int32"
            }
          ],
          "Name": "MonthAsPaddedNumericString"
        },
        {
          "ReturnType": "String",
          "Name": "MonthAsSoloString"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "idealLength",
              "Type": "Int32"
            }
          ],
          "Name": "MonthAsSoloString"
        },
        {
          "ReturnType": "String",
          "Name": "MonthAsString"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "idealLength",
              "Type": "Int32"
            }
          ],
          "Name": "MonthAsString"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "minDigits",
              "Type": "Int32"
            }
          ],
          "Name": "NanosecondAsPaddedString"
        },
        {
          "ReturnType": "String",
          "Name": "NanosecondAsString"
        },
        {
          "ReturnType": "String",
          "Name": "PeriodAsString"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "idealLength",
              "Type": "Int32"
            }
          ],
          "Name": "PeriodAsString"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "minDigits",
              "Type": "Int32"
            }
          ],
          "Name": "SecondAsPaddedString"
        },
        {
          "ReturnType": "String",
          "Name": "SecondAsString"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "DateTimeOffset"
            }
          ],
          "Name": "SetDateTime"
        },
        {
          "ReturnType": "Void",
          "Name": "SetToMax"
        },
        {
          "ReturnType": "Void",
          "Name": "SetToMin"
        },
        {
          "ReturnType": "Void",
          "Name": "SetToNow"
        },
        {
          "ReturnType": "String",
          "Name": "TimeZoneAsString"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "idealLength",
              "Type": "Int32"
            }
          ],
          "Name": "TimeZoneAsString"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "minDigits",
              "Type": "Int32"
            }
          ],
          "Name": "YearAsPaddedString"
        },
        {
          "ReturnType": "String",
          "Name": "YearAsString"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "remainingDigits",
              "Type": "Int32"
            }
          ],
          "Name": "YearAsTruncatedString"
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.Calendar"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Gregorian"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Hebrew"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Hijri"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Japanese"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Julian"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Korean"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Persian"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Taiwan"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Thai"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UmAlQura"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Globalization.CalendarIdentifiers"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TwelveHour"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TwentyFourHour"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Globalization.ClockIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "First"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Label"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Globalization.Collation.CharacterGrouping"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<CharacterGrouping>",
        "IReadOnlyCollection<CharacterGrouping>",
        "IReadOnlyList<CharacterGrouping>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ],
          "Name": "Lookup"
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.Collation.CharacterGroupings"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AED"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AFN"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ALL"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AMD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ANG"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AOA"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ARS"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AUD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AWG"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AZN"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BAM"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BBD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BDT"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BGN"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BHD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BIF"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BMD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BND"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BOB"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BRL"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BSD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BTN"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BWP"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BYR"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BZD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CAD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CDF"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CLP"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CNY"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "COP"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CRC"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CUP"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CVE"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CZK"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DJF"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DKK"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DOP"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DZD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EGP"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ERN"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ETB"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EUR"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FJD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FKP"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GBP"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GEL"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GHS"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GIP"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GMD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GNF"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GTQ"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GYD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HKD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HNL"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HRK"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HTG"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HUF"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CHF"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IDR"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ILS"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "INR"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IQD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IRR"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ISK"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "JMD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "JOD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "JPY"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "KES"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "KGS"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "KHR"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "KMF"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "KPW"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "KRW"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "KWD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "KYD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "KZT"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LAK"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LBP"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LKR"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LRD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LSL"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LTL"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LVL"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LYD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MAD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MDL"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MGA"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MKD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MMK"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MNT"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MOP"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MRO"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MUR"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MVR"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MWK"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MXN"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MYR"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MZN"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NAD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NGN"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NIO"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NOK"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NPR"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NZD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OMR"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PAB"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PEN"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PGK"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PHP"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PKR"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PLN"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PYG"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "QAR"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RON"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RSD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RUB"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RWF"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SAR"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SBD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SCR"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SDG"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SEK"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SGD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SHP"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SLL"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SOS"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SRD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "STD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SYP"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SZL"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "THB"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TJS"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TMT"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TND"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TOP"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TRY"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TTD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TWD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TZS"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UAH"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UGX"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "USD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UYU"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UZS"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VEF"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VND"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VUV"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "WST"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "XAF"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "XCD"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "XOF"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "XPF"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "XXX"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "YER"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ZAR"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ZMW"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ZWL"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Globalization.CurrencyIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "hourFormat",
              "Type": "HourFormat"
            },
            {
              "Name": "minuteFormat",
              "Type": "MinuteFormat"
            },
            {
              "Name": "secondFormat",
              "Type": "SecondFormat"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "formatTemplate",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "formatTemplate",
              "Type": "String"
            },
            {
              "Name": "languages",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "formatTemplate",
              "Type": "String"
            },
            {
              "Name": "languages",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "geographicRegion",
              "Type": "String"
            },
            {
              "Name": "calendar",
              "Type": "String"
            },
            {
              "Name": "clock",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "yearFormat",
              "Type": "YearFormat"
            },
            {
              "Name": "monthFormat",
              "Type": "MonthFormat"
            },
            {
              "Name": "dayFormat",
              "Type": "DayFormat"
            },
            {
              "Name": "dayOfWeekFormat",
              "Type": "DayOfWeekFormat"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "yearFormat",
              "Type": "YearFormat"
            },
            {
              "Name": "monthFormat",
              "Type": "MonthFormat"
            },
            {
              "Name": "dayFormat",
              "Type": "DayFormat"
            },
            {
              "Name": "dayOfWeekFormat",
              "Type": "DayOfWeekFormat"
            },
            {
              "Name": "hourFormat",
              "Type": "HourFormat"
            },
            {
              "Name": "minuteFormat",
              "Type": "MinuteFormat"
            },
            {
              "Name": "secondFormat",
              "Type": "SecondFormat"
            },
            {
              "Name": "languages",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "yearFormat",
              "Type": "YearFormat"
            },
            {
              "Name": "monthFormat",
              "Type": "MonthFormat"
            },
            {
              "Name": "dayFormat",
              "Type": "DayFormat"
            },
            {
              "Name": "dayOfWeekFormat",
              "Type": "DayOfWeekFormat"
            },
            {
              "Name": "hourFormat",
              "Type": "HourFormat"
            },
            {
              "Name": "minuteFormat",
              "Type": "MinuteFormat"
            },
            {
              "Name": "secondFormat",
              "Type": "SecondFormat"
            },
            {
              "Name": "languages",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "geographicRegion",
              "Type": "String"
            },
            {
              "Name": "calendar",
              "Type": "String"
            },
            {
              "Name": "clock",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Calendar"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Clock"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "GeographicRegion"
        },
        {
          "Type": "DayFormat",
          "IsGet": true,
          "Name": "IncludeDay"
        },
        {
          "Type": "DayOfWeekFormat",
          "IsGet": true,
          "Name": "IncludeDayOfWeek"
        },
        {
          "Type": "HourFormat",
          "IsGet": true,
          "Name": "IncludeHour"
        },
        {
          "Type": "MinuteFormat",
          "IsGet": true,
          "Name": "IncludeMinute"
        },
        {
          "Type": "MonthFormat",
          "IsGet": true,
          "Name": "IncludeMonth"
        },
        {
          "Type": "SecondFormat",
          "IsGet": true,
          "Name": "IncludeSecond"
        },
        {
          "Type": "YearFormat",
          "IsGet": true,
          "Name": "IncludeYear"
        },
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "Languages"
        },
        {
          "Type": "DateTimeFormatter",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LongDate"
        },
        {
          "Type": "DateTimeFormatter",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LongTime"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NumeralSystem"
        },
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "Patterns"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ResolvedGeographicRegion"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ResolvedLanguage"
        },
        {
          "Type": "DateTimeFormatter",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ShortDate"
        },
        {
          "Type": "DateTimeFormatter",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ShortTime"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Template"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "DateTimeOffset"
            }
          ],
          "Name": "Format"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "datetime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "timeZoneId",
              "Type": "String"
            }
          ],
          "Name": "Format"
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.DateTimeFormatting.DateTimeFormatter"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "FontFamily"
        },
        {
          "Type": "FontStretch",
          "IsGet": true,
          "Name": "FontStretch"
        },
        {
          "Type": "FontStyle",
          "IsGet": true,
          "Name": "FontStyle"
        },
        {
          "Type": "FontWeight",
          "IsGet": true,
          "Name": "FontWeight"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ScaleFactor"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Globalization.Fonts.LanguageFont"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "languageTag",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "LanguageFont",
          "IsGet": true,
          "Name": "DocumentAlternate1Font"
        },
        {
          "Type": "LanguageFont",
          "IsGet": true,
          "Name": "DocumentAlternate2Font"
        },
        {
          "Type": "LanguageFont",
          "IsGet": true,
          "Name": "DocumentHeadingFont"
        },
        {
          "Type": "LanguageFont",
          "IsGet": true,
          "Name": "FixedWidthTextFont"
        },
        {
          "Type": "LanguageFont",
          "IsGet": true,
          "Name": "ModernDocumentFont"
        },
        {
          "Type": "LanguageFont",
          "IsGet": true,
          "Name": "TraditionalDocumentFont"
        },
        {
          "Type": "LanguageFont",
          "IsGet": true,
          "Name": "UICaptionFont"
        },
        {
          "Type": "LanguageFont",
          "IsGet": true,
          "Name": "UIHeadingFont"
        },
        {
          "Type": "LanguageFont",
          "IsGet": true,
          "Name": "UINotificationHeadingFont"
        },
        {
          "Type": "LanguageFont",
          "IsGet": true,
          "Name": "UITextFont"
        },
        {
          "Type": "LanguageFont",
          "IsGet": true,
          "Name": "UITitleFont"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Globalization.Fonts.LanguageFontGroup"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "geographicRegionCode",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Code"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "CodeThreeDigit"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "CodeThreeLetter"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "CodeTwoLetter"
        },
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "CurrenciesInUse"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NativeName"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "geographicRegionCode",
              "Type": "String"
            }
          ],
          "Name": "IsSupported"
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.GeographicRegion"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "languageTag",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CurrentInputMethodLanguageTag"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "LanguageTag"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NativeName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Script"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IReadOnlyList<String>",
          "Parameters": [
            {
              "Name": "singleton",
              "Type": "String"
            }
          ],
          "Name": "GetExtensionSubtags"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "languageTag",
              "Type": "String"
            }
          ],
          "Name": "IsWellFormed"
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.Language"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "INumberFormatter",
        "INumberFormatter2",
        "INumberFormatterOptions",
        "INumberParser",
        "INumberRounderOption",
        "ISignedZeroOption",
        "ISignificantDigitsOption"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "currencyCode",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "currencyCode",
              "Type": "String"
            },
            {
              "Name": "languages",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "geographicRegion",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Currency"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "FractionDigits"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "GeographicRegion"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "IntegerDigits"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsDecimalPointAlwaysDisplayed"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsGrouped"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsZeroSigned"
        },
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "Languages"
        },
        {
          "Type": "CurrencyFormatterMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "Mode"
        },
        {
          "Type": "INumberRounder",
          "IsGet": true,
          "IsSet": true,
          "Name": "NumberRounder"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NumeralSystem"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ResolvedGeographicRegion"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ResolvedLanguage"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "SignificantDigits"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "roundingAlgorithm",
              "Type": "RoundingAlgorithm"
            }
          ],
          "Name": "ApplyRoundingForCurrency"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ],
          "Name": "Format"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ],
          "Name": "Format"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ],
          "Name": "Format"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ],
          "Name": "FormatDouble"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ],
          "Name": "FormatInt"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ],
          "Name": "FormatUInt"
        },
        {
          "ReturnType": "Nullable<Double>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ],
          "Name": "ParseDouble"
        },
        {
          "ReturnType": "Nullable<Int64>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ],
          "Name": "ParseInt"
        },
        {
          "ReturnType": "Nullable<UInt64>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ],
          "Name": "ParseUInt"
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.CurrencyFormatter"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "INumberFormatter",
        "INumberFormatter2",
        "INumberFormatterOptions",
        "INumberParser",
        "INumberRounderOption",
        "ISignedZeroOption",
        "ISignificantDigitsOption"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "languages",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "geographicRegion",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "FractionDigits"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "GeographicRegion"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "IntegerDigits"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsDecimalPointAlwaysDisplayed"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsGrouped"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsZeroSigned"
        },
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "Languages"
        },
        {
          "Type": "INumberRounder",
          "IsGet": true,
          "IsSet": true,
          "Name": "NumberRounder"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NumeralSystem"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ResolvedGeographicRegion"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ResolvedLanguage"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "SignificantDigits"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ],
          "Name": "Format"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ],
          "Name": "Format"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ],
          "Name": "Format"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ],
          "Name": "FormatDouble"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ],
          "Name": "FormatInt"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ],
          "Name": "FormatUInt"
        },
        {
          "ReturnType": "Nullable<Double>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ],
          "Name": "ParseDouble"
        },
        {
          "ReturnType": "Nullable<Int64>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ],
          "Name": "ParseInt"
        },
        {
          "ReturnType": "Nullable<UInt64>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ],
          "Name": "ParseUInt"
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.DecimalFormatter"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "INumberRounder"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Increment"
        },
        {
          "Type": "RoundingAlgorithm",
          "IsGet": true,
          "IsSet": true,
          "Name": "RoundingAlgorithm"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Double",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ],
          "Name": "RoundDouble"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int32"
            }
          ],
          "Name": "RoundInt32"
        },
        {
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ],
          "Name": "RoundInt64"
        },
        {
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Single"
            }
          ],
          "Name": "RoundSingle"
        },
        {
          "ReturnType": "UInt32",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt32"
            }
          ],
          "Name": "RoundUInt32"
        },
        {
          "ReturnType": "UInt64",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ],
          "Name": "RoundUInt64"
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.IncrementNumberRounder"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "languages",
              "Type": "IEnumerable<String>"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "Languages"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NumeralSystem"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ResolvedLanguage"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "TranslateNumerals"
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.NumeralSystemTranslator"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "INumberFormatter",
        "INumberFormatter2",
        "INumberFormatterOptions",
        "INumberParser",
        "INumberRounderOption",
        "ISignedZeroOption",
        "ISignificantDigitsOption"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "languages",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "geographicRegion",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "FractionDigits"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "GeographicRegion"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "IntegerDigits"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsDecimalPointAlwaysDisplayed"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsGrouped"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsZeroSigned"
        },
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "Languages"
        },
        {
          "Type": "INumberRounder",
          "IsGet": true,
          "IsSet": true,
          "Name": "NumberRounder"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NumeralSystem"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ResolvedGeographicRegion"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ResolvedLanguage"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "SignificantDigits"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ],
          "Name": "Format"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ],
          "Name": "Format"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ],
          "Name": "Format"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ],
          "Name": "FormatDouble"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ],
          "Name": "FormatInt"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ],
          "Name": "FormatUInt"
        },
        {
          "ReturnType": "Nullable<Double>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ],
          "Name": "ParseDouble"
        },
        {
          "ReturnType": "Nullable<Int64>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ],
          "Name": "ParseInt"
        },
        {
          "ReturnType": "Nullable<UInt64>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ],
          "Name": "ParseUInt"
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.PercentFormatter"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "INumberFormatter",
        "INumberFormatter2",
        "INumberFormatterOptions",
        "INumberParser",
        "INumberRounderOption",
        "ISignedZeroOption",
        "ISignificantDigitsOption"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "languages",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "geographicRegion",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "FractionDigits"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "GeographicRegion"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "IntegerDigits"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsDecimalPointAlwaysDisplayed"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsGrouped"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsZeroSigned"
        },
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "Languages"
        },
        {
          "Type": "INumberRounder",
          "IsGet": true,
          "IsSet": true,
          "Name": "NumberRounder"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NumeralSystem"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ResolvedGeographicRegion"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ResolvedLanguage"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "SignificantDigits"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ],
          "Name": "Format"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ],
          "Name": "Format"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ],
          "Name": "Format"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ],
          "Name": "FormatDouble"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ],
          "Name": "FormatInt"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ],
          "Name": "FormatUInt"
        },
        {
          "ReturnType": "Nullable<Double>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ],
          "Name": "ParseDouble"
        },
        {
          "ReturnType": "Nullable<Int64>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ],
          "Name": "ParseInt"
        },
        {
          "ReturnType": "Nullable<UInt64>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ],
          "Name": "ParseUInt"
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.PermilleFormatter"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "INumberRounder"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "RoundingAlgorithm",
          "IsGet": true,
          "IsSet": true,
          "Name": "RoundingAlgorithm"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "SignificantDigits"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Double",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ],
          "Name": "RoundDouble"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int32"
            }
          ],
          "Name": "RoundInt32"
        },
        {
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ],
          "Name": "RoundInt64"
        },
        {
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Single"
            }
          ],
          "Name": "RoundSingle"
        },
        {
          "ReturnType": "UInt32",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt32"
            }
          ],
          "Name": "RoundUInt32"
        },
        {
          "ReturnType": "UInt64",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ],
          "Name": "RoundUInt64"
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.SignificantDigitsNumberRounder"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Arab"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ArabExt"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Bali"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Beng"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Brah"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Deva"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FullWide"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Gujr"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Guru"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HaniDec"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Cham"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Java"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Kali"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Khmr"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Knda"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Lana"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LanaTham"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Laoo"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Latn"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Lepc"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Limb"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MathBold"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MathDbl"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MathMono"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MathSanb"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MathSans"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Mlym"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Mong"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Mtei"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Mymr"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MymrShan"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Nkoo"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Olck"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Orya"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Osma"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Saur"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Sund"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Talu"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TamlDec"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Telu"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Thai"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Tibt"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Vaii"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ZmthBold"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ZmthDbl"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ZmthMono"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ZmthSanb"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ZmthSans"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Globalization.NumeralSystemIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DisplayOrientations",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true,
          "Name": "AutoRotationPreferences"
        },
        {
          "Type": "DisplayOrientations",
          "IsGet": true,
          "Name": "CurrentOrientation"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "LogicalDpi"
        },
        {
          "Type": "DisplayOrientations",
          "IsGet": true,
          "Name": "NativeOrientation"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "RawDpiX"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "RawDpiY"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "RawPixelsPerViewPixel"
        },
        {
          "Type": "ResolutionScale",
          "IsGet": true,
          "Name": "ResolutionScale"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "StereoEnabled"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Name": "GetColorProfileAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "DisplayInformation",
          "Name": "GetForCurrentView"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<DisplayInformation,Object>",
          "Name": "ColorProfileChanged"
        },
        {
          "Type": "TypedEventHandler<DisplayInformation,Object>",
          "IsStatic": true,
          "Name": "DisplayContentsInvalidated"
        },
        {
          "Type": "TypedEventHandler<DisplayInformation,Object>",
          "Name": "DpiChanged"
        },
        {
          "Type": "TypedEventHandler<DisplayInformation,Object>",
          "Name": "OrientationChanged"
        },
        {
          "Type": "TypedEventHandler<DisplayInformation,Object>",
          "Name": "StereoEnabledChanged"
        }
      ],
      "Name": "Windows.Graphics.Display.DisplayInformation"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DisplayOrientations",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true,
          "Name": "AutoRotationPreferences"
        },
        {
          "Type": "DisplayOrientations",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CurrentOrientation"
        },
        {
          "Type": "Single",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LogicalDpi"
        },
        {
          "Type": "DisplayOrientations",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NativeOrientation"
        },
        {
          "Type": "ResolutionScale",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ResolutionScale"
        },
        {
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StereoEnabled"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Name": "GetColorProfileAsync"
        }
      ],
      "Events": [
        {
          "Type": "DisplayPropertiesEventHandler",
          "IsStatic": true,
          "Name": "ColorProfileChanged"
        },
        {
          "Type": "DisplayPropertiesEventHandler",
          "IsStatic": true,
          "Name": "DisplayContentsInvalidated"
        },
        {
          "Type": "DisplayPropertiesEventHandler",
          "IsStatic": true,
          "Name": "LogicalDpiChanged"
        },
        {
          "Type": "DisplayPropertiesEventHandler",
          "IsStatic": true,
          "Name": "OrientationChanged"
        },
        {
          "Type": "DisplayPropertiesEventHandler",
          "IsStatic": true,
          "Name": "StereoEnabledChanged"
        }
      ],
      "Name": "Windows.Graphics.Display.DisplayProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IClosableBuffer",
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Capacity"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Length"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "Int32",
          "Name": "GetPlaneCount"
        },
        {
          "ReturnType": "BitmapPlaneDescription",
          "Parameters": [
            {
              "Name": "index",
              "Type": "Int32"
            }
          ],
          "Name": "GetPlaneDescription"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.BitmapBuffer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "CodecId"
        },
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "FileExtensions"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "FriendlyName"
        },
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "MimeTypes"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.BitmapCodecInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBitmapFrame",
        "IBitmapFrameWithSoftwareBitmap"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BitmapAlphaMode",
          "IsGet": true,
          "Name": "BitmapAlphaMode"
        },
        {
          "Type": "BitmapPropertiesView",
          "IsGet": true,
          "Name": "BitmapContainerProperties"
        },
        {
          "Type": "BitmapPixelFormat",
          "IsGet": true,
          "Name": "BitmapPixelFormat"
        },
        {
          "Type": "BitmapPropertiesView",
          "IsGet": true,
          "Name": "BitmapProperties"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BmpDecoderId"
        },
        {
          "Type": "BitmapCodecInformation",
          "IsGet": true,
          "Name": "DecoderInformation"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "DpiX"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "DpiY"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "FrameCount"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GifDecoderId"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IcoDecoderId"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "JpegDecoderId"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "JpegXRDecoderId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "OrientedPixelHeight"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "OrientedPixelWidth"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "PixelHeight"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "PixelWidth"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PngDecoderId"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TiffDecoderId"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BitmapDecoder>",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            }
          ],
          "Name": "CreateAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BitmapDecoder>",
          "Parameters": [
            {
              "Name": "decoderId",
              "Type": "Guid"
            },
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            }
          ],
          "Name": "CreateAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<BitmapCodecInformation>",
          "Name": "GetDecoderInformationEnumerator"
        },
        {
          "ReturnType": "IAsyncOperation<BitmapFrame>",
          "Parameters": [
            {
              "Name": "frameIndex",
              "Type": "UInt32"
            }
          ],
          "Name": "GetFrameAsync"
        },
        {
          "ReturnType": "IAsyncOperation<PixelDataProvider>",
          "Name": "GetPixelDataAsync"
        },
        {
          "ReturnType": "IAsyncOperation<PixelDataProvider>",
          "Parameters": [
            {
              "Name": "pixelFormat",
              "Type": "BitmapPixelFormat"
            },
            {
              "Name": "alphaMode",
              "Type": "BitmapAlphaMode"
            },
            {
              "Name": "transform",
              "Type": "BitmapTransform"
            },
            {
              "Name": "exifOrientationMode",
              "Type": "ExifOrientationMode"
            },
            {
              "Name": "colorManagementMode",
              "Type": "ColorManagementMode"
            }
          ],
          "Name": "GetPixelDataAsync"
        },
        {
          "ReturnType": "IAsyncOperation<ImageStream>",
          "Name": "GetPreviewAsync"
        },
        {
          "ReturnType": "IAsyncOperation<SoftwareBitmap>",
          "Name": "GetSoftwareBitmapAsync"
        },
        {
          "ReturnType": "IAsyncOperation<SoftwareBitmap>",
          "Parameters": [
            {
              "Name": "pixelFormat",
              "Type": "BitmapPixelFormat"
            },
            {
              "Name": "alphaMode",
              "Type": "BitmapAlphaMode"
            }
          ],
          "Name": "GetSoftwareBitmapAsync"
        },
        {
          "ReturnType": "IAsyncOperation<SoftwareBitmap>",
          "Parameters": [
            {
              "Name": "pixelFormat",
              "Type": "BitmapPixelFormat"
            },
            {
              "Name": "alphaMode",
              "Type": "BitmapAlphaMode"
            },
            {
              "Name": "transform",
              "Type": "BitmapTransform"
            },
            {
              "Name": "exifOrientationMode",
              "Type": "ExifOrientationMode"
            },
            {
              "Name": "colorManagementMode",
              "Type": "ColorManagementMode"
            }
          ],
          "Name": "GetSoftwareBitmapAsync"
        },
        {
          "ReturnType": "IAsyncOperation<ImageStream>",
          "Name": "GetThumbnailAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.BitmapDecoder"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BitmapProperties",
          "IsGet": true,
          "Name": "BitmapContainerProperties"
        },
        {
          "Type": "BitmapProperties",
          "IsGet": true,
          "Name": "BitmapProperties"
        },
        {
          "Type": "BitmapTransform",
          "IsGet": true,
          "Name": "BitmapTransform"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BmpEncoderId"
        },
        {
          "Type": "BitmapCodecInformation",
          "IsGet": true,
          "Name": "EncoderInformation"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "GeneratedThumbnailHeight"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "GeneratedThumbnailWidth"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GifEncoderId"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsThumbnailGenerated"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "JpegEncoderId"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "JpegXREncoderId"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PngEncoderId"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TiffEncoderId"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BitmapEncoder>",
          "Parameters": [
            {
              "Name": "encoderId",
              "Type": "Guid"
            },
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            }
          ],
          "Name": "CreateAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BitmapEncoder>",
          "Parameters": [
            {
              "Name": "encoderId",
              "Type": "Guid"
            },
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            },
            {
              "Name": "encodingOptions",
              "Type": "IEnumerable<KeyValuePair<String,BitmapTypedValue>>"
            }
          ],
          "Name": "CreateAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BitmapEncoder>",
          "Parameters": [
            {
              "Name": "bitmapDecoder",
              "Type": "BitmapDecoder"
            }
          ],
          "Name": "CreateForInPlacePropertyEncodingAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BitmapEncoder>",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            },
            {
              "Name": "bitmapDecoder",
              "Type": "BitmapDecoder"
            }
          ],
          "Name": "CreateForTranscodingAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "FlushAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<BitmapCodecInformation>",
          "Name": "GetEncoderInformationEnumerator"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "GoToNextFrameAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "encodingOptions",
              "Type": "IEnumerable<KeyValuePair<String,BitmapTypedValue>>"
            }
          ],
          "Name": "GoToNextFrameAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pixelFormat",
              "Type": "BitmapPixelFormat"
            },
            {
              "Name": "alphaMode",
              "Type": "BitmapAlphaMode"
            },
            {
              "Name": "width",
              "Type": "UInt32"
            },
            {
              "Name": "height",
              "Type": "UInt32"
            },
            {
              "Name": "dpiX",
              "Type": "Double"
            },
            {
              "Name": "dpiY",
              "Type": "Double"
            },
            {
              "Name": "pixels",
              "Type": "Byte[]"
            }
          ],
          "Name": "SetPixelData"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "bitmap",
              "Type": "SoftwareBitmap"
            }
          ],
          "Name": "SetSoftwareBitmap"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.BitmapEncoder"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBitmapFrame",
        "IBitmapFrameWithSoftwareBitmap"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BitmapAlphaMode",
          "IsGet": true,
          "Name": "BitmapAlphaMode"
        },
        {
          "Type": "BitmapPixelFormat",
          "IsGet": true,
          "Name": "BitmapPixelFormat"
        },
        {
          "Type": "BitmapPropertiesView",
          "IsGet": true,
          "Name": "BitmapProperties"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "DpiX"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "DpiY"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "OrientedPixelHeight"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "OrientedPixelWidth"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "PixelHeight"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "PixelWidth"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<PixelDataProvider>",
          "Name": "GetPixelDataAsync"
        },
        {
          "ReturnType": "IAsyncOperation<PixelDataProvider>",
          "Parameters": [
            {
              "Name": "pixelFormat",
              "Type": "BitmapPixelFormat"
            },
            {
              "Name": "alphaMode",
              "Type": "BitmapAlphaMode"
            },
            {
              "Name": "transform",
              "Type": "BitmapTransform"
            },
            {
              "Name": "exifOrientationMode",
              "Type": "ExifOrientationMode"
            },
            {
              "Name": "colorManagementMode",
              "Type": "ColorManagementMode"
            }
          ],
          "Name": "GetPixelDataAsync"
        },
        {
          "ReturnType": "IAsyncOperation<SoftwareBitmap>",
          "Name": "GetSoftwareBitmapAsync"
        },
        {
          "ReturnType": "IAsyncOperation<SoftwareBitmap>",
          "Parameters": [
            {
              "Name": "pixelFormat",
              "Type": "BitmapPixelFormat"
            },
            {
              "Name": "alphaMode",
              "Type": "BitmapAlphaMode"
            }
          ],
          "Name": "GetSoftwareBitmapAsync"
        },
        {
          "ReturnType": "IAsyncOperation<SoftwareBitmap>",
          "Parameters": [
            {
              "Name": "pixelFormat",
              "Type": "BitmapPixelFormat"
            },
            {
              "Name": "alphaMode",
              "Type": "BitmapAlphaMode"
            },
            {
              "Name": "transform",
              "Type": "BitmapTransform"
            },
            {
              "Name": "exifOrientationMode",
              "Type": "ExifOrientationMode"
            },
            {
              "Name": "colorManagementMode",
              "Type": "ColorManagementMode"
            }
          ],
          "Name": "GetSoftwareBitmapAsync"
        },
        {
          "ReturnType": "IAsyncOperation<ImageStream>",
          "Name": "GetThumbnailAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.BitmapFrame"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBitmapPropertiesView"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<BitmapPropertySet>",
          "Parameters": [
            {
              "Name": "propertiesToRetrieve",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "GetPropertiesAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "propertiesToSet",
              "Type": "IEnumerable<KeyValuePair<String,BitmapTypedValue>>"
            }
          ],
          "Name": "SetPropertiesAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.BitmapProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBitmapPropertiesView"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<BitmapPropertySet>",
          "Parameters": [
            {
              "Name": "propertiesToRetrieve",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "GetPropertiesAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.BitmapPropertiesView"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,BitmapTypedValue>>",
        "IDictionary<String,BitmapTypedValue>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,BitmapTypedValue>>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.BitmapPropertySet"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BitmapBounds",
          "IsGet": true,
          "IsSet": true,
          "Name": "Bounds"
        },
        {
          "Type": "BitmapFlip",
          "IsGet": true,
          "IsSet": true,
          "Name": "Flip"
        },
        {
          "Type": "BitmapInterpolationMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "InterpolationMode"
        },
        {
          "Type": "BitmapRotation",
          "IsGet": true,
          "IsSet": true,
          "Name": "Rotation"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ScaledHeight"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ScaledWidth"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.BitmapTransform"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            },
            {
              "Name": "type",
              "Type": "PropertyType"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "PropertyType",
          "IsGet": true,
          "Name": "Type"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.BitmapTypedValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContentTypeProvider",
        "IDisposable",
        "IInputStream",
        "IOutputStream",
        "IRandomAccessStream",
        "IRandomAccessStreamWithContentType"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanRead"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanWrite"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ContentType"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "Position"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "IsSet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IRandomAccessStream",
          "Name": "CloneStream"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Name": "FlushAsync"
        },
        {
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "GetInputStreamAt"
        },
        {
          "ReturnType": "IOutputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "GetOutputStreamAt"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "InputStreamOptions"
            }
          ],
          "Name": "ReadAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "Seek"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "WriteAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.ImageStream"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Byte[]",
          "Name": "DetachPixelData"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.PixelDataProvider"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "format",
              "Type": "BitmapPixelFormat"
            },
            {
              "Name": "width",
              "Type": "Int32"
            },
            {
              "Name": "height",
              "Type": "Int32"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "format",
              "Type": "BitmapPixelFormat"
            },
            {
              "Name": "width",
              "Type": "Int32"
            },
            {
              "Name": "height",
              "Type": "Int32"
            },
            {
              "Name": "alpha",
              "Type": "BitmapAlphaMode"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "BitmapAlphaMode",
          "IsGet": true,
          "Name": "BitmapAlphaMode"
        },
        {
          "Type": "BitmapPixelFormat",
          "IsGet": true,
          "Name": "BitmapPixelFormat"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "DpiX"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "DpiY"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsReadOnly"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "PixelHeight"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "PixelWidth"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "SoftwareBitmap",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SoftwareBitmap"
            },
            {
              "Name": "format",
              "Type": "BitmapPixelFormat"
            }
          ],
          "Name": "Convert"
        },
        {
          "IsStatic": true,
          "ReturnType": "SoftwareBitmap",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SoftwareBitmap"
            },
            {
              "Name": "format",
              "Type": "BitmapPixelFormat"
            },
            {
              "Name": "alpha",
              "Type": "BitmapAlphaMode"
            }
          ],
          "Name": "Convert"
        },
        {
          "IsStatic": true,
          "ReturnType": "SoftwareBitmap",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SoftwareBitmap"
            }
          ],
          "Name": "Copy"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "CopyFromBuffer"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "bitmap",
              "Type": "SoftwareBitmap"
            }
          ],
          "Name": "CopyTo"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "CopyToBuffer"
        },
        {
          "IsStatic": true,
          "ReturnType": "SoftwareBitmap",
          "Parameters": [
            {
              "Name": "source",
              "Type": "IBuffer"
            },
            {
              "Name": "format",
              "Type": "BitmapPixelFormat"
            },
            {
              "Name": "width",
              "Type": "Int32"
            },
            {
              "Name": "height",
              "Type": "Int32"
            }
          ],
          "Name": "CreateCopyFromBuffer"
        },
        {
          "IsStatic": true,
          "ReturnType": "SoftwareBitmap",
          "Parameters": [
            {
              "Name": "source",
              "Type": "IBuffer"
            },
            {
              "Name": "format",
              "Type": "BitmapPixelFormat"
            },
            {
              "Name": "width",
              "Type": "Int32"
            },
            {
              "Name": "height",
              "Type": "Int32"
            },
            {
              "Name": "alpha",
              "Type": "BitmapAlphaMode"
            }
          ],
          "Name": "CreateCopyFromBuffer"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<SoftwareBitmap>",
          "Parameters": [
            {
              "Name": "surface",
              "Type": "IDirect3DSurface"
            }
          ],
          "Name": "CreateCopyFromSurfaceAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<SoftwareBitmap>",
          "Parameters": [
            {
              "Name": "surface",
              "Type": "IDirect3DSurface"
            },
            {
              "Name": "alpha",
              "Type": "BitmapAlphaMode"
            }
          ],
          "Name": "CreateCopyFromSurfaceAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "SoftwareBitmap",
          "Name": "GetReadOnlyView"
        },
        {
          "ReturnType": "BitmapBuffer",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "BitmapBufferAccessMode"
            }
          ],
          "Name": "LockBuffer"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.SoftwareBitmap"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IPrintItemListOptionDetails",
        "IPrintOptionDetails"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ErrorText"
        },
        {
          "Type": "IReadOnlyList<Object>",
          "IsGet": true,
          "Name": "Items"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "OptionId"
        },
        {
          "Type": "PrintOptionType",
          "IsGet": true,
          "Name": "OptionType"
        },
        {
          "Type": "PrintOptionStates",
          "IsGet": true,
          "IsSet": true,
          "Name": "State"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "TrySetValue"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Printing.OptionDetails.PrintBindingOptionDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IPrintItemListOptionDetails",
        "IPrintOptionDetails"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ErrorText"
        },
        {
          "Type": "IReadOnlyList<Object>",
          "IsGet": true,
          "Name": "Items"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "OptionId"
        },
        {
          "Type": "PrintOptionType",
          "IsGet": true,
          "Name": "OptionType"
        },
        {
          "Type": "PrintOptionStates",
          "IsGet": true,
          "IsSet": true,
          "Name": "State"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "TrySetValue"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Printing.OptionDetails.PrintCollationOptionDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IPrintItemListOptionDetails",
        "IPrintOptionDetails"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ErrorText"
        },
        {
          "Type": "IReadOnlyList<Object>",
          "IsGet": true,
          "Name": "Items"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "OptionId"
        },
        {
          "Type": "PrintOptionType",
          "IsGet": true,
          "Name": "OptionType"
        },
        {
          "Type": "PrintOptionStates",
          "IsGet": true,
          "IsSet": true,
          "Name": "State"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "TrySetValue"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Printing.OptionDetails.PrintColorModeOptionDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IPrintNumberOptionDetails",
        "IPrintOptionDetails"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ErrorText"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MaxValue"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MinValue"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "OptionId"
        },
        {
          "Type": "PrintOptionType",
          "IsGet": true,
          "Name": "OptionType"
        },
        {
          "Type": "PrintOptionStates",
          "IsGet": true,
          "IsSet": true,
          "Name": "State"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "TrySetValue"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Printing.OptionDetails.PrintCopiesOptionDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ItemDisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ItemId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.Printing.OptionDetails.PrintCustomItemDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IPrintCustomOptionDetails",
        "IPrintItemListOptionDetails",
        "IPrintOptionDetails"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ErrorText"
        },
        {
          "Type": "IReadOnlyList<Object>",
          "IsGet": true,
          "Name": "Items"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "OptionId"
        },
        {
          "Type": "PrintOptionType",
          "IsGet": true,
          "Name": "OptionType"
        },
        {
          "Type": "PrintOptionStates",
          "IsGet": true,
          "IsSet": true,
          "Name": "State"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "itemId",
              "Type": "String"
            },
            {
              "Name": "displayName",
              "Type": "String"
            }
          ],
          "Name": "AddItem"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "TrySetValue"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Printing.OptionDetails.PrintCustomItemListOptionDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IPrintCustomOptionDetails",
        "IPrintOptionDetails"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ErrorText"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxCharacters"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "OptionId"
        },
        {
          "Type": "PrintOptionType",
          "IsGet": true,
          "Name": "OptionType"
        },
        {
          "Type": "PrintOptionStates",
          "IsGet": true,
          "IsSet": true,
          "Name": "State"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "TrySetValue"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Printing.OptionDetails.PrintCustomTextOptionDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IPrintItemListOptionDetails",
        "IPrintOptionDetails"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ErrorText"
        },
        {
          "Type": "IReadOnlyList<Object>",
          "IsGet": true,
          "Name": "Items"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "OptionId"
        },
        {
          "Type": "PrintOptionType",
          "IsGet": true,
          "Name": "OptionType"
        },
        {
          "Type": "PrintOptionStates",
          "IsGet": true,
          "IsSet": true,
          "Name": "State"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "TrySetValue"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Printing.OptionDetails.PrintDuplexOptionDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IPrintItemListOptionDetails",
        "IPrintOptionDetails"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ErrorText"
        },
        {
          "Type": "IReadOnlyList<Object>",
          "IsGet": true,
          "Name": "Items"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "OptionId"
        },
        {
          "Type": "PrintOptionType",
          "IsGet": true,
          "Name": "OptionType"
        },
        {
          "Type": "PrintOptionStates",
          "IsGet": true,
          "IsSet": true,
          "Name": "State"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "TrySetValue"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Printing.OptionDetails.PrintHolePunchOptionDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IPrintItemListOptionDetails",
        "IPrintOptionDetails"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ErrorText"
        },
        {
          "Type": "IReadOnlyList<Object>",
          "IsGet": true,
          "Name": "Items"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "OptionId"
        },
        {
          "Type": "PrintOptionType",
          "IsGet": true,
          "Name": "OptionType"
        },
        {
          "Type": "PrintOptionStates",
          "IsGet": true,
          "IsSet": true,
          "Name": "State"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "TrySetValue"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Printing.OptionDetails.PrintMediaSizeOptionDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IPrintItemListOptionDetails",
        "IPrintOptionDetails"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ErrorText"
        },
        {
          "Type": "IReadOnlyList<Object>",
          "IsGet": true,
          "Name": "Items"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "OptionId"
        },
        {
          "Type": "PrintOptionType",
          "IsGet": true,
          "Name": "OptionType"
        },
        {
          "Type": "PrintOptionStates",
          "IsGet": true,
          "IsSet": true,
          "Name": "State"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "TrySetValue"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Printing.OptionDetails.PrintMediaTypeOptionDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IPrintItemListOptionDetails",
        "IPrintOptionDetails"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ErrorText"
        },
        {
          "Type": "IReadOnlyList<Object>",
          "IsGet": true,
          "Name": "Items"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "OptionId"
        },
        {
          "Type": "PrintOptionType",
          "IsGet": true,
          "Name": "OptionType"
        },
        {
          "Type": "PrintOptionStates",
          "IsGet": true,
          "IsSet": true,
          "Name": "State"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "TrySetValue"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Printing.OptionDetails.PrintOrientationOptionDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IPrintItemListOptionDetails",
        "IPrintOptionDetails"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ErrorText"
        },
        {
          "Type": "IReadOnlyList<Object>",
          "IsGet": true,
          "Name": "Items"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "OptionId"
        },
        {
          "Type": "PrintOptionType",
          "IsGet": true,
          "Name": "OptionType"
        },
        {
          "Type": "PrintOptionStates",
          "IsGet": true,
          "IsSet": true,
          "Name": "State"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "TrySetValue"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Printing.OptionDetails.PrintQualityOptionDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IPrintItemListOptionDetails",
        "IPrintOptionDetails"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ErrorText"
        },
        {
          "Type": "IReadOnlyList<Object>",
          "IsGet": true,
          "Name": "Items"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "OptionId"
        },
        {
          "Type": "PrintOptionType",
          "IsGet": true,
          "Name": "OptionType"
        },
        {
          "Type": "PrintOptionStates",
          "IsGet": true,
          "IsSet": true,
          "Name": "State"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "TrySetValue"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Printing.OptionDetails.PrintStapleOptionDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IPrintTaskOptionsCore",
        "IPrintTaskOptionsCoreUIConfiguration"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "DisplayedOptions"
        },
        {
          "Type": "IReadOnlyDictionary<String,IPrintOptionDetails>",
          "IsGet": true,
          "Name": "Options"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "PrintCustomItemListOptionDetails",
          "Parameters": [
            {
              "Name": "optionId",
              "Type": "String"
            },
            {
              "Name": "displayName",
              "Type": "String"
            }
          ],
          "Name": "CreateItemListOption"
        },
        {
          "ReturnType": "PrintCustomTextOptionDetails",
          "Parameters": [
            {
              "Name": "optionId",
              "Type": "String"
            },
            {
              "Name": "displayName",
              "Type": "String"
            }
          ],
          "Name": "CreateTextOption"
        },
        {
          "IsStatic": true,
          "ReturnType": "PrintTaskOptionDetails",
          "Parameters": [
            {
              "Name": "printTaskOptions",
              "Type": "PrintTaskOptions"
            }
          ],
          "Name": "GetFromPrintTaskOptions"
        },
        {
          "ReturnType": "PrintPageDescription",
          "Parameters": [
            {
              "Name": "jobPageNumber",
              "Type": "UInt32"
            }
          ],
          "Name": "GetPageDescription"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<PrintTaskOptionDetails,Object>",
          "Name": "BeginValidation"
        },
        {
          "Type": "TypedEventHandler<PrintTaskOptionDetails,PrintTaskOptionChangedEventArgs>",
          "Name": "OptionChanged"
        }
      ],
      "Name": "Windows.Graphics.Printing.OptionDetails.PrintTaskOptionDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "OptionId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.Printing.OptionDetails.PrintTaskOptionChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "PrintManager",
          "Name": "GetForCurrentView"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Boolean>",
          "Name": "ShowPrintUIAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<PrintManager,PrintTaskRequestedEventArgs>",
          "Name": "PrintTaskRequested"
        }
      ],
      "Name": "Windows.Graphics.Printing.PrintManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Is3DManufacturingTargetEnabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsPrinterTargetEnabled"
        },
        {
          "Type": "PrintTaskOptions",
          "IsGet": true,
          "Name": "Options"
        },
        {
          "Type": "DataPackagePropertySet",
          "IsGet": true,
          "Name": "Properties"
        },
        {
          "Type": "IPrintDocumentSource",
          "IsGet": true,
          "Name": "Source"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "TypedEventHandler<PrintTask,PrintTaskCompletedEventArgs>",
          "Name": "Completed"
        },
        {
          "Type": "TypedEventHandler<PrintTask,Object>",
          "Name": "Previewing"
        },
        {
          "Type": "TypedEventHandler<PrintTask,PrintTaskProgressingEventArgs>",
          "Name": "Progressing"
        },
        {
          "Type": "TypedEventHandler<PrintTask,Object>",
          "Name": "Submitting"
        }
      ],
      "Name": "Windows.Graphics.Printing.PrintTask"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PrintTaskCompletion",
          "IsGet": true,
          "Name": "Completion"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.Printing.PrintTaskCompletedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IPrintTaskOptionsCore",
        "IPrintTaskOptionsCoreProperties",
        "IPrintTaskOptionsCoreUIConfiguration"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PrintBinding",
          "IsGet": true,
          "IsSet": true,
          "Name": "Binding"
        },
        {
          "Type": "PrintCollation",
          "IsGet": true,
          "IsSet": true,
          "Name": "Collation"
        },
        {
          "Type": "PrintColorMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "ColorMode"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "DisplayedOptions"
        },
        {
          "Type": "PrintDuplex",
          "IsGet": true,
          "IsSet": true,
          "Name": "Duplex"
        },
        {
          "Type": "PrintHolePunch",
          "IsGet": true,
          "IsSet": true,
          "Name": "HolePunch"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MaxCopies"
        },
        {
          "Type": "PrintMediaSize",
          "IsGet": true,
          "IsSet": true,
          "Name": "MediaSize"
        },
        {
          "Type": "PrintMediaType",
          "IsGet": true,
          "IsSet": true,
          "Name": "MediaType"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MinCopies"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "NumberOfCopies"
        },
        {
          "Type": "PrintOrientation",
          "IsGet": true,
          "IsSet": true,
          "Name": "Orientation"
        },
        {
          "Type": "PrintQuality",
          "IsGet": true,
          "IsSet": true,
          "Name": "PrintQuality"
        },
        {
          "Type": "PrintStaple",
          "IsGet": true,
          "IsSet": true,
          "Name": "Staple"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "PrintPageDescription",
          "Parameters": [
            {
              "Name": "jobPageNumber",
              "Type": "UInt32"
            }
          ],
          "Name": "GetPageDescription"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Printing.PrintTaskOptions"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "DocumentPageCount"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.Printing.PrintTaskProgressingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Deadline"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "PrintTask",
          "Parameters": [
            {
              "Name": "title",
              "Type": "String"
            },
            {
              "Name": "handler",
              "Type": "PrintTaskSourceRequestedHandler"
            }
          ],
          "Name": "CreatePrintTask"
        },
        {
          "ReturnType": "PrintTaskRequestedDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Printing.PrintTaskRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Printing.PrintTaskRequestedDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PrintTaskRequest",
          "IsGet": true,
          "Name": "Request"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.Printing.PrintTaskRequestedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Deadline"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "PrintTaskSourceRequestedDeferral",
          "Name": "GetDeferral"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "IPrintDocumentSource"
            }
          ],
          "Name": "SetSource"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Printing.PrintTaskSourceRequestedArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Printing.PrintTaskSourceRequestedDeferral"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Binding"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Collation"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ColorMode"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Copies"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Duplex"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HolePunch"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "InputBin"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MediaSize"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MediaType"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NUp"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Orientation"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PrintQuality"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Staple"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.Printing.StandardPrintTaskOptions"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "productId",
              "Type": "Guid"
            },
            {
              "Name": "TileID",
              "Type": "String"
            },
            {
              "Name": "Recurrence",
              "Type": "LegacyLiveTileRecurrenceType"
            },
            {
              "Name": "userNoneIdle",
              "Type": "Boolean"
            },
            {
              "Name": "pTileXml",
              "Type": "Byte[]"
            },
            {
              "Name": "pUrlXml",
              "Type": "Byte[]"
            }
          ],
          "Name": "AddLiveTileRequest"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "productId",
              "Type": "Guid"
            },
            {
              "Name": "TileID",
              "Type": "String"
            },
            {
              "Name": "Recurrence",
              "Type": "LegacyLiveTileRecurrenceType"
            },
            {
              "Name": "Interval",
              "Type": "LegacyLiveTileIntervalKind"
            },
            {
              "Name": "maximumRunCount",
              "Type": "UInt32"
            },
            {
              "Name": "runForever",
              "Type": "Boolean"
            },
            {
              "Name": "startTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "pTileXml",
              "Type": "Byte[]"
            },
            {
              "Name": "pUrlXml",
              "Type": "Byte[]"
            }
          ],
          "Name": "AddLiveTileSchedule"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "productId",
              "Type": "Guid"
            },
            {
              "Name": "TileID",
              "Type": "String"
            },
            {
              "Name": "RecurrenceType",
              "Type": "LegacyLiveTileRecurrenceType"
            }
          ],
          "Name": "RemoveLegacyLiveTileSubscription"
        }
      ],
      "Events": [],
      "Name": "Windows.Internal.LegacyLiveTile.WinRTLegacyLiveTileJobManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IClosableBuffer",
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Capacity"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Length"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.AudioBuffer"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IMediaFrame"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "capacity",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Duration"
        },
        {
          "Type": "IPropertySet",
          "IsGet": true,
          "Name": "ExtendedProperties"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsDiscontinuous"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsReadOnly"
        },
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "RelativeTime"
        },
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "SystemRelativeTime"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "AudioBuffer",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "AudioBufferAccessMode"
            }
          ],
          "Name": "LockBuffer"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.AudioFrame"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContentTypeProvider",
        "IDisposable",
        "IInputStream",
        "IOutputStream",
        "IRandomAccessStream",
        "IRandomAccessStreamWithContentType"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanRead"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanWrite"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ContentType"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Height"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "Position"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "IsSet": true,
          "Name": "Size"
        },
        {
          "Type": "SoftwareBitmap",
          "IsGet": true,
          "Name": "SoftwareBitmap"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Width"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IRandomAccessStream",
          "Name": "CloneStream"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Name": "FlushAsync"
        },
        {
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "GetInputStreamAt"
        },
        {
          "ReturnType": "IOutputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "GetOutputStreamAt"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "InputStreamOptions"
            }
          ],
          "Name": "ReadAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "Seek"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "WriteAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Capture.CapturedFrame"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "Name": "Exposure"
        },
        {
          "Type": "Nullable<Single>",
          "IsGet": true,
          "Name": "ExposureCompensation"
        },
        {
          "Type": "Nullable<Boolean>",
          "IsGet": true,
          "Name": "Flashed"
        },
        {
          "Type": "Nullable<Single>",
          "IsGet": true,
          "Name": "FlashPowerPercent"
        },
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "Name": "Focus"
        },
        {
          "Type": "Nullable<MediaCaptureFocusState>",
          "IsGet": true,
          "Name": "FocusState"
        },
        {
          "Type": "Nullable<Double>",
          "IsGet": true,
          "Name": "IsoAnalogGain"
        },
        {
          "Type": "Nullable<Double>",
          "IsGet": true,
          "Name": "IsoDigitalGain"
        },
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "Name": "IsoSpeed"
        },
        {
          "Type": "Nullable<CaptureSceneMode>",
          "IsGet": true,
          "Name": "SceneMode"
        },
        {
          "Type": "MediaRatio",
          "IsGet": true,
          "Name": "SensorFrameRate"
        },
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "Name": "WhiteBalance"
        },
        {
          "Type": "Nullable<WhiteBalanceGain>",
          "IsGet": true,
          "Name": "WhiteBalanceGain"
        },
        {
          "Type": "Nullable<Single>",
          "IsGet": true,
          "Name": "ZoomFactor"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Capture.CapturedFrameControlValues"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "CapturedFrame",
          "IsGet": true,
          "Name": "Frame"
        },
        {
          "Type": "CapturedFrame",
          "IsGet": true,
          "Name": "Thumbnail"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Capture.CapturedPhoto"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "CapturedFrameControlValues",
          "IsGet": true,
          "Name": "CapturedFrameControlValues"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "CaptureTimeOffset"
        },
        {
          "Type": "CapturedFrame",
          "IsGet": true,
          "Name": "Frame"
        },
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "Name": "UsedFrameControllerIndex"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Capture.Core.VariablePhotoCapturedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Name": "FinishAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "StartAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "StopAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "UpdateSettingsAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<VariablePhotoSequenceCapture,VariablePhotoCapturedEventArgs>",
          "Name": "PhotoCaptured"
        },
        {
          "Type": "TypedEventHandler<VariablePhotoSequenceCapture,Object>",
          "Name": "Stopped"
        }
      ],
      "Name": "Windows.Media.Capture.Core.VariablePhotoSequenceCapture"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Name": "FinishAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "behavior",
              "Type": "MediaCapturePauseBehavior"
            }
          ],
          "Name": "PauseAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "ResumeAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "StartAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "StopAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Capture.LowLagMediaRecording"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<CapturedPhoto>",
          "Name": "CaptureAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "FinishAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Capture.LowLagPhotoCapture"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Name": "FinishAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "StartAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "StopAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<LowLagPhotoSequenceCapture,PhotoCapturedEventArgs>",
          "Name": "PhotoCaptured"
        }
      ],
      "Name": "Windows.Media.Capture.LowLagPhotoSequenceCapture"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AudioDeviceController",
          "IsGet": true,
          "Name": "AudioDeviceController"
        },
        {
          "Type": "CameraStreamState",
          "IsGet": true,
          "Name": "CameraStreamState"
        },
        {
          "Type": "MediaCaptureSettings",
          "IsGet": true,
          "Name": "MediaCaptureSettings"
        },
        {
          "Type": "VideoDeviceController",
          "IsGet": true,
          "Name": "VideoDeviceController"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IMediaExtension>",
          "Parameters": [
            {
              "Name": "definition",
              "Type": "IAudioEffectDefinition"
            }
          ],
          "Name": "AddAudioEffectAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            },
            {
              "Name": "effectActivationID",
              "Type": "String"
            },
            {
              "Name": "effectSettings",
              "Type": "IPropertySet"
            }
          ],
          "Name": "AddEffectAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IMediaExtension>",
          "Parameters": [
            {
              "Name": "definition",
              "Type": "IVideoEffectDefinition"
            },
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            }
          ],
          "Name": "AddVideoEffectAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "type",
              "Type": "ImageEncodingProperties"
            },
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ],
          "Name": "CapturePhotoToStorageFileAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "type",
              "Type": "ImageEncodingProperties"
            },
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            }
          ],
          "Name": "CapturePhotoToStreamAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            }
          ],
          "Name": "ClearEffectsAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            },
            {
              "Name": "propertyId",
              "Type": "Guid"
            }
          ],
          "Name": "GetEncoderProperty"
        },
        {
          "ReturnType": "IAsyncOperation<VideoFrame>",
          "Name": "GetPreviewFrameAsync"
        },
        {
          "ReturnType": "IAsyncOperation<VideoFrame>",
          "Parameters": [
            {
              "Name": "destination",
              "Type": "VideoFrame"
            }
          ],
          "Name": "GetPreviewFrameAsync"
        },
        {
          "ReturnType": "Boolean",
          "Name": "GetPreviewMirroring"
        },
        {
          "ReturnType": "VideoRotation",
          "Name": "GetPreviewRotation"
        },
        {
          "ReturnType": "VideoRotation",
          "Name": "GetRecordRotation"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "InitializeAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "mediaCaptureInitializationSettings",
              "Type": "MediaCaptureInitializationSettings"
            }
          ],
          "Name": "InitializeAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "behavior",
              "Type": "MediaCapturePauseBehavior"
            }
          ],
          "Name": "PauseRecordAsync"
        },
        {
          "ReturnType": "IAsyncOperation<LowLagPhotoCapture>",
          "Parameters": [
            {
              "Name": "type",
              "Type": "ImageEncodingProperties"
            }
          ],
          "Name": "PrepareLowLagPhotoCaptureAsync"
        },
        {
          "ReturnType": "IAsyncOperation<LowLagPhotoSequenceCapture>",
          "Parameters": [
            {
              "Name": "type",
              "Type": "ImageEncodingProperties"
            }
          ],
          "Name": "PrepareLowLagPhotoSequenceCaptureAsync"
        },
        {
          "ReturnType": "IAsyncOperation<LowLagMediaRecording>",
          "Parameters": [
            {
              "Name": "encodingProfile",
              "Type": "MediaEncodingProfile"
            },
            {
              "Name": "customMediaSink",
              "Type": "IMediaExtension"
            }
          ],
          "Name": "PrepareLowLagRecordToCustomSinkAsync"
        },
        {
          "ReturnType": "IAsyncOperation<LowLagMediaRecording>",
          "Parameters": [
            {
              "Name": "encodingProfile",
              "Type": "MediaEncodingProfile"
            },
            {
              "Name": "customSinkActivationId",
              "Type": "String"
            },
            {
              "Name": "customSinkSettings",
              "Type": "IPropertySet"
            }
          ],
          "Name": "PrepareLowLagRecordToCustomSinkAsync"
        },
        {
          "ReturnType": "IAsyncOperation<LowLagMediaRecording>",
          "Parameters": [
            {
              "Name": "encodingProfile",
              "Type": "MediaEncodingProfile"
            },
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ],
          "Name": "PrepareLowLagRecordToStorageFileAsync"
        },
        {
          "ReturnType": "IAsyncOperation<LowLagMediaRecording>",
          "Parameters": [
            {
              "Name": "encodingProfile",
              "Type": "MediaEncodingProfile"
            },
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            }
          ],
          "Name": "PrepareLowLagRecordToStreamAsync"
        },
        {
          "ReturnType": "IAsyncOperation<VariablePhotoSequenceCapture>",
          "Parameters": [
            {
              "Name": "type",
              "Type": "ImageEncodingProperties"
            }
          ],
          "Name": "PrepareVariablePhotoSequenceCaptureAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "ResumeRecordAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            },
            {
              "Name": "propertyId",
              "Type": "Guid"
            },
            {
              "Name": "propertyValue",
              "Type": "Object"
            }
          ],
          "Name": "SetEncoderProperty"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            },
            {
              "Name": "mediaEncodingProperties",
              "Type": "IMediaEncodingProperties"
            },
            {
              "Name": "encoderProperties",
              "Type": "MediaPropertySet"
            }
          ],
          "Name": "SetEncodingPropertiesAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetPreviewMirroring"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "VideoRotation"
            }
          ],
          "Name": "SetPreviewRotation"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "VideoRotation"
            }
          ],
          "Name": "SetRecordRotation"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "StartPreviewAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "encodingProfile",
              "Type": "MediaEncodingProfile"
            },
            {
              "Name": "customMediaSink",
              "Type": "IMediaExtension"
            }
          ],
          "Name": "StartPreviewToCustomSinkAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "encodingProfile",
              "Type": "MediaEncodingProfile"
            },
            {
              "Name": "customSinkActivationId",
              "Type": "String"
            },
            {
              "Name": "customSinkSettings",
              "Type": "IPropertySet"
            }
          ],
          "Name": "StartPreviewToCustomSinkAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "encodingProfile",
              "Type": "MediaEncodingProfile"
            },
            {
              "Name": "customMediaSink",
              "Type": "IMediaExtension"
            }
          ],
          "Name": "StartRecordToCustomSinkAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "encodingProfile",
              "Type": "MediaEncodingProfile"
            },
            {
              "Name": "customSinkActivationId",
              "Type": "String"
            },
            {
              "Name": "customSinkSettings",
              "Type": "IPropertySet"
            }
          ],
          "Name": "StartRecordToCustomSinkAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "encodingProfile",
              "Type": "MediaEncodingProfile"
            },
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ],
          "Name": "StartRecordToStorageFileAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "encodingProfile",
              "Type": "MediaEncodingProfile"
            },
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            }
          ],
          "Name": "StartRecordToStreamAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "StopPreviewAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "StopRecordAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<MediaCapture,Object>",
          "Name": "CameraStreamStateChanged"
        },
        {
          "Type": "MediaCaptureFailedEventHandler",
          "Name": "Failed"
        },
        {
          "Type": "TypedEventHandler<MediaCapture,MediaCaptureFocusChangedEventArgs>",
          "Name": "FocusChanged"
        },
        {
          "Type": "TypedEventHandler<MediaCapture,PhotoConfirmationCapturedEventArgs>",
          "Name": "PhotoConfirmationCaptured"
        },
        {
          "Type": "RecordLimitationExceededEventHandler",
          "Name": "RecordLimitationExceeded"
        }
      ],
      "Name": "Windows.Media.Capture.MediaCapture"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Code"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Message"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Capture.MediaCaptureFailedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MediaCaptureFocusState",
          "IsGet": true,
          "Name": "FocusState"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Capture.MediaCaptureFocusChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "AudioDeviceId"
        },
        {
          "Type": "AudioProcessing",
          "IsGet": true,
          "IsSet": true,
          "Name": "AudioProcessing"
        },
        {
          "Type": "IMediaSource",
          "IsGet": true,
          "IsSet": true,
          "Name": "AudioSource"
        },
        {
          "Type": "MediaCategory",
          "IsGet": true,
          "IsSet": true,
          "Name": "MediaCategory"
        },
        {
          "Type": "PhotoCaptureSource",
          "IsGet": true,
          "IsSet": true,
          "Name": "PhotoCaptureSource"
        },
        {
          "Type": "StreamingCaptureMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "StreamingCaptureMode"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "VideoDeviceId"
        },
        {
          "Type": "IMediaSource",
          "IsGet": true,
          "IsSet": true,
          "Name": "VideoSource"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Capture.MediaCaptureInitializationSettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AudioDeviceId"
        },
        {
          "Type": "AudioProcessing",
          "IsGet": true,
          "Name": "AudioProcessing"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CameraSoundRequiredForRegion"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "ConcurrentRecordAndPhotoSequenceSupported"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "ConcurrentRecordAndPhotoSupported"
        },
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "Name": "Horizontal35mmEquivalentFocalLength"
        },
        {
          "Type": "MediaCategory",
          "IsGet": true,
          "Name": "MediaCategory"
        },
        {
          "Type": "PhotoCaptureSource",
          "IsGet": true,
          "Name": "PhotoCaptureSource"
        },
        {
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "Name": "PitchOffsetDegrees"
        },
        {
          "Type": "StreamingCaptureMode",
          "IsGet": true,
          "Name": "StreamingCaptureMode"
        },
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "Name": "Vertical35mmEquivalentFocalLength"
        },
        {
          "Type": "VideoDeviceCharacteristic",
          "IsGet": true,
          "Name": "VideoDeviceCharacteristic"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "VideoDeviceId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Capture.MediaCaptureSettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "CaptureTimeOffset"
        },
        {
          "Type": "CapturedFrame",
          "IsGet": true,
          "Name": "Frame"
        },
        {
          "Type": "CapturedFrame",
          "IsGet": true,
          "Name": "Thumbnail"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Capture.PhotoCapturedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "CaptureTimeOffset"
        },
        {
          "Type": "CapturedFrame",
          "IsGet": true,
          "Name": "Frame"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Capture.PhotoConfirmationCapturedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IMediaSource",
          "IsGet": true,
          "Name": "AudioSource"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsAudioSuspended"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsVideoSuspended"
        },
        {
          "Type": "IMediaSource",
          "IsGet": true,
          "Name": "VideoSource"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "ScreenCapture",
          "Name": "GetForCurrentView"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<ScreenCapture,SourceSuspensionChangedEventArgs>",
          "Name": "SourceSuspensionChanged"
        }
      ],
      "Name": "Windows.Media.Capture.ScreenCapture"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsAudioSuspended"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsVideoSuspended"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Capture.SourceSuspensionChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICastingConnection",
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "CastingDevice",
          "IsGet": true,
          "Name": "Device"
        },
        {
          "Type": "CastingSource",
          "IsGet": true,
          "IsSet": true,
          "Name": "Source"
        },
        {
          "Type": "CastingConnectionState",
          "IsGet": true,
          "Name": "State"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<CastingConnectionErrorStatus>",
          "Name": "DisconnectAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<CastingConnection,CastingConnectionErrorOccurredEventArgs>",
          "Name": "ErrorOccurred"
        },
        {
          "Type": "TypedEventHandler<CastingConnection,Object>",
          "Name": "StateChanged"
        }
      ],
      "Name": "Windows.Media.Casting.CastingConnection"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "CastingConnectionErrorStatus",
          "IsGet": true,
          "Name": "ErrorStatus"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Message"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Casting.CastingConnectionErrorOccurredEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "FriendlyName"
        },
        {
          "Type": "IRandomAccessStreamWithContentType",
          "IsGet": true,
          "Name": "Icon"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "CastingPlaybackTypes",
          "IsGet": true,
          "Name": "SupportedCastingPlaybackTypes"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<StartCastingResult>",
          "Parameters": [
            {
              "Name": "value",
              "Type": "CastingSource"
            }
          ],
          "Name": "RequestStartCastingAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Casting.CastingDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "PreferredSourceUri"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Casting.CastingSource"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "CastingConnection",
          "IsGet": true,
          "Name": "Connection"
        },
        {
          "Type": "CastingConnectionErrorStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Casting.StartCastingResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IMediaStreamDescriptor"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "encodingProperties",
              "Type": "AudioEncodingProperties"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "AudioEncodingProperties",
          "IsGet": true,
          "Name": "EncodingProperties"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsSelected"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Language"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Name"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.AudioStreamDescriptor"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Rect",
          "IsGet": true,
          "Name": "Bounds"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "Certainty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.DetectedFace"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "FaceDetectionEffectFrame",
          "IsGet": true,
          "Name": "ResultFrame"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.FaceDetectedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IMediaExtension"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "DesiredDetectionPeriod"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Enabled"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MaxFacesSupported"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxFacesToDetect"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "configuration",
              "Type": "IPropertySet"
            }
          ],
          "Name": "SetProperties"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<FaceDetectionEffect,FaceDetectedEventArgs>",
          "Name": "FaceDetected"
        }
      ],
      "Name": "Windows.Media.Core.FaceDetectionEffect"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVideoEffectDefinition"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ActivatableClassId"
        },
        {
          "Type": "IPropertySet",
          "IsGet": true,
          "Name": "Properties"
        },
        {
          "Type": "FaceDetectionQualityMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "QualityMode"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "SynchronousDetectionEnabled"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.FaceDetectionEffectDefinition"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IMediaFrame"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Duration"
        },
        {
          "Type": "IPropertySet",
          "IsGet": true,
          "Name": "ExtendedProperties"
        },
        {
          "Type": "IReadOnlyList<DetectedFace>",
          "IsGet": true,
          "Name": "Faces"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsDelayed"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsDiscontinuous"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsReadOnly"
        },
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "RelativeTime"
        },
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "SystemRelativeTime"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Core.FaceDetectionEffectFrame"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Enabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "FrameControllersEnabled"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.FlashTechniqueControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "Certainty"
        },
        {
          "Type": "IReadOnlyList<FrameController>",
          "IsGet": true,
          "Name": "FrameControllers"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.FlashTechniqueOutput"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Enabled"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.HazeControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "Certainty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.HazeOutput"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Enabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "FrameControllersEnabled"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.HighDynamicRangeControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "Certainty"
        },
        {
          "Type": "IReadOnlyList<FrameController>",
          "IsGet": true,
          "Name": "FrameControllers"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.HighDynamicRangeOutput"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Enabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "FrameControllersEnabled"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.LowLightControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "Certainty"
        },
        {
          "Type": "IReadOnlyList<FrameController>",
          "IsGet": true,
          "Name": "FrameControllers"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.LowLightOutput"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Buffer",
          "IsGet": true,
          "Name": "Buffer"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "DecodeTimestamp"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Discontinuous"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "Duration"
        },
        {
          "Type": "MediaStreamSamplePropertySet",
          "IsGet": true,
          "Name": "ExtendedProperties"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "KeyFrame"
        },
        {
          "Type": "MediaStreamSampleProtectionProperties",
          "IsGet": true,
          "Name": "Protection"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "MediaStreamSample",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "timestamp",
              "Type": "TimeSpan"
            }
          ],
          "Name": "CreateFromBuffer"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MediaStreamSample>",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IInputStream"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "timestamp",
              "Type": "TimeSpan"
            }
          ],
          "Name": "CreateFromStreamAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<MediaStreamSample,Object>",
          "Name": "Processed"
        }
      ],
      "Name": "Windows.Media.Core.MediaStreamSample"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<Guid,Object>>",
        "IDictionary<Guid,Object>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<Guid,Object>>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSamplePropertySet"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]&",
              "Out": true
            }
          ],
          "Name": "GetInitializationVector"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]&",
              "Out": true
            }
          ],
          "Name": "GetKeyIdentifier"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]&",
              "Out": true
            }
          ],
          "Name": "GetSubSampleMapping"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]"
            }
          ],
          "Name": "SetInitializationVector"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]"
            }
          ],
          "Name": "SetKeyIdentifier"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]"
            }
          ],
          "Name": "SetSubSampleMapping"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSampleProtectionProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IMediaSource"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "descriptor",
              "Type": "IMediaStreamDescriptor"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "descriptor",
              "Type": "IMediaStreamDescriptor"
            },
            {
              "Name": "descriptor2",
              "Type": "IMediaStreamDescriptor"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "BufferTime"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "CanSeek"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "Duration"
        },
        {
          "Type": "MediaProtectionManager",
          "IsGet": true,
          "IsSet": true,
          "Name": "MediaProtectionManager"
        },
        {
          "Type": "MusicProperties",
          "IsGet": true,
          "Name": "MusicProperties"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true,
          "Name": "Thumbnail"
        },
        {
          "Type": "VideoProperties",
          "IsGet": true,
          "Name": "VideoProperties"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "streamDescriptor",
              "Type": "IMediaStreamDescriptor"
            },
            {
              "Name": "keyIdentifier",
              "Type": "Byte[]"
            },
            {
              "Name": "licenseData",
              "Type": "Byte[]"
            }
          ],
          "Name": "AddProtectionKey"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "descriptor",
              "Type": "IMediaStreamDescriptor"
            }
          ],
          "Name": "AddStreamDescriptor"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "errorStatus",
              "Type": "MediaStreamSourceErrorStatus"
            }
          ],
          "Name": "NotifyError"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "startOffset",
              "Type": "TimeSpan"
            },
            {
              "Name": "endOffset",
              "Type": "TimeSpan"
            }
          ],
          "Name": "SetBufferedRange"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<MediaStreamSource,MediaStreamSourceClosedEventArgs>",
          "Name": "Closed"
        },
        {
          "Type": "TypedEventHandler<MediaStreamSource,Object>",
          "Name": "Paused"
        },
        {
          "Type": "TypedEventHandler<MediaStreamSource,MediaStreamSourceSampleRequestedEventArgs>",
          "Name": "SampleRequested"
        },
        {
          "Type": "TypedEventHandler<MediaStreamSource,MediaStreamSourceStartingEventArgs>",
          "Name": "Starting"
        },
        {
          "Type": "TypedEventHandler<MediaStreamSource,MediaStreamSourceSwitchStreamsRequestedEventArgs>",
          "Name": "SwitchStreamsRequested"
        }
      ],
      "Name": "Windows.Media.Core.MediaStreamSource"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MediaStreamSourceClosedRequest",
          "IsGet": true,
          "Name": "Request"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSourceClosedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MediaStreamSourceClosedReason",
          "IsGet": true,
          "Name": "Reason"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSourceClosedRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MediaStreamSample",
          "IsGet": true,
          "IsSet": true,
          "Name": "Sample"
        },
        {
          "Type": "IMediaStreamDescriptor",
          "IsGet": true,
          "Name": "StreamDescriptor"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "MediaStreamSourceSampleRequestDeferral",
          "Name": "GetDeferral"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "progress",
              "Type": "UInt32"
            }
          ],
          "Name": "ReportSampleProgress"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSourceSampleRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSourceSampleRequestDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MediaStreamSourceSampleRequest",
          "IsGet": true,
          "Name": "Request"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSourceSampleRequestedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MediaStreamSourceStartingRequest",
          "IsGet": true,
          "Name": "Request"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSourceStartingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "Name": "StartPosition"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "MediaStreamSourceStartingRequestDeferral",
          "Name": "GetDeferral"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "TimeSpan"
            }
          ],
          "Name": "SetActualStartPosition"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSourceStartingRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSourceStartingRequestDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IMediaStreamDescriptor",
          "IsGet": true,
          "Name": "NewStreamDescriptor"
        },
        {
          "Type": "IMediaStreamDescriptor",
          "IsGet": true,
          "Name": "OldStreamDescriptor"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "MediaStreamSourceSwitchStreamsRequestDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSourceSwitchStreamsRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSourceSwitchStreamsRequestDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MediaStreamSourceSwitchStreamsRequest",
          "IsGet": true,
          "Name": "Request"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.MediaStreamSourceSwitchStreamsRequestedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IMediaExtension"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "DesiredAnalysisPeriod"
        },
        {
          "Type": "FlashTechniqueControl",
          "IsGet": true,
          "Name": "FlashTechniqueAnalyzer"
        },
        {
          "Type": "HazeControl",
          "IsGet": true,
          "Name": "HazeAnalyzer"
        },
        {
          "Type": "HighDynamicRangeControl",
          "IsGet": true,
          "Name": "HighDynamicRangeAnalyzer"
        },
        {
          "Type": "LowLightControl",
          "IsGet": true,
          "Name": "LowLightAnalyzer"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "configuration",
              "Type": "IPropertySet"
            }
          ],
          "Name": "SetProperties"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<SceneAnalysisEffect,SceneAnalyzedEventArgs>",
          "Name": "SceneAnalyzed"
        }
      ],
      "Name": "Windows.Media.Core.SceneAnalysisEffect"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVideoEffectDefinition"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ActivatableClassId"
        },
        {
          "Type": "IPropertySet",
          "IsGet": true,
          "Name": "Properties"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.SceneAnalysisEffectDefinition"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IMediaFrame"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Duration"
        },
        {
          "Type": "IPropertySet",
          "IsGet": true,
          "Name": "ExtendedProperties"
        },
        {
          "Type": "FlashTechniqueOutput",
          "IsGet": true,
          "Name": "FlashTechnique"
        },
        {
          "Type": "CapturedFrameControlValues",
          "IsGet": true,
          "Name": "FrameControlValues"
        },
        {
          "Type": "HazeOutput",
          "IsGet": true,
          "Name": "Haze"
        },
        {
          "Type": "HighDynamicRangeOutput",
          "IsGet": true,
          "Name": "HighDynamicRange"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsDiscontinuous"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsReadOnly"
        },
        {
          "Type": "LowLightOutput",
          "IsGet": true,
          "Name": "LowLight"
        },
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "RelativeTime"
        },
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "SystemRelativeTime"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Core.SceneAnalysisEffectFrame"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SceneAnalysisEffectFrame",
          "IsGet": true,
          "Name": "ResultFrame"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.SceneAnalyzedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IMediaExtension"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Enabled"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<MediaEncodingProfile>",
          "Parameters": [
            {
              "Name": "controller",
              "Type": "VideoDeviceController"
            },
            {
              "Name": "recordProfile",
              "Type": "MediaEncodingProfile"
            }
          ],
          "Name": "ConfigureEncodingProfileAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "configuration",
              "Type": "IPropertySet"
            }
          ],
          "Name": "SetProperties"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Core.VideoStabilizationEffect"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVideoEffectDefinition"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ActivatableClassId"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "LowLatencyEnabled"
        },
        {
          "Type": "IPropertySet",
          "IsGet": true,
          "Name": "Properties"
        },
        {
          "Type": "VideoStabilizationQualityMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "QualityMode"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.VideoStabilizationEffectDefinition"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IMediaStreamDescriptor"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "encodingProperties",
              "Type": "VideoEncodingProperties"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "VideoEncodingProperties",
          "IsGet": true,
          "Name": "EncodingProperties"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsSelected"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Language"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Name"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.VideoStreamDescriptor"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IMediaDeviceController"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Muted"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "VolumePercent"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IReadOnlyList<IMediaEncodingProperties>",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            }
          ],
          "Name": "GetAvailableMediaStreamProperties"
        },
        {
          "ReturnType": "IMediaEncodingProperties",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            }
          ],
          "Name": "GetMediaStreamProperties"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            },
            {
              "Name": "mediaEncodingProperties",
              "Type": "IMediaEncodingProperties"
            }
          ],
          "Name": "SetMediaStreamPropertiesAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.AudioDeviceController"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "FrameExposureCapabilities",
          "IsGet": true,
          "Name": "Exposure"
        },
        {
          "Type": "FrameExposureCompensationCapabilities",
          "IsGet": true,
          "Name": "ExposureCompensation"
        },
        {
          "Type": "FrameFlashCapabilities",
          "IsGet": true,
          "Name": "Flash"
        },
        {
          "Type": "FrameFocusCapabilities",
          "IsGet": true,
          "Name": "Focus"
        },
        {
          "Type": "FrameIsoSpeedCapabilities",
          "IsGet": true,
          "Name": "IsoSpeed"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "PhotoConfirmationSupported"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.Core.FrameControlCapabilities"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "FrameExposureCompensationControl",
          "IsGet": true,
          "Name": "ExposureCompensationControl"
        },
        {
          "Type": "FrameExposureControl",
          "IsGet": true,
          "Name": "ExposureControl"
        },
        {
          "Type": "FrameFlashControl",
          "IsGet": true,
          "Name": "FlashControl"
        },
        {
          "Type": "FrameFocusControl",
          "IsGet": true,
          "Name": "FocusControl"
        },
        {
          "Type": "FrameIsoSpeedControl",
          "IsGet": true,
          "Name": "IsoSpeedControl"
        },
        {
          "Type": "Nullable<Boolean>",
          "IsGet": true,
          "IsSet": true,
          "Name": "PhotoConfirmationEnabled"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.Core.FrameController"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "Max"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "Min"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "Step"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Supported"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.Core.FrameExposureCapabilities"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "Max"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "Min"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "Step"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Supported"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.Core.FrameExposureCompensationCapabilities"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<Single>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.Core.FrameExposureCompensationControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Auto"
        },
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.Core.FrameExposureControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "PowerSupported"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "RedEyeReductionSupported"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Supported"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.Core.FrameFlashCapabilities"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Auto"
        },
        {
          "Type": "FrameFlashMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "Mode"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "PowerPercent"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "RedEyeReduction"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.Core.FrameFlashControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Max"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Min"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Step"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Supported"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.Core.FrameFocusCapabilities"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.Core.FrameFocusControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Max"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Min"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Step"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Supported"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.Core.FrameIsoSpeedCapabilities"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Auto"
        },
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.Core.FrameIsoSpeedControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<FrameController>",
          "IsGet": true,
          "Name": "DesiredFrameControllers"
        },
        {
          "Type": "FrameControlCapabilities",
          "IsGet": true,
          "Name": "FrameCapabilities"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "MaxPhotosPerSecond"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "PhotosPerSecondLimit"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Supported"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "MediaRatio",
          "Name": "GetCurrentFrameRate"
        },
        {
          "ReturnType": "MediaRatio",
          "Parameters": [
            {
              "Name": "captureProperties",
              "Type": "IMediaEncodingProperties"
            }
          ],
          "Name": "GetHighestConcurrentFrameRate"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.Core.VariablePhotoSequenceController"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDefaultAudioDeviceChangedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "AudioDeviceRole",
          "IsGet": true,
          "Name": "Role"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.DefaultAudioCaptureDeviceChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDefaultAudioDeviceChangedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "AudioDeviceRole",
          "IsGet": true,
          "Name": "Role"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.DefaultAudioRenderDeviceChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "Max"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "Min"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "Step"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Supported"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Single"
            }
          ],
          "Name": "SetValueAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.ExposureCompensationControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Auto"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "Max"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "Min"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "Step"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Supported"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetAutoAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "shutterDuration",
              "Type": "TimeSpan"
            }
          ],
          "Name": "SetValueAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.ExposureControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Enabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Supported"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.ExposurePriorityVideoControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AssistantLightEnabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AssistantLightSupported"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Auto"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Enabled"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "PowerPercent"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "PowerSupported"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "RedEyeReduction"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "RedEyeReductionSupported"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Supported"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.FlashControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "FocusChangedSupported"
        },
        {
          "Type": "MediaCaptureFocusState",
          "IsGet": true,
          "Name": "FocusState"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Max"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Min"
        },
        {
          "Type": "FocusMode",
          "IsGet": true,
          "Name": "Mode"
        },
        {
          "Type": "FocusPreset",
          "IsGet": true,
          "Name": "Preset"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Step"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Supported"
        },
        {
          "Type": "IReadOnlyList<ManualFocusDistance>",
          "IsGet": true,
          "Name": "SupportedFocusDistances"
        },
        {
          "Type": "IReadOnlyList<FocusMode>",
          "IsGet": true,
          "Name": "SupportedFocusModes"
        },
        {
          "Type": "IReadOnlyList<AutoFocusRange>",
          "IsGet": true,
          "Name": "SupportedFocusRanges"
        },
        {
          "Type": "IReadOnlyList<FocusPreset>",
          "IsGet": true,
          "Name": "SupportedPresets"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Value"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "WaitForFocusSupported"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "settings",
              "Type": "FocusSettings"
            }
          ],
          "Name": "Configure"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "FocusAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "LockAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "preset",
              "Type": "FocusPreset"
            }
          ],
          "Name": "SetPresetAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "preset",
              "Type": "FocusPreset"
            },
            {
              "Name": "completeBeforeFocus",
              "Type": "Boolean"
            }
          ],
          "Name": "SetPresetAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "focus",
              "Type": "UInt32"
            }
          ],
          "Name": "SetValueAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "UnlockAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.FocusControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AutoFocusRange",
          "IsGet": true,
          "IsSet": true,
          "Name": "AutoFocusRange"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisableDriverFallback"
        },
        {
          "Type": "Nullable<ManualFocusDistance>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Distance"
        },
        {
          "Type": "FocusMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "Mode"
        },
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Value"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "WaitForFocus"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.FocusSettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "HdrVideoMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "Mode"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Supported"
        },
        {
          "Type": "IReadOnlyList<HdrVideoMode>",
          "IsGet": true,
          "Name": "SupportedModes"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.HdrVideoControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Auto"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Max"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Min"
        },
        {
          "Type": "IsoSpeedPreset",
          "IsGet": true,
          "Name": "Preset"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Step"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Supported"
        },
        {
          "Type": "IReadOnlyList<IsoSpeedPreset>",
          "IsGet": true,
          "Name": "SupportedPresets"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Name": "SetAutoAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "preset",
              "Type": "IsoSpeedPreset"
            }
          ],
          "Name": "SetPresetAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "isoSpeed",
              "Type": "UInt32"
            }
          ],
          "Name": "SetValueAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.IsoSpeedControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "DesiredThumbnailSize"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "HardwareAcceleratedThumbnailSupported"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "ThumbnailEnabled"
        },
        {
          "Type": "MediaThumbnailFormat",
          "IsGet": true,
          "IsSet": true,
          "Name": "ThumbnailFormat"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "MediaRatio",
          "Name": "GetCurrentFrameRate"
        },
        {
          "ReturnType": "MediaRatio",
          "Parameters": [
            {
              "Name": "captureProperties",
              "Type": "IMediaEncodingProperties"
            }
          ],
          "Name": "GetHighestConcurrentFrameRate"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.LowLagPhotoControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "DesiredThumbnailSize"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "HardwareAcceleratedThumbnailSupported"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MaxPastPhotos"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "MaxPhotosPerSecond"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "PastPhotoLimit"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "PhotosPerSecondLimit"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Supported"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "ThumbnailEnabled"
        },
        {
          "Type": "MediaThumbnailFormat",
          "IsGet": true,
          "IsSet": true,
          "Name": "ThumbnailFormat"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "MediaRatio",
          "Name": "GetCurrentFrameRate"
        },
        {
          "ReturnType": "MediaRatio",
          "Parameters": [
            {
              "Name": "captureProperties",
              "Type": "IMediaEncodingProperties"
            }
          ],
          "Name": "GetHighestConcurrentFrameRate"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.LowLagPhotoSequenceControl"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Name": "GetAudioCaptureSelector"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Name": "GetAudioRenderSelector"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "role",
              "Type": "AudioDeviceRole"
            }
          ],
          "Name": "GetDefaultAudioCaptureId"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "role",
              "Type": "AudioDeviceRole"
            }
          ],
          "Name": "GetDefaultAudioRenderId"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Name": "GetVideoCaptureSelector"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<Object,DefaultAudioCaptureDeviceChangedEventArgs>",
          "IsStatic": true,
          "Name": "DefaultAudioCaptureDeviceChanged"
        },
        {
          "Type": "TypedEventHandler<Object,DefaultAudioRenderDeviceChangedEventArgs>",
          "IsStatic": true,
          "Name": "DefaultAudioRenderDeviceChanged"
        }
      ],
      "Name": "Windows.Media.Devices.MediaDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MediaDeviceControlCapabilities",
          "IsGet": true,
          "Name": "Capabilities"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Boolean&",
              "Out": true
            }
          ],
          "Name": "TryGetAuto"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double&",
              "Out": true
            }
          ],
          "Name": "TryGetValue"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "TrySetAuto"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ],
          "Name": "TrySetValue"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.MediaDeviceControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AutoModeSupported"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "Default"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "Max"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "Min"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "Step"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Supported"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.MediaDeviceControlCapabilities"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "OpticalImageStabilizationMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "Mode"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Supported"
        },
        {
          "Type": "IReadOnlyList<OpticalImageStabilizationMode>",
          "IsGet": true,
          "Name": "SupportedModes"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.OpticalImageStabilizationControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Enabled"
        },
        {
          "Type": "MediaPixelFormat",
          "IsGet": true,
          "IsSet": true,
          "Name": "PixelFormat"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Supported"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.PhotoConfirmationControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AutoExposureEnabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AutoFocusEnabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AutoWhiteBalanceEnabled"
        },
        {
          "Type": "Rect",
          "IsGet": true,
          "IsSet": true,
          "Name": "Bounds"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "BoundsNormalized"
        },
        {
          "Type": "RegionOfInterestType",
          "IsGet": true,
          "IsSet": true,
          "Name": "Type"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Weight"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.RegionOfInterest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AutoExposureSupported"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AutoFocusSupported"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AutoWhiteBalanceSupported"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MaxRegions"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Name": "ClearRegionsAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "regions",
              "Type": "IEnumerable<RegionOfInterest>"
            }
          ],
          "Name": "SetRegionsAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "regions",
              "Type": "IEnumerable<RegionOfInterest>"
            },
            {
              "Name": "lockValues",
              "Type": "Boolean"
            }
          ],
          "Name": "SetRegionsAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.RegionsOfInterestControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<CaptureSceneMode>",
          "IsGet": true,
          "Name": "SupportedModes"
        },
        {
          "Type": "CaptureSceneMode",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "sceneMode",
              "Type": "CaptureSceneMode"
            }
          ],
          "Name": "SetValueAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.SceneModeControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Enabled"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "PowerPercent"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "PowerSupported"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Supported"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.TorchControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IMediaDeviceController"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MediaDeviceControl",
          "IsGet": true,
          "Name": "BacklightCompensation"
        },
        {
          "Type": "MediaDeviceControl",
          "IsGet": true,
          "Name": "Brightness"
        },
        {
          "Type": "MediaDeviceControl",
          "IsGet": true,
          "Name": "Contrast"
        },
        {
          "Type": "MediaCaptureOptimization",
          "IsGet": true,
          "IsSet": true,
          "Name": "DesiredOptimization"
        },
        {
          "Type": "MediaDeviceControl",
          "IsGet": true,
          "Name": "Exposure"
        },
        {
          "Type": "ExposureCompensationControl",
          "IsGet": true,
          "Name": "ExposureCompensationControl"
        },
        {
          "Type": "ExposureControl",
          "IsGet": true,
          "Name": "ExposureControl"
        },
        {
          "Type": "ExposurePriorityVideoControl",
          "IsGet": true,
          "Name": "ExposurePriorityVideoControl"
        },
        {
          "Type": "FlashControl",
          "IsGet": true,
          "Name": "FlashControl"
        },
        {
          "Type": "MediaDeviceControl",
          "IsGet": true,
          "Name": "Focus"
        },
        {
          "Type": "FocusControl",
          "IsGet": true,
          "Name": "FocusControl"
        },
        {
          "Type": "HdrVideoControl",
          "IsGet": true,
          "Name": "HdrVideoControl"
        },
        {
          "Type": "MediaDeviceControl",
          "IsGet": true,
          "Name": "Hue"
        },
        {
          "Type": "IsoSpeedControl",
          "IsGet": true,
          "Name": "IsoSpeedControl"
        },
        {
          "Type": "LowLagPhotoControl",
          "IsGet": true,
          "Name": "LowLagPhoto"
        },
        {
          "Type": "LowLagPhotoSequenceControl",
          "IsGet": true,
          "Name": "LowLagPhotoSequence"
        },
        {
          "Type": "OpticalImageStabilizationControl",
          "IsGet": true,
          "Name": "OpticalImageStabilizationControl"
        },
        {
          "Type": "MediaDeviceControl",
          "IsGet": true,
          "Name": "Pan"
        },
        {
          "Type": "PhotoConfirmationControl",
          "IsGet": true,
          "Name": "PhotoConfirmationControl"
        },
        {
          "Type": "CaptureUse",
          "IsGet": true,
          "IsSet": true,
          "Name": "PrimaryUse"
        },
        {
          "Type": "RegionsOfInterestControl",
          "IsGet": true,
          "Name": "RegionsOfInterestControl"
        },
        {
          "Type": "MediaDeviceControl",
          "IsGet": true,
          "Name": "Roll"
        },
        {
          "Type": "SceneModeControl",
          "IsGet": true,
          "Name": "SceneModeControl"
        },
        {
          "Type": "MediaDeviceControl",
          "IsGet": true,
          "Name": "Tilt"
        },
        {
          "Type": "TorchControl",
          "IsGet": true,
          "Name": "TorchControl"
        },
        {
          "Type": "VariablePhotoSequenceController",
          "IsGet": true,
          "Name": "VariablePhotoSequenceController"
        },
        {
          "Type": "MediaDeviceControl",
          "IsGet": true,
          "Name": "WhiteBalance"
        },
        {
          "Type": "WhiteBalanceControl",
          "IsGet": true,
          "Name": "WhiteBalanceControl"
        },
        {
          "Type": "MediaDeviceControl",
          "IsGet": true,
          "Name": "Zoom"
        },
        {
          "Type": "ZoomControl",
          "IsGet": true,
          "Name": "ZoomControl"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IReadOnlyList<IMediaEncodingProperties>",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            }
          ],
          "Name": "GetAvailableMediaStreamProperties"
        },
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "propertyId",
              "Type": "String"
            }
          ],
          "Name": "GetDeviceProperty"
        },
        {
          "ReturnType": "IMediaEncodingProperties",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            }
          ],
          "Name": "GetMediaStreamProperties"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "propertyId",
              "Type": "String"
            },
            {
              "Name": "propertyValue",
              "Type": "Object"
            }
          ],
          "Name": "SetDeviceProperty"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            },
            {
              "Name": "mediaEncodingProperties",
              "Type": "IMediaEncodingProperties"
            }
          ],
          "Name": "SetMediaStreamPropertiesAsync"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "PowerlineFrequency&",
              "Out": true
            }
          ],
          "Name": "TryGetPowerlineFrequency"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "PowerlineFrequency"
            }
          ],
          "Name": "TrySetPowerlineFrequency"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.VideoDeviceController"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Max"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Min"
        },
        {
          "Type": "ColorTemperaturePreset",
          "IsGet": true,
          "Name": "Preset"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Step"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Supported"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "preset",
              "Type": "ColorTemperaturePreset"
            }
          ],
          "Name": "SetPresetAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "temperature",
              "Type": "UInt32"
            }
          ],
          "Name": "SetValueAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.WhiteBalanceControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "Max"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "Min"
        },
        {
          "Type": "ZoomTransitionMode",
          "IsGet": true,
          "Name": "Mode"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "Step"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Supported"
        },
        {
          "Type": "IReadOnlyList<ZoomTransitionMode>",
          "IsGet": true,
          "Name": "SupportedModes"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "settings",
              "Type": "ZoomSettings"
            }
          ],
          "Name": "Configure"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.ZoomControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ZoomTransitionMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "Mode"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.ZoomSettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<IAudioEffectDefinition>",
          "IsGet": true,
          "Name": "AudioEffectDefinitions"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "Delay"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "OriginalDuration"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "TrimmedDuration"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "TrimTimeFromEnd"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "TrimTimeFromStart"
        },
        {
          "Type": "IDictionary<String,String>",
          "IsGet": true,
          "Name": "UserData"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Volume"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "BackgroundAudioTrack",
          "Name": "Clone"
        },
        {
          "IsStatic": true,
          "ReturnType": "BackgroundAudioTrack",
          "Parameters": [
            {
              "Name": "embeddedAudioTrack",
              "Type": "EmbeddedAudioTrack"
            }
          ],
          "Name": "CreateFromEmbeddedAudioTrack"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<BackgroundAudioTrack>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ],
          "Name": "CreateFromFileAsync"
        },
        {
          "ReturnType": "AudioEncodingProperties",
          "Name": "GetAudioEncodingProperties"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Editing.BackgroundAudioTrack"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "AudioEncodingProperties",
          "Name": "GetAudioEncodingProperties"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Editing.EmbeddedAudioTrack"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<IAudioEffectDefinition>",
          "IsGet": true,
          "Name": "AudioEffectDefinitions"
        },
        {
          "Type": "IReadOnlyList<EmbeddedAudioTrack>",
          "IsGet": true,
          "Name": "EmbeddedAudioTracks"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "EndTimeInComposition"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "OriginalDuration"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedEmbeddedAudioTrackIndex"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "StartTimeInComposition"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "TrimmedDuration"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "TrimTimeFromEnd"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "TrimTimeFromStart"
        },
        {
          "Type": "IDictionary<String,String>",
          "IsGet": true,
          "Name": "UserData"
        },
        {
          "Type": "IList<IVideoEffectDefinition>",
          "IsGet": true,
          "Name": "VideoEffectDefinitions"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Volume"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "MediaClip",
          "Name": "Clone"
        },
        {
          "IsStatic": true,
          "ReturnType": "MediaClip",
          "Parameters": [
            {
              "Name": "color",
              "Type": "Color"
            },
            {
              "Name": "originalDuration",
              "Type": "TimeSpan"
            }
          ],
          "Name": "CreateFromColor"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MediaClip>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ],
          "Name": "CreateFromFileAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MediaClip>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "originalDuration",
              "Type": "TimeSpan"
            }
          ],
          "Name": "CreateFromImageFileAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "MediaClip",
          "Parameters": [
            {
              "Name": "surface",
              "Type": "IDirect3DSurface"
            },
            {
              "Name": "originalDuration",
              "Type": "TimeSpan"
            }
          ],
          "Name": "CreateFromSurface"
        },
        {
          "ReturnType": "VideoEncodingProperties",
          "Name": "GetVideoEncodingProperties"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Editing.MediaClip"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<BackgroundAudioTrack>",
          "IsGet": true,
          "Name": "BackgroundAudioTracks"
        },
        {
          "Type": "IList<MediaClip>",
          "IsGet": true,
          "Name": "Clips"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "Duration"
        },
        {
          "Type": "IList<MediaOverlayLayer>",
          "IsGet": true,
          "Name": "OverlayLayers"
        },
        {
          "Type": "IDictionary<String,String>",
          "IsGet": true,
          "Name": "UserData"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "MediaComposition",
          "Name": "Clone"
        },
        {
          "ReturnType": "MediaEncodingProfile",
          "Name": "CreateDefaultEncodingProfile"
        },
        {
          "ReturnType": "MediaStreamSource",
          "Name": "GenerateMediaStreamSource"
        },
        {
          "ReturnType": "MediaStreamSource",
          "Parameters": [
            {
              "Name": "encodingProfile",
              "Type": "MediaEncodingProfile"
            }
          ],
          "Name": "GenerateMediaStreamSource"
        },
        {
          "ReturnType": "MediaStreamSource",
          "Parameters": [
            {
              "Name": "scaledWidth",
              "Type": "Int32"
            },
            {
              "Name": "scaledHeight",
              "Type": "Int32"
            }
          ],
          "Name": "GeneratePreviewMediaStreamSource"
        },
        {
          "ReturnType": "IAsyncOperation<ImageStream>",
          "Parameters": [
            {
              "Name": "timeFromStart",
              "Type": "TimeSpan"
            },
            {
              "Name": "scaledWidth",
              "Type": "Int32"
            },
            {
              "Name": "scaledHeight",
              "Type": "Int32"
            },
            {
              "Name": "framePrecision",
              "Type": "VideoFramePrecision"
            }
          ],
          "Name": "GetThumbnailAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<ImageStream>>",
          "Parameters": [
            {
              "Name": "timesFromStart",
              "Type": "IEnumerable<TimeSpan>"
            },
            {
              "Name": "scaledWidth",
              "Type": "Int32"
            },
            {
              "Name": "scaledHeight",
              "Type": "Int32"
            },
            {
              "Name": "framePrecision",
              "Type": "VideoFramePrecision"
            }
          ],
          "Name": "GetThumbnailsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MediaComposition>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "StorageFile"
            }
          ],
          "Name": "LoadAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<TranscodeFailureReason,Double>",
          "Parameters": [
            {
              "Name": "destination",
              "Type": "IStorageFile"
            }
          ],
          "Name": "RenderToFileAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<TranscodeFailureReason,Double>",
          "Parameters": [
            {
              "Name": "destination",
              "Type": "IStorageFile"
            },
            {
              "Name": "trimmingPreference",
              "Type": "MediaTrimmingPreference"
            }
          ],
          "Name": "RenderToFileAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<TranscodeFailureReason,Double>",
          "Parameters": [
            {
              "Name": "destination",
              "Type": "IStorageFile"
            },
            {
              "Name": "trimmingPreference",
              "Type": "MediaTrimmingPreference"
            },
            {
              "Name": "encodingProfile",
              "Type": "MediaEncodingProfile"
            }
          ],
          "Name": "RenderToFileAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ],
          "Name": "SaveAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Editing.MediaComposition"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "clip",
              "Type": "MediaClip"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "clip",
              "Type": "MediaClip"
            },
            {
              "Name": "position",
              "Type": "Rect"
            },
            {
              "Name": "opacity",
              "Type": "Double"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AudioEnabled"
        },
        {
          "Type": "MediaClip",
          "IsGet": true,
          "Name": "Clip"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "Delay"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Opacity"
        },
        {
          "Type": "Rect",
          "IsGet": true,
          "IsSet": true,
          "Name": "Position"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "MediaOverlay",
          "Name": "Clone"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Editing.MediaOverlay"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "compositorDefinition",
              "Type": "IVideoCompositorDefinition"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IVideoCompositorDefinition",
          "IsGet": true,
          "Name": "CustomCompositorDefinition"
        },
        {
          "Type": "IList<MediaOverlay>",
          "IsGet": true,
          "Name": "Overlays"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "MediaOverlayLayer",
          "Name": "Clone"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Editing.MediaOverlayLayer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IReadOnlyList<AudioEffect>",
          "Name": "GetAudioCaptureEffects"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<AudioCaptureEffectsManager,Object>",
          "Name": "AudioCaptureEffectsChanged"
        }
      ],
      "Name": "Windows.Media.Effects.AudioCaptureEffectsManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AudioEffectType",
          "IsGet": true,
          "Name": "AudioEffectType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Effects.AudioEffect"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IAudioEffectDefinition"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "props",
              "Type": "IPropertySet"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ActivatableClassId"
        },
        {
          "Type": "IPropertySet",
          "IsGet": true,
          "Name": "Properties"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Effects.AudioEffectDefinition"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "AudioCaptureEffectsManager",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "MediaCategory"
            }
          ],
          "Name": "CreateAudioCaptureEffectsManager"
        },
        {
          "IsStatic": true,
          "ReturnType": "AudioCaptureEffectsManager",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "MediaCategory"
            },
            {
              "Name": "mode",
              "Type": "AudioProcessing"
            }
          ],
          "Name": "CreateAudioCaptureEffectsManager"
        },
        {
          "IsStatic": true,
          "ReturnType": "AudioRenderEffectsManager",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "AudioRenderCategory"
            }
          ],
          "Name": "CreateAudioRenderEffectsManager"
        },
        {
          "IsStatic": true,
          "ReturnType": "AudioRenderEffectsManager",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "AudioRenderCategory"
            },
            {
              "Name": "mode",
              "Type": "AudioProcessing"
            }
          ],
          "Name": "CreateAudioRenderEffectsManager"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Effects.AudioEffectsManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "EffectsProviderSettingsLabel"
        },
        {
          "Type": "IRandomAccessStreamWithContentType",
          "IsGet": true,
          "Name": "EffectsProviderThumbnail"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IReadOnlyList<AudioEffect>",
          "Name": "GetAudioRenderEffects"
        },
        {
          "ReturnType": "Void",
          "Name": "ShowSettingsUI"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<AudioRenderEffectsManager,Object>",
          "Name": "AudioRenderEffectsChanged"
        }
      ],
      "Name": "Windows.Media.Effects.AudioRenderEffectsManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "VideoFrame",
          "IsGet": true,
          "Name": "BackgroundFrame"
        },
        {
          "Type": "VideoFrame",
          "IsGet": true,
          "Name": "OutputFrame"
        },
        {
          "Type": "IReadOnlyList<IDirect3DSurface>",
          "IsGet": true,
          "Name": "SurfacesToOverlay"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "MediaOverlay",
          "Parameters": [
            {
              "Name": "surfaceToOverlay",
              "Type": "IDirect3DSurface"
            }
          ],
          "Name": "GetOverlayForSurface"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Effects.CompositeVideoFrameContext"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AudioFrame",
          "IsGet": true,
          "Name": "InputFrame"
        },
        {
          "Type": "AudioFrame",
          "IsGet": true,
          "Name": "OutputFrame"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Effects.ProcessAudioFrameContext"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "VideoFrame",
          "IsGet": true,
          "Name": "InputFrame"
        },
        {
          "Type": "VideoFrame",
          "IsGet": true,
          "Name": "OutputFrame"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Effects.ProcessVideoFrameContext"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVideoEffectDefinition"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ActivatableClassId"
        },
        {
          "Type": "IPropertySet",
          "IsGet": true,
          "Name": "Properties"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "TimeStretchRate"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Effects.SlowMotionEffectDefinition"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVideoCompositorDefinition"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "props",
              "Type": "IPropertySet"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ActivatableClassId"
        },
        {
          "Type": "IPropertySet",
          "IsGet": true,
          "Name": "Properties"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Effects.VideoCompositorDefinition"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVideoEffectDefinition"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "props",
              "Type": "IPropertySet"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ActivatableClassId"
        },
        {
          "Type": "IPropertySet",
          "IsGet": true,
          "Name": "Properties"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Effects.VideoEffectDefinition"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVideoEffectDefinition"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ActivatableClassId"
        },
        {
          "Type": "Rect",
          "IsGet": true,
          "IsSet": true,
          "Name": "CropRectangle"
        },
        {
          "Type": "MediaMirroringOptions",
          "IsGet": true,
          "IsSet": true,
          "Name": "Mirror"
        },
        {
          "Type": "Size",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutputSize"
        },
        {
          "Type": "Color",
          "IsGet": true,
          "IsSet": true,
          "Name": "PaddingColor"
        },
        {
          "Type": "MediaVideoProcessingAlgorithm",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProcessingAlgorithm"
        },
        {
          "Type": "IPropertySet",
          "IsGet": true,
          "Name": "Properties"
        },
        {
          "Type": "MediaRotation",
          "IsGet": true,
          "IsSet": true,
          "Name": "Rotation"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Effects.VideoTransformEffectDefinition"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Subtitle"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.ImageDisplayProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "inputSubtype",
              "Type": "Guid"
            },
            {
              "Name": "outputSubtype",
              "Type": "Guid"
            }
          ],
          "Name": "RegisterAudioDecoder"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "inputSubtype",
              "Type": "Guid"
            },
            {
              "Name": "outputSubtype",
              "Type": "Guid"
            },
            {
              "Name": "configuration",
              "Type": "IPropertySet"
            }
          ],
          "Name": "RegisterAudioDecoder"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "inputSubtype",
              "Type": "Guid"
            },
            {
              "Name": "outputSubtype",
              "Type": "Guid"
            }
          ],
          "Name": "RegisterAudioEncoder"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "inputSubtype",
              "Type": "Guid"
            },
            {
              "Name": "outputSubtype",
              "Type": "Guid"
            },
            {
              "Name": "configuration",
              "Type": "IPropertySet"
            }
          ],
          "Name": "RegisterAudioEncoder"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "fileExtension",
              "Type": "String"
            },
            {
              "Name": "mimeType",
              "Type": "String"
            }
          ],
          "Name": "RegisterByteStreamHandler"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "fileExtension",
              "Type": "String"
            },
            {
              "Name": "mimeType",
              "Type": "String"
            },
            {
              "Name": "configuration",
              "Type": "IPropertySet"
            }
          ],
          "Name": "RegisterByteStreamHandler"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "scheme",
              "Type": "String"
            }
          ],
          "Name": "RegisterSchemeHandler"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "scheme",
              "Type": "String"
            },
            {
              "Name": "configuration",
              "Type": "IPropertySet"
            }
          ],
          "Name": "RegisterSchemeHandler"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "inputSubtype",
              "Type": "Guid"
            },
            {
              "Name": "outputSubtype",
              "Type": "Guid"
            }
          ],
          "Name": "RegisterVideoDecoder"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "inputSubtype",
              "Type": "Guid"
            },
            {
              "Name": "outputSubtype",
              "Type": "Guid"
            },
            {
              "Name": "configuration",
              "Type": "IPropertySet"
            }
          ],
          "Name": "RegisterVideoDecoder"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "inputSubtype",
              "Type": "Guid"
            },
            {
              "Name": "outputSubtype",
              "Type": "Guid"
            }
          ],
          "Name": "RegisterVideoEncoder"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "inputSubtype",
              "Type": "Guid"
            },
            {
              "Name": "outputSubtype",
              "Type": "Guid"
            },
            {
              "Name": "configuration",
              "Type": "IPropertySet"
            }
          ],
          "Name": "RegisterVideoEncoder"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.MediaExtensionManager"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Bookmark"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.MediaMarkerTypes"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IMediaEncodingProperties"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Bitrate"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "BitsPerSample"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ChannelCount"
        },
        {
          "Type": "MediaPropertySet",
          "IsGet": true,
          "Name": "Properties"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "SampleRate"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Subtype"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "AudioEncodingProperties",
          "Parameters": [
            {
              "Name": "sampleRate",
              "Type": "UInt32"
            },
            {
              "Name": "channelCount",
              "Type": "UInt32"
            },
            {
              "Name": "bitrate",
              "Type": "UInt32"
            }
          ],
          "Name": "CreateAac"
        },
        {
          "IsStatic": true,
          "ReturnType": "AudioEncodingProperties",
          "Parameters": [
            {
              "Name": "sampleRate",
              "Type": "UInt32"
            },
            {
              "Name": "channelCount",
              "Type": "UInt32"
            },
            {
              "Name": "bitrate",
              "Type": "UInt32"
            }
          ],
          "Name": "CreateAacAdts"
        },
        {
          "IsStatic": true,
          "ReturnType": "AudioEncodingProperties",
          "Parameters": [
            {
              "Name": "sampleRate",
              "Type": "UInt32"
            },
            {
              "Name": "channelCount",
              "Type": "UInt32"
            },
            {
              "Name": "bitrate",
              "Type": "UInt32"
            }
          ],
          "Name": "CreateMp3"
        },
        {
          "IsStatic": true,
          "ReturnType": "AudioEncodingProperties",
          "Parameters": [
            {
              "Name": "sampleRate",
              "Type": "UInt32"
            },
            {
              "Name": "channelCount",
              "Type": "UInt32"
            },
            {
              "Name": "bitsPerSample",
              "Type": "UInt32"
            }
          ],
          "Name": "CreatePcm"
        },
        {
          "IsStatic": true,
          "ReturnType": "AudioEncodingProperties",
          "Parameters": [
            {
              "Name": "sampleRate",
              "Type": "UInt32"
            },
            {
              "Name": "channelCount",
              "Type": "UInt32"
            },
            {
              "Name": "bitrate",
              "Type": "UInt32"
            }
          ],
          "Name": "CreateWma"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]&",
              "Out": true
            }
          ],
          "Name": "GetFormatUserData"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]"
            }
          ],
          "Name": "SetFormatUserData"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.MediaProperties.AudioEncodingProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IMediaEncodingProperties"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MediaPropertySet",
          "IsGet": true,
          "Name": "Properties"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Subtype"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.MediaProperties.ContainerEncodingProperties"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Baseline"
        },
        {
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ConstrainedBaseline"
        },
        {
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Extended"
        },
        {
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true,
          "Name": "High"
        },
        {
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true,
          "Name": "High10"
        },
        {
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true,
          "Name": "High422"
        },
        {
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true,
          "Name": "High444"
        },
        {
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Main"
        },
        {
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MultiviewHigh"
        },
        {
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StereoHigh"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.MediaProperties.H264ProfileIds"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IMediaEncodingProperties"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Height"
        },
        {
          "Type": "MediaPropertySet",
          "IsGet": true,
          "Name": "Properties"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Subtype"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Type"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Width"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "ImageEncodingProperties",
          "Name": "CreateBmp"
        },
        {
          "IsStatic": true,
          "ReturnType": "ImageEncodingProperties",
          "Name": "CreateJpeg"
        },
        {
          "IsStatic": true,
          "ReturnType": "ImageEncodingProperties",
          "Name": "CreateJpegXR"
        },
        {
          "IsStatic": true,
          "ReturnType": "ImageEncodingProperties",
          "Name": "CreatePng"
        },
        {
          "IsStatic": true,
          "ReturnType": "ImageEncodingProperties",
          "Parameters": [
            {
              "Name": "format",
              "Type": "MediaPixelFormat"
            }
          ],
          "Name": "CreateUncompressed"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.MediaProperties.ImageEncodingProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AudioEncodingProperties",
          "IsGet": true,
          "IsSet": true,
          "Name": "Audio"
        },
        {
          "Type": "ContainerEncodingProperties",
          "IsGet": true,
          "IsSet": true,
          "Name": "Container"
        },
        {
          "Type": "VideoEncodingProperties",
          "IsGet": true,
          "IsSet": true,
          "Name": "Video"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "MediaEncodingProfile",
          "Parameters": [
            {
              "Name": "quality",
              "Type": "VideoEncodingQuality"
            }
          ],
          "Name": "CreateAvi"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MediaEncodingProfile>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ],
          "Name": "CreateFromFileAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MediaEncodingProfile>",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            }
          ],
          "Name": "CreateFromStreamAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "MediaEncodingProfile",
          "Parameters": [
            {
              "Name": "quality",
              "Type": "AudioEncodingQuality"
            }
          ],
          "Name": "CreateM4a"
        },
        {
          "IsStatic": true,
          "ReturnType": "MediaEncodingProfile",
          "Parameters": [
            {
              "Name": "quality",
              "Type": "AudioEncodingQuality"
            }
          ],
          "Name": "CreateMp3"
        },
        {
          "IsStatic": true,
          "ReturnType": "MediaEncodingProfile",
          "Parameters": [
            {
              "Name": "quality",
              "Type": "VideoEncodingQuality"
            }
          ],
          "Name": "CreateMp4"
        },
        {
          "IsStatic": true,
          "ReturnType": "MediaEncodingProfile",
          "Parameters": [
            {
              "Name": "quality",
              "Type": "AudioEncodingQuality"
            }
          ],
          "Name": "CreateWav"
        },
        {
          "IsStatic": true,
          "ReturnType": "MediaEncodingProfile",
          "Parameters": [
            {
              "Name": "quality",
              "Type": "AudioEncodingQuality"
            }
          ],
          "Name": "CreateWma"
        },
        {
          "IsStatic": true,
          "ReturnType": "MediaEncodingProfile",
          "Parameters": [
            {
              "Name": "quality",
              "Type": "VideoEncodingQuality"
            }
          ],
          "Name": "CreateWmv"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.MediaProperties.MediaEncodingProfile"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Aac"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AacAdts"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Ac3"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AmrNb"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AmrWb"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Argb32"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Asf"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Avi"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Bgra8"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Bmp"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Eac3"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Float"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Gif"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "H263"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "H264"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "H264Es"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Hevc"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HevcEs"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Iyuv"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Jpeg"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "JpegXr"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Mjpg"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Mp3"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Mpeg"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Mpeg1"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Mpeg2"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Mpeg4"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Nv12"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Pcm"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Png"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Rgb24"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Rgb32"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Tiff"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Wave"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Wma8"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Wma9"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Wmv3"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Wvc1"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Yuy2"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Yv12"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.MediaProperties.MediaEncodingSubtypes"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<Guid,Object>>",
        "IDictionary<Guid,Object>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<Guid,Object>>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.MediaProperties.MediaPropertySet"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Denominator"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Numerator"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.MediaProperties.MediaRatio"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true,
          "Name": "High"
        },
        {
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Main"
        },
        {
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SignalNoiseRatioScalable"
        },
        {
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Simple"
        },
        {
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SpatiallyScalable"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.MediaProperties.Mpeg2ProfileIds"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IMediaEncodingProperties"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Bitrate"
        },
        {
          "Type": "MediaRatio",
          "IsGet": true,
          "Name": "FrameRate"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Height"
        },
        {
          "Type": "MediaRatio",
          "IsGet": true,
          "Name": "PixelAspectRatio"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProfileId"
        },
        {
          "Type": "MediaPropertySet",
          "IsGet": true,
          "Name": "Properties"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Subtype"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Type"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Width"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "VideoEncodingProperties",
          "Name": "CreateH264"
        },
        {
          "IsStatic": true,
          "ReturnType": "VideoEncodingProperties",
          "Name": "CreateMpeg2"
        },
        {
          "IsStatic": true,
          "ReturnType": "VideoEncodingProperties",
          "Parameters": [
            {
              "Name": "subtype",
              "Type": "String"
            },
            {
              "Name": "width",
              "Type": "UInt32"
            },
            {
              "Name": "height",
              "Type": "UInt32"
            }
          ],
          "Name": "CreateUncompressed"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]&",
              "Out": true
            }
          ],
          "Name": "GetFormatUserData"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]"
            }
          ],
          "Name": "SetFormatUserData"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.MediaProperties.VideoEncodingProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "AlbumArtist"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Artist"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.MusicDisplayProperties"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MediaPlayer",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Current"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Name": "IsMediaPlaying"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "ValueSet"
            }
          ],
          "Name": "SendMessageToBackground"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "ValueSet"
            }
          ],
          "Name": "SendMessageToForeground"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "Shutdown"
        }
      ],
      "Events": [
        {
          "Type": "EventHandler<MediaPlayerDataReceivedEventArgs>",
          "IsStatic": true,
          "Name": "MessageReceivedFromBackground"
        },
        {
          "Type": "EventHandler<MediaPlayerDataReceivedEventArgs>",
          "IsStatic": true,
          "Name": "MessageReceivedFromForeground"
        }
      ],
      "Name": "Windows.Media.Playback.BackgroundMediaPlayer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AutoPlay"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "BufferingProgress"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanPause"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanSeek"
        },
        {
          "Type": "MediaPlayerState",
          "IsGet": true,
          "Name": "CurrentState"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsLoopingEnabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsMuted"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsProtected"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "NaturalDuration"
        },
        {
          "Type": "PlaybackMediaMarkerSequence",
          "IsGet": true,
          "Name": "PlaybackMediaMarkers"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "PlaybackRate"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "Position"
        },
        {
          "Type": "MediaProtectionManager",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProtectionManager"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Volume"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Pause"
        },
        {
          "ReturnType": "Void",
          "Name": "Play"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ],
          "Name": "SetFileSource"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "IMediaSource"
            }
          ],
          "Name": "SetMediaSource"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            }
          ],
          "Name": "SetStreamSource"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Uri"
            }
          ],
          "Name": "SetUriSource"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<MediaPlayer,Object>",
          "Name": "BufferingEnded"
        },
        {
          "Type": "TypedEventHandler<MediaPlayer,Object>",
          "Name": "BufferingStarted"
        },
        {
          "Type": "TypedEventHandler<MediaPlayer,Object>",
          "Name": "CurrentStateChanged"
        },
        {
          "Type": "TypedEventHandler<MediaPlayer,Object>",
          "Name": "MediaEnded"
        },
        {
          "Type": "TypedEventHandler<MediaPlayer,MediaPlayerFailedEventArgs>",
          "Name": "MediaFailed"
        },
        {
          "Type": "TypedEventHandler<MediaPlayer,Object>",
          "Name": "MediaOpened"
        },
        {
          "Type": "TypedEventHandler<MediaPlayer,MediaPlayerRateChangedEventArgs>",
          "Name": "MediaPlayerRateChanged"
        },
        {
          "Type": "TypedEventHandler<MediaPlayer,PlaybackMediaMarkerReachedEventArgs>",
          "Name": "PlaybackMediaMarkerReached"
        },
        {
          "Type": "TypedEventHandler<MediaPlayer,Object>",
          "Name": "SeekCompleted"
        },
        {
          "Type": "TypedEventHandler<MediaPlayer,Object>",
          "Name": "VolumeChanged"
        }
      ],
      "Name": "Windows.Media.Playback.MediaPlayer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ValueSet",
          "IsGet": true,
          "Name": "Data"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Playback.MediaPlayerDataReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MediaPlayerError",
          "IsGet": true,
          "Name": "Error"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ErrorMessage"
        },
        {
          "Type": "Exception",
          "IsGet": true,
          "Name": "ExtendedErrorCode"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Playback.MediaPlayerFailedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "NewRate"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Playback.MediaPlayerRateChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "value",
              "Type": "TimeSpan"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "value",
              "Type": "TimeSpan"
            },
            {
              "Name": "mediaMarketType",
              "Type": "String"
            },
            {
              "Name": "text",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "MediaMarkerType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Text"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "Time"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Playback.PlaybackMediaMarker"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PlaybackMediaMarker",
          "IsGet": true,
          "Name": "PlaybackMediaMarker"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Playback.PlaybackMediaMarkerReachedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<PlaybackMediaMarker>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Clear"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "PlaybackMediaMarker"
            }
          ],
          "Name": "Insert"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Playback.PlaybackMediaMarkerSequence"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PlayToConnectionState",
          "IsGet": true,
          "Name": "State"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "TypedEventHandler<PlayToConnection,PlayToConnectionErrorEventArgs>",
          "Name": "Error"
        },
        {
          "Type": "TypedEventHandler<PlayToConnection,PlayToConnectionStateChangedEventArgs>",
          "Name": "StateChanged"
        },
        {
          "Type": "TypedEventHandler<PlayToConnection,PlayToConnectionTransferredEventArgs>",
          "Name": "Transferred"
        }
      ],
      "Name": "Windows.Media.PlayTo.PlayToConnection"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PlayToConnectionError",
          "IsGet": true,
          "Name": "Code"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Message"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.PlayTo.PlayToConnectionErrorEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PlayToConnectionState",
          "IsGet": true,
          "Name": "CurrentState"
        },
        {
          "Type": "PlayToConnectionState",
          "IsGet": true,
          "Name": "PreviousState"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.PlayTo.PlayToConnectionStateChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PlayToSource",
          "IsGet": true,
          "Name": "CurrentSource"
        },
        {
          "Type": "PlayToSource",
          "IsGet": true,
          "Name": "PreviousSource"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.PlayTo.PlayToConnectionTransferredEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PlayToConnection",
          "IsGet": true,
          "Name": "Connection"
        },
        {
          "Type": "PlayToSource",
          "IsGet": true,
          "IsSet": true,
          "Name": "Next"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "PlayNext"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.PlayTo.PlayToSource"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MediaProtectionServiceCompletion",
          "IsGet": true,
          "Name": "Completion"
        },
        {
          "Type": "RevocationAndRenewalInformation",
          "IsGet": true,
          "Name": "Information"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Protection.ComponentLoadFailedEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperationWithProgress<RenewalStatus,UInt32>",
          "Parameters": [
            {
              "Name": "information",
              "Type": "RevocationAndRenewalInformation"
            }
          ],
          "Name": "RenewSystemComponentsAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Protection.ComponentRenewal"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IPropertySet",
          "IsGet": true,
          "Name": "Properties"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "ComponentLoadFailedEventHandler",
          "Name": "ComponentLoadFailed"
        },
        {
          "Type": "RebootNeededEventHandler",
          "Name": "RebootNeeded"
        },
        {
          "Type": "ServiceRequestedEventHandler",
          "Name": "ServiceRequested"
        }
      ],
      "Name": "Windows.Media.Protection.MediaProtectionManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "pProperties",
              "Type": "IPropertySet"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IPropertySet",
          "IsGet": true,
          "Name": "Properties"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Protection.MediaProtectionPMPServer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "success",
              "Type": "Boolean"
            }
          ],
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Protection.MediaProtectionServiceCompletion"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<RevocationAndRenewalItem>",
          "IsGet": true,
          "Name": "Items"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Protection.RevocationAndRenewalInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "HeaderHash"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "PublicKeyHash"
        },
        {
          "Type": "RevocationAndRenewalReasons",
          "IsGet": true,
          "Name": "Reasons"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RenewalId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Protection.RevocationAndRenewalItem"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MediaProtectionServiceCompletion",
          "IsGet": true,
          "Name": "Completion"
        },
        {
          "Type": "IMediaProtectionServiceRequest",
          "IsGet": true,
          "Name": "Request"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Protection.ServiceRequestedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SpeechRecognitionResultStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionCompilationResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISpeechRecognitionConstraint"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "file",
              "Type": "StorageFile"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "file",
              "Type": "StorageFile"
            },
            {
              "Name": "tag",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "StorageFile",
          "IsGet": true,
          "Name": "GrammarFile"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsEnabled"
        },
        {
          "Type": "SpeechRecognitionConstraintProbability",
          "IsGet": true,
          "IsSet": true,
          "Name": "Probability"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Tag"
        },
        {
          "Type": "SpeechRecognitionConstraintType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionGrammarFileConstraint"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISpeechRecognitionConstraint"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "commands",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "commands",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "tag",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "Commands"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsEnabled"
        },
        {
          "Type": "SpeechRecognitionConstraintProbability",
          "IsGet": true,
          "IsSet": true,
          "Name": "Probability"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Tag"
        },
        {
          "Type": "SpeechRecognitionConstraintType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionListConstraint"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SpeechRecognitionAudioProblem",
          "IsGet": true,
          "Name": "Problem"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionQualityDegradingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SpeechRecognitionConfidence",
          "IsGet": true,
          "Name": "Confidence"
        },
        {
          "Type": "ISpeechRecognitionConstraint",
          "IsGet": true,
          "Name": "Constraint"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "RawConfidence"
        },
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "RulePath"
        },
        {
          "Type": "SpeechRecognitionSemanticInterpretation",
          "IsGet": true,
          "Name": "SemanticInterpretation"
        },
        {
          "Type": "SpeechRecognitionResultStatus",
          "IsGet": true,
          "Name": "Status"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Text"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IReadOnlyList<SpeechRecognitionResult>",
          "Parameters": [
            {
              "Name": "maxAlternates",
              "Type": "UInt32"
            }
          ],
          "Name": "GetAlternates"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyDictionary<String,IReadOnlyList<String>>",
          "IsGet": true,
          "Name": "Properties"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionSemanticInterpretation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISpeechRecognitionConstraint"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "scenario",
              "Type": "SpeechRecognitionScenario"
            },
            {
              "Name": "topicHint",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "scenario",
              "Type": "SpeechRecognitionScenario"
            },
            {
              "Name": "topicHint",
              "Type": "String"
            },
            {
              "Name": "tag",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsEnabled"
        },
        {
          "Type": "SpeechRecognitionConstraintProbability",
          "IsGet": true,
          "IsSet": true,
          "Name": "Probability"
        },
        {
          "Type": "SpeechRecognitionScenario",
          "IsGet": true,
          "Name": "Scenario"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Tag"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "TopicHint"
        },
        {
          "Type": "SpeechRecognitionConstraintType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionTopicConstraint"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISpeechRecognitionConstraint"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsEnabled"
        },
        {
          "Type": "SpeechRecognitionConstraintProbability",
          "IsGet": true,
          "IsSet": true,
          "Name": "Probability"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Tag"
        },
        {
          "Type": "SpeechRecognitionConstraintType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionVoiceCommandDefinitionConstraint"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "language",
              "Type": "Language"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IList<ISpeechRecognitionConstraint>",
          "IsGet": true,
          "Name": "Constraints"
        },
        {
          "Type": "Language",
          "IsGet": true,
          "Name": "CurrentLanguage"
        },
        {
          "Type": "IReadOnlyList<Language>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SupportedGrammarLanguages"
        },
        {
          "Type": "IReadOnlyList<Language>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SupportedTopicLanguages"
        },
        {
          "Type": "Language",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SystemSpeechLanguage"
        },
        {
          "Type": "SpeechRecognizerTimeouts",
          "IsGet": true,
          "Name": "Timeouts"
        },
        {
          "Type": "SpeechRecognizerUIOptions",
          "IsGet": true,
          "Name": "UIOptions"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<SpeechRecognitionCompilationResult>",
          "Name": "CompileConstraintsAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperation<SpeechRecognitionResult>",
          "Name": "RecognizeAsync"
        },
        {
          "ReturnType": "IAsyncOperation<SpeechRecognitionResult>",
          "Name": "RecognizeWithUIAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<SpeechRecognizer,SpeechRecognitionQualityDegradingEventArgs>",
          "Name": "RecognitionQualityDegrading"
        },
        {
          "Type": "TypedEventHandler<SpeechRecognizer,SpeechRecognizerStateChangedEventArgs>",
          "Name": "StateChanged"
        }
      ],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognizer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SpeechRecognizerState",
          "IsGet": true,
          "Name": "State"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognizerStateChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "BabbleTimeout"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "EndSilenceTimeout"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "InitialSilenceTimeout"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognizerTimeouts"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "AudiblePrompt"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ExampleText"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsReadBackEnabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "ShowConfirmation"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognizerUIOptions"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyDictionary<String,VoiceCommandSet>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "InstalledCommandSets"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "StorageFile"
            }
          ],
          "Name": "InstallCommandSetsFromStorageFileAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.VoiceCommandManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Language"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "phraseListName",
              "Type": "String"
            },
            {
              "Name": "phraseList",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "SetPhraseListAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.VoiceCommandSet"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContentTypeProvider",
        "IDisposable",
        "IInputStream",
        "IOutputStream",
        "IRandomAccessStream",
        "IRandomAccessStreamWithContentType"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanRead"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanWrite"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ContentType"
        },
        {
          "Type": "IReadOnlyList<IMediaMarker>",
          "IsGet": true,
          "Name": "Markers"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "Position"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "IsSet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IRandomAccessStream",
          "Name": "CloneStream"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Name": "FlushAsync"
        },
        {
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "GetInputStreamAt"
        },
        {
          "ReturnType": "IOutputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "GetOutputStreamAt"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "InputStreamOptions"
            }
          ],
          "Name": "ReadAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "Seek"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "WriteAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.SpeechSynthesis.SpeechSynthesisStream"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<VoiceInformation>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AllVoices"
        },
        {
          "Type": "VoiceInformation",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DefaultVoice"
        },
        {
          "Type": "VoiceInformation",
          "IsGet": true,
          "IsSet": true,
          "Name": "Voice"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperation<SpeechSynthesisStream>",
          "Parameters": [
            {
              "Name": "Ssml",
              "Type": "String"
            }
          ],
          "Name": "SynthesizeSsmlToStreamAsync"
        },
        {
          "ReturnType": "IAsyncOperation<SpeechSynthesisStream>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ],
          "Name": "SynthesizeTextToStreamAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.SpeechSynthesis.SpeechSynthesizer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Description"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "VoiceGender",
          "IsGet": true,
          "Name": "Gender"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Language"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SpeechSynthesis.VoiceInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SystemMediaTransportControlsDisplayUpdater",
          "IsGet": true,
          "Name": "DisplayUpdater"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsEnabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsFastForwardEnabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsChannelDownEnabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsChannelUpEnabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsNextEnabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsPauseEnabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsPlayEnabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsPreviousEnabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsRecordEnabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsRewindEnabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsStopEnabled"
        },
        {
          "Type": "MediaPlaybackStatus",
          "IsGet": true,
          "IsSet": true,
          "Name": "PlaybackStatus"
        },
        {
          "Type": "SoundLevel",
          "IsGet": true,
          "Name": "SoundLevel"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "SystemMediaTransportControls",
          "Name": "GetForCurrentView"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<SystemMediaTransportControls,SystemMediaTransportControlsButtonPressedEventArgs>",
          "Name": "ButtonPressed"
        },
        {
          "Type": "TypedEventHandler<SystemMediaTransportControls,SystemMediaTransportControlsPropertyChangedEventArgs>",
          "Name": "PropertyChanged"
        }
      ],
      "Name": "Windows.Media.SystemMediaTransportControls"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SystemMediaTransportControlsButton",
          "IsGet": true,
          "Name": "Button"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SystemMediaTransportControlsButtonPressedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "AppMediaId"
        },
        {
          "Type": "ImageDisplayProperties",
          "IsGet": true,
          "Name": "ImageProperties"
        },
        {
          "Type": "MusicDisplayProperties",
          "IsGet": true,
          "Name": "MusicProperties"
        },
        {
          "Type": "RandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true,
          "Name": "Thumbnail"
        },
        {
          "Type": "MediaPlaybackType",
          "IsGet": true,
          "IsSet": true,
          "Name": "Type"
        },
        {
          "Type": "VideoDisplayProperties",
          "IsGet": true,
          "Name": "VideoProperties"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "ClearAll"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "type",
              "Type": "MediaPlaybackType"
            },
            {
              "Name": "source",
              "Type": "StorageFile"
            }
          ],
          "Name": "CopyFromFileAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Update"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.SystemMediaTransportControlsDisplayUpdater"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SystemMediaTransportControlsProperty",
          "IsGet": true,
          "Name": "Property"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SystemMediaTransportControlsPropertyChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AlwaysReencode"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "HardwareAccelerationEnabled"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "TrimStartTime"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "TrimStopTime"
        },
        {
          "Type": "MediaVideoProcessingAlgorithm",
          "IsGet": true,
          "IsSet": true,
          "Name": "VideoProcessingAlgorithm"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            }
          ],
          "Name": "AddAudioEffect"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "effectRequired",
              "Type": "Boolean"
            },
            {
              "Name": "configuration",
              "Type": "IPropertySet"
            }
          ],
          "Name": "AddAudioEffect"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            }
          ],
          "Name": "AddVideoEffect"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            },
            {
              "Name": "effectRequired",
              "Type": "Boolean"
            },
            {
              "Name": "configuration",
              "Type": "IPropertySet"
            }
          ],
          "Name": "AddVideoEffect"
        },
        {
          "ReturnType": "Void",
          "Name": "ClearEffects"
        },
        {
          "ReturnType": "IAsyncOperation<PrepareTranscodeResult>",
          "Parameters": [
            {
              "Name": "source",
              "Type": "IStorageFile"
            },
            {
              "Name": "destination",
              "Type": "IStorageFile"
            },
            {
              "Name": "profile",
              "Type": "MediaEncodingProfile"
            }
          ],
          "Name": "PrepareFileTranscodeAsync"
        },
        {
          "ReturnType": "IAsyncOperation<PrepareTranscodeResult>",
          "Parameters": [
            {
              "Name": "source",
              "Type": "IMediaSource"
            },
            {
              "Name": "destination",
              "Type": "IRandomAccessStream"
            },
            {
              "Name": "profile",
              "Type": "MediaEncodingProfile"
            }
          ],
          "Name": "PrepareMediaStreamSourceTranscodeAsync"
        },
        {
          "ReturnType": "IAsyncOperation<PrepareTranscodeResult>",
          "Parameters": [
            {
              "Name": "source",
              "Type": "IRandomAccessStream"
            },
            {
              "Name": "destination",
              "Type": "IRandomAccessStream"
            },
            {
              "Name": "profile",
              "Type": "MediaEncodingProfile"
            }
          ],
          "Name": "PrepareStreamTranscodeAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Transcoding.MediaTranscoder"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanTranscode"
        },
        {
          "Type": "TranscodeFailureReason",
          "IsGet": true,
          "Name": "FailureReason"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncActionWithProgress<Double>",
          "Name": "TranscodeAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Transcoding.PrepareTranscodeResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Subtitle"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.VideoDisplayProperties"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VideoStabilization"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.VideoEffects"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IMediaFrame"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "format",
              "Type": "BitmapPixelFormat"
            },
            {
              "Name": "width",
              "Type": "Int32"
            },
            {
              "Name": "height",
              "Type": "Int32"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "format",
              "Type": "BitmapPixelFormat"
            },
            {
              "Name": "width",
              "Type": "Int32"
            },
            {
              "Name": "height",
              "Type": "Int32"
            },
            {
              "Name": "alpha",
              "Type": "BitmapAlphaMode"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IDirect3DSurface",
          "IsGet": true,
          "Name": "Direct3DSurface"
        },
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Duration"
        },
        {
          "Type": "IPropertySet",
          "IsGet": true,
          "Name": "ExtendedProperties"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsDiscontinuous"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsReadOnly"
        },
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "RelativeTime"
        },
        {
          "Type": "SoftwareBitmap",
          "IsGet": true,
          "Name": "SoftwareBitmap"
        },
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "SystemRelativeTime"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "frame",
              "Type": "VideoFrame"
            }
          ],
          "Name": "CopyToAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.VideoFrame"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTransferBase"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "completionGroup",
              "Type": "BackgroundTransferCompletionGroup"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "BackgroundTransferCompletionGroup",
          "IsGet": true,
          "Name": "CompletionGroup"
        },
        {
          "Type": "BackgroundTransferCostPolicy",
          "IsGet": true,
          "IsSet": true,
          "Name": "CostPolicy"
        },
        {
          "Type": "TileNotification",
          "IsGet": true,
          "IsSet": true,
          "Name": "FailureTileNotification"
        },
        {
          "Type": "ToastNotification",
          "IsGet": true,
          "IsSet": true,
          "Name": "FailureToastNotification"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Group"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Method"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProxyCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServerCredential"
        },
        {
          "Type": "TileNotification",
          "IsGet": true,
          "IsSet": true,
          "Name": "SuccessTileNotification"
        },
        {
          "Type": "ToastNotification",
          "IsGet": true,
          "IsSet": true,
          "Name": "SuccessToastNotification"
        },
        {
          "Type": "BackgroundTransferGroup",
          "IsGet": true,
          "IsSet": true,
          "Name": "TransferGroup"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "DownloadOperation",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "resultFile",
              "Type": "IStorageFile"
            }
          ],
          "Name": "CreateDownload"
        },
        {
          "ReturnType": "DownloadOperation",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "resultFile",
              "Type": "IStorageFile"
            },
            {
              "Name": "requestBodyFile",
              "Type": "IStorageFile"
            }
          ],
          "Name": "CreateDownload"
        },
        {
          "ReturnType": "IAsyncOperation<DownloadOperation>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "resultFile",
              "Type": "IStorageFile"
            },
            {
              "Name": "requestBodyStream",
              "Type": "IInputStream"
            }
          ],
          "Name": "CreateDownloadAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<DownloadOperation>>",
          "Name": "GetCurrentDownloadsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<DownloadOperation>>",
          "Parameters": [
            {
              "Name": "group",
              "Type": "String"
            }
          ],
          "Name": "GetCurrentDownloadsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<DownloadOperation>>",
          "Parameters": [
            {
              "Name": "group",
              "Type": "BackgroundTransferGroup"
            }
          ],
          "Name": "GetCurrentDownloadsForTransferGroupAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<UnconstrainedTransferRequestResult>",
          "Parameters": [
            {
              "Name": "operations",
              "Type": "IEnumerable<DownloadOperation>"
            }
          ],
          "Name": "RequestUnconstrainedDownloadsAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ],
          "Name": "SetRequestHeader"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundDownloader"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsEnabled"
        },
        {
          "Type": "IBackgroundTrigger",
          "IsGet": true,
          "Name": "Trigger"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Enable"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferCompletionGroup"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<DownloadOperation>",
          "IsGet": true,
          "Name": "Downloads"
        },
        {
          "Type": "IReadOnlyList<UploadOperation>",
          "IsGet": true,
          "Name": "Uploads"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferCompletionGroupTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "fileName",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "IStorageFile"
            }
          ],
          "Name": "SetFile"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ],
          "Name": "SetHeader"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "SetText"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferContentPart"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "WebErrorStatus",
          "Parameters": [
            {
              "Name": "hresult",
              "Type": "Int32"
            }
          ],
          "Name": "GetStatus"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferError"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "BackgroundTransferBehavior",
          "IsGet": true,
          "IsSet": true,
          "Name": "TransferBehavior"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "BackgroundTransferGroup",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "CreateGroup"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferGroup"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTransferBase"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "completionGroup",
              "Type": "BackgroundTransferCompletionGroup"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "BackgroundTransferCompletionGroup",
          "IsGet": true,
          "Name": "CompletionGroup"
        },
        {
          "Type": "BackgroundTransferCostPolicy",
          "IsGet": true,
          "IsSet": true,
          "Name": "CostPolicy"
        },
        {
          "Type": "TileNotification",
          "IsGet": true,
          "IsSet": true,
          "Name": "FailureTileNotification"
        },
        {
          "Type": "ToastNotification",
          "IsGet": true,
          "IsSet": true,
          "Name": "FailureToastNotification"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Group"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Method"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProxyCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServerCredential"
        },
        {
          "Type": "TileNotification",
          "IsGet": true,
          "IsSet": true,
          "Name": "SuccessTileNotification"
        },
        {
          "Type": "ToastNotification",
          "IsGet": true,
          "IsSet": true,
          "Name": "SuccessToastNotification"
        },
        {
          "Type": "BackgroundTransferGroup",
          "IsGet": true,
          "IsSet": true,
          "Name": "TransferGroup"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "UploadOperation",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "sourceFile",
              "Type": "IStorageFile"
            }
          ],
          "Name": "CreateUpload"
        },
        {
          "ReturnType": "IAsyncOperation<UploadOperation>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "parts",
              "Type": "IEnumerable<BackgroundTransferContentPart>"
            }
          ],
          "Name": "CreateUploadAsync"
        },
        {
          "ReturnType": "IAsyncOperation<UploadOperation>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "parts",
              "Type": "IEnumerable<BackgroundTransferContentPart>"
            },
            {
              "Name": "subType",
              "Type": "String"
            }
          ],
          "Name": "CreateUploadAsync"
        },
        {
          "ReturnType": "IAsyncOperation<UploadOperation>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "parts",
              "Type": "IEnumerable<BackgroundTransferContentPart>"
            },
            {
              "Name": "subType",
              "Type": "String"
            },
            {
              "Name": "boundary",
              "Type": "String"
            }
          ],
          "Name": "CreateUploadAsync"
        },
        {
          "ReturnType": "IAsyncOperation<UploadOperation>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "sourceStream",
              "Type": "IInputStream"
            }
          ],
          "Name": "CreateUploadFromStreamAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<UploadOperation>>",
          "Name": "GetCurrentUploadsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<UploadOperation>>",
          "Parameters": [
            {
              "Name": "group",
              "Type": "String"
            }
          ],
          "Name": "GetCurrentUploadsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<UploadOperation>>",
          "Parameters": [
            {
              "Name": "group",
              "Type": "BackgroundTransferGroup"
            }
          ],
          "Name": "GetCurrentUploadsForTransferGroupAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<UnconstrainedTransferRequestResult>",
          "Parameters": [
            {
              "Name": "operations",
              "Type": "IEnumerable<UploadOperation>"
            }
          ],
          "Name": "RequestUnconstrainedUploadsAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ],
          "Name": "SetRequestHeader"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundUploader"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTransferOperation",
        "IBackgroundTransferOperationPriority"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BackgroundTransferCostPolicy",
          "IsGet": true,
          "IsSet": true,
          "Name": "CostPolicy"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Group"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "Guid"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Method"
        },
        {
          "Type": "BackgroundTransferPriority",
          "IsGet": true,
          "IsSet": true,
          "Name": "Priority"
        },
        {
          "Type": "BackgroundDownloadProgress",
          "IsGet": true,
          "Name": "Progress"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "RequestedUri"
        },
        {
          "Type": "IStorageFile",
          "IsGet": true,
          "Name": "ResultFile"
        },
        {
          "Type": "BackgroundTransferGroup",
          "IsGet": true,
          "Name": "TransferGroup"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperationWithProgress<DownloadOperation,DownloadOperation>",
          "Name": "AttachAsync"
        },
        {
          "ReturnType": "ResponseInformation",
          "Name": "GetResponseInformation"
        },
        {
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "GetResultStreamAt"
        },
        {
          "ReturnType": "Void",
          "Name": "Pause"
        },
        {
          "ReturnType": "Void",
          "Name": "Resume"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<DownloadOperation,DownloadOperation>",
          "Name": "StartAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.DownloadOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "ActualUri"
        },
        {
          "Type": "IReadOnlyDictionary<String,String>",
          "IsGet": true,
          "Name": "Headers"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsResumable"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "StatusCode"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.ResponseInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsUnconstrained"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.UnconstrainedTransferRequestResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTransferOperation",
        "IBackgroundTransferOperationPriority"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BackgroundTransferCostPolicy",
          "IsGet": true,
          "IsSet": true,
          "Name": "CostPolicy"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Group"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "Guid"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Method"
        },
        {
          "Type": "BackgroundTransferPriority",
          "IsGet": true,
          "IsSet": true,
          "Name": "Priority"
        },
        {
          "Type": "BackgroundUploadProgress",
          "IsGet": true,
          "Name": "Progress"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "RequestedUri"
        },
        {
          "Type": "IStorageFile",
          "IsGet": true,
          "Name": "SourceFile"
        },
        {
          "Type": "BackgroundTransferGroup",
          "IsGet": true,
          "Name": "TransferGroup"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperationWithProgress<UploadOperation,UploadOperation>",
          "Name": "AttachAsync"
        },
        {
          "ReturnType": "ResponseInformation",
          "Name": "GetResponseInformation"
        },
        {
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "GetResultStreamAt"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<UploadOperation,UploadOperation>",
          "Name": "StartAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.UploadOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AttributionId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AttributionName"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "Name": "AttributionThumbnail"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "BytesReceived"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "BytesSent"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.AttributedNetworkUsage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "AccessPointName"
        },
        {
          "Type": "CellularApnAuthenticationType",
          "IsGet": true,
          "IsSet": true,
          "Name": "AuthenticationType"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsCompressionEnabled"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Password"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProviderId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "UserName"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.CellularApnContext"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "ApproachingDataLimit"
        },
        {
          "Type": "NetworkCostType",
          "IsGet": true,
          "Name": "NetworkCostType"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "OverDataLimit"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Roaming"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ConnectionCost"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsWlanConnectionProfile"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsWwanConnectionProfile"
        },
        {
          "Type": "NetworkAdapter",
          "IsGet": true,
          "Name": "NetworkAdapter"
        },
        {
          "Type": "NetworkSecuritySettings",
          "IsGet": true,
          "Name": "NetworkSecuritySettings"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ProfileName"
        },
        {
          "Type": "Nullable<Guid>",
          "IsGet": true,
          "Name": "ServiceProviderGuid"
        },
        {
          "Type": "WlanConnectionProfileDetails",
          "IsGet": true,
          "Name": "WlanConnectionProfileDetails"
        },
        {
          "Type": "WwanConnectionProfileDetails",
          "IsGet": true,
          "Name": "WwanConnectionProfileDetails"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<AttributedNetworkUsage>>",
          "Parameters": [
            {
              "Name": "startTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "endTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "states",
              "Type": "NetworkUsageStates"
            }
          ],
          "Name": "GetAttributedNetworkUsageAsync"
        },
        {
          "ReturnType": "ConnectionCost",
          "Name": "GetConnectionCost"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<ConnectivityInterval>>",
          "Parameters": [
            {
              "Name": "startTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "endTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "states",
              "Type": "NetworkUsageStates"
            }
          ],
          "Name": "GetConnectivityIntervalsAsync"
        },
        {
          "ReturnType": "DataPlanStatus",
          "Name": "GetDataPlanStatus"
        },
        {
          "ReturnType": "DomainConnectivityLevel",
          "Name": "GetDomainConnectivityLevel"
        },
        {
          "ReturnType": "DataUsage",
          "Parameters": [
            {
              "Name": "StartTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "EndTime",
              "Type": "DateTimeOffset"
            }
          ],
          "Name": "GetLocalUsage"
        },
        {
          "ReturnType": "DataUsage",
          "Parameters": [
            {
              "Name": "StartTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "EndTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "States",
              "Type": "RoamingStates"
            }
          ],
          "Name": "GetLocalUsage"
        },
        {
          "ReturnType": "NetworkConnectivityLevel",
          "Name": "GetNetworkConnectivityLevel"
        },
        {
          "ReturnType": "IReadOnlyList<String>",
          "Name": "GetNetworkNames"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<NetworkUsage>>",
          "Parameters": [
            {
              "Name": "startTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "endTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "granularity",
              "Type": "DataUsageGranularity"
            },
            {
              "Name": "states",
              "Type": "NetworkUsageStates"
            }
          ],
          "Name": "GetNetworkUsageAsync"
        },
        {
          "ReturnType": "Nullable<Byte>",
          "Name": "GetSignalBars"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ConnectionProfile"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<Boolean>",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsBackgroundDataUsageRestricted"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsConnected"
        },
        {
          "Type": "Nullable<Boolean>",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsOverDataLimit"
        },
        {
          "Type": "Nullable<Boolean>",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsRoaming"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsWlanConnectionProfile"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsWwanConnectionProfile"
        },
        {
          "Type": "NetworkCostType",
          "IsGet": true,
          "IsSet": true,
          "Name": "NetworkCostType"
        },
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "RawData"
        },
        {
          "Type": "Nullable<Guid>",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServiceProviderGuid"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ConnectionProfileFilter"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ConnectionProfile",
          "IsGet": true,
          "Name": "ConnectionProfile"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ConnectionSession"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "ConnectionDuration"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "StartTime"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ConnectivityInterval"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ConnectionSession>",
          "Parameters": [
            {
              "Name": "cellularApnContext",
              "Type": "CellularApnContext"
            }
          ],
          "Name": "AcquireConnectionAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "routePolicy",
              "Type": "RoutePolicy"
            }
          ],
          "Name": "AddHttpRoutePolicy"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "routePolicy",
              "Type": "RoutePolicy"
            }
          ],
          "Name": "RemoveHttpRoutePolicy"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ConnectivityManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "Name": "DataLimitInMegabytes"
        },
        {
          "Type": "DataPlanUsage",
          "IsGet": true,
          "Name": "DataPlanUsage"
        },
        {
          "Type": "Nullable<UInt64>",
          "IsGet": true,
          "Name": "InboundBitsPerSecond"
        },
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "Name": "MaxTransferSizeInMegabytes"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "Name": "NextBillingCycle"
        },
        {
          "Type": "Nullable<UInt64>",
          "IsGet": true,
          "Name": "OutboundBitsPerSecond"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.DataPlanStatus"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "LastSyncTime"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MegabytesUsed"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.DataPlanUsage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "BytesReceived"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "BytesSent"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.DataUsage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "NetworkAdapter",
          "IsGet": true,
          "Name": "NetworkAdapter"
        },
        {
          "Type": "Nullable<Byte>",
          "IsGet": true,
          "Name": "PrefixLength"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.IPInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "LanIdentifierData",
          "IsGet": true,
          "Name": "InfrastructureId"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "NetworkAdapterId"
        },
        {
          "Type": "LanIdentifierData",
          "IsGet": true,
          "Name": "PortId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.LanIdentifier"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Type"
        },
        {
          "Type": "IReadOnlyList<Byte>",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.LanIdentifierData"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "IanaInterfaceType"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "InboundMaxBitsPerSecond"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "NetworkAdapterId"
        },
        {
          "Type": "NetworkItem",
          "IsGet": true,
          "Name": "NetworkItem"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "OutboundMaxBitsPerSecond"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<ConnectionProfile>",
          "Name": "GetConnectedProfileAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.NetworkAdapter"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<ConnectionProfile>>",
          "Parameters": [
            {
              "Name": "pProfileFilter",
              "Type": "ConnectionProfileFilter"
            }
          ],
          "Name": "FindConnectionProfilesAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<ConnectionProfile>",
          "Name": "GetConnectionProfiles"
        },
        {
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<HostName>",
          "Name": "GetHostNames"
        },
        {
          "IsStatic": true,
          "ReturnType": "ConnectionProfile",
          "Name": "GetInternetConnectionProfile"
        },
        {
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<LanIdentifier>",
          "Name": "GetLanIdentifiers"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ProxyConfiguration>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "GetProxyConfigurationAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<EndpointPair>",
          "Parameters": [
            {
              "Name": "destinationList",
              "Type": "IEnumerable<EndpointPair>"
            },
            {
              "Name": "sortOptions",
              "Type": "HostNameSortOptions"
            }
          ],
          "Name": "GetSortedEndpointPairs"
        }
      ],
      "Events": [
        {
          "Type": "NetworkStatusChangedEventHandler",
          "IsStatic": true,
          "Name": "NetworkStatusChanged"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "NetworkId"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "NetworkTypes",
          "Name": "GetNetworkTypes"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.NetworkItem"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "NetworkAuthenticationType",
          "IsGet": true,
          "Name": "NetworkAuthenticationType"
        },
        {
          "Type": "NetworkEncryptionType",
          "IsGet": true,
          "Name": "NetworkEncryptionType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.NetworkSecuritySettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasNewConnectionCost"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasNewDomainConnectivityLevel"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasNewHostNameList"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasNewInternetConnectionProfile"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasNewNetworkConnectivityLevel"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasNewWwanRegistrationState"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.NetworkStateChangeEventDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "BytesReceived"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "BytesSent"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "ConnectionDuration"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.NetworkUsage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanConnectDirectly"
        },
        {
          "Type": "IReadOnlyList<Uri>",
          "IsGet": true,
          "Name": "ProxyUris"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ProxyConfiguration"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ConnectionProfile",
          "IsGet": true,
          "Name": "ConnectionProfile"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "HostName"
        },
        {
          "Type": "DomainNameType",
          "IsGet": true,
          "Name": "HostNameType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.RoutePolicy"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "String",
          "Name": "GetConnectedSsid"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.WlanConnectionProfileDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AccessPointName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "HomeProviderId"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "WwanDataClass",
          "Name": "GetCurrentDataClass"
        },
        {
          "ReturnType": "WwanNetworkRegistrationState",
          "Name": "GetNetworkRegistrationState"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.WwanConnectionProfileDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "localHostName",
              "Type": "HostName"
            },
            {
              "Name": "localServiceName",
              "Type": "String"
            },
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "HostName",
          "IsGet": true,
          "IsSet": true,
          "Name": "LocalHostName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "LocalServiceName"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "IsSet": true,
          "Name": "RemoteHostName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "RemoteServiceName"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.EndpointPair"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "hostName",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "CanonicalName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "IPInformation",
          "IsGet": true,
          "Name": "IPInformation"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RawName"
        },
        {
          "Type": "HostNameType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "value1",
              "Type": "String"
            },
            {
              "Name": "value2",
              "Type": "String"
            }
          ],
          "Name": "Compare"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "hostName",
              "Type": "HostName"
            }
          ],
          "Name": "IsEqual"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.HostName"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "AuthenticationUrl"
        },
        {
          "Type": "NetworkAdapter",
          "IsGet": true,
          "Name": "NetworkAdapter"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "RedirectMessageUrl"
        },
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "Name": "RedirectMessageXml"
        },
        {
          "Type": "Byte[]",
          "IsGet": true,
          "Name": "WirelessNetworkId"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "markAsManual",
              "Type": "Boolean"
            }
          ],
          "Name": "AbortAuthentication"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "password",
              "Type": "String"
            },
            {
              "Name": "extraParameters",
              "Type": "String"
            },
            {
              "Name": "markAsManualConnectOnFailure",
              "Type": "Boolean"
            }
          ],
          "Name": "IssueCredentials"
        },
        {
          "ReturnType": "IAsyncOperation<HotspotCredentialsAuthenticationResult>",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "password",
              "Type": "String"
            },
            {
              "Name": "extraParameters",
              "Type": "String"
            },
            {
              "Name": "markAsManualConnectOnFailure",
              "Type": "Boolean"
            }
          ],
          "Name": "IssueCredentialsAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "SkipAuthentication"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "packageRelativeApplicationId",
              "Type": "String"
            },
            {
              "Name": "applicationParameters",
              "Type": "String"
            }
          ],
          "Name": "TriggerAttentionRequired"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "evenToken",
              "Type": "String"
            },
            {
              "Name": "context",
              "Type": "HotspotAuthenticationContext&",
              "Out": true
            }
          ],
          "Name": "TryGetAuthenticationContext"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.HotspotAuthenticationContext"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "EventToken"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.HotspotAuthenticationEventDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "Name": "AuthenticationReplyXml"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasNetworkErrorOccurred"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "LogoffUrl"
        },
        {
          "Type": "HotspotAuthenticationResponseCode",
          "IsGet": true,
          "Name": "ResponseCode"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.HotspotCredentialsAuthenticationResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "NetworkCostType"
            }
          ],
          "Name": "UpdateCost"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "ProfileUsage"
            }
          ],
          "Name": "UpdateUsage"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.ProvisionedProfile"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AllElementsProvisioned"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ProvisionResultsXml"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.ProvisionFromXmlDocumentResults"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "ProvisioningAgent",
          "Parameters": [
            {
              "Name": "networkAccountId",
              "Type": "String"
            }
          ],
          "Name": "CreateFromNetworkAccountId"
        },
        {
          "ReturnType": "ProvisionedProfile",
          "Parameters": [
            {
              "Name": "mediaType",
              "Type": "ProfileMediaType"
            },
            {
              "Name": "profileName",
              "Type": "String"
            }
          ],
          "Name": "GetProvisionedProfile"
        },
        {
          "ReturnType": "IAsyncOperation<ProvisionFromXmlDocumentResults>",
          "Parameters": [
            {
              "Name": "provisioningXmlDocument",
              "Type": "String"
            }
          ],
          "Name": "ProvisionFromXmlDocumentAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.ProvisioningAgent"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PeerInformation",
          "IsGet": true,
          "Name": "PeerInformation"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Proximity.ConnectionRequestedEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true,
          "Name": "AllowBluetooth"
        },
        {
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true,
          "Name": "AllowInfrastructure"
        },
        {
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true,
          "Name": "AllowWiFiDirect"
        },
        {
          "Type": "IDictionary<String,String>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AlternateIdentities"
        },
        {
          "Type": "IBuffer",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true,
          "Name": "DiscoveryData"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "PeerRole",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true,
          "Name": "Role"
        },
        {
          "Type": "PeerDiscoveryTypes",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SupportedDiscoveryTypes"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<StreamSocket>",
          "Parameters": [
            {
              "Name": "peerInformation",
              "Type": "PeerInformation"
            }
          ],
          "Name": "ConnectAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "PeerWatcher",
          "Name": "CreateWatcher"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<PeerInformation>>",
          "Name": "FindAllPeersAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "Start"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "peerMessage",
              "Type": "String"
            }
          ],
          "Name": "Start"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "Stop"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<Object,ConnectionRequestedEventArgs>",
          "IsStatic": true,
          "Name": "ConnectionRequested"
        },
        {
          "Type": "TypedEventHandler<Object,TriggeredConnectionStateChangedEventArgs>",
          "IsStatic": true,
          "Name": "TriggeredConnectionStateChanged"
        }
      ],
      "Name": "Windows.Networking.Proximity.PeerFinder"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "DiscoveryData"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "HostName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ServiceName"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Proximity.PeerInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PeerWatcherStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Start"
        },
        {
          "ReturnType": "Void",
          "Name": "Stop"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<PeerWatcher,PeerInformation>",
          "Name": "Added"
        },
        {
          "Type": "TypedEventHandler<PeerWatcher,Object>",
          "Name": "EnumerationCompleted"
        },
        {
          "Type": "TypedEventHandler<PeerWatcher,PeerInformation>",
          "Name": "Removed"
        },
        {
          "Type": "TypedEventHandler<PeerWatcher,Object>",
          "Name": "Stopped"
        },
        {
          "Type": "TypedEventHandler<PeerWatcher,PeerInformation>",
          "Name": "Updated"
        }
      ],
      "Name": "Windows.Networking.Proximity.PeerWatcher"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "BitsPerSecond"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DeviceId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MaxMessageBytes"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "ProximityDevice",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ],
          "Name": "FromId"
        },
        {
          "IsStatic": true,
          "ReturnType": "ProximityDevice",
          "Name": "GetDefault"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Name": "GetDeviceSelector"
        },
        {
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "messageType",
              "Type": "String"
            },
            {
              "Name": "message",
              "Type": "IBuffer"
            }
          ],
          "Name": "PublishBinaryMessage"
        },
        {
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "messageType",
              "Type": "String"
            },
            {
              "Name": "message",
              "Type": "IBuffer"
            },
            {
              "Name": "messageTransmittedHandler",
              "Type": "MessageTransmittedHandler"
            }
          ],
          "Name": "PublishBinaryMessage"
        },
        {
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "messageType",
              "Type": "String"
            },
            {
              "Name": "message",
              "Type": "String"
            }
          ],
          "Name": "PublishMessage"
        },
        {
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "messageType",
              "Type": "String"
            },
            {
              "Name": "message",
              "Type": "String"
            },
            {
              "Name": "messageTransmittedHandler",
              "Type": "MessageTransmittedHandler"
            }
          ],
          "Name": "PublishMessage"
        },
        {
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "message",
              "Type": "Uri"
            }
          ],
          "Name": "PublishUriMessage"
        },
        {
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "message",
              "Type": "Uri"
            },
            {
              "Name": "messageTransmittedHandler",
              "Type": "MessageTransmittedHandler"
            }
          ],
          "Name": "PublishUriMessage"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "messageId",
              "Type": "Int64"
            }
          ],
          "Name": "StopPublishingMessage"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "subscriptionId",
              "Type": "Int64"
            }
          ],
          "Name": "StopSubscribingForMessage"
        },
        {
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "messageType",
              "Type": "String"
            },
            {
              "Name": "messageReceivedHandler",
              "Type": "MessageReceivedHandler"
            }
          ],
          "Name": "SubscribeForMessage"
        }
      ],
      "Events": [
        {
          "Type": "DeviceArrivedEventHandler",
          "Name": "DeviceArrived"
        },
        {
          "Type": "DeviceDepartedEventHandler",
          "Name": "DeviceDeparted"
        }
      ],
      "Name": "Windows.Networking.Proximity.ProximityDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "Data"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DataAsString"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "MessageType"
        },
        {
          "Type": "Int64",
          "IsGet": true,
          "Name": "SubscriptionId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Proximity.ProximityMessage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "StreamSocket",
          "IsGet": true,
          "Name": "Socket"
        },
        {
          "Type": "TriggeredConnectState",
          "IsGet": true,
          "Name": "State"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Proximity.TriggeredConnectionStateChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "ExpirationTime"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Uri"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Close"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<PushNotificationChannel,PushNotificationReceivedEventArgs>",
          "Name": "PushNotificationReceived"
        }
      ],
      "Name": "Windows.Networking.PushNotifications.PushNotificationChannel"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PushNotificationChannel>",
          "Name": "CreatePushNotificationChannelForApplicationAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PushNotificationChannel>",
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ],
          "Name": "CreatePushNotificationChannelForApplicationAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PushNotificationChannel>",
          "Parameters": [
            {
              "Name": "tileId",
              "Type": "String"
            }
          ],
          "Name": "CreatePushNotificationChannelForSecondaryTileAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.PushNotifications.PushNotificationChannelManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BadgeNotification",
          "IsGet": true,
          "Name": "BadgeNotification"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Cancel"
        },
        {
          "Type": "PushNotificationType",
          "IsGet": true,
          "Name": "NotificationType"
        },
        {
          "Type": "RawNotification",
          "IsGet": true,
          "Name": "RawNotification"
        },
        {
          "Type": "TileNotification",
          "IsGet": true,
          "Name": "TileNotification"
        },
        {
          "Type": "ToastNotification",
          "IsGet": true,
          "Name": "ToastNotification"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.PushNotifications.PushNotificationReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Content"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.PushNotifications.RawNotification"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "channelId",
              "Type": "String"
            },
            {
              "Name": "serverKeepAliveIntervalInMinutes",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "channelId",
              "Type": "String"
            },
            {
              "Name": "serverKeepAliveIntervalInMinutes",
              "Type": "UInt32"
            },
            {
              "Name": "resourceRequestType",
              "Type": "ControlChannelTriggerResourceType"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ControlChannelTriggerId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "CurrentKeepAliveIntervalInMinutes"
        },
        {
          "Type": "IBackgroundTrigger",
          "IsGet": true,
          "Name": "KeepAliveTrigger"
        },
        {
          "Type": "IBackgroundTrigger",
          "IsGet": true,
          "Name": "PushNotificationTrigger"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServerKeepAliveIntervalInMinutes"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "TransportObject"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "DecreaseNetworkKeepAliveInterval"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "Void",
          "Name": "FlushTransport"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "transport",
              "Type": "Object"
            }
          ],
          "Name": "UsingTransport"
        },
        {
          "ReturnType": "ControlChannelTriggerStatus",
          "Name": "WaitForPushEnabled"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.ControlChannelTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DatagramSocketControl",
          "IsGet": true,
          "Name": "Control"
        },
        {
          "Type": "DatagramSocketInformation",
          "IsGet": true,
          "Name": "Information"
        },
        {
          "Type": "IOutputStream",
          "IsGet": true,
          "Name": "OutputStream"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localHostName",
              "Type": "HostName"
            },
            {
              "Name": "localServiceName",
              "Type": "String"
            }
          ],
          "Name": "BindEndpointAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localServiceName",
              "Type": "String"
            }
          ],
          "Name": "BindServiceNameAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localServiceName",
              "Type": "String"
            },
            {
              "Name": "adapter",
              "Type": "NetworkAdapter"
            }
          ],
          "Name": "BindServiceNameAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "CancelIOAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            }
          ],
          "Name": "ConnectAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "endpointPair",
              "Type": "EndpointPair"
            }
          ],
          "Name": "ConnectAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "taskId",
              "Type": "Guid"
            }
          ],
          "Name": "EnableTransferOwnership"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "taskId",
              "Type": "Guid"
            },
            {
              "Name": "connectedStandbyAction",
              "Type": "SocketActivityConnectedStandbyAction"
            }
          ],
          "Name": "EnableTransferOwnership"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<EndpointPair>>",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            }
          ],
          "Name": "GetEndpointPairsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<EndpointPair>>",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            },
            {
              "Name": "sortOptions",
              "Type": "HostNameSortOptions"
            }
          ],
          "Name": "GetEndpointPairsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IOutputStream>",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            }
          ],
          "Name": "GetOutputStreamAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IOutputStream>",
          "Parameters": [
            {
              "Name": "endpointPair",
              "Type": "EndpointPair"
            }
          ],
          "Name": "GetOutputStreamAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "host",
              "Type": "HostName"
            }
          ],
          "Name": "JoinMulticastGroup"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "socketId",
              "Type": "String"
            }
          ],
          "Name": "TransferOwnership"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "socketId",
              "Type": "String"
            },
            {
              "Name": "data",
              "Type": "SocketActivityContext"
            }
          ],
          "Name": "TransferOwnership"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "socketId",
              "Type": "String"
            },
            {
              "Name": "data",
              "Type": "SocketActivityContext"
            },
            {
              "Name": "keepAliveTime",
              "Type": "TimeSpan"
            }
          ],
          "Name": "TransferOwnership"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<DatagramSocket,DatagramSocketMessageReceivedEventArgs>",
          "Name": "MessageReceived"
        }
      ],
      "Name": "Windows.Networking.Sockets.DatagramSocket"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "DontFragment"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "InboundBufferSizeInBytes"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "MulticastOnly"
        },
        {
          "Type": "Byte",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutboundUnicastHopLimit"
        },
        {
          "Type": "SocketQualityOfService",
          "IsGet": true,
          "IsSet": true,
          "Name": "QualityOfService"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.DatagramSocketControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "LocalAddress"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "LocalPort"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "RemoteAddress"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RemotePort"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.DatagramSocketInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "LocalAddress"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "RemoteAddress"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RemotePort"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "DataReader",
          "Name": "GetDataReader"
        },
        {
          "ReturnType": "IInputStream",
          "Name": "GetDataStream"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.DatagramSocketMessageReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IWebSocket"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MessageWebSocketControl",
          "IsGet": true,
          "Name": "Control"
        },
        {
          "Type": "MessageWebSocketInformation",
          "IsGet": true,
          "Name": "Information"
        },
        {
          "Type": "IOutputStream",
          "IsGet": true,
          "Name": "OutputStream"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "code",
              "Type": "UInt16"
            },
            {
              "Name": "reason",
              "Type": "String"
            }
          ],
          "Name": "Close"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "ConnectAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ],
          "Name": "SetRequestHeader"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<IWebSocket,WebSocketClosedEventArgs>",
          "Name": "Closed"
        },
        {
          "Type": "TypedEventHandler<MessageWebSocket,MessageWebSocketMessageReceivedEventArgs>",
          "Name": "MessageReceived"
        }
      ],
      "Name": "Windows.Networking.Sockets.MessageWebSocket"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebSocketControl"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxMessageSize"
        },
        {
          "Type": "SocketMessageType",
          "IsGet": true,
          "IsSet": true,
          "Name": "MessageType"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutboundBufferSizeInBytes"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProxyCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServerCredential"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "SupportedProtocols"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.MessageWebSocketControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebSocketInformation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BandwidthStatistics",
          "IsGet": true,
          "Name": "BandwidthStatistics"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "LocalAddress"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Protocol"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.MessageWebSocketInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SocketMessageType",
          "IsGet": true,
          "Name": "MessageType"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "DataReader",
          "Name": "GetDataReader"
        },
        {
          "ReturnType": "IInputStream",
          "Name": "GetDataStream"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.MessageWebSocketMessageReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "Data"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.SocketActivityContext"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyDictionary<String,SocketActivityInformation>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AllSockets"
        },
        {
          "Type": "SocketActivityContext",
          "IsGet": true,
          "Name": "Context"
        },
        {
          "Type": "DatagramSocket",
          "IsGet": true,
          "Name": "DatagramSocket"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "SocketActivityKind",
          "IsGet": true,
          "Name": "SocketKind"
        },
        {
          "Type": "StreamSocket",
          "IsGet": true,
          "Name": "StreamSocket"
        },
        {
          "Type": "StreamSocketListener",
          "IsGet": true,
          "Name": "StreamSocketListener"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "TaskId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.SocketActivityInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SocketActivityTriggerReason",
          "IsGet": true,
          "Name": "Reason"
        },
        {
          "Type": "SocketActivityInformation",
          "IsGet": true,
          "Name": "SocketInformation"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.SocketActivityTriggerDetails"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "SocketErrorStatus",
          "Parameters": [
            {
              "Name": "hresult",
              "Type": "Int32"
            }
          ],
          "Name": "GetStatus"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.SocketError"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "StreamSocketControl",
          "IsGet": true,
          "Name": "Control"
        },
        {
          "Type": "StreamSocketInformation",
          "IsGet": true,
          "Name": "Information"
        },
        {
          "Type": "IInputStream",
          "IsGet": true,
          "Name": "InputStream"
        },
        {
          "Type": "IOutputStream",
          "IsGet": true,
          "Name": "OutputStream"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Name": "CancelIOAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "endpointPair",
              "Type": "EndpointPair"
            }
          ],
          "Name": "ConnectAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            }
          ],
          "Name": "ConnectAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "endpointPair",
              "Type": "EndpointPair"
            },
            {
              "Name": "protectionLevel",
              "Type": "SocketProtectionLevel"
            }
          ],
          "Name": "ConnectAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            },
            {
              "Name": "protectionLevel",
              "Type": "SocketProtectionLevel"
            }
          ],
          "Name": "ConnectAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            },
            {
              "Name": "protectionLevel",
              "Type": "SocketProtectionLevel"
            },
            {
              "Name": "adapter",
              "Type": "NetworkAdapter"
            }
          ],
          "Name": "ConnectAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "taskId",
              "Type": "Guid"
            }
          ],
          "Name": "EnableTransferOwnership"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "taskId",
              "Type": "Guid"
            },
            {
              "Name": "connectedStandbyAction",
              "Type": "SocketActivityConnectedStandbyAction"
            }
          ],
          "Name": "EnableTransferOwnership"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "socketId",
              "Type": "String"
            }
          ],
          "Name": "TransferOwnership"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "socketId",
              "Type": "String"
            },
            {
              "Name": "data",
              "Type": "SocketActivityContext"
            }
          ],
          "Name": "TransferOwnership"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "socketId",
              "Type": "String"
            },
            {
              "Name": "data",
              "Type": "SocketActivityContext"
            },
            {
              "Name": "keepAliveTime",
              "Type": "TimeSpan"
            }
          ],
          "Name": "TransferOwnership"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "protectionLevel",
              "Type": "SocketProtectionLevel"
            },
            {
              "Name": "validationHostName",
              "Type": "HostName"
            }
          ],
          "Name": "UpgradeToSslAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamSocket"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<ChainValidationResult>",
          "IsGet": true,
          "Name": "IgnorableServerCertificateErrors"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "KeepAlive"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "NoDelay"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutboundBufferSizeInBytes"
        },
        {
          "Type": "Byte",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutboundUnicastHopLimit"
        },
        {
          "Type": "SocketQualityOfService",
          "IsGet": true,
          "IsSet": true,
          "Name": "QualityOfService"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "SerializeConnectionAttempts"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamSocketControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BandwidthStatistics",
          "IsGet": true,
          "Name": "BandwidthStatistics"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "LocalAddress"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "LocalPort"
        },
        {
          "Type": "SocketProtectionLevel",
          "IsGet": true,
          "Name": "ProtectionLevel"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "RemoteAddress"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "RemoteHostName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RemotePort"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RemoteServiceName"
        },
        {
          "Type": "RoundTripTimeStatistics",
          "IsGet": true,
          "Name": "RoundTripTimeStatistics"
        },
        {
          "Type": "Certificate",
          "IsGet": true,
          "Name": "ServerCertificate"
        },
        {
          "Type": "IReadOnlyList<ChainValidationResult>",
          "IsGet": true,
          "Name": "ServerCertificateErrors"
        },
        {
          "Type": "SocketSslErrorSeverity",
          "IsGet": true,
          "Name": "ServerCertificateErrorSeverity"
        },
        {
          "Type": "IReadOnlyList<Certificate>",
          "IsGet": true,
          "Name": "ServerIntermediateCertificates"
        },
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "SessionKey"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamSocketInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "StreamSocketListenerControl",
          "IsGet": true,
          "Name": "Control"
        },
        {
          "Type": "StreamSocketListenerInformation",
          "IsGet": true,
          "Name": "Information"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localHostName",
              "Type": "HostName"
            },
            {
              "Name": "localServiceName",
              "Type": "String"
            }
          ],
          "Name": "BindEndpointAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localServiceName",
              "Type": "String"
            }
          ],
          "Name": "BindServiceNameAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localServiceName",
              "Type": "String"
            },
            {
              "Name": "protectionLevel",
              "Type": "SocketProtectionLevel"
            }
          ],
          "Name": "BindServiceNameAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localServiceName",
              "Type": "String"
            },
            {
              "Name": "protectionLevel",
              "Type": "SocketProtectionLevel"
            },
            {
              "Name": "adapter",
              "Type": "NetworkAdapter"
            }
          ],
          "Name": "BindServiceNameAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "CancelIOAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "taskId",
              "Type": "Guid"
            }
          ],
          "Name": "EnableTransferOwnership"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "taskId",
              "Type": "Guid"
            },
            {
              "Name": "connectedStandbyAction",
              "Type": "SocketActivityConnectedStandbyAction"
            }
          ],
          "Name": "EnableTransferOwnership"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "socketId",
              "Type": "String"
            }
          ],
          "Name": "TransferOwnership"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "socketId",
              "Type": "String"
            },
            {
              "Name": "data",
              "Type": "SocketActivityContext"
            }
          ],
          "Name": "TransferOwnership"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<StreamSocketListener,StreamSocketListenerConnectionReceivedEventArgs>",
          "Name": "ConnectionReceived"
        }
      ],
      "Name": "Windows.Networking.Sockets.StreamSocketListener"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "StreamSocket",
          "IsGet": true,
          "Name": "Socket"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamSocketListenerConnectionReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "KeepAlive"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "NoDelay"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutboundBufferSizeInBytes"
        },
        {
          "Type": "Byte",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutboundUnicastHopLimit"
        },
        {
          "Type": "SocketQualityOfService",
          "IsGet": true,
          "IsSet": true,
          "Name": "QualityOfService"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamSocketListenerControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "LocalPort"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamSocketListenerInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IWebSocket"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "StreamWebSocketControl",
          "IsGet": true,
          "Name": "Control"
        },
        {
          "Type": "StreamWebSocketInformation",
          "IsGet": true,
          "Name": "Information"
        },
        {
          "Type": "IInputStream",
          "IsGet": true,
          "Name": "InputStream"
        },
        {
          "Type": "IOutputStream",
          "IsGet": true,
          "Name": "OutputStream"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "code",
              "Type": "UInt16"
            },
            {
              "Name": "reason",
              "Type": "String"
            }
          ],
          "Name": "Close"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "ConnectAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ],
          "Name": "SetRequestHeader"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<IWebSocket,WebSocketClosedEventArgs>",
          "Name": "Closed"
        }
      ],
      "Name": "Windows.Networking.Sockets.StreamWebSocket"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebSocketControl"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "NoDelay"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutboundBufferSizeInBytes"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProxyCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServerCredential"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "SupportedProtocols"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamWebSocketControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebSocketInformation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BandwidthStatistics",
          "IsGet": true,
          "Name": "BandwidthStatistics"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "LocalAddress"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Protocol"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamWebSocketInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt16",
          "IsGet": true,
          "Name": "Code"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Reason"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.WebSocketClosedEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "WebErrorStatus",
          "Parameters": [
            {
              "Name": "hresult",
              "Type": "Int32"
            }
          ],
          "Name": "GetStatus"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.WebSocketError"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTask"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "taskInstance",
              "Type": "IBackgroundTaskInstance"
            }
          ],
          "Name": "Run"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.WebSocketKeepAlive"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "type",
              "Type": "VpnAppIdType"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "VpnAppIdType",
          "IsGet": true,
          "IsSet": true,
          "Name": "Type"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnAppId"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCredential"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AdditionalPin"
        },
        {
          "Type": "Certificate",
          "IsGet": true,
          "Name": "CertificateCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "Name": "OldPasswordCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "Name": "PasskeyCredential"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCredential"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPrompt"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Bordered"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Compulsory"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Label"
        },
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "IsSet": true,
          "Name": "OptionsText"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Selected"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomComboBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPrompt"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Bordered"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Compulsory"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DefaultText"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Label"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "NoEcho"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Text"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomEditBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPrompt"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Bordered"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Compulsory"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Label"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomErrorBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPrompt"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Bordered"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Compulsory"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Checked"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "InitialCheckState"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Label"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomCheckBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPromptElement"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Compulsory"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Emphasized"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "InitialValue"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomPromptBooleanInput"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPromptElement"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Compulsory"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Emphasized"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "Options"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "SelectedIndex"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomPromptOptionSelector"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPromptElement"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Compulsory"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Emphasized"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Text"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomPromptText"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPromptElement"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Compulsory"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Emphasized"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsTextHidden"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "PlaceholderText"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Text"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomPromptTextInput"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPrompt"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Bordered"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Compulsory"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayText"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Label"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomTextBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<VpnDomainNameInfo>",
          "IsGet": true,
          "Name": "DomainNameList"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProxyAutoConfigurationUri"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnDomainNameAssignment"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "nameType",
              "Type": "VpnDomainNameType"
            },
            {
              "Name": "dnsServerList",
              "Type": "IEnumerable<HostName>"
            },
            {
              "Name": "proxyServerList",
              "Type": "IEnumerable<HostName>"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IList<HostName>",
          "IsGet": true,
          "Name": "DnsServers"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "IsSet": true,
          "Name": "DomainName"
        },
        {
          "Type": "VpnDomainNameType",
          "IsGet": true,
          "IsSet": true,
          "Name": "DomainNameType"
        },
        {
          "Type": "IList<HostName>",
          "IsGet": true,
          "Name": "WebProxyServers"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnDomainNameInfo"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "VpnChannelConfiguration",
          "IsGet": true,
          "Name": "Configuration"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "PlugInContext"
        },
        {
          "Type": "VpnSystemHealth",
          "IsGet": true,
          "Name": "SystemHealth"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "mainOuterTunnelTransport",
              "Type": "Object"
            },
            {
              "Name": "optionalOuterTunnelTransport",
              "Type": "Object"
            }
          ],
          "Name": "AssociateTransport"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "message",
              "Type": "String"
            }
          ],
          "Name": "LogDiagnosticMessage"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "thirdPartyPlugIn",
              "Type": "Object"
            },
            {
              "Name": "event",
              "Type": "Object"
            }
          ],
          "Name": "ProcessEventAsync"
        },
        {
          "ReturnType": "VpnPickedCredential",
          "Parameters": [
            {
              "Name": "credType",
              "Type": "VpnCredentialType"
            },
            {
              "Name": "isRetry",
              "Type": "Boolean"
            },
            {
              "Name": "isSingleSignOnCredential",
              "Type": "Boolean"
            },
            {
              "Name": "certificate",
              "Type": "Certificate"
            }
          ],
          "Name": "RequestCredentials"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "customPrompt",
              "Type": "IReadOnlyList<IVpnCustomPrompt>"
            }
          ],
          "Name": "RequestCustomPrompt"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "type",
              "Type": "VpnDataPathType"
            },
            {
              "Name": "vpnPacketBuffer",
              "Type": "VpnPacketBuffer&",
              "Out": true
            }
          ],
          "Name": "RequestVpnPacketBuffer"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "tunnelTransport",
              "Type": "Object"
            },
            {
              "Name": "useTls12",
              "Type": "Boolean"
            }
          ],
          "Name": "SetAllowedSslTlsVersions"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "message",
              "Type": "String"
            }
          ],
          "Name": "SetErrorMessage"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "assignedClientIPv4list",
              "Type": "IReadOnlyList<HostName>"
            },
            {
              "Name": "assignedClientIPv6list",
              "Type": "IReadOnlyList<HostName>"
            },
            {
              "Name": "vpnInterfaceId",
              "Type": "VpnInterfaceId"
            },
            {
              "Name": "routeScope",
              "Type": "VpnRouteAssignment"
            },
            {
              "Name": "namespaceScope",
              "Type": "VpnNamespaceAssignment"
            },
            {
              "Name": "mtuSize",
              "Type": "UInt32"
            },
            {
              "Name": "maxFrameSize",
              "Type": "UInt32"
            },
            {
              "Name": "optimizeForLowCostNetwork",
              "Type": "Boolean"
            },
            {
              "Name": "mainOuterTunnelTransport",
              "Type": "Object"
            },
            {
              "Name": "optionalOuterTunnelTransport",
              "Type": "Object"
            }
          ],
          "Name": "Start"
        },
        {
          "ReturnType": "Void",
          "Name": "Stop"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<VpnChannel,VpnChannelActivityEventArgs>",
          "Name": "ActivityChange"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnChannel"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "VpnChannelActivityEventType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnChannelActivityEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "VpnChannelActivityEventType",
          "IsGet": true,
          "Name": "ActivityState"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnChannelActivityStateChangedArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "CustomField"
        },
        {
          "Type": "IReadOnlyList<HostName>",
          "IsGet": true,
          "Name": "ServerHostNameList"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ServerServiceName"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnChannelConfiguration"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "address",
              "Type": "Byte[]"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "id",
              "Type": "Byte[]&",
              "Out": true
            }
          ],
          "Name": "GetAddressInfo"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnInterfaceId"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<VpnManagementErrorStatus>",
          "Parameters": [
            {
              "Name": "profile",
              "Type": "IVpnProfile"
            }
          ],
          "Name": "AddProfileFromObjectAsync"
        },
        {
          "ReturnType": "IAsyncOperation<VpnManagementErrorStatus>",
          "Parameters": [
            {
              "Name": "xml",
              "Type": "String"
            }
          ],
          "Name": "AddProfileFromXmlAsync"
        },
        {
          "ReturnType": "IAsyncOperation<VpnManagementErrorStatus>",
          "Parameters": [
            {
              "Name": "profile",
              "Type": "IVpnProfile"
            }
          ],
          "Name": "ConnectProfileAsync"
        },
        {
          "ReturnType": "IAsyncOperation<VpnManagementErrorStatus>",
          "Parameters": [
            {
              "Name": "profile",
              "Type": "IVpnProfile"
            },
            {
              "Name": "passwordCredential",
              "Type": "PasswordCredential"
            }
          ],
          "Name": "ConnectProfileWithPasswordCredentialAsync"
        },
        {
          "ReturnType": "IAsyncOperation<VpnManagementErrorStatus>",
          "Parameters": [
            {
              "Name": "profile",
              "Type": "IVpnProfile"
            }
          ],
          "Name": "DeleteProfileAsync"
        },
        {
          "ReturnType": "IAsyncOperation<VpnManagementErrorStatus>",
          "Parameters": [
            {
              "Name": "profile",
              "Type": "IVpnProfile"
            }
          ],
          "Name": "DisconnectProfileAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<IVpnProfile>>",
          "Name": "GetProfilesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<VpnManagementErrorStatus>",
          "Parameters": [
            {
              "Name": "profile",
              "Type": "IVpnProfile"
            }
          ],
          "Name": "UpdateProfileFromObjectAsync"
        },
        {
          "ReturnType": "IAsyncOperation<VpnManagementErrorStatus>",
          "Parameters": [
            {
              "Name": "xml",
              "Type": "String"
            }
          ],
          "Name": "UpdateProfileFromXmlAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnManagementAgent"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<VpnNamespaceInfo>",
          "IsGet": true,
          "IsSet": true,
          "Name": "NamespaceList"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProxyAutoConfigUri"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnNamespaceAssignment"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "dnsServerList",
              "Type": "IList<HostName>"
            },
            {
              "Name": "proxyServerList",
              "Type": "IList<HostName>"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IList<HostName>",
          "IsGet": true,
          "IsSet": true,
          "Name": "DnsServers"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Namespace"
        },
        {
          "Type": "IList<HostName>",
          "IsGet": true,
          "IsSet": true,
          "Name": "WebProxyServers"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnNamespaceInfo"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnProfile"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AlwaysOn"
        },
        {
          "Type": "IList<VpnAppId>",
          "IsGet": true,
          "Name": "AppTriggers"
        },
        {
          "Type": "IList<VpnDomainNameInfo>",
          "IsGet": true,
          "Name": "DomainNameInfoList"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "EapConfiguration"
        },
        {
          "Type": "VpnNativeProtocolType",
          "IsGet": true,
          "IsSet": true,
          "Name": "NativeProtocolType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProfileName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "RememberCredentials"
        },
        {
          "Type": "IList<VpnRoute>",
          "IsGet": true,
          "Name": "Routes"
        },
        {
          "Type": "VpnRoutingPolicyType",
          "IsGet": true,
          "IsSet": true,
          "Name": "RoutingPolicyType"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "Servers"
        },
        {
          "Type": "IList<VpnTrafficFilter>",
          "IsGet": true,
          "Name": "TrafficFilters"
        },
        {
          "Type": "VpnAuthenticationMethod",
          "IsGet": true,
          "IsSet": true,
          "Name": "TunnelAuthenticationMethod"
        },
        {
          "Type": "VpnAuthenticationMethod",
          "IsGet": true,
          "IsSet": true,
          "Name": "UserAuthenticationMethod"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnNativeProfile"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "parentBuffer",
              "Type": "VpnPacketBuffer"
            },
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "length",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Buffer",
          "IsGet": true,
          "Name": "Buffer"
        },
        {
          "Type": "VpnPacketBufferStatus",
          "IsGet": true,
          "IsSet": true,
          "Name": "Status"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "TransportAffinity"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnPacketBuffer"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<VpnPacketBuffer>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        },
        {
          "Type": "VpnPacketBufferStatus",
          "IsGet": true,
          "IsSet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "nextVpnPacketBuffer",
              "Type": "VpnPacketBuffer"
            }
          ],
          "Name": "AddAtBegin"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "nextVpnPacketBuffer",
              "Type": "VpnPacketBuffer"
            }
          ],
          "Name": "Append"
        },
        {
          "ReturnType": "Void",
          "Name": "Clear"
        },
        {
          "ReturnType": "VpnPacketBuffer",
          "Name": "RemoveAtBegin"
        },
        {
          "ReturnType": "VpnPacketBuffer",
          "Name": "RemoveAtEnd"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnPacketBufferList"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AdditionalPin"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "Name": "OldPasswordCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "Name": "PasskeyCredential"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnPickedCredential"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnProfile"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AlwaysOn"
        },
        {
          "Type": "IList<VpnAppId>",
          "IsGet": true,
          "Name": "AppTriggers"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "CustomConfiguration"
        },
        {
          "Type": "IList<VpnDomainNameInfo>",
          "IsGet": true,
          "Name": "DomainNameInfoList"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProfileName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "RememberCredentials"
        },
        {
          "Type": "IList<VpnRoute>",
          "IsGet": true,
          "Name": "Routes"
        },
        {
          "Type": "IList<Uri>",
          "IsGet": true,
          "Name": "ServerUris"
        },
        {
          "Type": "IList<VpnTrafficFilter>",
          "IsGet": true,
          "Name": "TrafficFilters"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "VpnPluginPackageFamilyName"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnPlugInProfile"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnProfile"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AlwaysOn"
        },
        {
          "Type": "IList<VpnAppId>",
          "IsGet": true,
          "Name": "AppTriggers"
        },
        {
          "Type": "IList<VpnDomainNameInfo>",
          "IsGet": true,
          "Name": "DomainNameInfoList"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProfileName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "RememberCredentials"
        },
        {
          "Type": "IList<VpnRoute>",
          "IsGet": true,
          "Name": "Routes"
        },
        {
          "Type": "IList<VpnTrafficFilter>",
          "IsGet": true,
          "Name": "TrafficFilters"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnProfile"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "address",
              "Type": "HostName"
            },
            {
              "Name": "prefixSize",
              "Type": "Byte"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "HostName",
          "IsGet": true,
          "IsSet": true,
          "Name": "Address"
        },
        {
          "Type": "Byte",
          "IsGet": true,
          "IsSet": true,
          "Name": "PrefixSize"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnRoute"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "ExcludeLocalSubnets"
        },
        {
          "Type": "IList<VpnRoute>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Ipv4ExclusionRoutes"
        },
        {
          "Type": "IList<VpnRoute>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Ipv4InclusionRoutes"
        },
        {
          "Type": "IList<VpnRoute>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Ipv6ExclusionRoutes"
        },
        {
          "Type": "IList<VpnRoute>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Ipv6InclusionRoutes"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnRouteAssignment"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Buffer",
          "IsGet": true,
          "Name": "StatementOfHealth"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnSystemHealth"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "appId",
              "Type": "VpnAppId"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "AppClaims"
        },
        {
          "Type": "VpnAppId",
          "IsGet": true,
          "IsSet": true,
          "Name": "AppId"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "LocalAddressRanges"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "LocalPortRanges"
        },
        {
          "Type": "VpnIPProtocol",
          "IsGet": true,
          "IsSet": true,
          "Name": "Protocol"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "RemoteAddressRanges"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "RemotePortRanges"
        },
        {
          "Type": "VpnRoutingPolicyType",
          "IsGet": true,
          "IsSet": true,
          "Name": "RoutingPolicyType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnTrafficFilter"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AllowInbound"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AllowOutbound"
        },
        {
          "Type": "IList<VpnTrafficFilter>",
          "IsGet": true,
          "Name": "TrafficFilterList"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnTrafficFilterAssignment"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ApplicationProfileModes",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Modes"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.ApplicationModel.ApplicationProfile"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Cancel"
        },
        {
          "IsStatic": true,
          "ReturnType": "VibrationDevice",
          "Name": "GetDefault"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "duration",
              "Type": "TimeSpan"
            }
          ],
          "Name": "Vibrate"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Devices.Notification.VibrationDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "RemainingDischargeTime"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "RemainingChargePercent"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Battery",
          "Name": "GetDefault"
        }
      ],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "Name": "RemainingChargePercentChanged"
        }
      ],
      "Name": "Windows.Phone.Devices.Power.Battery"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "TypedEventHandler<DrawingSurfaceManipulationHost,PointerEventArgs>",
          "Name": "PointerEntered"
        },
        {
          "Type": "TypedEventHandler<DrawingSurfaceManipulationHost,PointerEventArgs>",
          "Name": "PointerExited"
        },
        {
          "Type": "TypedEventHandler<DrawingSurfaceManipulationHost,PointerEventArgs>",
          "Name": "PointerMoved"
        },
        {
          "Type": "TypedEventHandler<DrawingSurfaceManipulationHost,PointerEventArgs>",
          "Name": "PointerPressed"
        },
        {
          "Type": "TypedEventHandler<DrawingSurfaceManipulationHost,PointerEventArgs>",
          "Name": "PointerReleased"
        }
      ],
      "Name": "Windows.Phone.Input.Interop.DrawingSurfaceManipulationHost"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "EnrollmentValidFrom"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "EnrollmentValidTo"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "EnterpriseStatus",
          "IsGet": true,
          "Name": "Status"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "WorkplaceId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Management.Deployment.Enterprise"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Enterprise",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CurrentEnterprise"
        },
        {
          "Type": "IReadOnlyList<Enterprise>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EnrolledEnterprises"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<EnterpriseEnrollmentResult>",
          "Parameters": [
            {
              "Name": "enrollmentToken",
              "Type": "String"
            }
          ],
          "Name": "RequestEnrollmentAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "enterprise",
              "Type": "Enterprise"
            }
          ],
          "Name": "RequestUnenrollmentAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Name": "ValidateEnterprisesAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Management.Deployment.EnterpriseEnrollmentManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Enterprise",
          "IsGet": true,
          "Name": "EnrolledEnterprise"
        },
        {
          "Type": "EnterpriseEnrollmentStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Management.Deployment.EnterpriseEnrollmentResult"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperationWithProgress<PackageInstallResult,UInt32>",
          "Parameters": [
            {
              "Name": "title",
              "Type": "String"
            },
            {
              "Name": "sourceLocation",
              "Type": "Uri"
            }
          ],
          "Name": "AddPackageAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperationWithProgress<PackageInstallResult,UInt32>",
          "Parameters": [
            {
              "Name": "title",
              "Type": "String"
            },
            {
              "Name": "sourceLocation",
              "Type": "Uri"
            },
            {
              "Name": "instanceId",
              "Type": "String"
            },
            {
              "Name": "offerId",
              "Type": "String"
            },
            {
              "Name": "license",
              "Type": "Uri"
            }
          ],
          "Name": "AddPackageAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IEnumerable<Package>",
          "Parameters": [
            {
              "Name": "packageName",
              "Type": "String"
            },
            {
              "Name": "packagePublisher",
              "Type": "String"
            }
          ],
          "Name": "FindPackages"
        },
        {
          "IsStatic": true,
          "ReturnType": "IEnumerable<Package>",
          "Name": "FindPackages"
        },
        {
          "IsStatic": true,
          "ReturnType": "IEnumerable<Package>",
          "Name": "FindPackagesForCurrentPublisher"
        },
        {
          "IsStatic": true,
          "ReturnType": "IEnumerable<IAsyncOperationWithProgress<PackageInstallResult,UInt32>>",
          "Name": "GetPendingPackageInstalls"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperationWithProgress<PackageInstallResult,UInt32>",
          "Parameters": [
            {
              "Name": "manifestUri",
              "Type": "Uri"
            },
            {
              "Name": "dependencyPackageUris",
              "Type": "IEnumerable<Uri>"
            },
            {
              "Name": "deploymentOptions",
              "Type": "DeploymentOptions"
            }
          ],
          "Name": "RegisterPackageAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperationWithProgress<PackageInstallResult,UInt32>",
          "Parameters": [
            {
              "Name": "packageFullName",
              "Type": "String"
            },
            {
              "Name": "removalOptions",
              "Type": "RemovalOptions"
            }
          ],
          "Name": "RemovePackageAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Management.Deployment.InstallationManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ErrorText"
        },
        {
          "Type": "PackageInstallState",
          "IsGet": true,
          "Name": "InstallState"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ProductId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Management.Deployment.PackageInstallResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICameraCaptureDevice",
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "CameraCaptureAudioFormat",
          "IsGet": true,
          "IsSet": true,
          "Name": "AudioEncodingFormat"
        },
        {
          "Type": "IReadOnlyList<CameraSensorLocation>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AvailableSensorLocations"
        },
        {
          "Type": "Size",
          "IsGet": true,
          "Name": "CaptureResolution"
        },
        {
          "Type": "Nullable<Rect>",
          "IsGet": true,
          "IsSet": true,
          "Name": "FocusRegion"
        },
        {
          "Type": "Size",
          "IsGet": true,
          "Name": "PreviewResolution"
        },
        {
          "Type": "CameraSensorLocation",
          "IsGet": true,
          "Name": "SensorLocation"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "SensorRotationInDegrees"
        },
        {
          "Type": "IReadOnlyList<CameraCaptureAudioFormat>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SupportedAudioEncodingFormats"
        },
        {
          "Type": "IReadOnlyList<CameraCaptureVideoFormat>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SupportedVideoEncodingFormats"
        },
        {
          "Type": "CameraCaptureVideoFormat",
          "IsGet": true,
          "IsSet": true,
          "Name": "VideoEncodingFormat"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperation<CameraFocusStatus>",
          "Name": "FocusAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<Size>",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            }
          ],
          "Name": "GetAvailableCaptureResolutions"
        },
        {
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<Size>",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            }
          ],
          "Name": "GetAvailablePreviewResolutions"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pixels",
              "Type": "Int32[]",
              "Out": true
            }
          ],
          "Name": "GetPreviewBufferArgb"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pixels",
              "Type": "Byte[]",
              "Out": true
            }
          ],
          "Name": "GetPreviewBufferY"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pixels",
              "Type": "Byte[]",
              "Out": true
            }
          ],
          "Name": "GetPreviewBufferYCbCr"
        },
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "propertyId",
              "Type": "Guid"
            }
          ],
          "Name": "GetProperty"
        },
        {
          "IsStatic": true,
          "ReturnType": "CameraCapturePropertyRange",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            },
            {
              "Name": "propertyId",
              "Type": "Guid"
            }
          ],
          "Name": "GetSupportedPropertyRange"
        },
        {
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<Object>",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            },
            {
              "Name": "propertyId",
              "Type": "Guid"
            }
          ],
          "Name": "GetSupportedPropertyValues"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<AudioVideoCaptureDevice>",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            },
            {
              "Name": "initialResolution",
              "Type": "Size"
            }
          ],
          "Name": "OpenAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<AudioVideoCaptureDevice>",
          "Name": "OpenForAudioOnlyAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<AudioVideoCaptureDevice>",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            },
            {
              "Name": "initialResolution",
              "Type": "Size"
            }
          ],
          "Name": "OpenForVideoOnlyAsync"
        },
        {
          "ReturnType": "IAsyncOperation<CameraFocusStatus>",
          "Name": "ResetFocusAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Size"
            }
          ],
          "Name": "SetCaptureResolutionAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Size"
            }
          ],
          "Name": "SetPreviewResolutionAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "propertyId",
              "Type": "Guid"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "SetProperty"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "StartRecordingToSinkAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            }
          ],
          "Name": "StartRecordingToStreamAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "StopRecordingAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<ICameraCaptureDevice,Object>",
          "Name": "PreviewFrameAvailable"
        },
        {
          "Type": "TypedEventHandler<AudioVideoCaptureDevice,CaptureFailedEventArgs>",
          "Name": "RecordingFailed"
        },
        {
          "Type": "TypedEventHandler<ICameraCaptureDevice,VendorSpecificDataEventArgs>",
          "Name": "VendorSpecificDataAvailable"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.AudioVideoCaptureDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyDictionary<Guid,Object>",
          "IsGet": true,
          "Name": "AppliedProperties"
        },
        {
          "Type": "IOutputStream",
          "IsGet": true,
          "IsSet": true,
          "Name": "CaptureStream"
        },
        {
          "Type": "IDictionary<Guid,Object>",
          "IsGet": true,
          "Name": "DesiredProperties"
        },
        {
          "Type": "IOutputStream",
          "IsGet": true,
          "IsSet": true,
          "Name": "ThumbnailStream"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pixels",
              "Type": "Int32[]",
              "Out": true
            }
          ],
          "Name": "GetPreviewBufferArgb"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Media.Capture.CameraCaptureFrame"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Max"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Min"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Media.Capture.CameraCapturePropertyRange"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<CameraCaptureFrame>",
          "IsGet": true,
          "Name": "Frames"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Name": "StartCaptureAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<CameraCaptureSequence,Object>",
          "Name": "BuffersAvailable"
        },
        {
          "Type": "TypedEventHandler<CameraCaptureSequence,FrameAcquiredEventArgs>",
          "Name": "FrameAcquired"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.CameraCaptureSequence"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "ErrorCode"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Media.Capture.CaptureFailedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Index"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Media.Capture.FrameAcquiredEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "H264EnableKeyframes"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "H264EncodingLevel"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "H264EncodingProfile"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "H264QuantizationParameter"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "H264RequestDropNextNFrames"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "H264RequestIdrFrame"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UnmuteAudioWhileRecording"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VideoFrameRate"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VideoTorchMode"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VideoTorchPower"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Media.Capture.KnownCameraAudioVideoProperties"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AutoFocusRange"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EncodeWithOrientation"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsShutterSoundEnabledByUser"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsShutterSoundRequiredForRegion"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ManualFocusPosition"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PlayShutterSoundOnCapture"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SpecifiedCaptureOrientation"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Media.Capture.KnownCameraGeneralProperties"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ExposureCompensation"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ExposureTime"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FlashMode"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FlashPower"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FocusIlluminationMode"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Iso"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LockedAutoFocusParameters"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ManualWhiteBalance"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SceneMode"
        },
        {
          "Type": "Guid",
          "IsStatic": true,
          "IsGet": true,
          "Name": "WhiteBalancePreset"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Media.Capture.KnownCameraPhotoProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IMediaCapturePreviewSink",
        "IMediaExtension"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "connectionPort",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ConnectionPort"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "configuration",
              "Type": "IPropertySet"
            }
          ],
          "Name": "SetProperties"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Media.Capture.MediaCapturePreviewSink"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICameraCaptureDevice",
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<CameraSensorLocation>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AvailableSensorLocations"
        },
        {
          "Type": "Size",
          "IsGet": true,
          "Name": "CaptureResolution"
        },
        {
          "Type": "Nullable<Rect>",
          "IsGet": true,
          "IsSet": true,
          "Name": "FocusRegion"
        },
        {
          "Type": "Size",
          "IsGet": true,
          "Name": "PreviewResolution"
        },
        {
          "Type": "CameraSensorLocation",
          "IsGet": true,
          "Name": "SensorLocation"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "SensorRotationInDegrees"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "CameraCaptureSequence",
          "Parameters": [
            {
              "Name": "numberOfFrames",
              "Type": "UInt32"
            }
          ],
          "Name": "CreateCaptureSequence"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperation<CameraFocusStatus>",
          "Name": "FocusAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<Size>",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            }
          ],
          "Name": "GetAvailableCaptureResolutions"
        },
        {
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<Size>",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            }
          ],
          "Name": "GetAvailablePreviewResolutions"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pixels",
              "Type": "Int32[]",
              "Out": true
            }
          ],
          "Name": "GetPreviewBufferArgb"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pixels",
              "Type": "Byte[]",
              "Out": true
            }
          ],
          "Name": "GetPreviewBufferY"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pixels",
              "Type": "Byte[]",
              "Out": true
            }
          ],
          "Name": "GetPreviewBufferYCbCr"
        },
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "propertyId",
              "Type": "Guid"
            }
          ],
          "Name": "GetProperty"
        },
        {
          "IsStatic": true,
          "ReturnType": "CameraCapturePropertyRange",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            },
            {
              "Name": "propertyId",
              "Type": "Guid"
            }
          ],
          "Name": "GetSupportedPropertyRange"
        },
        {
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<Object>",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            },
            {
              "Name": "propertyId",
              "Type": "Guid"
            }
          ],
          "Name": "GetSupportedPropertyValues"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            }
          ],
          "Name": "IsFocusRegionSupported"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            }
          ],
          "Name": "IsFocusSupported"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PhotoCaptureDevice>",
          "Parameters": [
            {
              "Name": "sensor",
              "Type": "CameraSensorLocation"
            },
            {
              "Name": "initialResolution",
              "Type": "Size"
            }
          ],
          "Name": "OpenAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "sequence",
              "Type": "CameraCaptureSequence"
            }
          ],
          "Name": "PrepareCaptureSequenceAsync"
        },
        {
          "ReturnType": "IAsyncOperation<CameraFocusStatus>",
          "Name": "ResetFocusAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Size"
            }
          ],
          "Name": "SetCaptureResolutionAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Size"
            }
          ],
          "Name": "SetPreviewResolutionAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "propertyId",
              "Type": "Guid"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "SetProperty"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<ICameraCaptureDevice,Object>",
          "Name": "PreviewFrameAvailable"
        },
        {
          "Type": "TypedEventHandler<ICameraCaptureDevice,VendorSpecificDataEventArgs>",
          "Name": "VendorSpecificDataAvailable"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.PhotoCaptureDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Data"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "EventId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Media.Capture.VendorSpecificDataEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AvailableAudioRoutingEndpoints",
          "IsGet": true,
          "Name": "AvailableAudioEndpoints"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "AudioRoutingEndpoint",
          "Name": "GetAudioEndpoint"
        },
        {
          "IsStatic": true,
          "ReturnType": "AudioRoutingManager",
          "Name": "GetDefault"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "endpoint",
              "Type": "AudioRoutingEndpoint"
            }
          ],
          "Name": "SetAudioEndpoint"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<AudioRoutingManager,Object>",
          "Name": "AudioEndpointChanged"
        }
      ],
      "Name": "Windows.Phone.Media.Devices.AudioRoutingManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Body"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ProductId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "SenderPhoneNumber"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "SmsPrefix"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "TimeStamp"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Networking.NetworkOperators.InterceptedSmsMessage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Location"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "PhoneNumber"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Networking.NetworkOperators.PhoneCallAnnotationEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "EventHandler<PhoneCallAnnotationEventArgs>",
          "Name": "AnnotationRequested"
        }
      ],
      "Name": "Windows.Phone.Networking.NetworkOperators.PhoneCallAnnotationManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "PhoneNumber"
        },
        {
          "Type": "PhoneCallBlockedReason",
          "IsGet": true,
          "Name": "Reason"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Networking.NetworkOperators.PhoneCallBlockedEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PhoneCallFilterStatus",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "enablePhoneCallFiltering",
              "Type": "Boolean"
            }
          ],
          "Name": "EnableFiltering"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "phoneNumbersToBlock",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "desiredMinimumDigitsToMatch",
              "Type": "UInt32"
            },
            {
              "Name": "categoriesToBlock",
              "Type": "TelephoneNumberCategories"
            }
          ],
          "Name": "SetCallBlockingPreferences"
        }
      ],
      "Events": [
        {
          "Type": "EventHandler<PhoneCallBlockedEventArgs>",
          "IsStatic": true,
          "Name": "PhoneCallBlocked"
        },
        {
          "Type": "EventHandler<Object>",
          "IsStatic": true,
          "Name": "StatusChanged"
        }
      ],
      "Name": "Windows.Phone.Networking.NetworkOperators.PhoneCallFilter"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SmsFilterStatus",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "enableSmsFiltering",
              "Type": "Boolean"
            }
          ],
          "Name": "EnableFiltering"
        }
      ],
      "Events": [
        {
          "Type": "EventHandler<SmsFilterMessageReceivedEventArgs>",
          "IsStatic": true,
          "Name": "SmsMessageReceived"
        },
        {
          "Type": "EventHandler<Object>",
          "IsStatic": true,
          "Name": "StatusChanged"
        }
      ],
      "Name": "Windows.Phone.Networking.NetworkOperators.SmsFilter"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SmsFilterAction",
          "IsGet": true,
          "IsSet": true,
          "Name": "Action"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Body"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "SenderPhoneNumber"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Networking.NetworkOperators.SmsFilterMessageReceivedEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<InterceptedSmsMessage>",
          "Name": "GetQueuedMessages"
        }
      ],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "IsStatic": true,
          "Name": "SmsReceived"
        }
      ],
      "Name": "Windows.Phone.Networking.NetworkOperators.SmsInterceptor"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "VoipCallMedia",
          "IsGet": true,
          "Name": "AcceptedMedia"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Networking.Voip.CallAnswerEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "VoipCallRejectReason",
          "IsGet": true,
          "Name": "RejectReason"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Networking.Voip.CallRejectEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "VoipCallState",
          "IsGet": true,
          "Name": "State"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Networking.Voip.CallStateChangeEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Muted"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Networking.Voip.MuteChangeEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVoipOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RemoteId"
        },
        {
          "Type": "VoipOperationType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "succeeded",
              "Type": "Boolean"
            },
            {
              "Name": "seamlessCallUpgradeSupport",
              "Type": "SeamlessCallUpgradeSupport"
            }
          ],
          "Name": "NotifyCompletion"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Networking.Voip.QuerySeamlessUpgradeSupportOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "callUpgradeGuid",
              "Type": "Guid"
            }
          ],
          "Name": "CancelUpgrade"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "callUpgradeGuid",
              "Type": "Guid"
            }
          ],
          "Name": "ConfirmNonSeamlessUpgrade"
        },
        {
          "IsStatic": true,
          "ReturnType": "VoipCallCoordinator",
          "Name": "GetDefault"
        },
        {
          "ReturnType": "IVoipOperation",
          "Name": "GetNextOperation"
        },
        {
          "ReturnType": "Void",
          "Name": "NotifyMuted"
        },
        {
          "ReturnType": "Void",
          "Name": "NotifyUnmuted"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "context",
              "Type": "String"
            },
            {
              "Name": "contactName",
              "Type": "String"
            },
            {
              "Name": "contactNumber",
              "Type": "String"
            },
            {
              "Name": "contactImage",
              "Type": "Uri"
            },
            {
              "Name": "serviceName",
              "Type": "String"
            },
            {
              "Name": "brandingImage",
              "Type": "Uri"
            },
            {
              "Name": "callDetails",
              "Type": "String"
            },
            {
              "Name": "ringtone",
              "Type": "Uri"
            },
            {
              "Name": "ringTimeout",
              "Type": "TimeSpan"
            },
            {
              "Name": "call",
              "Type": "VoipPhoneCall&",
              "Out": true
            }
          ],
          "Name": "RequestIncomingUpgradeToVideoCall"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "context",
              "Type": "String"
            },
            {
              "Name": "contactName",
              "Type": "String"
            },
            {
              "Name": "contactNumber",
              "Type": "String"
            },
            {
              "Name": "contactImage",
              "Type": "Uri"
            },
            {
              "Name": "serviceName",
              "Type": "String"
            },
            {
              "Name": "brandingImage",
              "Type": "Uri"
            },
            {
              "Name": "callDetails",
              "Type": "String"
            },
            {
              "Name": "ringtone",
              "Type": "Uri"
            },
            {
              "Name": "media",
              "Type": "VoipCallMedia"
            },
            {
              "Name": "ringTimeout",
              "Type": "TimeSpan"
            },
            {
              "Name": "call",
              "Type": "VoipPhoneCall&",
              "Out": true
            }
          ],
          "Name": "RequestNewIncomingCall"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "context",
              "Type": "String"
            },
            {
              "Name": "contactName",
              "Type": "String"
            },
            {
              "Name": "serviceName",
              "Type": "String"
            },
            {
              "Name": "media",
              "Type": "VoipCallMedia"
            },
            {
              "Name": "call",
              "Type": "VoipPhoneCall&",
              "Out": true
            }
          ],
          "Name": "RequestNewOutgoingCall"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "callUpgradeGuid",
              "Type": "Guid"
            },
            {
              "Name": "context",
              "Type": "String"
            },
            {
              "Name": "contactName",
              "Type": "String"
            },
            {
              "Name": "serviceName",
              "Type": "String"
            },
            {
              "Name": "call",
              "Type": "VoipPhoneCall&",
              "Out": true
            }
          ],
          "Name": "RequestOutgoingUpgradeToVideoCall"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<VoipCallCoordinator,MuteChangeEventArgs>",
          "Name": "MuteRequested"
        },
        {
          "Type": "TypedEventHandler<VoipCallCoordinator,MuteChangeEventArgs>",
          "Name": "UnmuteRequested"
        }
      ],
      "Name": "Windows.Phone.Networking.Voip.VoipCallCoordinator"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "VoipCallMedia",
          "IsGet": true,
          "IsSet": true,
          "Name": "CallMedia"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContactName"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "StartTime"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "NotifyCallActive"
        },
        {
          "ReturnType": "Void",
          "Name": "NotifyCallEnded"
        },
        {
          "ReturnType": "Void",
          "Name": "NotifyCallHeld"
        },
        {
          "ReturnType": "Void",
          "Name": "NotifyCallReady"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<VoipPhoneCall,CallAnswerEventArgs>",
          "Name": "AnswerRequested"
        },
        {
          "Type": "TypedEventHandler<VoipPhoneCall,CallStateChangeEventArgs>",
          "Name": "EndRequested"
        },
        {
          "Type": "TypedEventHandler<VoipPhoneCall,CallStateChangeEventArgs>",
          "Name": "HoldRequested"
        },
        {
          "Type": "TypedEventHandler<VoipPhoneCall,CallRejectEventArgs>",
          "Name": "RejectRequested"
        },
        {
          "Type": "TypedEventHandler<VoipPhoneCall,CallStateChangeEventArgs>",
          "Name": "ResumeRequested"
        }
      ],
      "Name": "Windows.Phone.Networking.Voip.VoipPhoneCall"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BatterySaverState"
        },
        {
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DoNotDisturbEnabled"
        },
        {
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DrivingModeEnabled"
        },
        {
          "Type": "PlaybackCapability",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MediaPlaybackCapabilities"
        },
        {
          "Type": "PlaybackStatus",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MediaPlaybackStatus"
        },
        {
          "Type": "PhoneCallAudioEndpoint",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true,
          "Name": "PhoneCallAudioEndpoint"
        },
        {
          "Type": "IReadOnlyList<PhoneLineDetails>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PhoneLineDetails"
        },
        {
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true,
          "Name": "PhoneMute"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "phoneCallId",
              "Type": "UInt32"
            }
          ],
          "Name": "AcceptPhoneCall"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "phoneCallId",
              "Type": "UInt32"
            },
            {
              "Name": "endPoint",
              "Type": "PhoneCallAudioEndpoint"
            }
          ],
          "Name": "AcceptPhoneCall"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "phoneCallId",
              "Type": "UInt32"
            }
          ],
          "Name": "AcceptPhoneCallWithVideo"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "phoneCallId",
              "Type": "UInt32"
            },
            {
              "Name": "endPoint",
              "Type": "PhoneCallAudioEndpoint"
            }
          ],
          "Name": "AcceptPhoneCallWithVideo"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "DisableAllAccessoryNotificationTypes"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "appId",
              "Type": "String"
            }
          ],
          "Name": "DisableNotificationsForApplication"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "alarmId",
              "Type": "Guid"
            }
          ],
          "Name": "DismissAlarm"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "reminderId",
              "Type": "Guid"
            }
          ],
          "Name": "DismissReminder"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "accessoryNotificationTypes",
              "Type": "Int32"
            }
          ],
          "Name": "EnableAccessoryNotificationTypes"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "appId",
              "Type": "String"
            }
          ],
          "Name": "EnableNotificationsForApplication"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "phoneCallId",
              "Type": "UInt32"
            }
          ],
          "Name": "EndPhoneCall"
        },
        {
          "IsStatic": true,
          "ReturnType": "IRandomAccessStreamReference",
          "Parameters": [
            {
              "Name": "appId",
              "Type": "String"
            }
          ],
          "Name": "GetAppIcon"
        },
        {
          "IsStatic": true,
          "ReturnType": "IReadOnlyDictionary<String,AppNotificationInfo>",
          "Name": "GetApps"
        },
        {
          "IsStatic": true,
          "ReturnType": "Int32",
          "Name": "GetEnabledAccessoryNotificationTypes"
        },
        {
          "IsStatic": true,
          "ReturnType": "MediaMetadata",
          "Name": "GetMediaMetadata"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAccessoryNotificationTriggerDetails",
          "Name": "GetNextTriggerDetails"
        },
        {
          "IsStatic": true,
          "ReturnType": "PhoneLineDetails",
          "Parameters": [
            {
              "Name": "phoneLine",
              "Type": "Guid"
            }
          ],
          "Name": "GetPhoneLineDetails"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Name": "GetUserConsent"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "phoneCallId",
              "Type": "UInt32"
            },
            {
              "Name": "holdCall",
              "Type": "Boolean"
            }
          ],
          "Name": "HoldPhoneCall"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "appId",
              "Type": "String"
            }
          ],
          "Name": "IsNotificationEnabledForApplication"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "phoneLine",
              "Type": "Guid"
            },
            {
              "Name": "phoneNumber",
              "Type": "String"
            }
          ],
          "Name": "MakePhoneCall"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "phoneLine",
              "Type": "Guid"
            },
            {
              "Name": "phoneNumber",
              "Type": "String"
            },
            {
              "Name": "endPoint",
              "Type": "PhoneCallAudioEndpoint"
            }
          ],
          "Name": "MakePhoneCall"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "phoneLine",
              "Type": "Guid"
            },
            {
              "Name": "phoneNumber",
              "Type": "String"
            }
          ],
          "Name": "MakePhoneCallWithVideo"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "phoneLine",
              "Type": "Guid"
            },
            {
              "Name": "phoneNumber",
              "Type": "String"
            },
            {
              "Name": "endPoint",
              "Type": "PhoneCallAudioEndpoint"
            }
          ],
          "Name": "MakePhoneCallWithVideo"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "command",
              "Type": "PlaybackCommand"
            }
          ],
          "Name": "PerformMediaPlaybackCommand"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pDetails",
              "Type": "IAccessoryNotificationTriggerDetails"
            }
          ],
          "Name": "ProcessTriggerDetails"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Name": "RegisterAccessoryApp"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "phoneCallId",
              "Type": "UInt32"
            }
          ],
          "Name": "RejectPhoneCall"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "phoneCallId",
              "Type": "UInt32"
            },
            {
              "Name": "textResponseID",
              "Type": "UInt32"
            }
          ],
          "Name": "RejectPhoneCall"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "alarmId",
              "Type": "Guid"
            }
          ],
          "Name": "SnoozeAlarm"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "alarmId",
              "Type": "Guid"
            },
            {
              "Name": "timeSpan",
              "Type": "TimeSpan"
            }
          ],
          "Name": "SnoozeAlarm"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "reminderId",
              "Type": "Guid"
            }
          ],
          "Name": "SnoozeReminder"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "reminderId",
              "Type": "Guid"
            },
            {
              "Name": "timeSpan",
              "Type": "TimeSpan"
            }
          ],
          "Name": "SnoozeReminder"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "phoneCallIdToHold",
              "Type": "UInt32"
            },
            {
              "Name": "phoneCallIdOnHold",
              "Type": "UInt32"
            }
          ],
          "Name": "SwapPhoneCalls"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Notification.Management.AccessoryManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IAccessoryNotificationTriggerDetails"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AccessoryNotificationType",
          "IsGet": true,
          "Name": "AccessoryNotificationType"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "AlarmId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AppDisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AppId"
        },
        {
          "Type": "ReminderState",
          "IsGet": true,
          "Name": "ReminderState"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "StartedProcessing"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "TimeCreated"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Timestamp"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Title"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Notification.Management.AlarmNotificationTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Notification.Management.AppNotificationInfo"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IAccessoryNotificationTriggerDetails"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AccessoryNotificationType",
          "IsGet": true,
          "Name": "AccessoryNotificationType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AppDisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AppId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Content"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "EmphasizedText"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "LargeContent1"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "LargeContent2"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NonWrappedSmallContent1"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NonWrappedSmallContent2"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NonWrappedSmallContent3"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NonWrappedSmallContent4"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Source"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "StartedProcessing"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "TileId"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "TimeCreated"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Notification.Management.CortanaTileNotificationTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IAccessoryNotificationTriggerDetails"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AccessoryNotificationType",
          "IsGet": true,
          "Name": "AccessoryNotificationType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AccountName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AppDisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AppId"
        },
        {
          "Type": "EmailMessage",
          "IsGet": true,
          "Name": "EmailMessage"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ParentFolderName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "SenderAddress"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "SenderName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "StartedProcessing"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "TimeCreated"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Notification.Management.EmailNotificationTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IAccessoryNotificationTriggerDetails"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AccessoryNotificationType",
          "IsGet": true,
          "Name": "AccessoryNotificationType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AppDisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AppId"
        },
        {
          "Type": "MediaMetadata",
          "IsGet": true,
          "Name": "MediaMetadata"
        },
        {
          "Type": "PlaybackStatus",
          "IsGet": true,
          "Name": "PlaybackStatus"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "StartedProcessing"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "TimeCreated"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Notification.Management.MediaControlsTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Album"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Artist"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "Duration"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Subtitle"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "Name": "Thumbnail"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Title"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Track"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Notification.Management.MediaMetadata"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PhoneCallDirection",
          "IsGet": true,
          "Name": "CallDirection"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "CallId"
        },
        {
          "Type": "PhoneMediaType",
          "IsGet": true,
          "Name": "CallMediaType"
        },
        {
          "Type": "PhoneCallTransport",
          "IsGet": true,
          "Name": "CallTransport"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "ConferenceCallId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ContactName"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "EndTime"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "PhoneLine"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "PhoneNumber"
        },
        {
          "Type": "IReadOnlyList<TextResponse>",
          "IsGet": true,
          "Name": "PresetTextResponses"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "StartTime"
        },
        {
          "Type": "PhoneCallState",
          "IsGet": true,
          "Name": "State"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Notification.Management.PhoneCallDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "DefaultOutgoingLine"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "LineId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "LineNumber"
        },
        {
          "Type": "PhoneLineRegistrationState",
          "IsGet": true,
          "Name": "RegistrationState"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "VoicemailCount"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Notification.Management.PhoneLineDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IAccessoryNotificationTriggerDetails"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AccessoryNotificationType",
          "IsGet": true,
          "Name": "AccessoryNotificationType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AppDisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AppId"
        },
        {
          "Type": "PhoneCallDetails",
          "IsGet": true,
          "Name": "CallDetails"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "PhoneLineChangedId"
        },
        {
          "Type": "PhoneNotificationType",
          "IsGet": true,
          "Name": "PhoneNotificationType"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "StartedProcessing"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "TimeCreated"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Notification.Management.PhoneNotificationTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IAccessoryNotificationTriggerDetails"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AccessoryNotificationType",
          "IsGet": true,
          "Name": "AccessoryNotificationType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AppDisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AppId"
        },
        {
          "Type": "Appointment",
          "IsGet": true,
          "Name": "Appointment"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Description"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Details"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "ReminderId"
        },
        {
          "Type": "ReminderState",
          "IsGet": true,
          "Name": "ReminderState"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "StartedProcessing"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "TimeCreated"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Timestamp"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Title"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Notification.Management.ReminderNotificationTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Content"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Notification.Management.TextResponse"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IAccessoryNotificationTriggerDetails"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AccessoryNotificationType",
          "IsGet": true,
          "Name": "AccessoryNotificationType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AppDisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AppId"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "StartedProcessing"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "SuppressPopup"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Text1"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Text2"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Text3"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Text4"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "TimeCreated"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Notification.Management.ToastNotificationTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<ConnectTileImage>",
          "IsGet": true,
          "Name": "Images"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.ConnectTileData"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "Name": "Image"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ImageUrl"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Name": "GetImageAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IInputStream"
            }
          ],
          "Name": "SetImageAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.ConnectTileImage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Country"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Locality"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "PostalCode"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Region"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "StreetAddress"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.ContactAddress"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "AppBindingAttributes"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "EmailAddress1"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "EmailAddress2"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "EmailAddress3"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "FirstName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Identifier"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "LastName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Name"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "PhoneNumber1"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "PhoneNumber2"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "PhoneNumber3"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RemoteId"
        },
        {
          "Type": "ConnectTileData",
          "IsGet": true,
          "IsSet": true,
          "Name": "TileData"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperation<ConnectTileData>",
          "Name": "LoadConnectTileDataAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.ContactBinding"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CallUpgradeIdentifier"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.ContactBindingAttributesConstants"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "ContactBinding",
          "Parameters": [
            {
              "Name": "RemoteId",
              "Type": "String"
            }
          ],
          "Name": "CreateContactBinding"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "LocalContext",
              "Type": "String"
            },
            {
              "Name": "binding",
              "Type": "ContactBinding"
            }
          ],
          "Name": "CreateContactBindingTileAsync"
        },
        {
          "ReturnType": "IAsyncOperation<ContactBinding>",
          "Parameters": [
            {
              "Name": "RemoteId",
              "Type": "String"
            }
          ],
          "Name": "CreateOrOpenMeContactBindingAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "DeleteAllContactBindingsAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "binding",
              "Type": "ContactBinding"
            }
          ],
          "Name": "DeleteContactBindingAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperation<ContactBinding>",
          "Parameters": [
            {
              "Name": "RemoteId",
              "Type": "String"
            }
          ],
          "Name": "GetContactBindingByRemoteIdAsync"
        },
        {
          "ReturnType": "IAsyncOperation<ContactBinding>",
          "Parameters": [
            {
              "Name": "ContactId",
              "Type": "String"
            }
          ],
          "Name": "GetContactBindingFromStoredContactAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<ContactBinding>>",
          "Name": "GetContactBindingsAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "binding",
              "Type": "ContactBinding"
            }
          ],
          "Name": "SaveContactBindingAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.ContactBindingManager"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ContactBindingManager>",
          "Name": "GetAppContactBindingManagerAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.ContactBindings"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ContactChangeType",
          "IsGet": true,
          "Name": "ChangeType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RemoteId"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "RevisionNumber"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.ContactChangeRecord"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContactInformation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "Name": "DisplayPicture"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "FamilyName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "GivenName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "HonorificPrefix"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "HonorificSuffix"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Name": "GetDisplayPictureAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IDictionary<String,Object>>",
          "Name": "GetPropertiesAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ContactInformation>",
          "Parameters": [
            {
              "Name": "vcard",
              "Type": "IInputStream"
            }
          ],
          "Name": "ParseVcardAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IInputStream"
            }
          ],
          "Name": "SetDisplayPictureAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Name": "ToVcardAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Parameters": [
            {
              "Name": "format",
              "Type": "VCardFormat"
            }
          ],
          "Name": "ToVcardAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.ContactInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "DesiredFields"
        },
        {
          "Type": "ContactQueryResultOrdering",
          "IsGet": true,
          "IsSet": true,
          "Name": "OrderBy"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.ContactQueryOptions"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<UInt32>",
          "Name": "GetContactCountAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<StoredContact>>",
          "Name": "GetContactsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<StoredContact>>",
          "Parameters": [
            {
              "Name": "startIndex",
              "Type": "UInt32"
            },
            {
              "Name": "maxNumberOfItems",
              "Type": "UInt32"
            }
          ],
          "Name": "GetContactsAsync"
        },
        {
          "ReturnType": "ContactQueryOptions",
          "Name": "GetCurrentQueryOptions"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.ContactQueryResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "RevisionNumber"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "ContactQueryResult",
          "Name": "CreateContactQuery"
        },
        {
          "ReturnType": "ContactQueryResult",
          "Parameters": [
            {
              "Name": "options",
              "Type": "ContactQueryOptions"
            }
          ],
          "Name": "CreateContactQuery"
        },
        {
          "ReturnType": "IAsyncOperation<StoredContact>",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ],
          "Name": "CreateMeContactAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ContactStore>",
          "Name": "CreateOrOpenAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ContactStore>",
          "Parameters": [
            {
              "Name": "access",
              "Type": "ContactStoreSystemAccessMode"
            },
            {
              "Name": "sharing",
              "Type": "ContactStoreApplicationAccessMode"
            }
          ],
          "Name": "CreateOrOpenAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "DeleteAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ],
          "Name": "DeleteContactAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StoredContact>",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ],
          "Name": "FindContactByIdAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StoredContact>",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ],
          "Name": "FindContactByRemoteIdAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<ContactChangeRecord>>",
          "Parameters": [
            {
              "Name": "baseRevisionNumber",
              "Type": "UInt64"
            }
          ],
          "Name": "GetChangesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IDictionary<String,Object>>",
          "Name": "LoadExtendedPropertiesAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "data",
              "Type": "IReadOnlyDictionary<String,Object>"
            }
          ],
          "Name": "SaveExtendedPropertiesAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.ContactStore"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AdditionalName"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Address"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AlternateMobileTelephone"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AlternateTelephone"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AlternateWorkTelephone"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Anniversary"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Birthdate"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CompanyName"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CompanyTelephone"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Email"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FamilyName"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GivenName"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HomeFax"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HonorificPrefix"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HonorificSuffix"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Children"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "JobTitle"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Manager"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MobileTelephone"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Nickname"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Notes"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OfficeLocation"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OtherAddress"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OtherEmail"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SignificantOther"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Telephone"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Url"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "WorkAddress"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "WorkEmail"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "WorkFax"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "WorkTelephone"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "YomiCompanyName"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "YomiFamilyName"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "YomiGivenName"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.KnownContactProperties"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "store",
              "Type": "ContactStore"
            },
            {
              "Name": "networkName",
              "Type": "String"
            },
            {
              "Name": "networkAccountId",
              "Type": "String"
            }
          ],
          "Name": "AssociateNetworkAccountAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "store",
              "Type": "ContactStore"
            },
            {
              "Name": "networkName",
              "Type": "String"
            },
            {
              "Name": "networkAccountId",
              "Type": "String"
            }
          ],
          "Name": "AssociateSocialNetworkAccountAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IInputStream"
            }
          ],
          "Name": "ImportVcardToSystemAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.Provisioning.ContactPartnerProvisioningManager"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "incoming",
              "Type": "Boolean"
            },
            {
              "Name": "read",
              "Type": "Boolean"
            },
            {
              "Name": "subject",
              "Type": "String"
            },
            {
              "Name": "sender",
              "Type": "String"
            },
            {
              "Name": "recipients",
              "Type": "IReadOnlyList<String>"
            },
            {
              "Name": "deliveryTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "attachments",
              "Type": "IReadOnlyList<IReadOnlyDictionary<String,Object>>"
            }
          ],
          "Name": "ImportMmsToSystemAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "incoming",
              "Type": "Boolean"
            },
            {
              "Name": "read",
              "Type": "Boolean"
            },
            {
              "Name": "body",
              "Type": "String"
            },
            {
              "Name": "sender",
              "Type": "String"
            },
            {
              "Name": "recipients",
              "Type": "IReadOnlyList<String>"
            },
            {
              "Name": "deliveryTime",
              "Type": "DateTimeOffset"
            }
          ],
          "Name": "ImportSmsToSystemAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.Provisioning.MessagePartnerProvisioningManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContactInformation",
        "IContactInformation2"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "store",
              "Type": "ContactStore"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "store",
              "Type": "ContactStore"
            },
            {
              "Name": "contact",
              "Type": "ContactInformation"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "Name": "DisplayPicture"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayPictureDate"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "FamilyName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "GivenName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "HonorificPrefix"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "HonorificSuffix"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "RemoteId"
        },
        {
          "Type": "ContactStore",
          "IsGet": true,
          "Name": "Store"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Name": "GetDisplayPictureAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IDictionary<String,Object>>",
          "Name": "GetExtendedPropertiesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IDictionary<String,Object>>",
          "Name": "GetPropertiesAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ],
          "Name": "ReplaceExistingContactAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "SaveAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IInputStream"
            }
          ],
          "Name": "SetDisplayPictureAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Name": "ToVcardAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Parameters": [
            {
              "Name": "format",
              "Type": "VCardFormat"
            }
          ],
          "Name": "ToVcardAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.StoredContact"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "RemoteId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Username"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.Actor"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "FeedContent",
          "IsGet": true,
          "Name": "Content"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DefaultTarget"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "OwnerRemoteId"
        },
        {
          "Type": "FeedMediaThumbnail",
          "IsGet": true,
          "IsSet": true,
          "Name": "Thumbnail"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Name": "SaveAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.DashboardItem"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISocialOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AlbumId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "SocialOperationType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "success",
              "Type": "Boolean"
            }
          ],
          "Name": "NotifyCompletion"
        },
        {
          "ReturnType": "Void",
          "Name": "NotifyCompletion"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.DownloadAlbumCoverOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISocialOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MaximumItemCount"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ParentAlbumId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "StartIndex"
        },
        {
          "Type": "SocialOperationType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "success",
              "Type": "Boolean"
            }
          ],
          "Name": "NotifyCompletion"
        },
        {
          "ReturnType": "Void",
          "Name": "NotifyCompletion"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.DownloadAlbumItemsOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISocialOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<FeedOperationDetails>",
          "IsGet": true,
          "Name": "FeedOperationDetails"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "SocialOperationType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "success",
              "Type": "Boolean"
            }
          ],
          "Name": "NotifyCompletion"
        },
        {
          "ReturnType": "Void",
          "Name": "NotifyCompletion"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.DownloadDashboardFeedOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISocialOperationFactory"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "ownerRemoteId",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "SocialOperationType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<ISocialOperation>",
          "Name": "GetOperationAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.DownloadDashboardFeedOperationFactory"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISocialOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<FeedOperationDetails>",
          "IsGet": true,
          "Name": "FeedOperationDetails"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "SocialOperationType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "success",
              "Type": "Boolean"
            }
          ],
          "Name": "NotifyCompletion"
        },
        {
          "ReturnType": "Void",
          "Name": "NotifyCompletion"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.DownloadFeedOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISocialOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "FeedOperationDetails",
          "IsGet": true,
          "Name": "FeedOperationDetails"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "SocialOperationType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "success",
              "Type": "Boolean"
            }
          ],
          "Name": "NotifyCompletion"
        },
        {
          "ReturnType": "Void",
          "Name": "NotifyCompletion"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.DownloadHomeFeedOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISocialOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ImageType",
          "IsGet": true,
          "Name": "DesiredImageType"
        },
        {
          "Type": "ImageResolution",
          "IsGet": true,
          "Name": "DesiredResolution"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "PhotoId"
        },
        {
          "Type": "SocialOperationType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "success",
              "Type": "Boolean"
            }
          ],
          "Name": "NotifyCompletion"
        },
        {
          "ReturnType": "Void",
          "Name": "NotifyCompletion"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.DownloadImageOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISocialOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "Ids"
        },
        {
          "Type": "SocialOperationType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "success",
              "Type": "Boolean"
            }
          ],
          "Name": "NotifyCompletion"
        },
        {
          "ReturnType": "Void",
          "Name": "NotifyCompletion"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.DownloadRichConnectDataOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<FeedItem>",
          "IsGet": true,
          "Name": "Items"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "OwnerRemoteId"
        },
        {
          "Type": "FeedType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Name": "SaveAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.Feed"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Message"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Target"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.FeedContent"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IFeedItemBase"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Actor",
          "IsGet": true,
          "Name": "Author"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DefaultTarget"
        },
        {
          "Type": "FeedContent",
          "IsGet": true,
          "Name": "PrimaryContent"
        },
        {
          "Type": "FeedContent",
          "IsGet": true,
          "Name": "SecondaryContent"
        },
        {
          "Type": "FeedItemSharedStory",
          "IsGet": true,
          "IsSet": true,
          "Name": "SharedStory"
        },
        {
          "Type": "IList<FeedMediaThumbnail>",
          "IsGet": true,
          "Name": "Thumbnails"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.FeedChildItem"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IFeedItemBase"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Actor",
          "IsGet": true,
          "Name": "Author"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DefaultTarget"
        },
        {
          "Type": "FeedChildItem",
          "IsGet": true,
          "IsSet": true,
          "Name": "ChildItem"
        },
        {
          "Type": "FeedContent",
          "IsGet": true,
          "Name": "PrimaryContent"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReactionDisplayCount"
        },
        {
          "Type": "ReactionDisplayKind",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReactionDisplayKind"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "RemoteId"
        },
        {
          "Type": "FeedContent",
          "IsGet": true,
          "Name": "SecondaryContent"
        },
        {
          "Type": "FeedItemSharedStory",
          "IsGet": true,
          "IsSet": true,
          "Name": "SharedStory"
        },
        {
          "Type": "FeedItemStyle",
          "IsGet": true,
          "IsSet": true,
          "Name": "Style"
        },
        {
          "Type": "IList<FeedMediaThumbnail>",
          "IsGet": true,
          "Name": "Thumbnails"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.FeedItem"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "FeedContent",
          "IsGet": true,
          "Name": "Content"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DefaultTarget"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Source"
        },
        {
          "Type": "FeedMediaThumbnail",
          "IsGet": true,
          "IsSet": true,
          "Name": "Thumbnail"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.FeedItemSharedStory"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "Name": "Image"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ImageUrl"
        },
        {
          "Type": "ImageResolution",
          "IsGet": true,
          "IsSet": true,
          "Name": "Resolution"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Target"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Name": "GetImageAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IInputStream"
            }
          ],
          "Name": "SetImageAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.FeedMediaThumbnail"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "FeedRequestDirection",
          "IsGet": true,
          "Name": "Direction"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "FeedItemRemoteId"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "FeedItemTimestamp"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "ItemCount"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "OwnerRemoteId"
        },
        {
          "Type": "FeedType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.FeedOperationDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<UInt32>",
          "Name": "GetItemCountAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IList<IOnlineMediaItem>>",
          "Name": "GetItemsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IList<IOnlineMediaItem>>",
          "Parameters": [
            {
              "Name": "count",
              "Type": "Int32"
            }
          ],
          "Name": "GetItemsAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.OnlineMedia.OnlineMediaItemQueryResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "OnlinePicture",
          "Parameters": [
            {
              "Name": "remoteId",
              "Type": "String"
            },
            {
              "Name": "parentPictureAlbumId",
              "Type": "String"
            }
          ],
          "Name": "CreatePicture"
        },
        {
          "ReturnType": "OnlinePictureAlbum",
          "Parameters": [
            {
              "Name": "remoteId",
              "Type": "String"
            },
            {
              "Name": "parentPictureAlbumId",
              "Type": "String"
            }
          ],
          "Name": "CreatePictureAlbum"
        },
        {
          "ReturnType": "OnlinePictureAlbumQueryResult",
          "Name": "CreatePictureAlbumQuery"
        },
        {
          "ReturnType": "OnlinePictureQueryResult",
          "Name": "CreatePictureQuery"
        },
        {
          "ReturnType": "OnlineVideo",
          "Parameters": [
            {
              "Name": "remoteId",
              "Type": "String"
            },
            {
              "Name": "parentPictureAlbumId",
              "Type": "String"
            }
          ],
          "Name": "CreateVideo"
        },
        {
          "ReturnType": "OnlineVideoQueryResult",
          "Name": "CreateVideoQuery"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "item",
              "Type": "IOnlineMediaItem"
            }
          ],
          "Name": "DeleteMediaItemAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "item",
              "Type": "OnlinePictureAlbum"
            }
          ],
          "Name": "DeletePictureAlbumAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "item",
              "Type": "OnlinePictureAlbum"
            }
          ],
          "Name": "DeletePictureAlbumContentsAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "DeprovisionAsync"
        },
        {
          "ReturnType": "IAsyncOperation<OnlinePictureAlbum>",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ],
          "Name": "GetPictureAlbumAsync"
        },
        {
          "ReturnType": "IAsyncOperation<OnlinePictureAlbum>",
          "Parameters": [
            {
              "Name": "remoteId",
              "Type": "String"
            }
          ],
          "Name": "GetPictureAlbumByRemoteIdAsync"
        },
        {
          "ReturnType": "IAsyncOperation<OnlinePicture>",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ],
          "Name": "GetPictureAsync"
        },
        {
          "ReturnType": "IAsyncOperation<OnlinePicture>",
          "Parameters": [
            {
              "Name": "remoteId",
              "Type": "String"
            }
          ],
          "Name": "GetPictureByRemoteIdAsync"
        },
        {
          "ReturnType": "IAsyncOperation<OnlinePictureAlbum>",
          "Name": "GetRootPictureAlbumAsync"
        },
        {
          "ReturnType": "IAsyncOperation<OnlineVideo>",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ],
          "Name": "GetVideoAsync"
        },
        {
          "ReturnType": "IAsyncOperation<OnlineVideo>",
          "Parameters": [
            {
              "Name": "remoteId",
              "Type": "String"
            }
          ],
          "Name": "GetVideoByRemoteIdAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "ProvisionAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<OnlineMediaManager>",
          "Name": "RequestMediaManagerAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "item",
              "Type": "IOnlineMediaItem"
            }
          ],
          "Name": "SaveMediaItemAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "videos",
              "Type": "IEnumerable<IOnlineMediaItem>"
            }
          ],
          "Name": "SaveMediaItemsAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "item",
              "Type": "OnlinePictureAlbum"
            }
          ],
          "Name": "SavePictureAlbumAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pictureAlbums",
              "Type": "IEnumerable<OnlinePictureAlbum>"
            }
          ],
          "Name": "SavePictureAlbumsAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.OnlineMedia.OnlineMediaManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IOnlineMediaItem"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentUrl"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "CreationTime"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Height"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RemoteId"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "ThumbnailLargeUrl"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "ThumbnailSmallUrl"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Width"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Name": "GetContentAsync"
        },
        {
          "ReturnType": "IAsyncOperation<OnlinePictureAlbum>",
          "Name": "GetPictureAlbumAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Name": "GetThumbnailLargeAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Name": "GetThumbnailSmallAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pValue",
              "Type": "IInputStream"
            }
          ],
          "Name": "SetContentAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pValue",
              "Type": "IInputStream"
            }
          ],
          "Name": "SetThumbnailLargeAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pValue",
              "Type": "IInputStream"
            }
          ],
          "Name": "SetThumbnailSmallAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.OnlineMedia.OnlinePicture"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "CoverImageUrl"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "CreationTime"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ParentPictureAlbumId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RemoteId"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "RequiresAuthentication"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "VersionStamp"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "OnlineMediaItemQueryResult",
          "Name": "GetContentsQuery"
        },
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Name": "GetCoverImageAsync"
        },
        {
          "ReturnType": "OnlinePictureAlbumQueryResult",
          "Name": "GetPictureAlbumsQuery"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pValue",
              "Type": "IInputStream"
            }
          ],
          "Name": "SetCoverImageAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.OnlineMedia.OnlinePictureAlbum"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<UInt32>",
          "Name": "GetPictureAlbumCountAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IList<OnlinePictureAlbum>>",
          "Name": "GetPictureAlbumsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IList<OnlinePictureAlbum>>",
          "Parameters": [
            {
              "Name": "count",
              "Type": "Int32"
            }
          ],
          "Name": "GetPictureAlbumsAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.OnlineMedia.OnlinePictureAlbumQueryResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<UInt32>",
          "Name": "GetPictureCountAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IList<OnlinePicture>>",
          "Name": "GetPicturesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IList<OnlinePicture>>",
          "Parameters": [
            {
              "Name": "count",
              "Type": "Int32"
            }
          ],
          "Name": "GetPicturesAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.OnlineMedia.OnlinePictureQueryResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IOnlineMediaItem"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentUrl"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "CreationTime"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "Duration"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Height"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RemoteId"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "ThumbnailLargeUrl"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "ThumbnailSmallUrl"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Width"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Name": "GetContentAsync"
        },
        {
          "ReturnType": "IAsyncOperation<OnlinePictureAlbum>",
          "Name": "GetPictureAlbumAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Name": "GetThumbnailLargeAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Name": "GetThumbnailSmallAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pValue",
              "Type": "IInputStream"
            }
          ],
          "Name": "SetContentAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pValue",
              "Type": "IInputStream"
            }
          ],
          "Name": "SetThumbnailLargeAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pValue",
              "Type": "IInputStream"
            }
          ],
          "Name": "SetThumbnailSmallAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.OnlineMedia.OnlineVideo"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<UInt32>",
          "Name": "GetVideoCountAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IList<OnlineVideo>>",
          "Name": "GetVideosAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IList<OnlineVideo>>",
          "Parameters": [
            {
              "Name": "count",
              "Type": "Int32"
            }
          ],
          "Name": "GetVideosAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.OnlineMedia.OnlineVideoQueryResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<ISocialOperation>",
          "Name": "GetNextOperationAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.OperationQueue"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Name": "DeleteAllAppUserDataAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Name": "DeprovisionAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<OperationQueue>",
          "Name": "GetOperationQueueAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "ownerRemoteId",
              "Type": "String"
            },
            {
              "Name": "feedType",
              "Type": "FeedType"
            }
          ],
          "Name": "MarkFeedAsStaleAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<DashboardItem>",
          "Parameters": [
            {
              "Name": "FeedOperationDetails",
              "Type": "FeedOperationDetails"
            }
          ],
          "Name": "OpenContactDashboardAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Feed>",
          "Parameters": [
            {
              "Name": "FeedOperationDetails",
              "Type": "FeedOperationDetails"
            }
          ],
          "Name": "OpenContactFeedAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Feed>",
          "Parameters": [
            {
              "Name": "FeedOperationDetails",
              "Type": "FeedOperationDetails"
            }
          ],
          "Name": "OpenHomeFeedAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Name": "ProvisionAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "itemRemoteId",
              "Type": "String"
            },
            {
              "Name": "count",
              "Type": "Int32"
            }
          ],
          "Name": "UpdateReactionDisplayCountAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.SocialManager"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<SpeechRecognizerInformation>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "All"
        },
        {
          "Type": "SpeechRecognizerInformation",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Default"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.InstalledSpeechRecognizers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IReadOnlyList<Object>",
          "Name": "GetAllValues"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.SemanticProperty"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SpeechRecognitionAudioProblem",
          "IsGet": true,
          "Name": "Problem"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.SpeechAudioProblemOccurredEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Enabled"
        },
        {
          "Type": "SpeechGrammarProbability",
          "IsGet": true,
          "IsSet": true,
          "Name": "Probability"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.SpeechGrammar"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,SpeechGrammar>>",
        "IReadOnlyCollection<KeyValuePair<String,SpeechGrammar>>",
        "IReadOnlyDictionary<String,SpeechGrammar>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "SpeechGrammar",
          "Parameters": [
            {
              "Name": "key",
              "Type": "String"
            },
            {
              "Name": "phrases",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "AddGrammarFromList"
        },
        {
          "ReturnType": "SpeechGrammar",
          "Parameters": [
            {
              "Name": "key",
              "Type": "String"
            },
            {
              "Name": "predefinedGrammarType",
              "Type": "SpeechPredefinedGrammar"
            }
          ],
          "Name": "AddGrammarFromPredefinedType"
        },
        {
          "ReturnType": "SpeechGrammar",
          "Parameters": [
            {
              "Name": "key",
              "Type": "String"
            },
            {
              "Name": "grammarUri",
              "Type": "Uri"
            }
          ],
          "Name": "AddGrammarFromUri"
        },
        {
          "ReturnType": "Void",
          "Name": "Clear"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.SpeechGrammarSet"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SpeechRecognitionResultDetail",
          "IsGet": true,
          "Name": "Details"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RuleName"
        },
        {
          "Type": "IReadOnlyDictionary<String,SemanticProperty>",
          "IsGet": true,
          "Name": "Semantics"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Text"
        },
        {
          "Type": "SpeechRecognitionConfidence",
          "IsGet": true,
          "Name": "TextConfidence"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IReadOnlyList<SpeechRecognitionResult>",
          "Parameters": [
            {
              "Name": "maxAlternates",
              "Type": "UInt32"
            }
          ],
          "Name": "GetAlternates"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognitionResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "ConfidenceScore"
        },
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "RuleStack"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognitionResultDetail"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SpeechRecognitionResult",
          "IsGet": true,
          "Name": "RecognitionResult"
        },
        {
          "Type": "SpeechRecognitionUIStatus",
          "IsGet": true,
          "Name": "ResultStatus"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognitionUIResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SpeechGrammarSet",
          "IsGet": true,
          "Name": "Grammars"
        },
        {
          "Type": "SpeechRecognizerSettings",
          "IsGet": true,
          "Name": "Settings"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "SpeechRecognizerInformation",
          "Name": "GetRecognizer"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "PreloadGrammarsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<SpeechRecognitionResult>",
          "Name": "RecognizeAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "recognizerInformation",
              "Type": "SpeechRecognizerInformation"
            }
          ],
          "Name": "SetRecognizer"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<SpeechRecognizer,SpeechRecognizerAudioCaptureStateChangedEventArgs>",
          "Name": "AudioCaptureStateChanged"
        },
        {
          "Type": "TypedEventHandler<SpeechRecognizer,SpeechAudioProblemOccurredEventArgs>",
          "Name": "AudioProblemOccurred"
        }
      ],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognizer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SpeechRecognizerAudioCaptureState",
          "IsGet": true,
          "Name": "State"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognizerAudioCaptureStateChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Description"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Language"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognizerInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "BabbleTimeout"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "EndSilenceTimeout"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "InitialSilenceTimeout"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognizerSettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SpeechRecognizer",
          "IsGet": true,
          "Name": "Recognizer"
        },
        {
          "Type": "SpeechRecognizerUISettings",
          "IsGet": true,
          "Name": "Settings"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperation<SpeechRecognitionUIResult>",
          "Name": "RecognizeWithUIAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognizerUI"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ExampleText"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ListenText"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReadoutEnabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "ShowConfirmation"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognizerUISettings"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<VoiceInformation>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "All"
        },
        {
          "Type": "VoiceInformation",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Default"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Synthesis.InstalledVoices"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "AudioPosition"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Bookmark"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "UserState"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Synthesis.SpeechBookmarkReachedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "UserState"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Synthesis.SpeechStartedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "CancelAll"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "VoiceInformation",
          "Name": "GetVoice"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "voiceInformation",
              "Type": "VoiceInformation"
            }
          ],
          "Name": "SetVoice"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "content",
              "Type": "String"
            }
          ],
          "Name": "SpeakSsmlAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "content",
              "Type": "String"
            },
            {
              "Name": "userState",
              "Type": "Object"
            }
          ],
          "Name": "SpeakSsmlAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "content",
              "Type": "Uri"
            }
          ],
          "Name": "SpeakSsmlFromUriAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "content",
              "Type": "Uri"
            },
            {
              "Name": "userState",
              "Type": "Object"
            }
          ],
          "Name": "SpeakSsmlFromUriAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "content",
              "Type": "String"
            }
          ],
          "Name": "SpeakTextAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "content",
              "Type": "String"
            },
            {
              "Name": "userState",
              "Type": "Object"
            }
          ],
          "Name": "SpeakTextAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<SpeechSynthesizer,SpeechBookmarkReachedEventArgs>",
          "Name": "BookmarkReached"
        },
        {
          "Type": "TypedEventHandler<SpeechSynthesizer,SpeechStartedEventArgs>",
          "Name": "SpeechStarted"
        }
      ],
      "Name": "Windows.Phone.Speech.Synthesis.SpeechSynthesizer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Description"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "VoiceGender",
          "IsGet": true,
          "Name": "Gender"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Language"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Speech.Synthesis.VoiceInformation"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyDictionary<String,VoiceCommandSet>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "InstalledCommandSets"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "voiceCommandDefinitionUri",
              "Type": "Uri"
            }
          ],
          "Name": "InstallCommandSetsFromFileAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Speech.VoiceCommands.VoiceCommandService"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Language"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "phraseListName",
              "Type": "String"
            },
            {
              "Name": "phraseList",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "UpdatePhraseListAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Speech.VoiceCommands.VoiceCommandSet"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IStorageFile>",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "StorageFolder"
            },
            {
              "Name": "desiredName",
              "Type": "String"
            },
            {
              "Name": "option",
              "Type": "NameCollisionOption"
            },
            {
              "Name": "fileToken",
              "Type": "String"
            }
          ],
          "Name": "CopySharedFileAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "fileToken",
              "Type": "String"
            }
          ],
          "Name": "GetSharedFileName"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Storage.SharedAccess.SharedStorageAccessManager"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PublisherHostId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.System.Analytics.HostInformation"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "BeginUnlock"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "EndUnlock"
        },
        {
          "IsStatic": true,
          "ReturnType": "Int32",
          "Name": "GetLockPinpadHeight"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Name": "IsLockScreenApplicationRegistered"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Name": "IsSystemOverlayApplicationRegistered"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "RaiseToastNotifications"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "RegisterLockScreenApplication"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "RegisterSystemOverlayApplication"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "UnregisterLockScreenApplication"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "UnregisterSystemOverlayApplication"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.System.LockScreenExtensibility.ExtensibilityApp"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt64",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ProcessCommittedBytes"
        },
        {
          "Type": "UInt64",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ProcessCommittedLimit"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.System.Memory.MemoryManager"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PowerSavingMode",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PowerSavingMode"
        },
        {
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PowerSavingModeEnabled"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "IsStatic": true,
          "Name": "PowerSavingModeChanged"
        }
      ],
      "Name": "Windows.Phone.System.Power.PowerManager"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RetailModeEnabled"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.System.Profile.RetailMode"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ScreenLocked"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "RequestScreenUnlock"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.System.SystemProtection"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Uri",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ServiceUri"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "UInt32",
          "Name": "GetAuthenticationStatus"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<GameServicePropertyCollection>",
          "Name": "GetGamerProfileAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<GameServicePropertyCollection>",
          "Name": "GetInstalledGameItemsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "audienceUri",
              "Type": "Uri"
            }
          ],
          "Name": "GetPartnerTokenAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Name": "GetPrivilegesAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "achievementId",
              "Type": "UInt32"
            }
          ],
          "Name": "GrantAchievement"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "avatarAwardId",
              "Type": "UInt32"
            }
          ],
          "Name": "GrantAvatarAward"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "audienceUri",
              "Type": "Uri"
            }
          ],
          "Name": "NotifyPartnerTokenExpired"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "gameVariant",
              "Type": "UInt32"
            },
            {
              "Name": "scoreKind",
              "Type": "GameServiceScoreKind"
            },
            {
              "Name": "scoreValue",
              "Type": "Int64"
            },
            {
              "Name": "gameOutcome",
              "Type": "GameServiceGameOutcome"
            },
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "PostResult"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.System.UserProfile.GameServices.Core.GameService"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<Object>",
          "Parameters": [
            {
              "Name": "propertyName",
              "Type": "String"
            }
          ],
          "Name": "GetPropertyAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.System.UserProfile.GameServices.Core.GameServicePropertyCollection"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Uri",
          "Name": "GetImageUri"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Uri"
            }
          ],
          "Name": "SetImageUri"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.System.UserProfile.LockScreen"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsProvidedByCurrentApplication"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<LockScreenRequestResult>",
          "Name": "RequestAccessAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.System.UserProfile.LockScreenManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Length"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Start"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.UI.Core.CoreSelectionChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NewText"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "OldLength"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Start"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.UI.Core.CoreTextChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "CoreInputScope",
          "IsGet": true,
          "IsSet": true,
          "Name": "InputScope"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "SelectionLength"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "SelectionStart"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Text"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "start",
              "Type": "UInt32"
            },
            {
              "Name": "length",
              "Type": "UInt32"
            }
          ],
          "Name": "Select"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "characterIndex",
              "Type": "UInt32"
            }
          ],
          "Name": "SelectFromTap"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<KeyboardInputBuffer,CoreSelectionChangedEventArgs>",
          "Name": "SelectionChanged"
        },
        {
          "Type": "TypedEventHandler<KeyboardInputBuffer,CoreTextChangedEventArgs>",
          "Name": "TextChanged"
        }
      ],
      "Name": "Windows.Phone.UI.Core.KeyboardInputBuffer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.UI.Input.BackPressedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.UI.Input.CameraEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "EventHandler<BackPressedEventArgs>",
          "IsStatic": true,
          "Name": "BackPressed"
        },
        {
          "Type": "EventHandler<CameraEventArgs>",
          "IsStatic": true,
          "Name": "CameraHalfPressed"
        },
        {
          "Type": "EventHandler<CameraEventArgs>",
          "IsStatic": true,
          "Name": "CameraPressed"
        },
        {
          "Type": "EventHandler<CameraEventArgs>",
          "IsStatic": true,
          "Name": "CameraReleased"
        }
      ],
      "Name": "Windows.Phone.UI.Input.HardwareButtons"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "AccountId"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "IsSet": true,
          "Name": "ApplicationId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ApplicationSid"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AuthenticatedSafeCustomerId"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanSignOut"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "UserAuthenticationOperation",
          "Parameters": [
            {
              "Name": "request",
              "Type": "OnlineIdServiceTicketRequest"
            }
          ],
          "Name": "AuthenticateUserAsync"
        },
        {
          "ReturnType": "UserAuthenticationOperation",
          "Parameters": [
            {
              "Name": "requests",
              "Type": "IEnumerable<OnlineIdServiceTicketRequest>"
            },
            {
              "Name": "credentialPromptType",
              "Type": "CredentialPromptType"
            }
          ],
          "Name": "AuthenticateUserAsync"
        },
        {
          "ReturnType": "SignOutUserOperation",
          "Name": "SignOutUserAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Authentication.OnlineId.OnlineIdAuthenticator"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "ErrorCode"
        },
        {
          "Type": "OnlineIdServiceTicketRequest",
          "IsGet": true,
          "Name": "Request"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Authentication.OnlineId.OnlineIdServiceTicket"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "service",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "service",
              "Type": "String"
            },
            {
              "Name": "policy",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Policy"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Service"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Authentication.OnlineId.OnlineIdServiceTicketRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IAsyncAction",
        "IAsyncInfo"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AsyncActionCompletedHandler",
          "IsGet": true,
          "IsSet": true,
          "Name": "Completed"
        },
        {
          "Type": "Exception",
          "IsGet": true,
          "Name": "ErrorCode"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "AsyncStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Cancel"
        },
        {
          "ReturnType": "Void",
          "Name": "Close"
        },
        {
          "ReturnType": "Void",
          "Name": "GetResults"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Authentication.OnlineId.SignOutUserOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IAsyncInfo",
        "IAsyncOperation<UserIdentity>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AsyncOperationCompletedHandler<UserIdentity>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Completed"
        },
        {
          "Type": "Exception",
          "IsGet": true,
          "Name": "ErrorCode"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "AsyncStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Cancel"
        },
        {
          "ReturnType": "Void",
          "Name": "Close"
        },
        {
          "ReturnType": "UserIdentity",
          "Name": "GetResults"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Authentication.OnlineId.UserAuthenticationOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "FirstName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsBetaAccount"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsConfirmedPC"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "LastName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "SafeCustomerId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "SignInName"
        },
        {
          "Type": "IReadOnlyList<OnlineIdServiceTicket>",
          "IsGet": true,
          "Name": "Tickets"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Authentication.OnlineId.UserIdentity"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<WebAccount>",
          "Parameters": [
            {
              "Name": "provider",
              "Type": "WebAccountProvider"
            },
            {
              "Name": "webAccountId",
              "Type": "String"
            }
          ],
          "Name": "FindAccountAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<WebAccountProvider>",
          "Parameters": [
            {
              "Name": "webAccountProviderId",
              "Type": "String"
            }
          ],
          "Name": "FindAccountProviderAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<WebAccountProvider>",
          "Parameters": [
            {
              "Name": "webAccountProviderId",
              "Type": "String"
            },
            {
              "Name": "authority",
              "Type": "String"
            }
          ],
          "Name": "FindAccountProviderWithAuthorityAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<WebTokenRequestResult>",
          "Parameters": [
            {
              "Name": "request",
              "Type": "WebTokenRequest"
            }
          ],
          "Name": "GetTokenSilentlyAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<WebTokenRequestResult>",
          "Parameters": [
            {
              "Name": "request",
              "Type": "WebTokenRequest"
            },
            {
              "Name": "webAccount",
              "Type": "WebAccount"
            }
          ],
          "Name": "GetTokenSilentlyAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<WebTokenRequestResult>",
          "Parameters": [
            {
              "Name": "request",
              "Type": "WebTokenRequest"
            },
            {
              "Name": "webAccounts",
              "Type": "IReadOnlyList<WebAccount>"
            }
          ],
          "Name": "GetTokenSilentlyWithHintsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "request",
              "Type": "WebTokenRequest"
            }
          ],
          "Name": "RequestTokenAndContinue"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "request",
              "Type": "WebTokenRequest"
            },
            {
              "Name": "continuationData",
              "Type": "PropertySet"
            }
          ],
          "Name": "RequestTokenAndContinue"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "request",
              "Type": "WebTokenRequest"
            },
            {
              "Name": "continuationData",
              "Type": "PropertySet"
            },
            {
              "Name": "webAccount",
              "Type": "WebAccount"
            }
          ],
          "Name": "RequestTokenAndContinue"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<WebTokenRequestResult>",
          "Parameters": [
            {
              "Name": "request",
              "Type": "WebTokenRequest"
            }
          ],
          "Name": "RequestTokenAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<WebTokenRequestResult>",
          "Parameters": [
            {
              "Name": "request",
              "Type": "WebTokenRequest"
            },
            {
              "Name": "webAccount",
              "Type": "WebAccount"
            }
          ],
          "Name": "RequestTokenAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "request",
              "Type": "WebTokenRequest"
            },
            {
              "Name": "continuationData",
              "Type": "PropertySet"
            },
            {
              "Name": "webAccounts",
              "Type": "IReadOnlyList<WebAccount>"
            }
          ],
          "Name": "RequestTokenWithHintsAndContinue"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<WebTokenRequestResult>",
          "Parameters": [
            {
              "Name": "request",
              "Type": "WebTokenRequest"
            },
            {
              "Name": "webAccounts",
              "Type": "IReadOnlyList<WebAccount>"
            }
          ],
          "Name": "RequestTokenWithHintsAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "errorCode",
              "Type": "UInt32"
            },
            {
              "Name": "errorMessage",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "ErrorCode"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ErrorMessage"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.Core.WebProviderError"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "provider",
              "Type": "WebAccountProvider"
            },
            {
              "Name": "scope",
              "Type": "String"
            },
            {
              "Name": "clientId",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "provider",
              "Type": "WebAccountProvider"
            },
            {
              "Name": "scope",
              "Type": "String"
            },
            {
              "Name": "clientId",
              "Type": "String"
            },
            {
              "Name": "promptType",
              "Type": "WebTokenRequestPromptType"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ClientId"
        },
        {
          "Type": "WebTokenRequestPromptType",
          "IsGet": true,
          "Name": "PromptType"
        },
        {
          "Type": "IDictionary<String,String>",
          "IsGet": true,
          "Name": "Properties"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Scope"
        },
        {
          "Type": "WebAccountProvider",
          "IsGet": true,
          "Name": "WebAccountProvider"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.Core.WebTokenRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<WebTokenResponse>",
          "IsGet": true,
          "Name": "ResponseData"
        },
        {
          "Type": "WebProviderError",
          "IsGet": true,
          "Name": "ResponseError"
        },
        {
          "Type": "WebTokenRequestStatus",
          "IsGet": true,
          "Name": "ResponseStatus"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Name": "InvalidateCacheAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.Core.WebTokenRequestResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "webAccount",
              "Type": "WebAccount"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "webAccount",
              "Type": "WebAccount"
            },
            {
              "Name": "error",
              "Type": "WebProviderError"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IDictionary<String,String>",
          "IsGet": true,
          "Name": "Properties"
        },
        {
          "Type": "WebProviderError",
          "IsGet": true,
          "Name": "ProviderError"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Token"
        },
        {
          "Type": "WebAccount",
          "IsGet": true,
          "Name": "WebAccount"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.Core.WebTokenResponse"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "viewType",
              "Type": "WebAccountClientViewType"
            },
            {
              "Name": "applicationCallbackUri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "viewType",
              "Type": "WebAccountClientViewType"
            },
            {
              "Name": "applicationCallbackUri",
              "Type": "Uri"
            },
            {
              "Name": "accountPairwiseId",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AccountPairwiseId"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "ApplicationCallbackUri"
        },
        {
          "Type": "WebAccountClientViewType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.Provider.WebAccountClientView"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<WebAccount>",
          "Parameters": [
            {
              "Name": "webAccountId",
              "Type": "String"
            },
            {
              "Name": "webAccountUserName",
              "Type": "String"
            },
            {
              "Name": "props",
              "Type": "IReadOnlyDictionary<String,String>"
            }
          ],
          "Name": "AddWebAccountAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "webAccount",
              "Type": "WebAccount"
            },
            {
              "Name": "applicationCallbackUri",
              "Type": "Uri"
            }
          ],
          "Name": "ClearViewAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "webAccount",
              "Type": "WebAccount"
            }
          ],
          "Name": "DeleteWebAccountAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<WebAccount>>",
          "Name": "FindAllProviderWebAccountsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<WebAccountClientView>>",
          "Parameters": [
            {
              "Name": "webAccount",
              "Type": "WebAccount"
            }
          ],
          "Name": "GetViewsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "cookies",
              "Type": "IReadOnlyList<HttpCookie>"
            }
          ],
          "Name": "PushCookiesAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pickerOperation",
              "Type": "IWebAccountProviderOperation"
            }
          ],
          "Name": "SendTokenResultCanceled"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pickerOperation",
              "Type": "IWebAccountProviderOperation"
            }
          ],
          "Name": "SendTokenResultCompleted"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "webAccount",
              "Type": "WebAccount"
            },
            {
              "Name": "view",
              "Type": "WebAccountClientView"
            }
          ],
          "Name": "SetViewAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "webAccount",
              "Type": "WebAccount"
            },
            {
              "Name": "webAccountUserName",
              "Type": "String"
            },
            {
              "Name": "additionalProperties",
              "Type": "IReadOnlyDictionary<String,String>"
            }
          ],
          "Name": "UpdateWebAccountPropertiesAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.Provider.WebAccountManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebAccountProviderOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "WebAccountProviderOperationKind",
          "IsGet": true,
          "Name": "Kind"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.Provider.WebAccountProviderAddAccountOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebAccountProviderBaseReportOperation",
        "IWebAccountProviderOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "WebAccountProviderOperationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "WebAccount",
          "IsGet": true,
          "Name": "WebAccount"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "ReportCompleted"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "WebProviderError"
            }
          ],
          "Name": "ReportError"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.Provider.WebAccountProviderDeleteAccountOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebAccountProviderBaseReportOperation",
        "IWebAccountProviderOperation",
        "IWebAccountProviderSilentReportOperation",
        "IWebAccountProviderTokenOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "CacheExpirationTime"
        },
        {
          "Type": "WebAccountProviderOperationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "WebProviderTokenRequest",
          "IsGet": true,
          "Name": "ProviderRequest"
        },
        {
          "Type": "IList<WebProviderTokenResponse>",
          "IsGet": true,
          "Name": "ProviderResponses"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "ReportCompleted"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "WebProviderError"
            }
          ],
          "Name": "ReportError"
        },
        {
          "ReturnType": "Void",
          "Name": "ReportUserInteractionRequired"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.Provider.WebAccountProviderGetTokenSilentOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebAccountProviderOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "WebAccountProviderOperationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "WebAccount",
          "IsGet": true,
          "Name": "WebAccount"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.Provider.WebAccountProviderManageAccountOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebAccountProviderBaseReportOperation",
        "IWebAccountProviderOperation",
        "IWebAccountProviderTokenOperation",
        "IWebAccountProviderUIReportOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "CacheExpirationTime"
        },
        {
          "Type": "WebAccountProviderOperationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "WebProviderTokenRequest",
          "IsGet": true,
          "Name": "ProviderRequest"
        },
        {
          "Type": "IList<WebProviderTokenResponse>",
          "IsGet": true,
          "Name": "ProviderResponses"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "ReportCompleted"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "WebProviderError"
            }
          ],
          "Name": "ReportError"
        },
        {
          "ReturnType": "Void",
          "Name": "ReportUserCanceled"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.Provider.WebAccountProviderRequestTokenOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebAccountProviderBaseReportOperation",
        "IWebAccountProviderOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "Context"
        },
        {
          "Type": "IList<HttpCookie>",
          "IsGet": true,
          "Name": "Cookies"
        },
        {
          "Type": "WebAccountProviderOperationKind",
          "IsGet": true,
          "Name": "Kind"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "ReportCompleted"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "WebProviderError"
            }
          ],
          "Name": "ReportError"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.Provider.WebAccountProviderRetrieveCookiesOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebAccountProviderTokenObjects"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IWebAccountProviderOperation",
          "IsGet": true,
          "Name": "Operation"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.Provider.WebAccountProviderTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "ApplicationCallbackUri"
        },
        {
          "Type": "WebTokenRequest",
          "IsGet": true,
          "Name": "ClientRequest"
        },
        {
          "Type": "IReadOnlyList<WebAccount>",
          "IsGet": true,
          "Name": "WebAccounts"
        },
        {
          "Type": "WebAccountSelectionOptions",
          "IsGet": true,
          "Name": "WebAccountSelectionOptions"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.Provider.WebProviderTokenRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "webTokenResponse",
              "Type": "WebTokenResponse"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "WebTokenResponse",
          "IsGet": true,
          "Name": "ClientResponse"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.Provider.WebProviderTokenResponse"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "requestUri",
              "Type": "Uri"
            }
          ],
          "Name": "AuthenticateAndContinue"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "requestUri",
              "Type": "Uri"
            },
            {
              "Name": "callbackUri",
              "Type": "Uri"
            }
          ],
          "Name": "AuthenticateAndContinue"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "requestUri",
              "Type": "Uri"
            },
            {
              "Name": "callbackUri",
              "Type": "Uri"
            },
            {
              "Name": "continuationData",
              "Type": "ValueSet"
            },
            {
              "Name": "options",
              "Type": "WebAuthenticationOptions"
            }
          ],
          "Name": "AuthenticateAndContinue"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<WebAuthenticationResult>",
          "Parameters": [
            {
              "Name": "options",
              "Type": "WebAuthenticationOptions"
            },
            {
              "Name": "requestUri",
              "Type": "Uri"
            },
            {
              "Name": "callbackUri",
              "Type": "Uri"
            }
          ],
          "Name": "AuthenticateAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<WebAuthenticationResult>",
          "Parameters": [
            {
              "Name": "options",
              "Type": "WebAuthenticationOptions"
            },
            {
              "Name": "requestUri",
              "Type": "Uri"
            }
          ],
          "Name": "AuthenticateAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<WebAuthenticationResult>",
          "Parameters": [
            {
              "Name": "requestUri",
              "Type": "Uri"
            }
          ],
          "Name": "AuthenticateSilentlyAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<WebAuthenticationResult>",
          "Parameters": [
            {
              "Name": "requestUri",
              "Type": "Uri"
            },
            {
              "Name": "options",
              "Type": "WebAuthenticationOptions"
            }
          ],
          "Name": "AuthenticateSilentlyAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "Uri",
          "Name": "GetCurrentApplicationCallbackUri"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.WebAuthenticationBroker"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ResponseData"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "ResponseErrorDetail"
        },
        {
          "Type": "WebAuthenticationStatus",
          "IsGet": true,
          "Name": "ResponseStatus"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.WebAuthenticationResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "resource",
              "Type": "String"
            },
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "password",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Password"
        },
        {
          "Type": "IPropertySet",
          "IsGet": true,
          "Name": "Properties"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Resource"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "UserName"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "RetrievePassword"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Credentials.PasswordCredential"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,Object>>",
        "IDictionary<String,Object>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,Object>>",
        "IObservableMap<String,Object>",
        "IPropertySet"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "MapChangedEventHandler<String,Object>",
          "Name": "MapChanged"
        }
      ],
      "Name": "Windows.Security.Credentials.PasswordCredentialPropertyStore"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "credential",
              "Type": "PasswordCredential"
            }
          ],
          "Name": "Add"
        },
        {
          "ReturnType": "IReadOnlyList<PasswordCredential>",
          "Parameters": [
            {
              "Name": "resource",
              "Type": "String"
            }
          ],
          "Name": "FindAllByResource"
        },
        {
          "ReturnType": "IReadOnlyList<PasswordCredential>",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            }
          ],
          "Name": "FindAllByUserName"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "credential",
              "Type": "PasswordCredential"
            }
          ],
          "Name": "Remove"
        },
        {
          "ReturnType": "PasswordCredential",
          "Parameters": [
            {
              "Name": "resource",
              "Type": "String"
            },
            {
              "Name": "userName",
              "Type": "String"
            }
          ],
          "Name": "Retrieve"
        },
        {
          "ReturnType": "IReadOnlyList<PasswordCredential>",
          "Name": "RetrieveAll"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Credentials.PasswordVault"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebAccount"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "IReadOnlyDictionary<String,String>",
          "IsGet": true,
          "Name": "Properties"
        },
        {
          "Type": "WebAccountState",
          "IsGet": true,
          "Name": "State"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "UserName"
        },
        {
          "Type": "WebAccountProvider",
          "IsGet": true,
          "Name": "WebAccountProvider"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Credentials.WebAccount"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Authority"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayPurpose"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "Name": "Icon"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "IconUri"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Credentials.WebAccountProvider"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "certBlob",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "EnhancedKeyUsages"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "FriendlyName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasPrivateKey"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsStronglyProtected"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Issuer"
        },
        {
          "Type": "Byte[]",
          "IsGet": true,
          "Name": "SerialNumber"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Subject"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "ValidFrom"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "ValidTo"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<CertificateChain>",
          "Parameters": [
            {
              "Name": "certificates",
              "Type": "IEnumerable<Certificate>"
            }
          ],
          "Name": "BuildChainAsync"
        },
        {
          "ReturnType": "IAsyncOperation<CertificateChain>",
          "Parameters": [
            {
              "Name": "certificates",
              "Type": "IEnumerable<Certificate>"
            },
            {
              "Name": "parameters",
              "Type": "ChainBuildingParameters"
            }
          ],
          "Name": "BuildChainAsync"
        },
        {
          "ReturnType": "IBuffer",
          "Name": "GetCertificateBlob"
        },
        {
          "ReturnType": "Byte[]",
          "Name": "GetHashValue"
        },
        {
          "ReturnType": "Byte[]",
          "Parameters": [
            {
              "Name": "hashAlgorithmName",
              "Type": "String"
            }
          ],
          "Name": "GetHashValue"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.Certificate"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UserCertificateEnrollmentManager",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UserCertificateEnrollmentManager"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "request",
              "Type": "CertificateRequestProperties"
            }
          ],
          "Name": "CreateRequestAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pfxData",
              "Type": "String"
            },
            {
              "Name": "password",
              "Type": "String"
            },
            {
              "Name": "exportable",
              "Type": "ExportOption"
            },
            {
              "Name": "keyProtectionLevel",
              "Type": "KeyProtectionLevel"
            },
            {
              "Name": "installOption",
              "Type": "InstallOptions"
            },
            {
              "Name": "friendlyName",
              "Type": "String"
            },
            {
              "Name": "keyStorageProvider",
              "Type": "String"
            }
          ],
          "Name": "ImportPfxDataAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pfxData",
              "Type": "String"
            },
            {
              "Name": "password",
              "Type": "String"
            },
            {
              "Name": "exportable",
              "Type": "ExportOption"
            },
            {
              "Name": "keyProtectionLevel",
              "Type": "KeyProtectionLevel"
            },
            {
              "Name": "installOption",
              "Type": "InstallOptions"
            },
            {
              "Name": "friendlyName",
              "Type": "String"
            }
          ],
          "Name": "ImportPfxDataAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "certificate",
              "Type": "String"
            },
            {
              "Name": "installOption",
              "Type": "InstallOptions"
            }
          ],
          "Name": "InstallCertificateAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.CertificateEnrollmentManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IReadOnlyList<Certificate>",
          "Parameters": [
            {
              "Name": "includeRoot",
              "Type": "Boolean"
            }
          ],
          "Name": "GetCertificates"
        },
        {
          "ReturnType": "ChainValidationResult",
          "Name": "Validate"
        },
        {
          "ReturnType": "ChainValidationResult",
          "Parameters": [
            {
              "Name": "parameter",
              "Type": "ChainValidationParameters"
            }
          ],
          "Name": "Validate"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.CertificateChain"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "EnhancedKeyUsages"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "FriendlyName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "HardwareOnly"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "IssuerName"
        },
        {
          "Type": "Byte[]",
          "IsGet": true,
          "IsSet": true,
          "Name": "Thumbprint"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.CertificateQuery"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Certificate",
          "IsGet": true,
          "IsSet": true,
          "Name": "AttestationCredentialCertificate"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "CurveName"
        },
        {
          "Type": "Byte[]",
          "IsGet": true,
          "IsSet": true,
          "Name": "CurveParameters"
        },
        {
          "Type": "ExportOption",
          "IsGet": true,
          "IsSet": true,
          "Name": "Exportable"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "FriendlyName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "HashAlgorithmName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "KeyAlgorithmName"
        },
        {
          "Type": "KeyProtectionLevel",
          "IsGet": true,
          "IsSet": true,
          "Name": "KeyProtectionLevel"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "KeySize"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "KeyStorageProviderName"
        },
        {
          "Type": "EnrollKeyUsages",
          "IsGet": true,
          "IsSet": true,
          "Name": "KeyUsages"
        },
        {
          "Type": "Certificate",
          "IsGet": true,
          "IsSet": true,
          "Name": "SigningCertificate"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "SmartcardReaderName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Subject"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.CertificateRequestProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "certificate",
              "Type": "Certificate"
            }
          ],
          "Name": "Add"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "certificate",
              "Type": "Certificate"
            }
          ],
          "Name": "Delete"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.CertificateStore"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "CertificateStore",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IntermediateCertificationAuthorities"
        },
        {
          "Type": "CertificateStore",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TrustedRootCertificationAuthorities"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<Certificate>>",
          "Name": "FindAllAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<Certificate>>",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CertificateQuery"
            }
          ],
          "Name": "FindAllAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "CertificateStore",
          "Parameters": [
            {
              "Name": "storeName",
              "Type": "String"
            }
          ],
          "Name": "GetStoreByName"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.CertificateStores"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "inputBlob",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IReadOnlyList<Certificate>",
          "IsGet": true,
          "Name": "Certificates"
        },
        {
          "Type": "Byte[]",
          "IsGet": true,
          "Name": "Content"
        },
        {
          "Type": "IReadOnlyList<CmsSignerInfo>",
          "IsGet": true,
          "Name": "Signers"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IBuffer>",
          "Parameters": [
            {
              "Name": "data",
              "Type": "IBuffer"
            },
            {
              "Name": "signers",
              "Type": "IEnumerable<CmsSignerInfo>"
            },
            {
              "Name": "certificates",
              "Type": "IEnumerable<Certificate>"
            }
          ],
          "Name": "GenerateSignatureAsync"
        },
        {
          "ReturnType": "SignatureValidationResult",
          "Name": "VerifySignature"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.CmsAttachedSignature"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "inputBlob",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IReadOnlyList<Certificate>",
          "IsGet": true,
          "Name": "Certificates"
        },
        {
          "Type": "IReadOnlyList<CmsSignerInfo>",
          "IsGet": true,
          "Name": "Signers"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IBuffer>",
          "Parameters": [
            {
              "Name": "data",
              "Type": "IInputStream"
            },
            {
              "Name": "signers",
              "Type": "IEnumerable<CmsSignerInfo>"
            },
            {
              "Name": "certificates",
              "Type": "IEnumerable<Certificate>"
            }
          ],
          "Name": "GenerateSignatureAsync"
        },
        {
          "ReturnType": "IAsyncOperation<SignatureValidationResult>",
          "Parameters": [
            {
              "Name": "data",
              "Type": "IInputStream"
            }
          ],
          "Name": "VerifySignatureAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.CmsDetachedSignature"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Certificate",
          "IsGet": true,
          "IsSet": true,
          "Name": "Certificate"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "HashAlgorithmName"
        },
        {
          "Type": "CmsTimestampInfo",
          "IsGet": true,
          "Name": "TimestampInfo"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.CmsSignerInfo"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<Certificate>",
          "IsGet": true,
          "Name": "Certificates"
        },
        {
          "Type": "Certificate",
          "IsGet": true,
          "Name": "SigningCertificate"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.CmsTimestampInfo"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AuthorityInformationAccessEnabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "CurrentTimeValidationEnabled"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "EnhancedKeyUsages"
        },
        {
          "Type": "IList<Certificate>",
          "IsGet": true,
          "Name": "ExclusiveTrustRoots"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "NetworkRetrievalEnabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "RevocationCheckEnabled"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "ValidationTimestamp"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.ChainBuildingParameters"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "CertificateChainPolicy",
          "IsGet": true,
          "IsSet": true,
          "Name": "CertificateChainPolicy"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServerDnsName"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.ChainValidationParameters"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Dsa"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Ecdh"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Ecdh256"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Ecdh384"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Ecdh521"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Ecdsa"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Ecdsa256"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Ecdsa384"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Ecdsa521"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Rsa"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.KeyAlgorithmNames"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "credential",
              "Type": "String"
            }
          ],
          "Name": "DecryptTpmAttestationCredentialAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "credential",
              "Type": "String"
            }
          ],
          "Name": "GetTpmAttestationCredentialId"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.KeyAttestationHelper"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PlatformKeyStorageProvider"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SmartcardKeyStorageProvider"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SoftwareKeyStorageProvider"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.KeyStorageProviderNames"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "request",
              "Type": "CertificateRequestProperties"
            }
          ],
          "Name": "CreateRequestAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pfxData",
              "Type": "String"
            },
            {
              "Name": "password",
              "Type": "String"
            },
            {
              "Name": "exportable",
              "Type": "ExportOption"
            },
            {
              "Name": "keyProtectionLevel",
              "Type": "KeyProtectionLevel"
            },
            {
              "Name": "installOption",
              "Type": "InstallOptions"
            },
            {
              "Name": "friendlyName",
              "Type": "String"
            }
          ],
          "Name": "ImportPfxDataAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "pfxData",
              "Type": "String"
            },
            {
              "Name": "password",
              "Type": "String"
            },
            {
              "Name": "exportable",
              "Type": "ExportOption"
            },
            {
              "Name": "keyProtectionLevel",
              "Type": "KeyProtectionLevel"
            },
            {
              "Name": "installOption",
              "Type": "InstallOptions"
            },
            {
              "Name": "friendlyName",
              "Type": "String"
            },
            {
              "Name": "keyStorageProvider",
              "Type": "String"
            }
          ],
          "Name": "ImportPfxDataAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "certificate",
              "Type": "String"
            },
            {
              "Name": "installOption",
              "Type": "InstallOptions"
            }
          ],
          "Name": "InstallCertificateAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Certificates.UserCertificateEnrollmentManager"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DsaSha1"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DsaSha256"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EcdsaP256Sha256"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EcdsaP384Sha384"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EcdsaP521Sha512"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EcdsaSha256"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EcdsaSha384"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EcdsaSha512"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RsaOaepSha1"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RsaOaepSha256"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RsaOaepSha384"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RsaOaepSha512"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RsaPkcs1"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RsaSignPkcs1Sha1"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RsaSignPkcs1Sha256"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RsaSignPkcs1Sha384"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RsaSignPkcs1Sha512"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RsaSignPssSha1"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RsaSignPssSha256"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RsaSignPssSha384"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RsaSignPssSha512"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.AsymmetricAlgorithmNames"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AlgorithmName"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "CryptographicKey",
          "Parameters": [
            {
              "Name": "keySize",
              "Type": "UInt32"
            }
          ],
          "Name": "CreateKeyPair"
        },
        {
          "ReturnType": "CryptographicKey",
          "Parameters": [
            {
              "Name": "curveName",
              "Type": "String"
            }
          ],
          "Name": "CreateKeyPairWithCurveName"
        },
        {
          "ReturnType": "CryptographicKey",
          "Parameters": [
            {
              "Name": "parameters",
              "Type": "Byte[]"
            }
          ],
          "Name": "CreateKeyPairWithCurveParameters"
        },
        {
          "ReturnType": "CryptographicKey",
          "Parameters": [
            {
              "Name": "keyBlob",
              "Type": "IBuffer"
            }
          ],
          "Name": "ImportKeyPair"
        },
        {
          "ReturnType": "CryptographicKey",
          "Parameters": [
            {
              "Name": "keyBlob",
              "Type": "IBuffer"
            },
            {
              "Name": "BlobType",
              "Type": "CryptographicPrivateKeyBlobType"
            }
          ],
          "Name": "ImportKeyPair"
        },
        {
          "ReturnType": "CryptographicKey",
          "Parameters": [
            {
              "Name": "keyBlob",
              "Type": "IBuffer"
            }
          ],
          "Name": "ImportPublicKey"
        },
        {
          "ReturnType": "CryptographicKey",
          "Parameters": [
            {
              "Name": "keyBlob",
              "Type": "IBuffer"
            },
            {
              "Name": "BlobType",
              "Type": "CryptographicPublicKeyBlobType"
            }
          ],
          "Name": "ImportPublicKey"
        },
        {
          "IsStatic": true,
          "ReturnType": "AsymmetricKeyAlgorithmProvider",
          "Parameters": [
            {
              "Name": "algorithm",
              "Type": "String"
            }
          ],
          "Name": "OpenAlgorithm"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.AsymmetricKeyAlgorithmProvider"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "key",
              "Type": "CryptographicKey"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            },
            {
              "Name": "iv",
              "Type": "IBuffer"
            }
          ],
          "Name": "Decrypt"
        },
        {
          "IsStatic": true,
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "key",
              "Type": "CryptographicKey"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            },
            {
              "Name": "nonce",
              "Type": "IBuffer"
            },
            {
              "Name": "authenticationTag",
              "Type": "IBuffer"
            },
            {
              "Name": "authenticatedData",
              "Type": "IBuffer"
            }
          ],
          "Name": "DecryptAndAuthenticate"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IBuffer>",
          "Parameters": [
            {
              "Name": "key",
              "Type": "CryptographicKey"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            },
            {
              "Name": "iv",
              "Type": "IBuffer"
            }
          ],
          "Name": "DecryptAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "key",
              "Type": "CryptographicKey"
            },
            {
              "Name": "parameters",
              "Type": "KeyDerivationParameters"
            },
            {
              "Name": "desiredKeySize",
              "Type": "UInt32"
            }
          ],
          "Name": "DeriveKeyMaterial"
        },
        {
          "IsStatic": true,
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "key",
              "Type": "CryptographicKey"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            },
            {
              "Name": "iv",
              "Type": "IBuffer"
            }
          ],
          "Name": "Encrypt"
        },
        {
          "IsStatic": true,
          "ReturnType": "EncryptedAndAuthenticatedData",
          "Parameters": [
            {
              "Name": "key",
              "Type": "CryptographicKey"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            },
            {
              "Name": "nonce",
              "Type": "IBuffer"
            },
            {
              "Name": "authenticatedData",
              "Type": "IBuffer"
            }
          ],
          "Name": "EncryptAndAuthenticate"
        },
        {
          "IsStatic": true,
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "key",
              "Type": "CryptographicKey"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ],
          "Name": "Sign"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IBuffer>",
          "Parameters": [
            {
              "Name": "key",
              "Type": "CryptographicKey"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ],
          "Name": "SignAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "key",
              "Type": "CryptographicKey"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ],
          "Name": "SignHashedData"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IBuffer>",
          "Parameters": [
            {
              "Name": "key",
              "Type": "CryptographicKey"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ],
          "Name": "SignHashedDataAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "key",
              "Type": "CryptographicKey"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            },
            {
              "Name": "signature",
              "Type": "IBuffer"
            }
          ],
          "Name": "VerifySignature"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "key",
              "Type": "CryptographicKey"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            },
            {
              "Name": "signature",
              "Type": "IBuffer"
            }
          ],
          "Name": "VerifySignatureWithHashInput"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.CryptographicEngine"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ],
          "Name": "Append"
        },
        {
          "ReturnType": "IBuffer",
          "Name": "GetValueAndReset"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.CryptographicHash"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "KeyName"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "KeySize"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "UniqueId"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IBuffer",
          "Name": "Export"
        },
        {
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "BlobType",
              "Type": "CryptographicPrivateKeyBlobType"
            }
          ],
          "Name": "Export"
        },
        {
          "ReturnType": "IBuffer",
          "Name": "ExportPublicKey"
        },
        {
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "BlobType",
              "Type": "CryptographicPublicKeyBlobType"
            }
          ],
          "Name": "ExportPublicKey"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.CryptographicKey"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<String>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AllEccCurveNames"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NistP256"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NistP384"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NistP521"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Secp256k1"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Secp256r1"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Secp384r1"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Secp521r1"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "X962P192v1"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "X962P192v2"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "X962P192v3"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "X962P192v4"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "X962P239v1"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "X962P239v2"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "X962P239v3"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "X962P256v1"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.EccCurveNames"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "AuthenticationTag"
        },
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "EncryptedData"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.EncryptedAndAuthenticatedData"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Md5"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Sha1"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Sha256"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Sha384"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Sha512"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.HashAlgorithmNames"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AlgorithmName"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "HashLength"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "CryptographicHash",
          "Name": "CreateHash"
        },
        {
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ],
          "Name": "HashData"
        },
        {
          "IsStatic": true,
          "ReturnType": "HashAlgorithmProvider",
          "Parameters": [
            {
              "Name": "algorithm",
              "Type": "String"
            }
          ],
          "Name": "OpenAlgorithm"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.HashAlgorithmProvider"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Pbkdf2Md5"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Pbkdf2Sha1"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Pbkdf2Sha256"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Pbkdf2Sha384"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Pbkdf2Sha512"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Sp800108CtrHmacMd5"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Sp800108CtrHmacSha1"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Sp800108CtrHmacSha256"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Sp800108CtrHmacSha384"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Sp800108CtrHmacSha512"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Sp80056aConcatMd5"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Sp80056aConcatSha1"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Sp80056aConcatSha256"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Sp80056aConcatSha384"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Sp80056aConcatSha512"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.KeyDerivationAlgorithmNames"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AlgorithmName"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "CryptographicKey",
          "Parameters": [
            {
              "Name": "keyMaterial",
              "Type": "IBuffer"
            }
          ],
          "Name": "CreateKey"
        },
        {
          "IsStatic": true,
          "ReturnType": "KeyDerivationAlgorithmProvider",
          "Parameters": [
            {
              "Name": "algorithm",
              "Type": "String"
            }
          ],
          "Name": "OpenAlgorithm"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.KeyDerivationAlgorithmProvider"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "IterationCount"
        },
        {
          "Type": "IBuffer",
          "IsGet": true,
          "IsSet": true,
          "Name": "KdfGenericBinary"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "KeyDerivationParameters",
          "Parameters": [
            {
              "Name": "pbkdf2Salt",
              "Type": "IBuffer"
            },
            {
              "Name": "iterationCount",
              "Type": "UInt32"
            }
          ],
          "Name": "BuildForPbkdf2"
        },
        {
          "IsStatic": true,
          "ReturnType": "KeyDerivationParameters",
          "Parameters": [
            {
              "Name": "label",
              "Type": "IBuffer"
            },
            {
              "Name": "context",
              "Type": "IBuffer"
            }
          ],
          "Name": "BuildForSP800108"
        },
        {
          "IsStatic": true,
          "ReturnType": "KeyDerivationParameters",
          "Parameters": [
            {
              "Name": "algorithmId",
              "Type": "IBuffer"
            },
            {
              "Name": "partyUInfo",
              "Type": "IBuffer"
            },
            {
              "Name": "partyVInfo",
              "Type": "IBuffer"
            },
            {
              "Name": "suppPubInfo",
              "Type": "IBuffer"
            },
            {
              "Name": "suppPrivInfo",
              "Type": "IBuffer"
            }
          ],
          "Name": "BuildForSP80056a"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.KeyDerivationParameters"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AesCmac"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HmacMd5"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HmacSha1"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HmacSha256"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HmacSha384"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HmacSha512"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.MacAlgorithmNames"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AlgorithmName"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MacLength"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "CryptographicHash",
          "Parameters": [
            {
              "Name": "keyMaterial",
              "Type": "IBuffer"
            }
          ],
          "Name": "CreateHash"
        },
        {
          "ReturnType": "CryptographicKey",
          "Parameters": [
            {
              "Name": "keyMaterial",
              "Type": "IBuffer"
            }
          ],
          "Name": "CreateKey"
        },
        {
          "IsStatic": true,
          "ReturnType": "MacAlgorithmProvider",
          "Parameters": [
            {
              "Name": "algorithm",
              "Type": "String"
            }
          ],
          "Name": "OpenAlgorithm"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.MacAlgorithmProvider"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<CryptographicKey>",
          "Parameters": [
            {
              "Name": "certificate",
              "Type": "Certificate"
            },
            {
              "Name": "hashAlgorithmName",
              "Type": "String"
            },
            {
              "Name": "padding",
              "Type": "CryptographicPadding"
            }
          ],
          "Name": "OpenKeyPairFromCertificateAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "CryptographicKey",
          "Parameters": [
            {
              "Name": "certificate",
              "Type": "Certificate"
            },
            {
              "Name": "hashAlgorithmName",
              "Type": "String"
            },
            {
              "Name": "padding",
              "Type": "CryptographicPadding"
            }
          ],
          "Name": "OpenPublicKeyFromCertificate"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.PersistedKeyProvider"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AesCbc"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AesCbcPkcs7"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AesCcm"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AesEcb"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AesEcbPkcs7"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AesGcm"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DesCbc"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DesCbcPkcs7"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DesEcb"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DesEcbPkcs7"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Rc2Cbc"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Rc2CbcPkcs7"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Rc2Ecb"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Rc2EcbPkcs7"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Rc4"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TripleDesCbc"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TripleDesCbcPkcs7"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TripleDesEcb"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TripleDesEcbPkcs7"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.SymmetricAlgorithmNames"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AlgorithmName"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "BlockLength"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "CryptographicKey",
          "Parameters": [
            {
              "Name": "keyMaterial",
              "Type": "IBuffer"
            }
          ],
          "Name": "CreateSymmetricKey"
        },
        {
          "IsStatic": true,
          "ReturnType": "SymmetricKeyAlgorithmProvider",
          "Parameters": [
            {
              "Name": "algorithm",
              "Type": "String"
            }
          ],
          "Name": "OpenAlgorithm"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.Core.SymmetricKeyAlgorithmProvider"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "object1",
              "Type": "IBuffer"
            },
            {
              "Name": "object2",
              "Type": "IBuffer"
            }
          ],
          "Name": "Compare"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "encoding",
              "Type": "BinaryStringEncoding"
            },
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "ConvertBinaryToString"
        },
        {
          "IsStatic": true,
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "encoding",
              "Type": "BinaryStringEncoding"
            }
          ],
          "Name": "ConvertStringToBinary"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "value",
              "Type": "Byte[]&",
              "Out": true
            }
          ],
          "Name": "CopyToByteArray"
        },
        {
          "IsStatic": true,
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]"
            }
          ],
          "Name": "CreateFromByteArray"
        },
        {
          "IsStatic": true,
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "DecodeFromBase64String"
        },
        {
          "IsStatic": true,
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "DecodeFromHexString"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "EncodeToBase64String"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "EncodeToHexString"
        },
        {
          "IsStatic": true,
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "length",
              "Type": "UInt32"
            }
          ],
          "Name": "GenerateRandom"
        },
        {
          "IsStatic": true,
          "ReturnType": "UInt32",
          "Name": "GenerateRandomNumber"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.CryptographicBuffer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "protectionDescriptor",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IBuffer>",
          "Parameters": [
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ],
          "Name": "ProtectAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "src",
              "Type": "IInputStream"
            },
            {
              "Name": "dest",
              "Type": "IOutputStream"
            }
          ],
          "Name": "ProtectStreamAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IBuffer>",
          "Parameters": [
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ],
          "Name": "UnprotectAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "src",
              "Type": "IInputStream"
            },
            {
              "Name": "dest",
              "Type": "IOutputStream"
            }
          ],
          "Name": "UnprotectStreamAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Cryptography.DataProtection.DataProtectionProvider"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "FriendlyName"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "OperatingSystem"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "SystemFirmwareVersion"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "SystemHardwareVersion"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "SystemManufacturer"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "SystemProductName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "SystemSku"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.ExchangeActiveSyncProvisioning.EasClientDeviceInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "BuildingFloor"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "BuildingName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "BuildingRoom"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "BuildingWing"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Continent"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Country"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "CountryCode"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "District"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Neighborhood"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "PostCode"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Region"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RegionCode"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Street"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "StreetNumber"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Town"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.MapAddress"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MapAddress",
          "IsGet": true,
          "Name": "Address"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Description"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "Geopoint",
          "IsGet": true,
          "Name": "Point"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.MapLocation"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapLocationFinderResult>",
          "Parameters": [
            {
              "Name": "searchText",
              "Type": "String"
            },
            {
              "Name": "referencePoint",
              "Type": "Geopoint"
            }
          ],
          "Name": "FindLocationsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapLocationFinderResult>",
          "Parameters": [
            {
              "Name": "searchText",
              "Type": "String"
            },
            {
              "Name": "referencePoint",
              "Type": "Geopoint"
            },
            {
              "Name": "maxCount",
              "Type": "UInt32"
            }
          ],
          "Name": "FindLocationsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapLocationFinderResult>",
          "Parameters": [
            {
              "Name": "queryPoint",
              "Type": "Geopoint"
            }
          ],
          "Name": "FindLocationsAtAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Services.Maps.MapLocationFinder"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<MapLocation>",
          "IsGet": true,
          "Name": "Locations"
        },
        {
          "Type": "MapLocationFinderStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.MapLocationFinderResult"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "ShowDownloadedMapsUI"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "ShowMapsUpdateUI"
        }
      ],
      "Events": [],
      "Name": "Windows.Services.Maps.MapManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "GeoboundingBox",
          "IsGet": true,
          "Name": "BoundingBox"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "EstimatedDuration"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsTrafficBased"
        },
        {
          "Type": "IReadOnlyList<MapRouteLeg>",
          "IsGet": true,
          "Name": "Legs"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "LengthInMeters"
        },
        {
          "Type": "Geopath",
          "IsGet": true,
          "Name": "Path"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.MapRoute"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "startPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "endPoint",
              "Type": "Geopoint"
            }
          ],
          "Name": "GetDrivingRouteAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "startPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "endPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "optimization",
              "Type": "MapRouteOptimization"
            }
          ],
          "Name": "GetDrivingRouteAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "startPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "endPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "optimization",
              "Type": "MapRouteOptimization"
            },
            {
              "Name": "restrictions",
              "Type": "MapRouteRestrictions"
            }
          ],
          "Name": "GetDrivingRouteAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "startPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "endPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "optimization",
              "Type": "MapRouteOptimization"
            },
            {
              "Name": "restrictions",
              "Type": "MapRouteRestrictions"
            },
            {
              "Name": "headingInDegrees",
              "Type": "Double"
            }
          ],
          "Name": "GetDrivingRouteAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "wayPoints",
              "Type": "IEnumerable<Geopoint>"
            }
          ],
          "Name": "GetDrivingRouteFromWaypointsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "wayPoints",
              "Type": "IEnumerable<Geopoint>"
            },
            {
              "Name": "optimization",
              "Type": "MapRouteOptimization"
            }
          ],
          "Name": "GetDrivingRouteFromWaypointsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "wayPoints",
              "Type": "IEnumerable<Geopoint>"
            },
            {
              "Name": "optimization",
              "Type": "MapRouteOptimization"
            },
            {
              "Name": "restrictions",
              "Type": "MapRouteRestrictions"
            }
          ],
          "Name": "GetDrivingRouteFromWaypointsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "wayPoints",
              "Type": "IEnumerable<Geopoint>"
            },
            {
              "Name": "optimization",
              "Type": "MapRouteOptimization"
            },
            {
              "Name": "restrictions",
              "Type": "MapRouteRestrictions"
            },
            {
              "Name": "headingInDegrees",
              "Type": "Double"
            }
          ],
          "Name": "GetDrivingRouteFromWaypointsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "startPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "endPoint",
              "Type": "Geopoint"
            }
          ],
          "Name": "GetWalkingRouteAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "wayPoints",
              "Type": "IEnumerable<Geopoint>"
            }
          ],
          "Name": "GetWalkingRouteFromWaypointsAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Services.Maps.MapRouteFinder"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MapRoute",
          "IsGet": true,
          "Name": "Route"
        },
        {
          "Type": "MapRouteFinderStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.MapRouteFinderResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "GeoboundingBox",
          "IsGet": true,
          "Name": "BoundingBox"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "EstimatedDuration"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "LengthInMeters"
        },
        {
          "Type": "IReadOnlyList<MapRouteManeuver>",
          "IsGet": true,
          "Name": "Maneuvers"
        },
        {
          "Type": "Geopath",
          "IsGet": true,
          "Name": "Path"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.MapRouteLeg"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ExitNumber"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "InstructionText"
        },
        {
          "Type": "MapRouteManeuverKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "LengthInMeters"
        },
        {
          "Type": "MapManeuverNotices",
          "IsGet": true,
          "Name": "ManeuverNotices"
        },
        {
          "Type": "Geopoint",
          "IsGet": true,
          "Name": "StartingPoint"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.MapRouteManeuver"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true,
          "Name": "ServiceToken"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.MapService"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<AccessListEntry>",
        "IReadOnlyCollection<AccessListEntry>",
        "IReadOnlyList<AccessListEntry>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.AccessCache.AccessListEntryView"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AccessListEntry",
          "IsGet": true,
          "Name": "RemovedEntry"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.AccessCache.ItemRemovedEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "StorageItemAccessList",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FutureAccessList"
        },
        {
          "Type": "StorageItemMostRecentlyUsedList",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MostRecentlyUsedList"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.AccessCache.StorageApplicationPermissions"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStorageItemAccessList"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AccessListEntryView",
          "IsGet": true,
          "Name": "Entries"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MaximumItemsAllowed"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageItem"
            }
          ],
          "Name": "Add"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageItem"
            },
            {
              "Name": "metadata",
              "Type": "String"
            }
          ],
          "Name": "Add"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "file",
              "Type": "IStorageItem"
            }
          ],
          "Name": "AddOrReplace"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "file",
              "Type": "IStorageItem"
            },
            {
              "Name": "metadata",
              "Type": "String"
            }
          ],
          "Name": "AddOrReplace"
        },
        {
          "ReturnType": "Void",
          "Name": "Clear"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ],
          "Name": "ContainsItem"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ],
          "Name": "GetFileAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "AccessCacheOptions"
            }
          ],
          "Name": "GetFileAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ],
          "Name": "GetFolderAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "AccessCacheOptions"
            }
          ],
          "Name": "GetFolderAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IStorageItem>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ],
          "Name": "GetItemAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IStorageItem>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "AccessCacheOptions"
            }
          ],
          "Name": "GetItemAsync"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageItem"
            }
          ],
          "Name": "CheckAccess"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ],
          "Name": "Remove"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.AccessCache.StorageItemAccessList"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStorageItemAccessList"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AccessListEntryView",
          "IsGet": true,
          "Name": "Entries"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MaximumItemsAllowed"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageItem"
            }
          ],
          "Name": "Add"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageItem"
            },
            {
              "Name": "metadata",
              "Type": "String"
            }
          ],
          "Name": "Add"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "file",
              "Type": "IStorageItem"
            }
          ],
          "Name": "AddOrReplace"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "file",
              "Type": "IStorageItem"
            },
            {
              "Name": "metadata",
              "Type": "String"
            }
          ],
          "Name": "AddOrReplace"
        },
        {
          "ReturnType": "Void",
          "Name": "Clear"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ],
          "Name": "ContainsItem"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ],
          "Name": "GetFileAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "AccessCacheOptions"
            }
          ],
          "Name": "GetFileAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ],
          "Name": "GetFolderAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "AccessCacheOptions"
            }
          ],
          "Name": "GetFolderAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IStorageItem>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ],
          "Name": "GetItemAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IStorageItem>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "AccessCacheOptions"
            }
          ],
          "Name": "GetItemAsync"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageItem"
            }
          ],
          "Name": "CheckAccess"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ],
          "Name": "Remove"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<StorageItemMostRecentlyUsedList,ItemRemovedEventArgs>",
          "Name": "ItemRemoved"
        }
      ],
      "Name": "Windows.Storage.AccessCache.StorageItemMostRecentlyUsedList"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ApplicationData",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Current"
        },
        {
          "Type": "StorageFolder",
          "IsGet": true,
          "Name": "LocalCacheFolder"
        },
        {
          "Type": "StorageFolder",
          "IsGet": true,
          "Name": "LocalFolder"
        },
        {
          "Type": "ApplicationDataContainer",
          "IsGet": true,
          "Name": "LocalSettings"
        },
        {
          "Type": "StorageFolder",
          "IsGet": true,
          "Name": "RoamingFolder"
        },
        {
          "Type": "ApplicationDataContainer",
          "IsGet": true,
          "Name": "RoamingSettings"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "RoamingStorageQuota"
        },
        {
          "Type": "StorageFolder",
          "IsGet": true,
          "Name": "TemporaryFolder"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Version"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Name": "ClearAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "locality",
              "Type": "ApplicationDataLocality"
            }
          ],
          "Name": "ClearAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperationWithProgress<ApplicationData,UInt32>",
          "Parameters": [
            {
              "Name": "user",
              "Type": "User"
            }
          ],
          "Name": "ForUserAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "desiredVersion",
              "Type": "UInt32"
            },
            {
              "Name": "handler",
              "Type": "ApplicationDataSetVersionHandler"
            }
          ],
          "Name": "SetVersionAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "SignalDataChanged"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<ApplicationData,Object>",
          "Name": "DataChanged"
        }
      ],
      "Name": "Windows.Storage.ApplicationData"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,Object>>",
        "IDictionary<String,Object>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,Object>>",
        "IObservableMap<String,Object>",
        "IPropertySet"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "MapChangedEventHandler<String,Object>",
          "Name": "MapChanged"
        }
      ],
      "Name": "Windows.Storage.ApplicationDataCompositeValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyDictionary<String,ApplicationDataContainer>",
          "IsGet": true,
          "Name": "Containers"
        },
        {
          "Type": "ApplicationDataLocality",
          "IsGet": true,
          "Name": "Locality"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "IPropertySet",
          "IsGet": true,
          "Name": "Values"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "ApplicationDataContainer",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "disposition",
              "Type": "ApplicationDataCreateDisposition"
            }
          ],
          "Name": "CreateContainer"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "DeleteContainer"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.ApplicationDataContainer"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,Object>>",
        "IDictionary<String,Object>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,Object>>",
        "IObservableMap<String,Object>",
        "IPropertySet"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "MapChangedEventHandler<String,Object>",
          "Name": "MapChanged"
        }
      ],
      "Name": "Windows.Storage.ApplicationDataContainerSettings"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<FileUpdateStatus>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ],
          "Name": "CompleteUpdatesAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ],
          "Name": "DeferUpdates"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.CachedFileManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IOutputStream"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "underlyingStream",
              "Type": "IOutputStream"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "underlyingStream",
              "Type": "IOutputStream"
            },
            {
              "Name": "algorithm",
              "Type": "CompressAlgorithm"
            },
            {
              "Name": "blockSize",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IOutputStream",
          "Name": "DetachStream"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Name": "FinishAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Name": "FlushAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "WriteAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Compression.Compressor"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IInputStream"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "underlyingStream",
              "Type": "IInputStream"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IInputStream",
          "Name": "DetachStream"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "InputStreamOptions"
            }
          ],
          "Name": "ReadAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Compression.Decompressor"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "lines",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "AppendLinesAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "lines",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ],
          "Name": "AppendLinesAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "contents",
              "Type": "String"
            }
          ],
          "Name": "AppendTextAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "contents",
              "Type": "String"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ],
          "Name": "AppendTextAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IBuffer>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ],
          "Name": "ReadBufferAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IList<String>>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ],
          "Name": "ReadLinesAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IList<String>>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ],
          "Name": "ReadLinesAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ],
          "Name": "ReadTextAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ],
          "Name": "ReadTextAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "WriteBufferAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "buffer",
              "Type": "Byte[]"
            }
          ],
          "Name": "WriteBytesAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "lines",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "WriteLinesAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "lines",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ],
          "Name": "WriteLinesAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "contents",
              "Type": "String"
            }
          ],
          "Name": "WriteTextAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "contents",
              "Type": "String"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ],
          "Name": "WriteTextAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.FileIO"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStorageItemExtraProperties"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "DateModified"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "ItemDate"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IDictionary<String,Object>>",
          "Parameters": [
            {
              "Name": "propertiesToRetrieve",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "RetrievePropertiesAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "propertiesToSave",
              "Type": "IEnumerable<KeyValuePair<String,Object>>"
            }
          ],
          "Name": "SavePropertiesAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "SavePropertiesAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.FileProperties.BasicProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStorageItemExtraProperties"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "Author"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Comment"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "Keywords"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IDictionary<String,Object>>",
          "Parameters": [
            {
              "Name": "propertiesToRetrieve",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "RetrievePropertiesAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "propertiesToSave",
              "Type": "IEnumerable<KeyValuePair<String,Object>>"
            }
          ],
          "Name": "SavePropertiesAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "SavePropertiesAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.FileProperties.DocumentProperties"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Geopoint>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ],
          "Name": "GetGeotagAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "geopoint",
              "Type": "Geopoint"
            }
          ],
          "Name": "SetGeotagAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "geolocator",
              "Type": "Geolocator"
            }
          ],
          "Name": "SetGeotagFromGeolocatorAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.FileProperties.GeotagHelper"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStorageItemExtraProperties"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "CameraManufacturer"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "CameraModel"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "DateTaken"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Height"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "Keywords"
        },
        {
          "Type": "Nullable<Double>",
          "IsGet": true,
          "Name": "Latitude"
        },
        {
          "Type": "Nullable<Double>",
          "IsGet": true,
          "Name": "Longitude"
        },
        {
          "Type": "PhotoOrientation",
          "IsGet": true,
          "Name": "Orientation"
        },
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "PeopleNames"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Rating"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Width"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IDictionary<String,Object>>",
          "Parameters": [
            {
              "Name": "propertiesToRetrieve",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "RetrievePropertiesAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "propertiesToSave",
              "Type": "IEnumerable<KeyValuePair<String,Object>>"
            }
          ],
          "Name": "SavePropertiesAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "SavePropertiesAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.FileProperties.ImageProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStorageItemExtraProperties"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Album"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "AlbumArtist"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Artist"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Bitrate"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "Composers"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "Conductors"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "Duration"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "Genre"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "Producers"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Publisher"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Rating"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Subtitle"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "TrackNumber"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "Writers"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Year"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IDictionary<String,Object>>",
          "Parameters": [
            {
              "Name": "propertiesToRetrieve",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "RetrievePropertiesAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "propertiesToSave",
              "Type": "IEnumerable<KeyValuePair<String,Object>>"
            }
          ],
          "Name": "SavePropertiesAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "SavePropertiesAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.FileProperties.MusicProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStorageItemExtraProperties"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<DocumentProperties>",
          "Name": "GetDocumentPropertiesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<ImageProperties>",
          "Name": "GetImagePropertiesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<MusicProperties>",
          "Name": "GetMusicPropertiesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<VideoProperties>",
          "Name": "GetVideoPropertiesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IDictionary<String,Object>>",
          "Parameters": [
            {
              "Name": "propertiesToRetrieve",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "RetrievePropertiesAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "propertiesToSave",
              "Type": "IEnumerable<KeyValuePair<String,Object>>"
            }
          ],
          "Name": "SavePropertiesAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "SavePropertiesAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.FileProperties.StorageItemContentProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IContentTypeProvider",
        "IDisposable",
        "IInputStream",
        "IOutputStream",
        "IRandomAccessStream",
        "IRandomAccessStreamWithContentType"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanRead"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanWrite"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ContentType"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "OriginalHeight"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "OriginalWidth"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "Position"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "ReturnedSmallerCachedSize"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "IsSet": true,
          "Name": "Size"
        },
        {
          "Type": "ThumbnailType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IRandomAccessStream",
          "Name": "CloneStream"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Name": "FlushAsync"
        },
        {
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "GetInputStreamAt"
        },
        {
          "ReturnType": "IOutputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "GetOutputStreamAt"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "InputStreamOptions"
            }
          ],
          "Name": "ReadAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "Seek"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "WriteAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.FileProperties.StorageItemThumbnail"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStorageItemExtraProperties"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Bitrate"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "Directors"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "Duration"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Height"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "Keywords"
        },
        {
          "Type": "Nullable<Double>",
          "IsGet": true,
          "Name": "Latitude"
        },
        {
          "Type": "Nullable<Double>",
          "IsGet": true,
          "Name": "Longitude"
        },
        {
          "Type": "VideoOrientation",
          "IsGet": true,
          "Name": "Orientation"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "Producers"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Publisher"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Rating"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Subtitle"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Width"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "Writers"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Year"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IDictionary<String,Object>>",
          "Parameters": [
            {
              "Name": "propertiesToRetrieve",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "RetrievePropertiesAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "propertiesToSave",
              "Type": "IEnumerable<KeyValuePair<String,Object>>"
            }
          ],
          "Name": "SavePropertiesAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "SavePropertiesAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.FileProperties.VideoProperties"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "StorageFolder",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CameraRoll"
        },
        {
          "Type": "StorageFolder",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DocumentsLibrary"
        },
        {
          "Type": "StorageFolder",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HomeGroup"
        },
        {
          "Type": "StorageFolder",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MediaServerDevices"
        },
        {
          "Type": "StorageFolder",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MusicLibrary"
        },
        {
          "Type": "StorageFolder",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PicturesLibrary"
        },
        {
          "Type": "StorageFolder",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RemovableDevices"
        },
        {
          "Type": "StorageFolder",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SavedPictures"
        },
        {
          "Type": "StorageFolder",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VideosLibrary"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.KnownFolders"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            },
            {
              "Name": "lines",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "AppendLinesAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            },
            {
              "Name": "lines",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ],
          "Name": "AppendLinesAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            },
            {
              "Name": "contents",
              "Type": "String"
            }
          ],
          "Name": "AppendTextAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            },
            {
              "Name": "contents",
              "Type": "String"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ],
          "Name": "AppendTextAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IBuffer>",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            }
          ],
          "Name": "ReadBufferAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IList<String>>",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            }
          ],
          "Name": "ReadLinesAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IList<String>>",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ],
          "Name": "ReadLinesAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            }
          ],
          "Name": "ReadTextAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ],
          "Name": "ReadTextAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            },
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "WriteBufferAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            },
            {
              "Name": "buffer",
              "Type": "Byte[]"
            }
          ],
          "Name": "WriteBytesAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            },
            {
              "Name": "lines",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "WriteLinesAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            },
            {
              "Name": "lines",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ],
          "Name": "WriteLinesAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            },
            {
              "Name": "contents",
              "Type": "String"
            }
          ],
          "Name": "WriteTextAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "absolutePath",
              "Type": "String"
            },
            {
              "Name": "contents",
              "Type": "String"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ],
          "Name": "WriteTextAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.PathIO"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<String>",
        "IEnumerable",
        "IEnumerable<String>",
        "IList<String>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Pickers.FileExtensionVector"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "CommitButtonText"
        },
        {
          "Type": "ValueSet",
          "IsGet": true,
          "Name": "ContinuationData"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "FileTypeFilter"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "SettingsIdentifier"
        },
        {
          "Type": "PickerLocationId",
          "IsGet": true,
          "IsSet": true,
          "Name": "SuggestedStartLocation"
        },
        {
          "Type": "PickerViewMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "ViewMode"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "PickMultipleFilesAndContinue"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFile>>",
          "Name": "PickMultipleFilesAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "PickSingleFileAndContinue"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Name": "PickSingleFileAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "pickerOperationId",
              "Type": "String"
            }
          ],
          "Name": "PickSingleFileAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Name": "ResumePickSingleFileAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Pickers.FileOpenPicker"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,IList<String>>>",
        "IDictionary<String,IList<String>>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,IList<String>>>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Pickers.FilePickerFileTypesOrderedMap"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<StorageFile>",
        "IReadOnlyCollection<StorageFile>",
        "IReadOnlyList<StorageFile>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Pickers.FilePickerSelectedFilesArray"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "CommitButtonText"
        },
        {
          "Type": "ValueSet",
          "IsGet": true,
          "Name": "ContinuationData"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DefaultFileExtension"
        },
        {
          "Type": "IDictionary<String,IList<String>>",
          "IsGet": true,
          "Name": "FileTypeChoices"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "SettingsIdentifier"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "SuggestedFileName"
        },
        {
          "Type": "StorageFile",
          "IsGet": true,
          "IsSet": true,
          "Name": "SuggestedSaveFile"
        },
        {
          "Type": "PickerLocationId",
          "IsGet": true,
          "IsSet": true,
          "Name": "SuggestedStartLocation"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "PickSaveFileAndContinue"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Name": "PickSaveFileAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Pickers.FileSavePicker"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "CommitButtonText"
        },
        {
          "Type": "ValueSet",
          "IsGet": true,
          "Name": "ContinuationData"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "FileTypeFilter"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "SettingsIdentifier"
        },
        {
          "Type": "PickerLocationId",
          "IsGet": true,
          "IsSet": true,
          "Name": "SuggestedStartLocation"
        },
        {
          "Type": "PickerViewMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "ViewMode"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "PickFolderAndContinue"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Name": "PickSingleFolderAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Pickers.FolderPicker"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "AllowedFileTypes"
        },
        {
          "Type": "FileSelectionMode",
          "IsGet": true,
          "Name": "SelectionMode"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "SettingsIdentifier"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "AddFileResult",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            },
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ],
          "Name": "AddFile"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ],
          "Name": "CanAddFile"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ],
          "Name": "ContainsFile"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "id",
              "Type": "String"
            }
          ],
          "Name": "RemoveFile"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<FileOpenPickerUI,PickerClosingEventArgs>",
          "Name": "Closing"
        },
        {
          "Type": "TypedEventHandler<FileOpenPickerUI,FileRemovedEventArgs>",
          "Name": "FileRemoved"
        }
      ],
      "Name": "Windows.Storage.Pickers.Provider.FileOpenPickerUI"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Pickers.Provider.FileRemovedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "AllowedFileTypes"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "FileName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "SettingsIdentifier"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "SetFileNameResult",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "TrySetFileName"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<FileSavePickerUI,Object>",
          "Name": "FileNameChanged"
        },
        {
          "Type": "TypedEventHandler<FileSavePickerUI,TargetFileRequestedEventArgs>",
          "Name": "TargetFileRequested"
        }
      ],
      "Name": "Windows.Storage.Pickers.Provider.FileSavePickerUI"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Pickers.Provider.PickerClosingDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PickerClosingOperation",
          "IsGet": true,
          "Name": "ClosingOperation"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsCanceled"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Pickers.Provider.PickerClosingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Deadline"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "PickerClosingDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Pickers.Provider.PickerClosingOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IStorageFile",
          "IsGet": true,
          "IsSet": true,
          "Name": "TargetFile"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "TargetFileRequestDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Pickers.Provider.TargetFileRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Pickers.Provider.TargetFileRequestDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TargetFileRequest",
          "IsGet": true,
          "Name": "Request"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Pickers.Provider.TargetFileRequestedEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "contentId",
              "Type": "String"
            },
            {
              "Name": "readMode",
              "Type": "ReadActivationMode"
            },
            {
              "Name": "writeMode",
              "Type": "WriteActivationMode"
            },
            {
              "Name": "options",
              "Type": "CachedFileOptions"
            }
          ],
          "Name": "SetUpdateInformation"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Provider.CachedFileUpdater"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        },
        {
          "Type": "UIStatus",
          "IsGet": true,
          "Name": "UIStatus"
        },
        {
          "Type": "FileUpdateRequest",
          "IsGet": true,
          "Name": "UpdateRequest"
        },
        {
          "Type": "CachedFileTarget",
          "IsGet": true,
          "Name": "UpdateTarget"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "FileUpdateRequestDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<CachedFileUpdaterUI,FileUpdateRequestedEventArgs>",
          "Name": "FileUpdateRequested"
        },
        {
          "Type": "TypedEventHandler<CachedFileUpdaterUI,Object>",
          "Name": "UIRequested"
        }
      ],
      "Name": "Windows.Storage.Provider.CachedFileUpdaterUI"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ContentId"
        },
        {
          "Type": "StorageFile",
          "IsGet": true,
          "Name": "File"
        },
        {
          "Type": "FileUpdateStatus",
          "IsGet": true,
          "IsSet": true,
          "Name": "Status"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "UserInputNeededMessage"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "FileUpdateRequestDeferral",
          "Name": "GetDeferral"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "IStorageFile"
            }
          ],
          "Name": "UpdateLocalFile"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Provider.FileUpdateRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Provider.FileUpdateRequestDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "FileUpdateRequest",
          "IsGet": true,
          "Name": "Request"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Provider.FileUpdateRequestedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFileQuery"
            },
            {
              "Name": "fileTypeFilter",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFolderQuery"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ApplicationSearchFilter"
        },
        {
          "Type": "DateStackOption",
          "IsGet": true,
          "Name": "DateStackOption"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "FileTypeFilter"
        },
        {
          "Type": "FolderDepth",
          "IsGet": true,
          "IsSet": true,
          "Name": "FolderDepth"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "GroupPropertyName"
        },
        {
          "Type": "IndexerOption",
          "IsGet": true,
          "IsSet": true,
          "Name": "IndexerOption"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Language"
        },
        {
          "Type": "IList<SortEntry>",
          "IsGet": true,
          "Name": "SortOrder"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "UserSearchFilter"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "LoadFromString"
        },
        {
          "ReturnType": "String",
          "Name": "SaveToString"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "options",
              "Type": "PropertyPrefetchOptions"
            },
            {
              "Name": "propertiesToRetrieve",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "SetPropertyPrefetch"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "ThumbnailOptions"
            }
          ],
          "Name": "SetThumbnailPrefetch"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Search.QueryOptions"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<SortEntry>",
        "IEnumerable",
        "IEnumerable<SortEntry>",
        "IList<SortEntry>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Search.SortEntryVector"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStorageQueryResultBase"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "StorageFolder",
          "IsGet": true,
          "Name": "Folder"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "newQueryOptions",
              "Type": "QueryOptions"
            }
          ],
          "Name": "ApplyNewQueryOptions"
        },
        {
          "ReturnType": "IAsyncOperation<UInt32>",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "FindStartIndexAsync"
        },
        {
          "ReturnType": "QueryOptions",
          "Name": "GetCurrentQueryOptions"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFile>>",
          "Parameters": [
            {
              "Name": "startIndex",
              "Type": "UInt32"
            },
            {
              "Name": "maxNumberOfItems",
              "Type": "UInt32"
            }
          ],
          "Name": "GetFilesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFile>>",
          "Name": "GetFilesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<UInt32>",
          "Name": "GetItemCountAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<IStorageQueryResultBase,Object>",
          "Name": "ContentsChanged"
        },
        {
          "Type": "TypedEventHandler<IStorageQueryResultBase,Object>",
          "Name": "OptionsChanged"
        }
      ],
      "Name": "Windows.Storage.Search.StorageFileQueryResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStorageQueryResultBase"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "StorageFolder",
          "IsGet": true,
          "Name": "Folder"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "newQueryOptions",
              "Type": "QueryOptions"
            }
          ],
          "Name": "ApplyNewQueryOptions"
        },
        {
          "ReturnType": "IAsyncOperation<UInt32>",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "FindStartIndexAsync"
        },
        {
          "ReturnType": "QueryOptions",
          "Name": "GetCurrentQueryOptions"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFolder>>",
          "Parameters": [
            {
              "Name": "startIndex",
              "Type": "UInt32"
            },
            {
              "Name": "maxNumberOfItems",
              "Type": "UInt32"
            }
          ],
          "Name": "GetFoldersAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFolder>>",
          "Name": "GetFoldersAsync"
        },
        {
          "ReturnType": "IAsyncOperation<UInt32>",
          "Name": "GetItemCountAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<IStorageQueryResultBase,Object>",
          "Name": "ContentsChanged"
        },
        {
          "Type": "TypedEventHandler<IStorageQueryResultBase,Object>",
          "Name": "OptionsChanged"
        }
      ],
      "Name": "Windows.Storage.Search.StorageFolderQueryResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStorageQueryResultBase"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "StorageFolder",
          "IsGet": true,
          "Name": "Folder"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "newQueryOptions",
              "Type": "QueryOptions"
            }
          ],
          "Name": "ApplyNewQueryOptions"
        },
        {
          "ReturnType": "IAsyncOperation<UInt32>",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "FindStartIndexAsync"
        },
        {
          "ReturnType": "QueryOptions",
          "Name": "GetCurrentQueryOptions"
        },
        {
          "ReturnType": "IAsyncOperation<UInt32>",
          "Name": "GetItemCountAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<IStorageItem>>",
          "Parameters": [
            {
              "Name": "startIndex",
              "Type": "UInt32"
            },
            {
              "Name": "maxNumberOfItems",
              "Type": "UInt32"
            }
          ],
          "Name": "GetItemsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<IStorageItem>>",
          "Name": "GetItemsAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<IStorageQueryResultBase,Object>",
          "Name": "ContentsChanged"
        },
        {
          "Type": "TypedEventHandler<IStorageQueryResultBase,Object>",
          "Name": "OptionsChanged"
        }
      ],
      "Name": "Windows.Storage.Search.StorageItemQueryResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.SetVersionDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "CurrentVersion"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "DesiredVersion"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "SetVersionDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.SetVersionRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IInputStreamReference",
        "IRandomAccessStreamReference",
        "IStorageFile",
        "IStorageFile2",
        "IStorageItem",
        "IStorageItem2",
        "IStorageItemProperties",
        "IStorageItemProperties2"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "FileAttributes",
          "IsGet": true,
          "Name": "Attributes"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ContentType"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "DateCreated"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "FileType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "FolderRelativeId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Path"
        },
        {
          "Type": "StorageItemContentProperties",
          "IsGet": true,
          "Name": "Properties"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "fileToReplace",
              "Type": "IStorageFile"
            }
          ],
          "Name": "CopyAndReplaceAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "IStorageFolder"
            }
          ],
          "Name": "CopyAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "IStorageFolder"
            },
            {
              "Name": "desiredNewName",
              "Type": "String"
            }
          ],
          "Name": "CopyAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "IStorageFolder"
            },
            {
              "Name": "desiredNewName",
              "Type": "String"
            },
            {
              "Name": "option",
              "Type": "NameCollisionOption"
            }
          ],
          "Name": "CopyAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "displayNameWithExtension",
              "Type": "String"
            },
            {
              "Name": "dataRequested",
              "Type": "StreamedFileDataRequestedHandler"
            },
            {
              "Name": "thumbnail",
              "Type": "IRandomAccessStreamReference"
            }
          ],
          "Name": "CreateStreamedFileAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "displayNameWithExtension",
              "Type": "String"
            },
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "thumbnail",
              "Type": "IRandomAccessStreamReference"
            }
          ],
          "Name": "CreateStreamedFileFromUriAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "DeleteAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "option",
              "Type": "StorageDeleteOption"
            }
          ],
          "Name": "DeleteAsync"
        },
        {
          "ReturnType": "IAsyncOperation<BasicProperties>",
          "Name": "GetBasicPropertiesAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "GetFileFromApplicationUriAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "path",
              "Type": "String"
            }
          ],
          "Name": "GetFileFromPathAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Name": "GetParentAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            }
          ],
          "Name": "GetScaledImageAsThumbnailAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            }
          ],
          "Name": "GetScaledImageAsThumbnailAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "ThumbnailOptions"
            }
          ],
          "Name": "GetScaledImageAsThumbnailAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            }
          ],
          "Name": "GetThumbnailAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            }
          ],
          "Name": "GetThumbnailAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "ThumbnailOptions"
            }
          ],
          "Name": "GetThumbnailAsync"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "item",
              "Type": "IStorageItem"
            }
          ],
          "Name": "IsEqual"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "type",
              "Type": "StorageItemTypes"
            }
          ],
          "Name": "IsOfType"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "fileToReplace",
              "Type": "IStorageFile"
            }
          ],
          "Name": "MoveAndReplaceAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "IStorageFolder"
            }
          ],
          "Name": "MoveAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "IStorageFolder"
            },
            {
              "Name": "desiredNewName",
              "Type": "String"
            }
          ],
          "Name": "MoveAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "IStorageFolder"
            },
            {
              "Name": "desiredNewName",
              "Type": "String"
            },
            {
              "Name": "option",
              "Type": "NameCollisionOption"
            }
          ],
          "Name": "MoveAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Parameters": [
            {
              "Name": "accessMode",
              "Type": "FileAccessMode"
            }
          ],
          "Name": "OpenAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Parameters": [
            {
              "Name": "accessMode",
              "Type": "FileAccessMode"
            },
            {
              "Name": "options",
              "Type": "StorageOpenOptions"
            }
          ],
          "Name": "OpenAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStreamWithContentType>",
          "Name": "OpenReadAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IInputStream>",
          "Name": "OpenSequentialReadAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageStreamTransaction>",
          "Name": "OpenTransactedWriteAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageStreamTransaction>",
          "Parameters": [
            {
              "Name": "options",
              "Type": "StorageOpenOptions"
            }
          ],
          "Name": "OpenTransactedWriteAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            },
            {
              "Name": "option",
              "Type": "NameCollisionOption"
            }
          ],
          "Name": "RenameAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            }
          ],
          "Name": "RenameAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "fileToReplace",
              "Type": "IStorageFile"
            },
            {
              "Name": "dataRequested",
              "Type": "StreamedFileDataRequestedHandler"
            },
            {
              "Name": "thumbnail",
              "Type": "IRandomAccessStreamReference"
            }
          ],
          "Name": "ReplaceWithStreamedFileAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "fileToReplace",
              "Type": "IStorageFile"
            },
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "thumbnail",
              "Type": "IRandomAccessStreamReference"
            }
          ],
          "Name": "ReplaceWithStreamedFileFromUriAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.StorageFile"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStorageFolder",
        "IStorageFolder2",
        "IStorageFolderQueryOperations",
        "IStorageItem",
        "IStorageItem2",
        "IStorageItemProperties",
        "IStorageItemProperties2"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "FileAttributes",
          "IsGet": true,
          "Name": "Attributes"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "DateCreated"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "FolderRelativeId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Path"
        },
        {
          "Type": "StorageItemContentProperties",
          "IsGet": true,
          "Name": "Properties"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "queryOptions",
              "Type": "QueryOptions"
            }
          ],
          "Name": "AreQueryOptionsSupported"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "CreationCollisionOption"
            }
          ],
          "Name": "CreateFileAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            }
          ],
          "Name": "CreateFileAsync"
        },
        {
          "ReturnType": "StorageFileQueryResult",
          "Name": "CreateFileQuery"
        },
        {
          "ReturnType": "StorageFileQueryResult",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFileQuery"
            }
          ],
          "Name": "CreateFileQuery"
        },
        {
          "ReturnType": "StorageFileQueryResult",
          "Parameters": [
            {
              "Name": "queryOptions",
              "Type": "QueryOptions"
            }
          ],
          "Name": "CreateFileQueryWithOptions"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            }
          ],
          "Name": "CreateFolderAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "CreationCollisionOption"
            }
          ],
          "Name": "CreateFolderAsync"
        },
        {
          "ReturnType": "StorageFolderQueryResult",
          "Name": "CreateFolderQuery"
        },
        {
          "ReturnType": "StorageFolderQueryResult",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFolderQuery"
            }
          ],
          "Name": "CreateFolderQuery"
        },
        {
          "ReturnType": "StorageFolderQueryResult",
          "Parameters": [
            {
              "Name": "queryOptions",
              "Type": "QueryOptions"
            }
          ],
          "Name": "CreateFolderQueryWithOptions"
        },
        {
          "ReturnType": "StorageItemQueryResult",
          "Name": "CreateItemQuery"
        },
        {
          "ReturnType": "StorageItemQueryResult",
          "Parameters": [
            {
              "Name": "queryOptions",
              "Type": "QueryOptions"
            }
          ],
          "Name": "CreateItemQueryWithOptions"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "DeleteAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "option",
              "Type": "StorageDeleteOption"
            }
          ],
          "Name": "DeleteAsync"
        },
        {
          "ReturnType": "IAsyncOperation<BasicProperties>",
          "Name": "GetBasicPropertiesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "GetFileAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFile>>",
          "Name": "GetFilesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFile>>",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFileQuery"
            },
            {
              "Name": "startIndex",
              "Type": "UInt32"
            },
            {
              "Name": "maxItemsToRetrieve",
              "Type": "UInt32"
            }
          ],
          "Name": "GetFilesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFile>>",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFileQuery"
            }
          ],
          "Name": "GetFilesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "GetFolderAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "path",
              "Type": "String"
            }
          ],
          "Name": "GetFolderFromPathAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFolder>>",
          "Name": "GetFoldersAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFolder>>",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFolderQuery"
            },
            {
              "Name": "startIndex",
              "Type": "UInt32"
            },
            {
              "Name": "maxItemsToRetrieve",
              "Type": "UInt32"
            }
          ],
          "Name": "GetFoldersAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFolder>>",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFolderQuery"
            }
          ],
          "Name": "GetFoldersAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IndexedState>",
          "Name": "GetIndexedStateAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IStorageItem>",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "GetItemAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<IStorageItem>>",
          "Name": "GetItemsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<IStorageItem>>",
          "Parameters": [
            {
              "Name": "startIndex",
              "Type": "UInt32"
            },
            {
              "Name": "maxItemsToRetrieve",
              "Type": "UInt32"
            }
          ],
          "Name": "GetItemsAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Name": "GetParentAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            }
          ],
          "Name": "GetScaledImageAsThumbnailAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            }
          ],
          "Name": "GetScaledImageAsThumbnailAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "ThumbnailOptions"
            }
          ],
          "Name": "GetScaledImageAsThumbnailAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            }
          ],
          "Name": "GetThumbnailAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            }
          ],
          "Name": "GetThumbnailAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "ThumbnailOptions"
            }
          ],
          "Name": "GetThumbnailAsync"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFileQuery"
            }
          ],
          "Name": "IsCommonFileQuerySupported"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFolderQuery"
            }
          ],
          "Name": "IsCommonFolderQuerySupported"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "item",
              "Type": "IStorageItem"
            }
          ],
          "Name": "IsEqual"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "type",
              "Type": "StorageItemTypes"
            }
          ],
          "Name": "IsOfType"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            }
          ],
          "Name": "RenameAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            },
            {
              "Name": "option",
              "Type": "NameCollisionOption"
            }
          ],
          "Name": "RenameAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IStorageItem>",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "TryGetItemAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.StorageFolder"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IRandomAccessStream",
          "IsGet": true,
          "Name": "Stream"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Name": "CommitAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.StorageStreamTransaction"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IOutputStream",
        "IStreamedFileDataRequest"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "failureMode",
              "Type": "StreamedFileFailureMode"
            }
          ],
          "Name": "FailAndClose"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Name": "FlushAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "WriteAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.StreamedFileDataRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBuffer"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "capacity",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Capacity"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Length"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Streams.Buffer"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDataReader",
        "IDisposable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "inputStream",
              "Type": "IInputStream"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "ByteOrder",
          "IsGet": true,
          "IsSet": true,
          "Name": "ByteOrder"
        },
        {
          "Type": "InputStreamOptions",
          "IsGet": true,
          "IsSet": true,
          "Name": "InputStreamOptions"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "UnconsumedBufferLength"
        },
        {
          "Type": "UnicodeEncoding",
          "IsGet": true,
          "IsSet": true,
          "Name": "UnicodeEncoding"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IBuffer",
          "Name": "DetachBuffer"
        },
        {
          "ReturnType": "IInputStream",
          "Name": "DetachStream"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "IsStatic": true,
          "ReturnType": "DataReader",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "FromBuffer"
        },
        {
          "ReturnType": "DataReaderLoadOperation",
          "Parameters": [
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ],
          "Name": "LoadAsync"
        },
        {
          "ReturnType": "Boolean",
          "Name": "ReadBoolean"
        },
        {
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "length",
              "Type": "UInt32"
            }
          ],
          "Name": "ReadBuffer"
        },
        {
          "ReturnType": "Byte",
          "Name": "ReadByte"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]",
              "Out": true
            }
          ],
          "Name": "ReadBytes"
        },
        {
          "ReturnType": "DateTimeOffset",
          "Name": "ReadDateTime"
        },
        {
          "ReturnType": "Double",
          "Name": "ReadDouble"
        },
        {
          "ReturnType": "Guid",
          "Name": "ReadGuid"
        },
        {
          "ReturnType": "Int16",
          "Name": "ReadInt16"
        },
        {
          "ReturnType": "Int32",
          "Name": "ReadInt32"
        },
        {
          "ReturnType": "Int64",
          "Name": "ReadInt64"
        },
        {
          "ReturnType": "Single",
          "Name": "ReadSingle"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "codeUnitCount",
              "Type": "UInt32"
            }
          ],
          "Name": "ReadString"
        },
        {
          "ReturnType": "TimeSpan",
          "Name": "ReadTimeSpan"
        },
        {
          "ReturnType": "UInt16",
          "Name": "ReadUInt16"
        },
        {
          "ReturnType": "UInt32",
          "Name": "ReadUInt32"
        },
        {
          "ReturnType": "UInt64",
          "Name": "ReadUInt64"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.DataReader"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IAsyncInfo",
        "IAsyncOperation<UInt32>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AsyncOperationCompletedHandler<UInt32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Completed"
        },
        {
          "Type": "Exception",
          "IsGet": true,
          "Name": "ErrorCode"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "AsyncStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Cancel"
        },
        {
          "ReturnType": "Void",
          "Name": "Close"
        },
        {
          "ReturnType": "UInt32",
          "Name": "GetResults"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.DataReaderLoadOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDataWriter",
        "IDisposable"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "outputStream",
              "Type": "IOutputStream"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "ByteOrder",
          "IsGet": true,
          "IsSet": true,
          "Name": "ByteOrder"
        },
        {
          "Type": "UnicodeEncoding",
          "IsGet": true,
          "IsSet": true,
          "Name": "UnicodeEncoding"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "UnstoredBufferLength"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IBuffer",
          "Name": "DetachBuffer"
        },
        {
          "ReturnType": "IOutputStream",
          "Name": "DetachStream"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Name": "FlushAsync"
        },
        {
          "ReturnType": "UInt32",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "MeasureString"
        },
        {
          "ReturnType": "DataWriterStoreOperation",
          "Name": "StoreAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "WriteBoolean"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "WriteBuffer"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "start",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ],
          "Name": "WriteBuffer"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte"
            }
          ],
          "Name": "WriteByte"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]"
            }
          ],
          "Name": "WriteBytes"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "DateTimeOffset"
            }
          ],
          "Name": "WriteDateTime"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ],
          "Name": "WriteDouble"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Guid"
            }
          ],
          "Name": "WriteGuid"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int16"
            }
          ],
          "Name": "WriteInt16"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int32"
            }
          ],
          "Name": "WriteInt32"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ],
          "Name": "WriteInt64"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Single"
            }
          ],
          "Name": "WriteSingle"
        },
        {
          "ReturnType": "UInt32",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "WriteString"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "TimeSpan"
            }
          ],
          "Name": "WriteTimeSpan"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt16"
            }
          ],
          "Name": "WriteUInt16"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt32"
            }
          ],
          "Name": "WriteUInt32"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ],
          "Name": "WriteUInt64"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.DataWriter"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IAsyncInfo",
        "IAsyncOperation<UInt32>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AsyncOperationCompletedHandler<UInt32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Completed"
        },
        {
          "Type": "Exception",
          "IsGet": true,
          "Name": "ErrorCode"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "AsyncStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Cancel"
        },
        {
          "ReturnType": "Void",
          "Name": "Close"
        },
        {
          "ReturnType": "UInt32",
          "Name": "GetResults"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.DataWriterStoreOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IInputStream"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "InputStreamOptions"
            }
          ],
          "Name": "ReadAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.FileInputStream"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IOutputStream"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Name": "FlushAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "WriteAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.FileOutputStream"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IInputStream",
        "IOutputStream",
        "IRandomAccessStream"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanRead"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanWrite"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "Position"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "IsSet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IRandomAccessStream",
          "Name": "CloneStream"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Name": "FlushAsync"
        },
        {
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "GetInputStreamAt"
        },
        {
          "ReturnType": "IOutputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "GetOutputStreamAt"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "InputStreamOptions"
            }
          ],
          "Name": "ReadAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "Seek"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "WriteAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.FileRandomAccessStream"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IInputStream",
        "IOutputStream",
        "IRandomAccessStream"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanRead"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanWrite"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "Position"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "IsSet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IRandomAccessStream",
          "Name": "CloneStream"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Name": "FlushAsync"
        },
        {
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "GetInputStreamAt"
        },
        {
          "ReturnType": "IOutputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "GetOutputStreamAt"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "InputStreamOptions"
            }
          ],
          "Name": "ReadAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "Seek"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "WriteAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.InMemoryRandomAccessStream"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IInputStream"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "InputStreamOptions"
            }
          ],
          "Name": "ReadAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.InputStreamOverStream"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IOutputStream"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Name": "FlushAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "WriteAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.OutputStreamOverStream"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Parameters": [
            {
              "Name": "source",
              "Type": "IInputStream"
            },
            {
              "Name": "destination",
              "Type": "IOutputStream"
            }
          ],
          "Name": "CopyAndCloseAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Parameters": [
            {
              "Name": "source",
              "Type": "IInputStream"
            },
            {
              "Name": "destination",
              "Type": "IOutputStream"
            }
          ],
          "Name": "CopyAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Parameters": [
            {
              "Name": "source",
              "Type": "IInputStream"
            },
            {
              "Name": "destination",
              "Type": "IOutputStream"
            },
            {
              "Name": "bytesToCopy",
              "Type": "UInt64"
            }
          ],
          "Name": "CopyAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.RandomAccessStream"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IInputStream",
        "IOutputStream",
        "IRandomAccessStream"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanRead"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanWrite"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "Position"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "IsSet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IRandomAccessStream",
          "Name": "CloneStream"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Name": "FlushAsync"
        },
        {
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "GetInputStreamAt"
        },
        {
          "ReturnType": "IOutputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "GetOutputStreamAt"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "InputStreamOptions"
            }
          ],
          "Name": "ReadAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "Seek"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "WriteAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.RandomAccessStreamOverStream"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IRandomAccessStreamReference"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "RandomAccessStreamReference",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ],
          "Name": "CreateFromFile"
        },
        {
          "IsStatic": true,
          "ReturnType": "RandomAccessStreamReference",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            }
          ],
          "Name": "CreateFromStream"
        },
        {
          "IsStatic": true,
          "ReturnType": "RandomAccessStreamReference",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "CreateFromUri"
        },
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStreamWithContentType>",
          "Name": "OpenReadAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.RandomAccessStreamReference"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "EncodingBitrate"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.SystemAudioProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "LatitudeDecimal"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "LongitudeDecimal"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.SystemGPSProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "HorizontalSize"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "VerticalSize"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.SystemImageProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Duration"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Producer"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Publisher"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "SubTitle"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Writer"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Year"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.SystemMediaProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AlbumArtist"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AlbumTitle"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Artist"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Composer"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Conductor"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayArtist"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Genre"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "TrackNumber"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.SystemMusicProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "CameraManufacturer"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "CameraModel"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DateTaken"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Orientation"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "PeopleNames"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.SystemPhotoProperties"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SystemAudioProperties",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Audio"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Author"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Comment"
        },
        {
          "Type": "SystemGPSProperties",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GPS"
        },
        {
          "Type": "SystemImageProperties",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Image"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemNameDisplay"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Keywords"
        },
        {
          "Type": "SystemMediaProperties",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Media"
        },
        {
          "Type": "SystemMusicProperties",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Music"
        },
        {
          "Type": "SystemPhotoProperties",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Photo"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Rating"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Title"
        },
        {
          "Type": "SystemVideoProperties",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Video"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.SystemProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Director"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "FrameHeight"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "FrameWidth"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Orientation"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "TotalBitrate"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.SystemVideoProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "NewLimit"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "OldLimit"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.System.AppMemoryUsageLimitChangingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "RequestActive"
        },
        {
          "ReturnType": "Void",
          "Name": "RequestRelease"
        }
      ],
      "Events": [],
      "Name": "Windows.System.Display.DisplayRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ILauncherViewOptions"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ViewSizePreference",
          "IsGet": true,
          "IsSet": true,
          "Name": "DesiredRemainingView"
        },
        {
          "Type": "IList<IStorageItem>",
          "IsGet": true,
          "Name": "ItemsToSelect"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.System.FolderLauncherOptions"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AccountName"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DomainName"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FirstName"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GuestHost"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LastName"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PrincipalName"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ProviderName"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SessionInitiationProtocolUri"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.System.KnownUserProperties"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            }
          ],
          "Name": "LaunchFileAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageFile"
            },
            {
              "Name": "options",
              "Type": "LauncherOptions"
            }
          ],
          "Name": "LaunchFileAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "folder",
              "Type": "IStorageFolder"
            }
          ],
          "Name": "LaunchFolderAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "folder",
              "Type": "IStorageFolder"
            },
            {
              "Name": "options",
              "Type": "FolderLauncherOptions"
            }
          ],
          "Name": "LaunchFolderAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "LaunchUriAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "options",
              "Type": "LauncherOptions"
            }
          ],
          "Name": "LaunchUriAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "options",
              "Type": "LauncherOptions"
            },
            {
              "Name": "continuationData",
              "Type": "ValueSet"
            }
          ],
          "Name": "LaunchUriForResultsAndContinueAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "options",
              "Type": "LauncherOptions"
            },
            {
              "Name": "continuationData",
              "Type": "ValueSet"
            },
            {
              "Name": "inputData",
              "Type": "ValueSet"
            }
          ],
          "Name": "LaunchUriForResultsAndContinueAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<QueryUriSupportStatus>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "launchUriType",
              "Type": "LaunchUriType"
            }
          ],
          "Name": "QueryUriSupportAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<QueryUriSupportStatus>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "launchUriType",
              "Type": "LaunchUriType"
            },
            {
              "Name": "packageFamilyName",
              "Type": "String"
            }
          ],
          "Name": "QueryUriSupportAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.System.Launcher"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentType"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayApplicationPicker"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "FallbackUri"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "PreferredApplicationDisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "PreferredApplicationPackageFamilyName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "TargetApplicationPackageFamilyName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "TreatAsUntrusted"
        },
        {
          "Type": "LauncherUIOptions",
          "IsGet": true,
          "Name": "UI"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.System.LauncherOptions"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<Point>",
          "IsGet": true,
          "IsSet": true,
          "Name": "InvocationPoint"
        },
        {
          "Type": "Placement",
          "IsGet": true,
          "IsSet": true,
          "Name": "PreferredPlacement"
        },
        {
          "Type": "Nullable<Rect>",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectionRect"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.System.LauncherUIOptions"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt64",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AppMemoryUsage"
        },
        {
          "Type": "AppMemoryUsageLevel",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AppMemoryUsageLevel"
        },
        {
          "Type": "UInt64",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AppMemoryUsageLimit"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "IsStatic": true,
          "Name": "AppMemoryUsageDecreased"
        },
        {
          "Type": "EventHandler<Object>",
          "IsStatic": true,
          "Name": "AppMemoryUsageIncreased"
        },
        {
          "Type": "EventHandler<AppMemoryUsageLimitChangingEventArgs>",
          "IsStatic": true,
          "Name": "AppMemoryUsageLimitChanging"
        }
      ],
      "Name": "Windows.System.MemoryManager"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "BatteryStatus",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BatteryStatus"
        },
        {
          "Type": "PowerSavingStatus",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PowerSavingStatus"
        },
        {
          "Type": "PowerSupplyStatus",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PowerSupplyStatus"
        },
        {
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RemainingChargePercent"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "IsStatic": true,
          "Name": "BatteryStatusChanged"
        },
        {
          "Type": "EventHandler<Object>",
          "IsStatic": true,
          "Name": "PowerSavingStatusChanged"
        },
        {
          "Type": "EventHandler<Object>",
          "IsStatic": true,
          "Name": "PowerSupplyStatusChanged"
        },
        {
          "Type": "EventHandler<Object>",
          "IsStatic": true,
          "Name": "RemainingChargePercentChanged"
        }
      ],
      "Name": "Windows.System.PowerManager"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "HardwareToken",
          "Parameters": [
            {
              "Name": "nonce",
              "Type": "IBuffer"
            }
          ],
          "Name": "GetPackageSpecificToken"
        }
      ],
      "Events": [],
      "Name": "Windows.System.Profile.HardwareIdentification"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "Certificate"
        },
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "Signature"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.System.Profile.HardwareToken"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "data",
              "Type": "ValueSet"
            }
          ],
          "Name": "ReportCompleted"
        }
      ],
      "Events": [],
      "Name": "Windows.System.ProtocolForResultsOperation"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsRemote"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.System.RemoteDesktop.InteractiveSession"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "handler",
              "Type": "WorkItemHandler"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "handler",
              "Type": "WorkItemHandler"
            },
            {
              "Name": "priority",
              "Type": "WorkItemPriority"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "handler",
              "Type": "WorkItemHandler"
            },
            {
              "Name": "priority",
              "Type": "WorkItemPriority"
            },
            {
              "Name": "options",
              "Type": "WorkItemOptions"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Name": "RunAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.System.Threading.Core.PreallocatedWorkItem"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "SignalNotifier",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "handler",
              "Type": "SignalHandler"
            }
          ],
          "Name": "AttachToEvent"
        },
        {
          "IsStatic": true,
          "ReturnType": "SignalNotifier",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "handler",
              "Type": "SignalHandler"
            },
            {
              "Name": "timeout",
              "Type": "TimeSpan"
            }
          ],
          "Name": "AttachToEvent"
        },
        {
          "IsStatic": true,
          "ReturnType": "SignalNotifier",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "handler",
              "Type": "SignalHandler"
            }
          ],
          "Name": "AttachToSemaphore"
        },
        {
          "IsStatic": true,
          "ReturnType": "SignalNotifier",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "handler",
              "Type": "SignalHandler"
            },
            {
              "Name": "timeout",
              "Type": "TimeSpan"
            }
          ],
          "Name": "AttachToSemaphore"
        },
        {
          "ReturnType": "Void",
          "Name": "Enable"
        },
        {
          "ReturnType": "Void",
          "Name": "Terminate"
        }
      ],
      "Events": [],
      "Name": "Windows.System.Threading.Core.SignalNotifier"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "handler",
              "Type": "WorkItemHandler"
            }
          ],
          "Name": "RunAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "handler",
              "Type": "WorkItemHandler"
            },
            {
              "Name": "priority",
              "Type": "WorkItemPriority"
            }
          ],
          "Name": "RunAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "handler",
              "Type": "WorkItemHandler"
            },
            {
              "Name": "priority",
              "Type": "WorkItemPriority"
            },
            {
              "Name": "options",
              "Type": "WorkItemOptions"
            }
          ],
          "Name": "RunAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.System.Threading.ThreadPool"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "Delay"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "Period"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Cancel"
        },
        {
          "IsStatic": true,
          "ReturnType": "ThreadPoolTimer",
          "Parameters": [
            {
              "Name": "handler",
              "Type": "TimerElapsedHandler"
            },
            {
              "Name": "period",
              "Type": "TimeSpan"
            }
          ],
          "Name": "CreatePeriodicTimer"
        },
        {
          "IsStatic": true,
          "ReturnType": "ThreadPoolTimer",
          "Parameters": [
            {
              "Name": "handler",
              "Type": "TimerElapsedHandler"
            },
            {
              "Name": "period",
              "Type": "TimeSpan"
            },
            {
              "Name": "destroyed",
              "Type": "TimerDestroyedHandler"
            }
          ],
          "Name": "CreatePeriodicTimer"
        },
        {
          "IsStatic": true,
          "ReturnType": "ThreadPoolTimer",
          "Parameters": [
            {
              "Name": "handler",
              "Type": "TimerElapsedHandler"
            },
            {
              "Name": "delay",
              "Type": "TimeSpan"
            }
          ],
          "Name": "CreateTimer"
        },
        {
          "IsStatic": true,
          "ReturnType": "ThreadPoolTimer",
          "Parameters": [
            {
              "Name": "handler",
              "Type": "TimerElapsedHandler"
            },
            {
              "Name": "delay",
              "Type": "TimeSpan"
            },
            {
              "Name": "destroyed",
              "Type": "TimerDestroyedHandler"
            }
          ],
          "Name": "CreateTimer"
        }
      ],
      "Events": [],
      "Name": "Windows.System.Threading.ThreadPoolTimer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UserAuthenticationStatus",
          "IsGet": true,
          "Name": "AuthenticationStatus"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NonRoamableId"
        },
        {
          "Type": "IPropertySet",
          "IsGet": true,
          "Name": "Properties"
        },
        {
          "Type": "UserType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "UserWatcher",
          "Name": "CreateWatcher"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<User>>",
          "Name": "FindAllAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<User>>",
          "Parameters": [
            {
              "Name": "type",
              "Type": "UserType"
            }
          ],
          "Name": "FindAllAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<User>>",
          "Parameters": [
            {
              "Name": "type",
              "Type": "UserType"
            },
            {
              "Name": "status",
              "Type": "UserAuthenticationStatus"
            }
          ],
          "Name": "FindAllAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "User",
          "Parameters": [
            {
              "Name": "nonRoamableId",
              "Type": "String"
            }
          ],
          "Name": "GetFromId"
        },
        {
          "ReturnType": "IRandomAccessStreamReference",
          "Parameters": [
            {
              "Name": "desiredSize",
              "Type": "UserPictureSize"
            }
          ],
          "Name": "GetPicture"
        }
      ],
      "Events": [],
      "Name": "Windows.System.User"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.System.UserAuthenticationStatusChangeDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UserAuthenticationStatus",
          "IsGet": true,
          "Name": "CurrentStatus"
        },
        {
          "Type": "UserAuthenticationStatus",
          "IsGet": true,
          "Name": "NewStatus"
        },
        {
          "Type": "User",
          "IsGet": true,
          "Name": "User"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "UserAuthenticationStatusChangeDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.System.UserAuthenticationStatusChangingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "User",
          "IsGet": true,
          "Name": "User"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.System.UserChangedEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AdvertisingId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.System.UserProfile.AdvertisingManager"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<String>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Calendars"
        },
        {
          "Type": "IReadOnlyList<String>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Clocks"
        },
        {
          "Type": "IReadOnlyList<String>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Currencies"
        },
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HomeGeographicRegion"
        },
        {
          "Type": "IReadOnlyList<String>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Languages"
        },
        {
          "Type": "DayOfWeek",
          "IsStatic": true,
          "IsGet": true,
          "Name": "WeekStartsOn"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.System.UserProfile.GlobalizationPreferences"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AccountPictureChangeEnabled"
        },
        {
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NameAccessAllowed"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IStorageFile",
          "Parameters": [
            {
              "Name": "kind",
              "Type": "AccountPictureKind"
            }
          ],
          "Name": "GetAccountPicture"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Name": "GetDisplayNameAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Name": "GetDomainNameAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Name": "GetFirstNameAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Name": "GetLastNameAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<String>",
          "Name": "GetPrincipalNameAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<Uri>",
          "Name": "GetSessionInitiationProtocolUriAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<SetAccountPictureResult>",
          "Parameters": [
            {
              "Name": "image",
              "Type": "IStorageFile"
            }
          ],
          "Name": "SetAccountPictureAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<SetAccountPictureResult>",
          "Parameters": [
            {
              "Name": "image",
              "Type": "IRandomAccessStream"
            }
          ],
          "Name": "SetAccountPictureFromStreamAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<SetAccountPictureResult>",
          "Parameters": [
            {
              "Name": "smallImage",
              "Type": "IStorageFile"
            },
            {
              "Name": "largeImage",
              "Type": "IStorageFile"
            },
            {
              "Name": "video",
              "Type": "IStorageFile"
            }
          ],
          "Name": "SetAccountPicturesAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<SetAccountPictureResult>",
          "Parameters": [
            {
              "Name": "smallImage",
              "Type": "IRandomAccessStream"
            },
            {
              "Name": "largeImage",
              "Type": "IRandomAccessStream"
            },
            {
              "Name": "video",
              "Type": "IRandomAccessStream"
            }
          ],
          "Name": "SetAccountPicturesFromStreamsAsync"
        }
      ],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "IsStatic": true,
          "Name": "AccountPictureChanged"
        }
      ],
      "Name": "Windows.System.UserProfile.UserInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UserWatcherStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Start"
        },
        {
          "ReturnType": "Void",
          "Name": "Stop"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<UserWatcher,UserChangedEventArgs>",
          "Name": "Added"
        },
        {
          "Type": "TypedEventHandler<UserWatcher,UserChangedEventArgs>",
          "Name": "AuthenticationStatusChanged"
        },
        {
          "Type": "TypedEventHandler<UserWatcher,UserAuthenticationStatusChangingEventArgs>",
          "Name": "AuthenticationStatusChanging"
        },
        {
          "Type": "TypedEventHandler<UserWatcher,Object>",
          "Name": "EnumerationCompleted"
        },
        {
          "Type": "TypedEventHandler<UserWatcher,UserChangedEventArgs>",
          "Name": "Removed"
        },
        {
          "Type": "TypedEventHandler<UserWatcher,Object>",
          "Name": "Stopped"
        },
        {
          "Type": "TypedEventHandler<UserWatcher,UserChangedEventArgs>",
          "Name": "Updated"
        }
      ],
      "Name": "Windows.System.UserWatcher"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Color",
          "Parameters": [
            {
              "Name": "a",
              "Type": "Byte"
            },
            {
              "Name": "r",
              "Type": "Byte"
            },
            {
              "Name": "g",
              "Type": "Byte"
            },
            {
              "Name": "b",
              "Type": "Byte"
            }
          ],
          "Name": "FromArgb"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.ColorHelper"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AliceBlue"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AntiqueWhite"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Aqua"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Aquamarine"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Azure"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Beige"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Bisque"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Black"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BlanchedAlmond"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Blue"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BlueViolet"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Brown"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BurlyWood"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CadetBlue"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Coral"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CornflowerBlue"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Cornsilk"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Crimson"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Cyan"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DarkBlue"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DarkCyan"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DarkGoldenrod"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DarkGray"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DarkGreen"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DarkKhaki"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DarkMagenta"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DarkOliveGreen"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DarkOrange"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DarkOrchid"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DarkRed"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DarkSalmon"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DarkSeaGreen"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DarkSlateBlue"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DarkSlateGray"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DarkTurquoise"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DarkViolet"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DeepPink"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DeepSkyBlue"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DimGray"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DodgerBlue"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Firebrick"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FloralWhite"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ForestGreen"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Fuchsia"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Gainsboro"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GhostWhite"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Gold"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Goldenrod"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Gray"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Green"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GreenYellow"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Honeydew"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HotPink"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Chartreuse"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Chocolate"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IndianRed"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Indigo"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Ivory"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Khaki"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Lavender"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LavenderBlush"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LawnGreen"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LemonChiffon"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LightBlue"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LightCoral"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LightCyan"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LightGoldenrodYellow"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LightGray"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LightGreen"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LightPink"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LightSalmon"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LightSeaGreen"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LightSkyBlue"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LightSlateGray"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LightSteelBlue"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LightYellow"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Lime"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LimeGreen"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Linen"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Magenta"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Maroon"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MediumAquamarine"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MediumBlue"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MediumOrchid"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MediumPurple"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MediumSeaGreen"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MediumSlateBlue"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MediumSpringGreen"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MediumTurquoise"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MediumVioletRed"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MidnightBlue"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MintCream"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MistyRose"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Moccasin"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NavajoWhite"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Navy"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OldLace"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Olive"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OliveDrab"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Orange"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OrangeRed"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Orchid"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PaleGoldenrod"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PaleGreen"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PaleTurquoise"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PaleVioletRed"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PapayaWhip"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PeachPuff"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Peru"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Pink"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Plum"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PowderBlue"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Purple"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Red"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RosyBrown"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RoyalBlue"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SaddleBrown"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Salmon"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SandyBrown"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SeaGreen"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SeaShell"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Sienna"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Silver"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SkyBlue"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SlateBlue"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SlateGray"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Snow"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SpringGreen"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SteelBlue"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Tan"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Teal"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Thistle"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Tomato"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Transparent"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Turquoise"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Violet"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Wheat"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "White"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "WhiteSmoke"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Yellow"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "YellowGreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Colors"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreWindowEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "CoreAcceleratorKeyEventType",
          "IsGet": true,
          "Name": "EventType"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "CorePhysicalKeyStatus",
          "IsGet": true,
          "Name": "KeyStatus"
        },
        {
          "Type": "VirtualKey",
          "IsGet": true,
          "Name": "VirtualKey"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.AcceleratorKeyEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreWindowEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "AutomationProvider"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.AutomationProviderRequestedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreAcceleratorKeys"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "TypedEventHandler<CoreDispatcher,AcceleratorKeyEventArgs>",
          "Name": "AcceleratorKeyActivated"
        }
      ],
      "Name": "Windows.UI.Core.CoreAcceleratorKeys"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreInputSourceBase",
        "ICorePointerInputSource"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "CoreDispatcher",
          "IsGet": true,
          "Name": "Dispatcher"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasCapture"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasFocus"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsInputEnabled"
        },
        {
          "Type": "CoreCursor",
          "IsGet": true,
          "IsSet": true,
          "Name": "PointerCursor"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "Name": "PointerPosition"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "CoreVirtualKeyStates",
          "Parameters": [
            {
              "Name": "virtualKey",
              "Type": "VirtualKey"
            }
          ],
          "Name": "GetCurrentKeyState"
        },
        {
          "ReturnType": "Void",
          "Name": "ReleasePointerCapture"
        },
        {
          "ReturnType": "Void",
          "Name": "SetPointerCapture"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<Object,CoreWindowEventArgs>",
          "Name": "GotFocus"
        },
        {
          "Type": "TypedEventHandler<Object,CharacterReceivedEventArgs>",
          "Name": "CharacterReceived"
        },
        {
          "Type": "TypedEventHandler<Object,InputEnabledEventArgs>",
          "Name": "InputEnabled"
        },
        {
          "Type": "TypedEventHandler<Object,KeyEventArgs>",
          "Name": "KeyDown"
        },
        {
          "Type": "TypedEventHandler<Object,KeyEventArgs>",
          "Name": "KeyUp"
        },
        {
          "Type": "TypedEventHandler<Object,CoreWindowEventArgs>",
          "Name": "LostFocus"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerCaptureLost"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerEntered"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerExited"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerMoved"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerPressed"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerReleased"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerWheelChanged"
        },
        {
          "Type": "TypedEventHandler<Object,TouchHitTestingEventArgs>",
          "Name": "TouchHitTesting"
        }
      ],
      "Name": "Windows.UI.Core.CoreComponentInputSource"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "type",
              "Type": "CoreCursorType"
            },
            {
              "Name": "id",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "CoreCursorType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.CoreCursor"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreAcceleratorKeys"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "CoreDispatcherPriority",
          "IsGet": true,
          "IsSet": true,
          "Name": "CurrentPriority"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasThreadAccess"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "options",
              "Type": "CoreProcessEventsOption"
            }
          ],
          "Name": "ProcessEvents"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "priority",
              "Type": "CoreDispatcherPriority"
            },
            {
              "Name": "agileCallback",
              "Type": "DispatchedHandler"
            }
          ],
          "Name": "RunAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "agileCallback",
              "Type": "IdleDispatchedHandler"
            }
          ],
          "Name": "RunIdleAsync"
        },
        {
          "ReturnType": "Boolean",
          "Name": "ShouldYield"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "priority",
              "Type": "CoreDispatcherPriority"
            }
          ],
          "Name": "ShouldYield"
        },
        {
          "ReturnType": "Void",
          "Name": "StopProcessEvents"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<CoreDispatcher,AcceleratorKeyEventArgs>",
          "Name": "AcceleratorKeyActivated"
        }
      ],
      "Name": "Windows.UI.Core.CoreDispatcher"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreInputSourceBase",
        "ICorePointerInputSource"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "CoreDispatcher",
          "IsGet": true,
          "Name": "Dispatcher"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasCapture"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsInputEnabled"
        },
        {
          "Type": "CoreCursor",
          "IsGet": true,
          "IsSet": true,
          "Name": "PointerCursor"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "Name": "PointerPosition"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "ReleasePointerCapture"
        },
        {
          "ReturnType": "Void",
          "Name": "SetPointerCapture"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<Object,InputEnabledEventArgs>",
          "Name": "InputEnabled"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerCaptureLost"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerEntered"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerExited"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerMoved"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerPressed"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerReleased"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerWheelChanged"
        }
      ],
      "Name": "Windows.UI.Core.CoreIndependentInputSource"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreInputSourceBase",
        "ICorePointerInputSource"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "CoreDispatcher",
          "IsGet": true,
          "Name": "Dispatcher"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasCapture"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsInputEnabled"
        },
        {
          "Type": "CoreCursor",
          "IsGet": true,
          "IsSet": true,
          "Name": "PointerCursor"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "Name": "PointerPosition"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "ReleasePointerCapture"
        },
        {
          "ReturnType": "Void",
          "Name": "SetPointerCapture"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<Object,InputEnabledEventArgs>",
          "Name": "InputEnabled"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerCaptureLost"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerEntered"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerExited"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerMoved"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerPressed"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerReleased"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerWheelChanged"
        }
      ],
      "Name": "Windows.UI.Core.CoreInput"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreWindow"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "AutomationHostProvider"
        },
        {
          "Type": "Rect",
          "IsGet": true,
          "Name": "Bounds"
        },
        {
          "Type": "IPropertySet",
          "IsGet": true,
          "Name": "CustomProperties"
        },
        {
          "Type": "CoreDispatcher",
          "IsGet": true,
          "Name": "Dispatcher"
        },
        {
          "Type": "CoreWindowFlowDirection",
          "IsGet": true,
          "IsSet": true,
          "Name": "FlowDirection"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsInputEnabled"
        },
        {
          "Type": "CoreCursor",
          "IsGet": true,
          "IsSet": true,
          "Name": "PointerCursor"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "Name": "PointerPosition"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Visible"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Activate"
        },
        {
          "ReturnType": "Void",
          "Name": "Close"
        },
        {
          "ReturnType": "CoreVirtualKeyStates",
          "Parameters": [
            {
              "Name": "virtualKey",
              "Type": "VirtualKey"
            }
          ],
          "Name": "GetAsyncKeyState"
        },
        {
          "IsStatic": true,
          "ReturnType": "CoreWindow",
          "Name": "GetForCurrentThread"
        },
        {
          "ReturnType": "CoreVirtualKeyStates",
          "Parameters": [
            {
              "Name": "virtualKey",
              "Type": "VirtualKey"
            }
          ],
          "Name": "GetKeyState"
        },
        {
          "ReturnType": "Void",
          "Name": "ReleasePointerCapture"
        },
        {
          "ReturnType": "Void",
          "Name": "SetPointerCapture"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<CoreWindow,WindowActivatedEventArgs>",
          "Name": "Activated"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,AutomationProviderRequestedEventArgs>",
          "Name": "AutomationProviderRequested"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,CoreWindowEventArgs>",
          "Name": "Closed"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,CharacterReceivedEventArgs>",
          "Name": "CharacterReceived"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,InputEnabledEventArgs>",
          "Name": "InputEnabled"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,KeyEventArgs>",
          "Name": "KeyDown"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,KeyEventArgs>",
          "Name": "KeyUp"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>",
          "Name": "PointerCaptureLost"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>",
          "Name": "PointerEntered"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>",
          "Name": "PointerExited"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>",
          "Name": "PointerMoved"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>",
          "Name": "PointerPressed"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>",
          "Name": "PointerReleased"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>",
          "Name": "PointerWheelChanged"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,WindowSizeChangedEventArgs>",
          "Name": "SizeChanged"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,TouchHitTestingEventArgs>",
          "Name": "TouchHitTesting"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,VisibilityChangedEventArgs>",
          "Name": "VisibilityChanged"
        }
      ],
      "Name": "Windows.UI.Core.CoreWindow"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreWindowEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.CoreWindowEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "ShouldWaitForLayoutCompletion"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "CoreWindowResizeManager",
          "Name": "GetForCurrentView"
        },
        {
          "ReturnType": "Void",
          "Name": "NotifyLayoutCompleted"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Core.CoreWindowResizeManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreWindowEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "KeyCode"
        },
        {
          "Type": "CorePhysicalKeyStatus",
          "IsGet": true,
          "Name": "KeyStatus"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.CharacterReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsDispatcherIdle"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.IdleDispatchedHandlerArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreWindowEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "InputEnabled"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.InputEnabledEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreWindowEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "CorePhysicalKeyStatus",
          "IsGet": true,
          "Name": "KeyStatus"
        },
        {
          "Type": "VirtualKey",
          "IsGet": true,
          "Name": "VirtualKey"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.KeyEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreWindowEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PointerPoint",
          "IsGet": true,
          "Name": "CurrentPoint"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "VirtualKeyModifiers",
          "IsGet": true,
          "Name": "KeyModifiers"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IList<PointerPoint>",
          "Name": "GetIntermediatePoints"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Core.PointerEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<CoreTextCompositionSegment>",
          "IsGet": true,
          "Name": "CompositionSegments"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsCanceled"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "CoreTextRequestDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Core.Text.CoreTextCompositionCompletedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "PreconversionString"
        },
        {
          "Type": "CoreTextRange",
          "IsGet": true,
          "IsSet": true,
          "Name": "Range"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.Text.CoreTextCompositionSegment"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsCanceled"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "CoreTextRequestDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Core.Text.CoreTextCompositionStartedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Language",
          "IsGet": true,
          "Name": "InputLanguage"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.Text.CoreTextCurrentInputLanguageChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "CoreTextInputPaneDisplayPolicy",
          "IsGet": true,
          "IsSet": true,
          "Name": "InputPaneDisplayPolicy"
        },
        {
          "Type": "CoreTextInputScope",
          "IsGet": true,
          "IsSet": true,
          "Name": "InputScope"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsReadOnly"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Name"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "NotifyFocusEnter"
        },
        {
          "ReturnType": "Void",
          "Name": "NotifyFocusLeave"
        },
        {
          "ReturnType": "Void",
          "Name": "NotifyLayoutChanged"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "selection",
              "Type": "CoreTextRange"
            }
          ],
          "Name": "NotifySelectionChanged"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "modifiedRange",
              "Type": "CoreTextRange"
            },
            {
              "Name": "newLength",
              "Type": "Int32"
            },
            {
              "Name": "newSelection",
              "Type": "CoreTextRange"
            }
          ],
          "Name": "NotifyTextChanged"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<CoreTextEditContext,CoreTextCompositionCompletedEventArgs>",
          "Name": "CompositionCompleted"
        },
        {
          "Type": "TypedEventHandler<CoreTextEditContext,CoreTextCompositionStartedEventArgs>",
          "Name": "CompositionStarted"
        },
        {
          "Type": "TypedEventHandler<CoreTextEditContext,Object>",
          "Name": "FocusRemoved"
        },
        {
          "Type": "TypedEventHandler<CoreTextEditContext,CoreTextFormatUpdatingEventArgs>",
          "Name": "FormatUpdating"
        },
        {
          "Type": "TypedEventHandler<CoreTextEditContext,CoreTextLayoutRequestedEventArgs>",
          "Name": "LayoutRequested"
        },
        {
          "Type": "TypedEventHandler<CoreTextEditContext,CoreTextSelectionRequestedEventArgs>",
          "Name": "SelectionRequested"
        },
        {
          "Type": "TypedEventHandler<CoreTextEditContext,CoreTextSelectionUpdatingEventArgs>",
          "Name": "SelectionUpdating"
        },
        {
          "Type": "TypedEventHandler<CoreTextEditContext,CoreTextTextRequestedEventArgs>",
          "Name": "TextRequested"
        },
        {
          "Type": "TypedEventHandler<CoreTextEditContext,CoreTextTextUpdatingEventArgs>",
          "Name": "TextUpdating"
        }
      ],
      "Name": "Windows.UI.Core.Text.CoreTextEditContext"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<UIElementType>",
          "IsGet": true,
          "Name": "BackgroundColor"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsCanceled"
        },
        {
          "Type": "CoreTextRange",
          "IsGet": true,
          "Name": "Range"
        },
        {
          "Type": "CoreTextFormatUpdatingReason",
          "IsGet": true,
          "Name": "Reason"
        },
        {
          "Type": "CoreTextFormatUpdatingResult",
          "IsGet": true,
          "IsSet": true,
          "Name": "Result"
        },
        {
          "Type": "Nullable<UIElementType>",
          "IsGet": true,
          "Name": "TextColor"
        },
        {
          "Type": "Nullable<UIElementType>",
          "IsGet": true,
          "Name": "UnderlineColor"
        },
        {
          "Type": "Nullable<UnderlineType>",
          "IsGet": true,
          "Name": "UnderlineType"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "CoreTextRequestDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Core.Text.CoreTextFormatUpdatingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Language",
          "IsGet": true,
          "Name": "CurrentInputLanguage"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "TypedEventHandler<CoreTextInputServiceContext,CoreTextCurrentInputLanguageChangedEventArgs>",
          "Name": "CurrentInputLanguageChanged"
        }
      ],
      "Name": "Windows.UI.Core.Text.CoreTextInputServiceContext"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Rect",
          "IsGet": true,
          "IsSet": true,
          "Name": "ControlBounds"
        },
        {
          "Type": "Rect",
          "IsGet": true,
          "IsSet": true,
          "Name": "TextBounds"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.Text.CoreTextLayoutBounds"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsCanceled"
        },
        {
          "Type": "CoreTextLayoutBounds",
          "IsGet": true,
          "Name": "LayoutBounds"
        },
        {
          "Type": "CoreTextRange",
          "IsGet": true,
          "Name": "Range"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "CoreTextRequestDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Core.Text.CoreTextLayoutRequestedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Core.Text.CoreTextRequestDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsCanceled"
        },
        {
          "Type": "CoreTextRange",
          "IsGet": true,
          "IsSet": true,
          "Name": "Selection"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "CoreTextRequestDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Core.Text.CoreTextSelectionRequestedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsCanceled"
        },
        {
          "Type": "CoreTextSelectionUpdatingResult",
          "IsGet": true,
          "IsSet": true,
          "Name": "Result"
        },
        {
          "Type": "CoreTextRange",
          "IsGet": true,
          "Name": "Selection"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "CoreTextRequestDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Core.Text.CoreTextSelectionUpdatingEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Char",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HiddenCharacter"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.Text.CoreTextServicesConstants"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "CoreTextInputServiceContext",
          "IsGet": true,
          "Name": "InputServiceContext"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "CoreTextEditContext",
          "Name": "CreateEditContext"
        },
        {
          "IsStatic": true,
          "ReturnType": "CoreTextServicesManager",
          "Name": "GetForCurrentView"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Core.Text.CoreTextServicesManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsCanceled"
        },
        {
          "Type": "CoreTextRange",
          "IsGet": true,
          "Name": "Range"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Text"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "CoreTextRequestDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Core.Text.CoreTextTextRequestedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsCanceled"
        },
        {
          "Type": "CoreTextRange",
          "IsGet": true,
          "Name": "NewSelection"
        },
        {
          "Type": "CoreTextRange",
          "IsGet": true,
          "Name": "Range"
        },
        {
          "Type": "CoreTextTextUpdatingResult",
          "IsGet": true,
          "IsSet": true,
          "Name": "Result"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Text"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "CoreTextRequestDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Core.Text.CoreTextTextUpdatingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreWindowEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Rect",
          "IsGet": true,
          "Name": "BoundingBox"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "Name": "Point"
        },
        {
          "Type": "CoreProximityEvaluation",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProximityEvaluation"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "CoreProximityEvaluation",
          "Parameters": [
            {
              "Name": "controlBoundingBox",
              "Type": "Rect"
            }
          ],
          "Name": "EvaluateProximity"
        },
        {
          "ReturnType": "CoreProximityEvaluation",
          "Parameters": [
            {
              "Name": "controlVertices",
              "Type": "Point[]"
            }
          ],
          "Name": "EvaluateProximity"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Core.TouchHitTestingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreWindowEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Visible"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.VisibilityChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreWindowEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "CoreWindowActivationState",
          "IsGet": true,
          "Name": "WindowActivationState"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.WindowActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICoreWindowEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "Size",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.WindowSizeChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "CrossSlidingState",
          "IsGet": true,
          "Name": "CrossSlidingState"
        },
        {
          "Type": "PointerDeviceType",
          "IsGet": true,
          "Name": "PointerDeviceType"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "Name": "Position"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.CrossSlidingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DraggingState",
          "IsGet": true,
          "Name": "DraggingState"
        },
        {
          "Type": "PointerDeviceType",
          "IsGet": true,
          "Name": "PointerDeviceType"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "Name": "Position"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.DraggingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "EdgeGesture",
          "Name": "GetForCurrentView"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<EdgeGesture,EdgeGestureEventArgs>",
          "Name": "Canceled"
        },
        {
          "Type": "TypedEventHandler<EdgeGesture,EdgeGestureEventArgs>",
          "Name": "Completed"
        },
        {
          "Type": "TypedEventHandler<EdgeGesture,EdgeGestureEventArgs>",
          "Name": "Starting"
        }
      ],
      "Name": "Windows.UI.Input.EdgeGesture"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "EdgeGestureKind",
          "IsGet": true,
          "Name": "Kind"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.EdgeGestureEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AutoProcessInertia"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "CrossSlideExact"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "CrossSlideHorizontally"
        },
        {
          "Type": "CrossSlideThresholds",
          "IsGet": true,
          "IsSet": true,
          "Name": "CrossSlideThresholds"
        },
        {
          "Type": "GestureSettings",
          "IsGet": true,
          "IsSet": true,
          "Name": "GestureSettings"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "InertiaExpansion"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "InertiaExpansionDeceleration"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "InertiaRotationAngle"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "InertiaRotationDeceleration"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "InertiaTranslationDeceleration"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "InertiaTranslationDisplacement"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsActive"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsInertial"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "ManipulationExact"
        },
        {
          "Type": "MouseWheelParameters",
          "IsGet": true,
          "Name": "MouseWheelParameters"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "IsSet": true,
          "Name": "PivotCenter"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "PivotRadius"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "ShowGestureFeedback"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "PointerPoint"
            }
          ],
          "Name": "CanBeDoubleTap"
        },
        {
          "ReturnType": "Void",
          "Name": "CompleteGesture"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "PointerPoint"
            }
          ],
          "Name": "ProcessDownEvent"
        },
        {
          "ReturnType": "Void",
          "Name": "ProcessInertia"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "PointerPoint"
            },
            {
              "Name": "isShiftKeyDown",
              "Type": "Boolean"
            },
            {
              "Name": "isControlKeyDown",
              "Type": "Boolean"
            }
          ],
          "Name": "ProcessMouseWheelEvent"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "IList<PointerPoint>"
            }
          ],
          "Name": "ProcessMoveEvents"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "PointerPoint"
            }
          ],
          "Name": "ProcessUpEvent"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<GestureRecognizer,CrossSlidingEventArgs>",
          "Name": "CrossSliding"
        },
        {
          "Type": "TypedEventHandler<GestureRecognizer,DraggingEventArgs>",
          "Name": "Dragging"
        },
        {
          "Type": "TypedEventHandler<GestureRecognizer,HoldingEventArgs>",
          "Name": "Holding"
        },
        {
          "Type": "TypedEventHandler<GestureRecognizer,ManipulationCompletedEventArgs>",
          "Name": "ManipulationCompleted"
        },
        {
          "Type": "TypedEventHandler<GestureRecognizer,ManipulationInertiaStartingEventArgs>",
          "Name": "ManipulationInertiaStarting"
        },
        {
          "Type": "TypedEventHandler<GestureRecognizer,ManipulationStartedEventArgs>",
          "Name": "ManipulationStarted"
        },
        {
          "Type": "TypedEventHandler<GestureRecognizer,ManipulationUpdatedEventArgs>",
          "Name": "ManipulationUpdated"
        },
        {
          "Type": "TypedEventHandler<GestureRecognizer,RightTappedEventArgs>",
          "Name": "RightTapped"
        },
        {
          "Type": "TypedEventHandler<GestureRecognizer,TappedEventArgs>",
          "Name": "Tapped"
        }
      ],
      "Name": "Windows.UI.Input.GestureRecognizer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "HoldingState",
          "IsGet": true,
          "Name": "HoldingState"
        },
        {
          "Type": "PointerDeviceType",
          "IsGet": true,
          "Name": "PointerDeviceType"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "Name": "Position"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.HoldingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ManipulationDelta",
          "IsGet": true,
          "Name": "Cumulative"
        },
        {
          "Type": "PointerDeviceType",
          "IsGet": true,
          "Name": "PointerDeviceType"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "Name": "Position"
        },
        {
          "Type": "ManipulationVelocities",
          "IsGet": true,
          "Name": "Velocities"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.ManipulationCompletedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ManipulationDelta",
          "IsGet": true,
          "Name": "Cumulative"
        },
        {
          "Type": "ManipulationDelta",
          "IsGet": true,
          "Name": "Delta"
        },
        {
          "Type": "PointerDeviceType",
          "IsGet": true,
          "Name": "PointerDeviceType"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "Name": "Position"
        },
        {
          "Type": "ManipulationVelocities",
          "IsGet": true,
          "Name": "Velocities"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.ManipulationInertiaStartingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ManipulationDelta",
          "IsGet": true,
          "Name": "Cumulative"
        },
        {
          "Type": "PointerDeviceType",
          "IsGet": true,
          "Name": "PointerDeviceType"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "Name": "Position"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.ManipulationStartedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ManipulationDelta",
          "IsGet": true,
          "Name": "Cumulative"
        },
        {
          "Type": "ManipulationDelta",
          "IsGet": true,
          "Name": "Delta"
        },
        {
          "Type": "PointerDeviceType",
          "IsGet": true,
          "Name": "PointerDeviceType"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "Name": "Position"
        },
        {
          "Type": "ManipulationVelocities",
          "IsGet": true,
          "Name": "Velocities"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.ManipulationUpdatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "DeltaRotationAngle"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "DeltaScale"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "IsSet": true,
          "Name": "CharTranslation"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "IsSet": true,
          "Name": "PageTranslation"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.MouseWheelParameters"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "FrameId"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsInContact"
        },
        {
          "Type": "PointerDevice",
          "IsGet": true,
          "Name": "PointerDevice"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "PointerId"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "Name": "Position"
        },
        {
          "Type": "PointerPointProperties",
          "IsGet": true,
          "Name": "Properties"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "Name": "RawPosition"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "Timestamp"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "PointerPoint",
          "Parameters": [
            {
              "Name": "pointerId",
              "Type": "UInt32"
            }
          ],
          "Name": "GetCurrentPoint"
        },
        {
          "IsStatic": true,
          "ReturnType": "PointerPoint",
          "Parameters": [
            {
              "Name": "pointerId",
              "Type": "UInt32"
            },
            {
              "Name": "transform",
              "Type": "IPointerPointTransform"
            }
          ],
          "Name": "GetCurrentPoint"
        },
        {
          "IsStatic": true,
          "ReturnType": "IList<PointerPoint>",
          "Parameters": [
            {
              "Name": "pointerId",
              "Type": "UInt32"
            }
          ],
          "Name": "GetIntermediatePoints"
        },
        {
          "IsStatic": true,
          "ReturnType": "IList<PointerPoint>",
          "Parameters": [
            {
              "Name": "pointerId",
              "Type": "UInt32"
            },
            {
              "Name": "transform",
              "Type": "IPointerPointTransform"
            }
          ],
          "Name": "GetIntermediatePoints"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Input.PointerPoint"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Rect",
          "IsGet": true,
          "Name": "ContactRect"
        },
        {
          "Type": "Rect",
          "IsGet": true,
          "Name": "ContactRectRaw"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsBarrelButtonPressed"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsCanceled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsEraser"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsHorizontalMouseWheel"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsInRange"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsInverted"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsLeftButtonPressed"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsMiddleButtonPressed"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsPrimary"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsRightButtonPressed"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsXButton1Pressed"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsXButton2Pressed"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "MouseWheelDelta"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "Orientation"
        },
        {
          "Type": "PointerUpdateKind",
          "IsGet": true,
          "Name": "PointerUpdateKind"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "Pressure"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "TouchConfidence"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "Twist"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "XTilt"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "YTilt"
        },
        {
          "Type": "Nullable<Single>",
          "IsGet": true,
          "Name": "ZDistance"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "usagePage",
              "Type": "UInt32"
            },
            {
              "Name": "usageId",
              "Type": "UInt32"
            }
          ],
          "Name": "GetUsageValue"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "usagePage",
              "Type": "UInt32"
            },
            {
              "Name": "usageId",
              "Type": "UInt32"
            }
          ],
          "Name": "HasUsage"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Input.PointerPointProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsBarrelButtonFeedbackEnabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsContactFeedbackEnabled"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "PointerVisualizationSettings",
          "Name": "GetForCurrentView"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Input.PointerVisualizationSettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PointerDeviceType",
          "IsGet": true,
          "Name": "PointerDeviceType"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "Name": "Position"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.RightTappedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PointerDeviceType",
          "IsGet": true,
          "Name": "PointerDeviceType"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "Name": "Position"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "TapCount"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.TappedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "XmlDocument"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "Name": "Content"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true,
          "Name": "ExpirationTime"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Notifications.BadgeNotification"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "BadgeUpdater",
          "Name": "CreateBadgeUpdaterForApplication"
        },
        {
          "IsStatic": true,
          "ReturnType": "BadgeUpdater",
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ],
          "Name": "CreateBadgeUpdaterForApplication"
        },
        {
          "IsStatic": true,
          "ReturnType": "BadgeUpdater",
          "Parameters": [
            {
              "Name": "tileId",
              "Type": "String"
            }
          ],
          "Name": "CreateBadgeUpdaterForSecondaryTile"
        },
        {
          "IsStatic": true,
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "type",
              "Type": "BadgeTemplateType"
            }
          ],
          "Name": "GetTemplateContent"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Notifications.BadgeUpdateManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Clear"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "badgeContent",
              "Type": "Uri"
            },
            {
              "Name": "requestedInterval",
              "Type": "PeriodicUpdateRecurrence"
            }
          ],
          "Name": "StartPeriodicUpdate"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "badgeContent",
              "Type": "Uri"
            },
            {
              "Name": "startTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "requestedInterval",
              "Type": "PeriodicUpdateRecurrence"
            }
          ],
          "Name": "StartPeriodicUpdate"
        },
        {
          "ReturnType": "Void",
          "Name": "StopPeriodicUpdate"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "notification",
              "Type": "BadgeNotification"
            }
          ],
          "Name": "Update"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Notifications.BadgeUpdater"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "XmlDocument"
            },
            {
              "Name": "deliveryTime",
              "Type": "DateTimeOffset"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "Name": "Content"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "DeliveryTime"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true,
          "Name": "ExpirationTime"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Id"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Tag"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Notifications.ScheduledTileNotification"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "XmlDocument"
            },
            {
              "Name": "deliveryTime",
              "Type": "DateTimeOffset"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "XmlDocument"
            },
            {
              "Name": "deliveryTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "snoozeInterval",
              "Type": "TimeSpan"
            },
            {
              "Name": "maximumSnoozeCount",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "Name": "Content"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "DeliveryTime"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Group"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Id"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MaximumSnoozeCount"
        },
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "Name": "SnoozeInterval"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "SuppressPopup"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Tag"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Notifications.ScheduledToastNotification"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "XmlDocument"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "Name": "Content"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true,
          "Name": "ExpirationTime"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Notifications.TileFlyoutNotification"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "TileFlyoutUpdater",
          "Name": "CreateTileFlyoutUpdaterForApplication"
        },
        {
          "IsStatic": true,
          "ReturnType": "TileFlyoutUpdater",
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ],
          "Name": "CreateTileFlyoutUpdaterForApplication"
        },
        {
          "IsStatic": true,
          "ReturnType": "TileFlyoutUpdater",
          "Parameters": [
            {
              "Name": "tileId",
              "Type": "String"
            }
          ],
          "Name": "CreateTileFlyoutUpdaterForSecondaryTile"
        },
        {
          "IsStatic": true,
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "type",
              "Type": "TileFlyoutTemplateType"
            }
          ],
          "Name": "GetTemplateContent"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Notifications.TileFlyoutUpdateManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "NotificationSetting",
          "IsGet": true,
          "Name": "Setting"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Clear"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "tileFlyoutContent",
              "Type": "Uri"
            },
            {
              "Name": "requestedInterval",
              "Type": "PeriodicUpdateRecurrence"
            }
          ],
          "Name": "StartPeriodicUpdate"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "tileFlyoutContent",
              "Type": "Uri"
            },
            {
              "Name": "startTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "requestedInterval",
              "Type": "PeriodicUpdateRecurrence"
            }
          ],
          "Name": "StartPeriodicUpdate"
        },
        {
          "ReturnType": "Void",
          "Name": "StopPeriodicUpdate"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "notification",
              "Type": "TileFlyoutNotification"
            }
          ],
          "Name": "Update"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Notifications.TileFlyoutUpdater"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "XmlDocument"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "Name": "Content"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true,
          "Name": "ExpirationTime"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Tag"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Notifications.TileNotification"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "TileUpdater",
          "Name": "CreateTileUpdaterForApplication"
        },
        {
          "IsStatic": true,
          "ReturnType": "TileUpdater",
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ],
          "Name": "CreateTileUpdaterForApplication"
        },
        {
          "IsStatic": true,
          "ReturnType": "TileUpdater",
          "Parameters": [
            {
              "Name": "tileId",
              "Type": "String"
            }
          ],
          "Name": "CreateTileUpdaterForSecondaryTile"
        },
        {
          "IsStatic": true,
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "type",
              "Type": "TileTemplateType"
            }
          ],
          "Name": "GetTemplateContent"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Notifications.TileUpdateManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "NotificationSetting",
          "IsGet": true,
          "Name": "Setting"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "scheduledTile",
              "Type": "ScheduledTileNotification"
            }
          ],
          "Name": "AddToSchedule"
        },
        {
          "ReturnType": "Void",
          "Name": "Clear"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "enable",
              "Type": "Boolean"
            }
          ],
          "Name": "EnableNotificationQueue"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "enable",
              "Type": "Boolean"
            }
          ],
          "Name": "EnableNotificationQueueForSquare150x150"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "enable",
              "Type": "Boolean"
            }
          ],
          "Name": "EnableNotificationQueueForSquare310x310"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "enable",
              "Type": "Boolean"
            }
          ],
          "Name": "EnableNotificationQueueForWide310x150"
        },
        {
          "ReturnType": "IReadOnlyList<ScheduledTileNotification>",
          "Name": "GetScheduledTileNotifications"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "scheduledTile",
              "Type": "ScheduledTileNotification"
            }
          ],
          "Name": "RemoveFromSchedule"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "tileContent",
              "Type": "Uri"
            },
            {
              "Name": "startTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "requestedInterval",
              "Type": "PeriodicUpdateRecurrence"
            }
          ],
          "Name": "StartPeriodicUpdate"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "tileContent",
              "Type": "Uri"
            },
            {
              "Name": "requestedInterval",
              "Type": "PeriodicUpdateRecurrence"
            }
          ],
          "Name": "StartPeriodicUpdate"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "tileContents",
              "Type": "IEnumerable<Uri>"
            },
            {
              "Name": "startTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "requestedInterval",
              "Type": "PeriodicUpdateRecurrence"
            }
          ],
          "Name": "StartPeriodicUpdateBatch"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "tileContents",
              "Type": "IEnumerable<Uri>"
            },
            {
              "Name": "requestedInterval",
              "Type": "PeriodicUpdateRecurrence"
            }
          ],
          "Name": "StartPeriodicUpdateBatch"
        },
        {
          "ReturnType": "Void",
          "Name": "StopPeriodicUpdate"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "notification",
              "Type": "TileNotification"
            }
          ],
          "Name": "Update"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Notifications.TileUpdater"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Arguments"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Notifications.ToastActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ToastDismissalReason",
          "IsGet": true,
          "Name": "Reason"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Notifications.ToastDismissedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Exception",
          "IsGet": true,
          "Name": "ErrorCode"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Notifications.ToastFailedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "XmlDocument"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "Name": "Content"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true,
          "Name": "ExpirationTime"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Group"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "SuppressPopup"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Tag"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "TypedEventHandler<ToastNotification,Object>",
          "Name": "Activated"
        },
        {
          "Type": "TypedEventHandler<ToastNotification,ToastDismissedEventArgs>",
          "Name": "Dismissed"
        },
        {
          "Type": "TypedEventHandler<ToastNotification,ToastFailedEventArgs>",
          "Name": "Failed"
        }
      ],
      "Name": "Windows.UI.Notifications.ToastNotification"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Clear"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ],
          "Name": "Clear"
        },
        {
          "ReturnType": "IReadOnlyList<ToastNotification>",
          "Name": "GetHistory"
        },
        {
          "ReturnType": "IReadOnlyList<ToastNotification>",
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ],
          "Name": "GetHistory"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "tag",
              "Type": "String"
            },
            {
              "Name": "group",
              "Type": "String"
            },
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ],
          "Name": "Remove"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "tag",
              "Type": "String"
            },
            {
              "Name": "group",
              "Type": "String"
            }
          ],
          "Name": "Remove"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "tag",
              "Type": "String"
            }
          ],
          "Name": "Remove"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "group",
              "Type": "String"
            }
          ],
          "Name": "RemoveGroup"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "group",
              "Type": "String"
            },
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ],
          "Name": "RemoveGroup"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Notifications.ToastNotificationHistory"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ToastHistoryChangedType",
          "IsGet": true,
          "Name": "ChangeType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Notifications.ToastNotificationHistoryChangedTriggerDetail"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ToastNotificationHistory",
          "IsStatic": true,
          "IsGet": true,
          "Name": "History"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "ToastNotifier",
          "Name": "CreateToastNotifier"
        },
        {
          "IsStatic": true,
          "ReturnType": "ToastNotifier",
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ],
          "Name": "CreateToastNotifier"
        },
        {
          "IsStatic": true,
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "type",
              "Type": "ToastTemplateType"
            }
          ],
          "Name": "GetTemplateContent"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Notifications.ToastNotificationManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "NotificationSetting",
          "IsGet": true,
          "Name": "Setting"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "scheduledToast",
              "Type": "ScheduledToastNotification"
            }
          ],
          "Name": "AddToSchedule"
        },
        {
          "ReturnType": "IReadOnlyList<ScheduledToastNotification>",
          "Name": "GetScheduledToastNotifications"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "notification",
              "Type": "ToastNotification"
            }
          ],
          "Name": "Hide"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "scheduledToast",
              "Type": "ScheduledToastNotification"
            }
          ],
          "Name": "RemoveFromSchedule"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "notification",
              "Type": "ToastNotification"
            }
          ],
          "Name": "Show"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Notifications.ToastNotifier"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "String"
            },
            {
              "Name": "title",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "CancelCommandIndex"
        },
        {
          "Type": "IList<IUICommand>",
          "IsGet": true,
          "Name": "Commands"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Content"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "DefaultCommandIndex"
        },
        {
          "Type": "MessageDialogOptions",
          "IsGet": true,
          "IsSet": true,
          "Name": "Options"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IUICommand>",
          "Name": "ShowAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Popups.MessageDialog"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<IUICommand>",
          "IsGet": true,
          "Name": "Commands"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IUICommand>",
          "Parameters": [
            {
              "Name": "invocationPoint",
              "Type": "Point"
            }
          ],
          "Name": "ShowAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IUICommand>",
          "Parameters": [
            {
              "Name": "selection",
              "Type": "Rect"
            }
          ],
          "Name": "ShowForSelectionAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IUICommand>",
          "Parameters": [
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            }
          ],
          "Name": "ShowForSelectionAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Popups.PopupMenu"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IUICommand"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "label",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "label",
              "Type": "String"
            },
            {
              "Name": "action",
              "Type": "UICommandInvokedHandler"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "label",
              "Type": "String"
            },
            {
              "Name": "action",
              "Type": "UICommandInvokedHandler"
            },
            {
              "Name": "commandId",
              "Type": "Object"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Id"
        },
        {
          "Type": "UICommandInvokedHandler",
          "IsGet": true,
          "IsSet": true,
          "Name": "Invoked"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Label"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Popups.UICommand"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IUICommand"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Id"
        },
        {
          "Type": "UICommandInvokedHandler",
          "IsGet": true,
          "IsSet": true,
          "Name": "Invoked"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Label"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Popups.UICommandSeparator"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "tileId",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "tileId",
              "Type": "String"
            },
            {
              "Name": "displayName",
              "Type": "String"
            },
            {
              "Name": "arguments",
              "Type": "String"
            },
            {
              "Name": "square150x150Logo",
              "Type": "Uri"
            },
            {
              "Name": "desiredSize",
              "Type": "TileSize"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "tileId",
              "Type": "String"
            },
            {
              "Name": "shortName",
              "Type": "String"
            },
            {
              "Name": "displayName",
              "Type": "String"
            },
            {
              "Name": "arguments",
              "Type": "String"
            },
            {
              "Name": "tileOptions",
              "Type": "TileOptions"
            },
            {
              "Name": "logoReference",
              "Type": "Uri"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "tileId",
              "Type": "String"
            },
            {
              "Name": "shortName",
              "Type": "String"
            },
            {
              "Name": "displayName",
              "Type": "String"
            },
            {
              "Name": "arguments",
              "Type": "String"
            },
            {
              "Name": "tileOptions",
              "Type": "TileOptions"
            },
            {
              "Name": "logoReference",
              "Type": "Uri"
            },
            {
              "Name": "wideLogoReference",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Arguments"
        },
        {
          "Type": "Color",
          "IsGet": true,
          "IsSet": true,
          "Name": "BackgroundColor"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "ForegroundText",
          "IsGet": true,
          "IsSet": true,
          "Name": "ForegroundText"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "LockScreenBadgeLogo"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "LockScreenDisplayBadgeAndTileText"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "Logo"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "PhoneticName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "RoamingEnabled"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ShortName"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "SmallLogo"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "TileId"
        },
        {
          "Type": "TileOptions",
          "IsGet": true,
          "IsSet": true,
          "Name": "TileOptions"
        },
        {
          "Type": "SecondaryTileVisualElements",
          "IsGet": true,
          "Name": "VisualElements"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "WideLogo"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "tileId",
              "Type": "String"
            }
          ],
          "Name": "Exists"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<SecondaryTile>>",
          "Name": "FindAllAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<SecondaryTile>>",
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ],
          "Name": "FindAllAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<SecondaryTile>>",
          "Name": "FindAllForPackageAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Name": "RequestCreateAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "invocationPoint",
              "Type": "Point"
            }
          ],
          "Name": "RequestCreateAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "selection",
              "Type": "Rect"
            }
          ],
          "Name": "RequestCreateForSelectionAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            }
          ],
          "Name": "RequestCreateForSelectionAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Name": "RequestDeleteAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "invocationPoint",
              "Type": "Point"
            }
          ],
          "Name": "RequestDeleteAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "selection",
              "Type": "Rect"
            }
          ],
          "Name": "RequestDeleteForSelectionAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "selection",
              "Type": "Rect"
            },
            {
              "Name": "preferredPlacement",
              "Type": "Placement"
            }
          ],
          "Name": "RequestDeleteForSelectionAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Name": "UpdateAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<SecondaryTile,VisualElementsRequestedEventArgs>",
          "Name": "VisualElementsRequested"
        }
      ],
      "Name": "Windows.UI.StartScreen.SecondaryTile"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Color",
          "IsGet": true,
          "IsSet": true,
          "Name": "BackgroundColor"
        },
        {
          "Type": "ForegroundText",
          "IsGet": true,
          "IsSet": true,
          "Name": "ForegroundText"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "ShowNameOnSquare150x150Logo"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "ShowNameOnSquare310x310Logo"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "ShowNameOnWide310x150Logo"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "Square150x150Logo"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "Square30x30Logo"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "Square310x310Logo"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "Square70x70Logo"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "Square71x71Logo"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "Wide310x150Logo"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.StartScreen.SecondaryTileVisualElements"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<SecondaryTileVisualElements>",
          "IsGet": true,
          "Name": "AlternateVisualElements"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Deadline"
        },
        {
          "Type": "SecondaryTileVisualElements",
          "IsGet": true,
          "Name": "VisualElements"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "VisualElementsRequestDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.StartScreen.VisualElementsRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.StartScreen.VisualElementsRequestDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "VisualElementsRequest",
          "IsGet": true,
          "Name": "Request"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.StartScreen.VisualElementsRequestedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "FontWeight",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Black"
        },
        {
          "Type": "FontWeight",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Bold"
        },
        {
          "Type": "FontWeight",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ExtraBlack"
        },
        {
          "Type": "FontWeight",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ExtraBold"
        },
        {
          "Type": "FontWeight",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ExtraLight"
        },
        {
          "Type": "FontWeight",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Light"
        },
        {
          "Type": "FontWeight",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Medium"
        },
        {
          "Type": "FontWeight",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Normal"
        },
        {
          "Type": "FontWeight",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SemiBold"
        },
        {
          "Type": "FontWeight",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SemiLight"
        },
        {
          "Type": "FontWeight",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Thin"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Text.FontWeights"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AutoColor"
        },
        {
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MaxUnitCount"
        },
        {
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MinUnitCount"
        },
        {
          "Type": "Color",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UndefinedColor"
        },
        {
          "Type": "Single",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UndefinedFloatValue"
        },
        {
          "Type": "FontStretch",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UndefinedFontStretch"
        },
        {
          "Type": "FontStyle",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UndefinedFontStyle"
        },
        {
          "Type": "Int32",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UndefinedInt32Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Text.TextConstants"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HighContrast"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "HighContrastScheme"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "TypedEventHandler<AccessibilitySettings,Object>",
          "Name": "HighContrastChanged"
        }
      ],
      "Name": "Windows.UI.ViewManagement.AccessibilitySettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AdjacentToLeftDisplayEdge"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AdjacentToRightDisplayEdge"
        },
        {
          "Type": "ApplicationViewBoundsMode",
          "IsGet": true,
          "Name": "DesiredBoundsMode"
        },
        {
          "Type": "FullScreenSystemOverlayMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "FullScreenSystemOverlayMode"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsFullScreen"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsFullScreenMode"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsOnLockScreen"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsScreenCaptureEnabled"
        },
        {
          "Type": "ApplicationViewOrientation",
          "IsGet": true,
          "Name": "Orientation"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "SuppressSystemOverlays"
        },
        {
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true,
          "Name": "TerminateAppOnFinalViewClose"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        },
        {
          "Type": "ApplicationViewTitleBar",
          "IsGet": true,
          "Name": "TitleBar"
        },
        {
          "Type": "Rect",
          "IsGet": true,
          "Name": "VisibleBounds"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "ExitFullScreenMode"
        },
        {
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "window",
              "Type": "ICoreWindow"
            }
          ],
          "Name": "GetApplicationViewIdForWindow"
        },
        {
          "IsStatic": true,
          "ReturnType": "ApplicationView",
          "Name": "GetForCurrentView"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "boundsMode",
              "Type": "ApplicationViewBoundsMode"
            }
          ],
          "Name": "SetDesiredBoundsMode"
        },
        {
          "ReturnType": "Void",
          "Name": "ShowStandardSystemOverlays"
        },
        {
          "ReturnType": "Boolean",
          "Name": "TryEnterFullScreenMode"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<ApplicationView,ApplicationViewConsolidatedEventArgs>",
          "Name": "Consolidated"
        },
        {
          "Type": "TypedEventHandler<ApplicationView,Object>",
          "Name": "VisibleBoundsChanged"
        }
      ],
      "Name": "Windows.UI.ViewManagement.ApplicationView"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsUserInitiated"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.ViewManagement.ApplicationViewConsolidatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<Color>",
          "IsGet": true,
          "IsSet": true,
          "Name": "BackgroundColor"
        },
        {
          "Type": "Nullable<Color>",
          "IsGet": true,
          "IsSet": true,
          "Name": "ButtonBackgroundColor"
        },
        {
          "Type": "Nullable<Color>",
          "IsGet": true,
          "IsSet": true,
          "Name": "ButtonForegroundColor"
        },
        {
          "Type": "Nullable<Color>",
          "IsGet": true,
          "IsSet": true,
          "Name": "ButtonHoverBackgroundColor"
        },
        {
          "Type": "Nullable<Color>",
          "IsGet": true,
          "IsSet": true,
          "Name": "ButtonHoverForegroundColor"
        },
        {
          "Type": "Nullable<Color>",
          "IsGet": true,
          "IsSet": true,
          "Name": "ButtonPressedBackgroundColor"
        },
        {
          "Type": "Nullable<Color>",
          "IsGet": true,
          "IsSet": true,
          "Name": "ButtonPressedForegroundColor"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "ExtendViewIntoTitleBar"
        },
        {
          "Type": "Nullable<Color>",
          "IsGet": true,
          "IsSet": true,
          "Name": "ForegroundColor"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "Height"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsVisible"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "SystemOverlayLeftInset"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "SystemOverlayRightInset"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "TypedEventHandler<ApplicationViewTitleBar,Object>",
          "Name": "IsVisibleChanged"
        },
        {
          "Type": "TypedEventHandler<ApplicationViewTitleBar,Object>",
          "Name": "LayoutMetricsChanged"
        }
      ],
      "Name": "Windows.UI.ViewManagement.ApplicationViewTitleBar"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Rect",
          "IsGet": true,
          "Name": "OccludedRect"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "InputPane",
          "Name": "GetForCurrentView"
        },
        {
          "ReturnType": "Boolean",
          "Name": "TryHide"
        },
        {
          "ReturnType": "Boolean",
          "Name": "TryShow"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<InputPane,InputPaneVisibilityEventArgs>",
          "Name": "Hiding"
        },
        {
          "Type": "TypedEventHandler<InputPane,InputPaneVisibilityEventArgs>",
          "Name": "Showing"
        }
      ],
      "Name": "Windows.UI.ViewManagement.InputPane"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "EnsuredFocusedElementInView"
        },
        {
          "Type": "Rect",
          "IsGet": true,
          "Name": "OccludedRect"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.ViewManagement.InputPaneVisibilityEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ProjectionDisplayAvailable"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "projectionViewId",
              "Type": "Int32"
            },
            {
              "Name": "anchorViewId",
              "Type": "Int32"
            }
          ],
          "Name": "StartProjectingAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "projectionViewId",
              "Type": "Int32"
            },
            {
              "Name": "anchorViewId",
              "Type": "Int32"
            }
          ],
          "Name": "StopProjectingAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "projectionViewId",
              "Type": "Int32"
            },
            {
              "Name": "anchorViewId",
              "Type": "Int32"
            }
          ],
          "Name": "SwapDisplaysForViewsAsync"
        }
      ],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "IsStatic": true,
          "Name": "ProjectionDisplayAvailableChanged"
        }
      ],
      "Name": "Windows.UI.ViewManagement.ProjectionManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<Color>",
          "IsGet": true,
          "IsSet": true,
          "Name": "BackgroundColor"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "BackgroundOpacity"
        },
        {
          "Type": "Nullable<Color>",
          "IsGet": true,
          "IsSet": true,
          "Name": "ForegroundColor"
        },
        {
          "Type": "Rect",
          "IsGet": true,
          "Name": "OccludedRect"
        },
        {
          "Type": "StatusBarProgressIndicator",
          "IsGet": true,
          "Name": "ProgressIndicator"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "StatusBar",
          "Name": "GetForCurrentView"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "HideAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "ShowAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<StatusBar,Object>",
          "Name": "Hiding"
        },
        {
          "Type": "TypedEventHandler<StatusBar,Object>",
          "Name": "Showing"
        }
      ],
      "Name": "Windows.UI.ViewManagement.StatusBar"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<Double>",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProgressValue"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Text"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Name": "HideAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "ShowAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.ViewManagement.StatusBarProgressIndicator"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AnimationsEnabled"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "CaretBlinkRate"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CaretBrowsingEnabled"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "CaretWidth"
        },
        {
          "Type": "Size",
          "IsGet": true,
          "Name": "CursorSize"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "DoubleClickTime"
        },
        {
          "Type": "HandPreference",
          "IsGet": true,
          "Name": "HandPreference"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MessageDuration"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MouseHoverTime"
        },
        {
          "Type": "Size",
          "IsGet": true,
          "Name": "ScrollBarArrowSize"
        },
        {
          "Type": "Size",
          "IsGet": true,
          "Name": "ScrollBarSize"
        },
        {
          "Type": "Size",
          "IsGet": true,
          "Name": "ScrollBarThumbBoxSize"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "TextScaleFactor"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Color",
          "Parameters": [
            {
              "Name": "desiredElement",
              "Type": "UIElementType"
            }
          ],
          "Name": "UIElementColor"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<UISettings,Object>",
          "Name": "TextScaleFactorChanged"
        }
      ],
      "Name": "Windows.UI.ViewManagement.UISettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.WebUI.ActivatedDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "ActivatedDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.WebUI.ActivatedOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Color",
          "IsGet": true,
          "IsSet": true,
          "Name": "BackgroundColor"
        },
        {
          "Type": "WebUICommandBarClosedDisplayMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "ClosedDisplayMode"
        },
        {
          "Type": "Color",
          "IsGet": true,
          "IsSet": true,
          "Name": "ForegroundColor"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsOpen"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Opacity"
        },
        {
          "Type": "IObservableVector<IWebUICommandBarElement>",
          "IsGet": true,
          "Name": "PrimaryCommands"
        },
        {
          "Type": "IObservableVector<IWebUICommandBarElement>",
          "IsGet": true,
          "Name": "SecondaryCommands"
        },
        {
          "Type": "Size",
          "IsGet": true,
          "Name": "Size"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Visible"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "WebUICommandBar",
          "Name": "GetForCurrentView"
        }
      ],
      "Events": [
        {
          "Type": "MenuClosedEventHandler",
          "Name": "MenuClosed"
        },
        {
          "Type": "MenuOpenedEventHandler",
          "Name": "MenuOpened"
        },
        {
          "Type": "SizeChangedEventHandler",
          "Name": "SizeChanged"
        }
      ],
      "Name": "Windows.UI.WebUI.Core.WebUICommandBar"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebUICommandBarIcon"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "Uri"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.Core.WebUICommandBarBitmapIcon"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebUICommandBarElement"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Text"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "TypedEventHandler<WebUICommandBarConfirmationButton,WebUICommandBarItemInvokedEventArgs>",
          "Name": "ItemInvoked"
        }
      ],
      "Name": "Windows.UI.WebUI.Core.WebUICommandBarConfirmationButton"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebUICommandBarElement"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Enabled"
        },
        {
          "Type": "IWebUICommandBarIcon",
          "IsGet": true,
          "IsSet": true,
          "Name": "Icon"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsChecked"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsToggleButton"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Label"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "TypedEventHandler<WebUICommandBarIconButton,WebUICommandBarItemInvokedEventArgs>",
          "Name": "ItemInvoked"
        }
      ],
      "Name": "Windows.UI.WebUI.Core.WebUICommandBarIconButton"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsPrimaryCommand"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.Core.WebUICommandBarItemInvokedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Size",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.Core.WebUICommandBarSizeChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebUICommandBarIcon"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "symbol",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Symbol"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.Core.WebUICommandBarSymbolIcon"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISuspendingDeferral"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.WebUI.SuspendingDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISuspendingEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SuspendingOperation",
          "IsGet": true,
          "Name": "SuspendingOperation"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.SuspendingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISuspendingOperation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Deadline"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "SuspendingDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.WebUI.SuspendingOperation"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "ActivatedEventHandler",
          "IsStatic": true,
          "Name": "Activated"
        },
        {
          "Type": "NavigatedEventHandler",
          "IsStatic": true,
          "Name": "Navigated"
        },
        {
          "Type": "ResumingEventHandler",
          "IsStatic": true,
          "Name": "Resuming"
        },
        {
          "Type": "SuspendingEventHandler",
          "IsStatic": true,
          "Name": "Suspending"
        }
      ],
      "Name": "Windows.UI.WebUI.WebUIApplication"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IAppointmentsProviderActivatedEventArgs",
        "IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivatedOperation",
          "IsGet": true,
          "Name": "ActivatedOperation"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "Name": "InstanceStartDate"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "LocalId"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RoamingId"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Verb"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIAppointmentsProviderShowAppointmentDetailsActivatedEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IWebUIBackgroundTaskInstance",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Current"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIBackgroundTaskInstance"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTaskInstance",
        "IWebUIBackgroundTaskInstance"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "InstanceId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Progress"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Succeeded"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "SuspendedCount"
        },
        {
          "Type": "BackgroundTaskRegistration",
          "IsGet": true,
          "Name": "Task"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "TriggerDetails"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "BackgroundTaskDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [
        {
          "Type": "BackgroundTaskCanceledEventHandler",
          "Name": "Canceled"
        }
      ],
      "Name": "Windows.UI.WebUI.WebUIBackgroundTaskInstanceRuntimeClass"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "ICachedFileUpdaterActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivatedOperation",
          "IsGet": true,
          "Name": "ActivatedOperation"
        },
        {
          "Type": "CachedFileUpdaterUI",
          "IsGet": true,
          "Name": "CachedFileUpdaterUI"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUICachedFileUpdaterActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IFileActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivatedOperation",
          "IsGet": true,
          "Name": "ActivatedOperation"
        },
        {
          "Type": "IReadOnlyList<IStorageItem>",
          "IsGet": true,
          "Name": "Files"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Verb"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIFileActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IFileOpenPickerActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivatedOperation",
          "IsGet": true,
          "Name": "ActivatedOperation"
        },
        {
          "Type": "FileOpenPickerUI",
          "IsGet": true,
          "Name": "FileOpenPickerUI"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIFileOpenPickerActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IContinuationActivatedEventArgs",
        "IFileOpenPickerContinuationEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivatedOperation",
          "IsGet": true,
          "Name": "ActivatedOperation"
        },
        {
          "Type": "ValueSet",
          "IsGet": true,
          "Name": "ContinuationData"
        },
        {
          "Type": "IReadOnlyList<StorageFile>",
          "IsGet": true,
          "Name": "Files"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIFileOpenPickerContinuationEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IFileSavePickerActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivatedOperation",
          "IsGet": true,
          "Name": "ActivatedOperation"
        },
        {
          "Type": "FileSavePickerUI",
          "IsGet": true,
          "Name": "FileSavePickerUI"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIFileSavePickerActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IContinuationActivatedEventArgs",
        "IFileSavePickerContinuationEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivatedOperation",
          "IsGet": true,
          "Name": "ActivatedOperation"
        },
        {
          "Type": "ValueSet",
          "IsGet": true,
          "Name": "ContinuationData"
        },
        {
          "Type": "StorageFile",
          "IsGet": true,
          "Name": "File"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIFileSavePickerContinuationEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IContinuationActivatedEventArgs",
        "IFolderPickerContinuationEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivatedOperation",
          "IsGet": true,
          "Name": "ActivatedOperation"
        },
        {
          "Type": "ValueSet",
          "IsGet": true,
          "Name": "ContinuationData"
        },
        {
          "Type": "StorageFolder",
          "IsGet": true,
          "Name": "Folder"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIFolderPickerContinuationEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "ILaunchActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivatedOperation",
          "IsGet": true,
          "Name": "ActivatedOperation"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Arguments"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "TileId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUILaunchActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUINavigatedDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebUINavigatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "WebUINavigatedOperation",
          "IsGet": true,
          "Name": "NavigatedOperation"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUINavigatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "WebUINavigatedDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUINavigatedOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IProtocolActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivatedOperation",
          "IsGet": true,
          "Name": "ActivatedOperation"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "Uri"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIProtocolActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "ISearchActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivatedOperation",
          "IsGet": true,
          "Name": "ActivatedOperation"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Language"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "QueryText"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUISearchActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IShareTargetActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivatedOperation",
          "IsGet": true,
          "Name": "ActivatedOperation"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "ShareOperation",
          "IsGet": true,
          "Name": "ShareOperation"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIShareTargetActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IVoiceCommandActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivatedOperation",
          "IsGet": true,
          "Name": "ActivatedOperation"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SpeechRecognitionResult",
          "IsGet": true,
          "Name": "Result"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIVoiceCommandActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IWalletActionActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ActionId"
        },
        {
          "Type": "WalletActionKind",
          "IsGet": true,
          "Name": "ActionKind"
        },
        {
          "Type": "ActivatedOperation",
          "IsGet": true,
          "Name": "ActivatedOperation"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ItemId"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIWalletActionActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IWebAccountProviderActivatedEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivatedOperation",
          "IsGet": true,
          "Name": "ActivatedOperation"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "IWebAccountProviderOperation",
          "IsGet": true,
          "Name": "Operation"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIWebAccountProviderActivatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IWebAccountProviderContinuationEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivatedOperation",
          "IsGet": true,
          "Name": "ActivatedOperation"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "WebTokenRequestResult",
          "IsGet": true,
          "Name": "Result"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIWebAccountProviderContinuationEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IActivatedEventArgs",
        "IActivatedEventArgsDeferral",
        "IContinuationActivatedEventArgs",
        "IWebAuthenticationBrokerContinuationEventArgs"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ActivatedOperation",
          "IsGet": true,
          "Name": "ActivatedOperation"
        },
        {
          "Type": "ValueSet",
          "IsGet": true,
          "Name": "ContinuationData"
        },
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        },
        {
          "Type": "WebAuthenticationResult",
          "IsGet": true,
          "Name": "WebAuthenticationResult"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.WebUIWebAuthenticationBrokerContinuationEventArgs"
    },
    {
      "BaseType": "StateTrigger",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "MinWindowHeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MinWindowHeightProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "MinWindowWidth"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MinWindowWidthProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.AdaptiveTrigger"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Application",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Current"
        },
        {
          "Type": "DebugSettings",
          "IsGet": true,
          "Name": "DebugSettings"
        },
        {
          "Type": "ApplicationTheme",
          "IsGet": true,
          "IsSet": true,
          "Name": "RequestedTheme"
        },
        {
          "Type": "ResourceDictionary",
          "IsGet": true,
          "IsSet": true,
          "Name": "Resources"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Exit"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "component",
              "Type": "Object"
            },
            {
              "Name": "resourceLocator",
              "Type": "Uri"
            },
            {
              "Name": "componentResourceLocation",
              "Type": "ComponentResourceLocation"
            }
          ],
          "Name": "LoadComponent"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "component",
              "Type": "Object"
            },
            {
              "Name": "resourceLocator",
              "Type": "Uri"
            }
          ],
          "Name": "LoadComponent"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "callback",
              "Type": "ApplicationInitializationCallback"
            }
          ],
          "Name": "Start"
        }
      ],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "Name": "Resuming"
        },
        {
          "Type": "SuspendingEventHandler",
          "Name": "Suspending"
        },
        {
          "Type": "UnhandledExceptionEventHandler",
          "Name": "UnhandledException"
        }
      ],
      "Name": "Windows.UI.Xaml.Application"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.ApplicationInitializationCallbackParams"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AnnotationTypeIdProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AnnotationTypeNameProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AuthorProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DateTimeProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TargetProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.AnnotationPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AcceleratorKeyProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AccessKeyProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AutomationIdProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BoundingRectangleProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ClassNameProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ClickablePointProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ControlledPeersProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ControlTypeProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HasKeyboardFocusProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HelpTextProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsContentElementProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsControlElementProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsEnabledProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsKeyboardFocusableProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsOffscreenProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsPasswordProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsRequiredForFormProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemStatusProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemTypeProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LabeledByProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LiveSettingProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LocalizedControlTypeProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NameProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OrientationProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.AutomationElementIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AcceleratorKeyProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AccessibilityViewProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AccessKeyProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AutomationIdProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ControlledPeersProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HelpTextProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsRequiredForFormProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemStatusProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemTypeProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LabeledByProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LiveSettingProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NameProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetAcceleratorKey"
        },
        {
          "IsStatic": true,
          "ReturnType": "AccessibilityView",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetAccessibilityView"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetAccessKey"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetAutomationId"
        },
        {
          "IsStatic": true,
          "ReturnType": "IList<UIElement>",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetControlledPeers"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetHelpText"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetIsRequiredForForm"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetItemStatus"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetItemType"
        },
        {
          "IsStatic": true,
          "ReturnType": "UIElement",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetLabeledBy"
        },
        {
          "IsStatic": true,
          "ReturnType": "AutomationLiveSetting",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetLiveSetting"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetName"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "SetAcceleratorKey"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "AccessibilityView"
            }
          ],
          "Name": "SetAccessibilityView"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "SetAccessKey"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "SetAutomationId"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "SetHelpText"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetIsRequiredForForm"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "SetItemStatus"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "SetItemType"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "UIElement"
            }
          ],
          "Name": "SetLabeledBy"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "AutomationLiveSetting"
            }
          ],
          "Name": "SetLiveSetting"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "SetName"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.AutomationProperties"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.AutomationProperty"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DockPositionProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.DockPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DropEffectProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DropEffectsProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GrabbedItemsProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsGrabbedProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.DragPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DropTargetEffectProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DropTargetEffectsProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.DropTargetPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ExpandCollapseStateProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ColumnProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ColumnSpanProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContainingGridProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RowProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RowSpanProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.GridItemPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ColumnCountProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RowCountProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.GridPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CurrentViewProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SupportedViewsProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.MultipleViewPatternIdentifiers"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [
        "IExpandCollapseProvider",
        "IToggleProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "AppBar"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "ExpandCollapseState",
          "IsGet": true,
          "Name": "ExpandCollapseState"
        },
        {
          "Type": "ToggleState",
          "IsGet": true,
          "Name": "ToggleState"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Collapse"
        },
        {
          "ReturnType": "Void",
          "Name": "Expand"
        },
        {
          "ReturnType": "Void",
          "Name": "Toggle"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.AppBarAutomationPeer"
    },
    {
      "BaseType": "ButtonAutomationPeer",
      "Interfaces": [
        "IInvokeProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "AppBarButton"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer"
    },
    {
      "BaseType": "ToggleButtonAutomationPeer",
      "Interfaces": [
        "IToggleProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "AppBarToggleButton"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AutomationPeer",
          "IsGet": true,
          "IsSet": true,
          "Name": "EventsSource"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "RawElementProviderRuntimeId",
          "Name": "GenerateRawElementProviderRuntimeId"
        },
        {
          "ReturnType": "String",
          "Name": "GetAcceleratorKey"
        },
        {
          "ReturnType": "String",
          "Name": "GetAccessKey"
        },
        {
          "ReturnType": "AutomationControlType",
          "Name": "GetAutomationControlType"
        },
        {
          "ReturnType": "String",
          "Name": "GetAutomationId"
        },
        {
          "ReturnType": "Rect",
          "Name": "GetBoundingRectangle"
        },
        {
          "ReturnType": "String",
          "Name": "GetClassName"
        },
        {
          "ReturnType": "Point",
          "Name": "GetClickablePoint"
        },
        {
          "ReturnType": "IReadOnlyList<AutomationPeer>",
          "Name": "GetControlledPeers"
        },
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "pointInWindowCoordinates",
              "Type": "Point"
            }
          ],
          "Name": "GetElementFromPoint"
        },
        {
          "ReturnType": "Object",
          "Name": "GetFocusedElement"
        },
        {
          "ReturnType": "String",
          "Name": "GetHelpText"
        },
        {
          "ReturnType": "IList<AutomationPeer>",
          "Name": "GetChildren"
        },
        {
          "ReturnType": "String",
          "Name": "GetItemStatus"
        },
        {
          "ReturnType": "String",
          "Name": "GetItemType"
        },
        {
          "ReturnType": "AutomationPeer",
          "Name": "GetLabeledBy"
        },
        {
          "ReturnType": "AutomationLiveSetting",
          "Name": "GetLiveSetting"
        },
        {
          "ReturnType": "String",
          "Name": "GetLocalizedControlType"
        },
        {
          "ReturnType": "String",
          "Name": "GetName"
        },
        {
          "ReturnType": "AutomationOrientation",
          "Name": "GetOrientation"
        },
        {
          "ReturnType": "AutomationPeer",
          "Name": "GetParent"
        },
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "patternInterface",
              "Type": "PatternInterface"
            }
          ],
          "Name": "GetPattern"
        },
        {
          "ReturnType": "AutomationPeer",
          "Parameters": [
            {
              "Name": "point",
              "Type": "Point"
            }
          ],
          "Name": "GetPeerFromPoint"
        },
        {
          "ReturnType": "Boolean",
          "Name": "HasKeyboardFocus"
        },
        {
          "ReturnType": "Void",
          "Name": "InvalidatePeer"
        },
        {
          "ReturnType": "Boolean",
          "Name": "IsContentElement"
        },
        {
          "ReturnType": "Boolean",
          "Name": "IsControlElement"
        },
        {
          "ReturnType": "Boolean",
          "Name": "IsEnabled"
        },
        {
          "ReturnType": "Boolean",
          "Name": "IsKeyboardFocusable"
        },
        {
          "ReturnType": "Boolean",
          "Name": "IsOffscreen"
        },
        {
          "ReturnType": "Boolean",
          "Name": "IsPassword"
        },
        {
          "ReturnType": "Boolean",
          "Name": "IsRequiredForForm"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "eventId",
              "Type": "AutomationEvents"
            }
          ],
          "Name": "ListenerExists"
        },
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "direction",
              "Type": "AutomationNavigationDirection"
            }
          ],
          "Name": "Navigate"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "eventId",
              "Type": "AutomationEvents"
            }
          ],
          "Name": "RaiseAutomationEvent"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "automationProperty",
              "Type": "AutomationProperty"
            },
            {
              "Name": "oldValue",
              "Type": "Object"
            },
            {
              "Name": "newValue",
              "Type": "Object"
            }
          ],
          "Name": "RaisePropertyChangedEvent"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "structureChangeType",
              "Type": "AutomationStructureChangeType"
            },
            {
              "Name": "child",
              "Type": "AutomationPeer"
            }
          ],
          "Name": "RaiseStructureChangedEvent"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "automationTextEditChangeType",
              "Type": "AutomationTextEditChangeType"
            },
            {
              "Name": "changedData",
              "Type": "IReadOnlyList<String>"
            }
          ],
          "Name": "RaiseTextEditTextChangedEvent"
        },
        {
          "ReturnType": "Void",
          "Name": "SetFocus"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "peer",
              "Type": "AutomationPeer"
            }
          ],
          "Name": "SetParent"
        },
        {
          "ReturnType": "Void",
          "Name": "ShowContextMenu"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.AutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "AutoSuggestBox"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer"
    },
    {
      "BaseType": "ButtonBaseAutomationPeer",
      "Interfaces": [
        "IInvokeProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "Button"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Invoke"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ButtonAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "CaptureElement"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.CaptureElementAutomationPeer"
    },
    {
      "BaseType": "SelectorAutomationPeer",
      "Interfaces": [
        "IExpandCollapseProvider",
        "IItemContainerProvider",
        "ISelectionProvider",
        "IValueProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ComboBox"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "ExpandCollapseState",
          "IsGet": true,
          "Name": "ExpandCollapseState"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsReadOnly"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Collapse"
        },
        {
          "ReturnType": "Void",
          "Name": "Expand"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "SetValue"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ComboBoxItem"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer"
    },
    {
      "BaseType": "SelectorItemAutomationPeer",
      "Interfaces": [
        "IScrollItemProvider",
        "ISelectionItemProvider",
        "IVirtualizedItemProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            },
            {
              "Name": "parent",
              "Type": "ComboBoxAutomationPeer"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "ScrollIntoView"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "DatePicker"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.DatePickerAutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer"
    },
    {
      "BaseType": "SelectorAutomationPeer",
      "Interfaces": [
        "IItemContainerProvider",
        "ISelectionProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "FlipView"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.FlipViewAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "FlipViewItem"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer"
    },
    {
      "BaseType": "SelectorItemAutomationPeer",
      "Interfaces": [
        "IScrollItemProvider",
        "ISelectionItemProvider",
        "IVirtualizedItemProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            },
            {
              "Name": "parent",
              "Type": "FlipViewAutomationPeer"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "ScrollIntoView"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "FlyoutPresenter"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer"
    },
    {
      "BaseType": "AutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "FrameworkElement"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "UIElement",
          "IsGet": true,
          "Name": "Owner"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "AutomationPeer",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "CreatePeerForElement"
        },
        {
          "IsStatic": true,
          "ReturnType": "AutomationPeer",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "FromElement"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer"
    },
    {
      "BaseType": "ListViewBaseAutomationPeer",
      "Interfaces": [
        "IDropTargetProvider",
        "IItemContainerProvider",
        "ISelectionProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "GridView"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.GridViewAutomationPeer"
    },
    {
      "BaseType": "ListViewBaseHeaderItemAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "GridViewHeaderItem"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "GridViewItem"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer"
    },
    {
      "BaseType": "SelectorItemAutomationPeer",
      "Interfaces": [
        "IScrollItemProvider",
        "ISelectionItemProvider",
        "IVirtualizedItemProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            },
            {
              "Name": "parent",
              "Type": "GridViewAutomationPeer"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "ScrollIntoView"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "GroupItem"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.GroupItemAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "Hub"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.HubAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [
        "IScrollItemProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "HubSection"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "ScrollIntoView"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.HubSectionAutomationPeer"
    },
    {
      "BaseType": "ButtonBaseAutomationPeer",
      "Interfaces": [
        "IInvokeProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "HyperlinkButton"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Invoke"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer"
    },
    {
      "BaseType": "ToggleButtonAutomationPeer",
      "Interfaces": [
        "IToggleProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "CheckBox"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "Image"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ImageAutomationPeer"
    },
    {
      "BaseType": "AutomationPeer",
      "Interfaces": [
        "IVirtualizedItemProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            },
            {
              "Name": "parent",
              "Type": "ItemsControlAutomationPeer"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Item"
        },
        {
          "Type": "ItemsControlAutomationPeer",
          "IsGet": true,
          "Name": "ItemsControlAutomationPeer"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Realize"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ItemAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [
        "IItemContainerProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ItemsControl"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "ItemAutomationPeer",
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            }
          ],
          "Name": "CreateItemAutomationPeer"
        },
        {
          "ReturnType": "IRawElementProviderSimple",
          "Parameters": [
            {
              "Name": "startAfter",
              "Type": "IRawElementProviderSimple"
            },
            {
              "Name": "automationProperty",
              "Type": "AutomationProperty"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "FindItemByProperty"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer"
    },
    {
      "BaseType": "SelectorAutomationPeer",
      "Interfaces": [
        "IItemContainerProvider",
        "ISelectionProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ListBox"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ListBoxAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ListBoxItem"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer"
    },
    {
      "BaseType": "SelectorItemAutomationPeer",
      "Interfaces": [
        "IScrollItemProvider",
        "ISelectionItemProvider",
        "IVirtualizedItemProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            },
            {
              "Name": "parent",
              "Type": "ListBoxAutomationPeer"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "ScrollIntoView"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer"
    },
    {
      "BaseType": "ListViewBaseAutomationPeer",
      "Interfaces": [
        "IDropTargetProvider",
        "IItemContainerProvider",
        "ISelectionProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ListView"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ListViewAutomationPeer"
    },
    {
      "BaseType": "SelectorAutomationPeer",
      "Interfaces": [
        "IDropTargetProvider",
        "IItemContainerProvider",
        "ISelectionProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ListViewBase"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DropEffect"
        },
        {
          "Type": "String[]",
          "IsGet": true,
          "Name": "DropEffects"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer"
    },
    {
      "BaseType": "ListViewBaseHeaderItemAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ListViewHeaderItem"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ListViewItem"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer"
    },
    {
      "BaseType": "SelectorItemAutomationPeer",
      "Interfaces": [
        "IScrollItemProvider",
        "ISelectionItemProvider",
        "IVirtualizedItemProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            },
            {
              "Name": "parent",
              "Type": "ListViewBaseAutomationPeer"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "ScrollIntoView"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [
        "IExpandCollapseProvider",
        "IItemContainerProvider",
        "IScrollProvider",
        "ISelectionProvider"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanSelectMultiple"
        },
        {
          "Type": "ExpandCollapseState",
          "IsGet": true,
          "Name": "ExpandCollapseState"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HorizontallyScrollable"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "HorizontalScrollPercent"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "HorizontalViewSize"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsSelectionRequired"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "VerticallyScrollable"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "VerticalScrollPercent"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "VerticalViewSize"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Collapse"
        },
        {
          "ReturnType": "Void",
          "Name": "Expand"
        },
        {
          "ReturnType": "IRawElementProviderSimple",
          "Parameters": [
            {
              "Name": "startAfter",
              "Type": "IRawElementProviderSimple"
            },
            {
              "Name": "automationProperty",
              "Type": "AutomationProperty"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "FindItemByProperty"
        },
        {
          "ReturnType": "IRawElementProviderSimple[]",
          "Name": "GetSelection"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "horizontalAmount",
              "Type": "ScrollAmount"
            },
            {
              "Name": "verticalAmount",
              "Type": "ScrollAmount"
            }
          ],
          "Name": "Scroll"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "horizontalPercent",
              "Type": "Double"
            },
            {
              "Name": "verticalPercent",
              "Type": "Double"
            }
          ],
          "Name": "SetScrollPercent"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [
        "IScrollItemProvider",
        "ISelectionItemProvider"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsSelected"
        },
        {
          "Type": "IRawElementProviderSimple",
          "IsGet": true,
          "Name": "SelectionContainer"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "AddToSelection"
        },
        {
          "ReturnType": "Void",
          "Name": "RemoveFromSelection"
        },
        {
          "ReturnType": "Void",
          "Name": "ScrollIntoView"
        },
        {
          "ReturnType": "Void",
          "Name": "Select"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "AutomationPeer",
      "Interfaces": [
        "IVirtualizedItemProvider"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Realize"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.MapControlAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "MediaElement"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.MediaElementAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [
        "IInvokeProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "MenuFlyoutItem"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Invoke"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer"
    },
    {
      "BaseType": "ItemsControlAutomationPeer",
      "Interfaces": [
        "IItemContainerProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "MenuFlyoutPresenter"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "PasswordBox"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "ItemsControlAutomationPeer",
      "Interfaces": [
        "IItemContainerProvider",
        "IScrollProvider",
        "ISelectionProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "Pivot"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanSelectMultiple"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HorizontallyScrollable"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "HorizontalScrollPercent"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "HorizontalViewSize"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsSelectionRequired"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "VerticallyScrollable"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "VerticalScrollPercent"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "VerticalViewSize"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IRawElementProviderSimple[]",
          "Name": "GetSelection"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "horizontalAmount",
              "Type": "ScrollAmount"
            },
            {
              "Name": "verticalAmount",
              "Type": "ScrollAmount"
            }
          ],
          "Name": "Scroll"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "horizontalPercent",
              "Type": "Double"
            },
            {
              "Name": "verticalPercent",
              "Type": "Double"
            }
          ],
          "Name": "SetScrollPercent"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.PivotAutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "PivotItem"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.PivotItemAutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "ItemAutomationPeer",
      "Interfaces": [
        "IScrollItemProvider",
        "ISelectionItemProvider",
        "IVirtualizedItemProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            },
            {
              "Name": "parent",
              "Type": "PivotAutomationPeer"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsSelected"
        },
        {
          "Type": "IRawElementProviderSimple",
          "IsGet": true,
          "Name": "SelectionContainer"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "AddToSelection"
        },
        {
          "ReturnType": "Void",
          "Name": "Realize"
        },
        {
          "ReturnType": "Void",
          "Name": "RemoveFromSelection"
        },
        {
          "ReturnType": "Void",
          "Name": "ScrollIntoView"
        },
        {
          "ReturnType": "Void",
          "Name": "Select"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer"
    },
    {
      "BaseType": "RangeBaseAutomationPeer",
      "Interfaces": [
        "IRangeValueProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ProgressBar"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ProgressRing"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer"
    },
    {
      "BaseType": "ToggleButtonAutomationPeer",
      "Interfaces": [
        "ISelectionItemProvider",
        "IToggleProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "RadioButton"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsSelected"
        },
        {
          "Type": "IRawElementProviderSimple",
          "IsGet": true,
          "Name": "SelectionContainer"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "AddToSelection"
        },
        {
          "ReturnType": "Void",
          "Name": "RemoveFromSelection"
        },
        {
          "ReturnType": "Void",
          "Name": "Select"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [
        "IRangeValueProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "RangeBase"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsReadOnly"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "LargeChange"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "Maximum"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "Minimum"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "SmallChange"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ],
          "Name": "SetValue"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer"
    },
    {
      "BaseType": "ButtonBaseAutomationPeer",
      "Interfaces": [
        "IInvokeProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "RepeatButton"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Invoke"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "RichEditBox"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "RichTextBlock"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "RichTextBlockOverflow"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer"
    },
    {
      "BaseType": "RangeBaseAutomationPeer",
      "Interfaces": [
        "IRangeValueProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ScrollBar"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [
        "IScrollProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ScrollViewer"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HorizontallyScrollable"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "HorizontalScrollPercent"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "HorizontalViewSize"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "VerticallyScrollable"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "VerticalScrollPercent"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "VerticalViewSize"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "horizontalAmount",
              "Type": "ScrollAmount"
            },
            {
              "Name": "verticalAmount",
              "Type": "ScrollAmount"
            }
          ],
          "Name": "Scroll"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "horizontalPercent",
              "Type": "Double"
            },
            {
              "Name": "verticalPercent",
              "Type": "Double"
            }
          ],
          "Name": "SetScrollPercent"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer"
    },
    {
      "BaseType": "ItemsControlAutomationPeer",
      "Interfaces": [
        "IItemContainerProvider",
        "ISelectionProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "Selector"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanSelectMultiple"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsSelectionRequired"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IRawElementProviderSimple[]",
          "Name": "GetSelection"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.SelectorAutomationPeer"
    },
    {
      "BaseType": "ItemAutomationPeer",
      "Interfaces": [
        "ISelectionItemProvider",
        "IVirtualizedItemProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            },
            {
              "Name": "parent",
              "Type": "SelectorAutomationPeer"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsSelected"
        },
        {
          "Type": "IRawElementProviderSimple",
          "IsGet": true,
          "Name": "SelectionContainer"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "AddToSelection"
        },
        {
          "ReturnType": "Void",
          "Name": "RemoveFromSelection"
        },
        {
          "ReturnType": "Void",
          "Name": "Select"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [
        "IToggleProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "SemanticZoom"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "ToggleState",
          "IsGet": true,
          "Name": "ToggleState"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Toggle"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "SettingsFlyout"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.SettingsFlyoutAutomationPeer"
    },
    {
      "BaseType": "RangeBaseAutomationPeer",
      "Interfaces": [
        "IRangeValueProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "Slider"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.SliderAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "TextBlock"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.TextBlockAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "TextBox"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.TextBoxAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "Thumb"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ThumbAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "TimePicker"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.TimePickerAutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer"
    },
    {
      "BaseType": "ButtonBaseAutomationPeer",
      "Interfaces": [
        "IToggleProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ToggleButton"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "ToggleState",
          "IsGet": true,
          "Name": "ToggleState"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Toggle"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [
        "IToggleProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ToggleMenuFlyoutItem"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "ToggleState",
          "IsGet": true,
          "Name": "ToggleState"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Toggle"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer"
    },
    {
      "BaseType": "FrameworkElementAutomationPeer",
      "Interfaces": [
        "IToggleProvider"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "owner",
              "Type": "ToggleSwitch"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "ToggleState",
          "IsGet": true,
          "Name": "ToggleState"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Toggle"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsReadOnlyProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LargeChangeProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MaximumProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MinimumProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SmallChangeProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ValueProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.RangeValuePatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HorizontallyScrollableProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HorizontalScrollPercentProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HorizontalViewSizeProperty"
        },
        {
          "Type": "Double",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NoScroll"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VerticallyScrollableProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VerticalScrollPercentProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VerticalViewSizeProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.ScrollPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsSelectedProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectionContainerProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.SelectionItemPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CanSelectMultipleProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsSelectionRequiredProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectionProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.SelectionPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FormulaProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ExtendedPropertiesProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FillColorProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FillPatternColorProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FillPatternStyleProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ShapeProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StyleIdProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StyleNameProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.StylesPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ColumnHeaderItemsProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RowHeaderItemsProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.TableItemPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ColumnHeadersProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RowHeadersProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RowOrColumnMajorProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.TablePatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ToggleStateProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.TogglePatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CanZoomProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MaxZoomProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MinZoomProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ZoomLevelProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.TransformPattern2Identifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CanMoveProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CanResizeProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CanRotateProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.TransformPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsReadOnlyProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ValueProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.ValuePatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CanMaximizeProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CanMinimizeProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsModalProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsTopmostProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "WindowInteractionStateProperty"
        },
        {
          "Type": "AutomationProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "WindowVisualStateProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.WindowPatternIdentifiers"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Message"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.BindingFailedEventArgs"
    },
    {
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AppBarClosedDisplayMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "ClosedDisplayMode"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ClosedDisplayModeProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsOpen"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsOpenProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsSticky"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsStickyProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "Name": "Closed"
        },
        {
          "Type": "EventHandler<Object>",
          "Name": "Opened"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.AppBar"
    },
    {
      "BaseType": "Button",
      "Interfaces": [
        "ICommandBarElement"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IconElement",
          "IsGet": true,
          "IsSet": true,
          "Name": "Icon"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IconProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsCompact"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsCompactProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Label"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LabelProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.AppBarButton"
    },
    {
      "BaseType": "Control",
      "Interfaces": [
        "ICommandBarElement"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsCompact"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsCompactProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.AppBarSeparator"
    },
    {
      "BaseType": "ToggleButton",
      "Interfaces": [
        "ICommandBarElement"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IconElement",
          "IsGet": true,
          "IsSet": true,
          "Name": "Icon"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IconProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsCompact"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsCompactProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Label"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LabelProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.AppBarToggleButton"
    },
    {
      "IsSealed": true,
      "BaseType": "ItemsControl",
      "Interfaces": [
        "IItemContainerMapping"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AutoMaximizeSuggestionArea"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AutoMaximizeSuggestionAreaProperty"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Header"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsSuggestionListOpen"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsSuggestionListOpenProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxSuggestionListHeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MaxSuggestionListHeightProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "PlaceholderText"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PlaceholderTextProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Text"
        },
        {
          "Type": "Style",
          "IsGet": true,
          "IsSet": true,
          "Name": "TextBoxStyle"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextBoxStyleProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "TextMemberPath"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextMemberPathProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "UpdateTextOnSelect"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UpdateTextOnSelectProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "TypedEventHandler<AutoSuggestBox,AutoSuggestBoxSuggestionChosenEventArgs>",
          "Name": "SuggestionChosen"
        },
        {
          "Type": "TypedEventHandler<AutoSuggestBox,AutoSuggestBoxTextChangedEventArgs>",
          "Name": "TextChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.AutoSuggestBox"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "SelectedItem"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AutoSuggestionBoxTextChangeReason",
          "IsGet": true,
          "IsSet": true,
          "Name": "Reason"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ReasonProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Name": "CheckCurrent"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.BackClickEventArgs"
    },
    {
      "BaseType": "IconElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "UriSource"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UriSourceProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.BitmapIcon"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "Background"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BackgroundProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "BorderBrush"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BorderBrushProperty"
        },
        {
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true,
          "Name": "BorderThickness"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BorderThicknessProperty"
        },
        {
          "Type": "CornerRadius",
          "IsGet": true,
          "IsSet": true,
          "Name": "CornerRadius"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CornerRadiusProperty"
        },
        {
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true,
          "Name": "Child"
        },
        {
          "Type": "TransitionCollection",
          "IsGet": true,
          "IsSet": true,
          "Name": "ChildTransitions"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ChildTransitionsProperty"
        },
        {
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true,
          "Name": "Padding"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PaddingProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Border"
    },
    {
      "BaseType": "ButtonBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "FlyoutBase",
          "IsGet": true,
          "IsSet": true,
          "Name": "Flyout"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FlyoutProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Button"
    },
    {
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "CalendarIdentifier"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CalendarIdentifierProperty"
        },
        {
          "Type": "Style",
          "IsGet": true,
          "IsSet": true,
          "Name": "CalendarViewStyle"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CalendarViewStyleProperty"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "Date"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DateFormat"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DateFormatProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DateProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DayOfWeekFormat"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DayOfWeekFormatProperty"
        },
        {
          "Type": "CalendarViewDisplayMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayMode"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DisplayModeProperty"
        },
        {
          "Type": "DayOfWeek",
          "IsGet": true,
          "IsSet": true,
          "Name": "FirstDayOfWeek"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FirstDayOfWeekProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsCalendarOpen"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsCalendarOpenProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsLabelVisible"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsLabelVisibleProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsOutOfScopeEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsOutOfScopeEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsTodayHighlighted"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsTodayHighlightedProperty"
        },
        {
          "Type": "IEnumerable<String>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Languages"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LanguagesProperty"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxDate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MaxDateProperty"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "MinDate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MinDateProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "PlaceholderText"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PlaceholderTextProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "date",
              "Type": "DateTimeOffset"
            }
          ],
          "Name": "SetDisplayDate"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "columns",
              "Type": "Int32"
            },
            {
              "Name": "rows",
              "Type": "Int32"
            }
          ],
          "Name": "SetYearDecadeDisplayDimensions"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<CalendarPicker,CalendarPickerSelectedDateErrorEventArgs>",
          "Name": "CalendarPickerSelectedDateError"
        },
        {
          "Type": "TypedEventHandler<CalendarPicker,CalendarPickerSelectedDateChangedEventArgs>",
          "Name": "CalendarPickerSelectedDateChanged"
        },
        {
          "Type": "CalendarViewDayItemChangingEventHandler",
          "Name": "CalendarViewDayItemChanging"
        },
        {
          "Type": "EventHandler<Object>",
          "Name": "Closed"
        },
        {
          "Type": "EventHandler<Object>",
          "Name": "Opened"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.CalendarPicker"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "IncorrectValue"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Message"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.CalendarPickerSelectedDateErrorEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "Name": "NewDate"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "Name": "OldDate"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.CalendarPickerSelectedDateChangedEventArgs"
    },
    {
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "BlackoutForeground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BlackoutForegroundProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "CalendarIdentifier"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CalendarIdentifierProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "CalendarItemBackground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CalendarItemBackgroundProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "CalendarItemBorderBrush"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CalendarItemBorderBrushProperty"
        },
        {
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true,
          "Name": "CalendarItemBorderThickness"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CalendarItemBorderThicknessProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "CalendarItemForeground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CalendarItemForegroundProperty"
        },
        {
          "Type": "Style",
          "IsGet": true,
          "IsSet": true,
          "Name": "CalendarViewDayItemStyle"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CalendarViewDayItemStyleProperty"
        },
        {
          "Type": "FontFamily",
          "IsGet": true,
          "IsSet": true,
          "Name": "DayItemFontFamily"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DayItemFontFamilyProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "DayItemFontSize"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DayItemFontSizeProperty"
        },
        {
          "Type": "FontStyle",
          "IsGet": true,
          "IsSet": true,
          "Name": "DayItemFontStyle"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DayItemFontStyleProperty"
        },
        {
          "Type": "FontWeight",
          "IsGet": true,
          "IsSet": true,
          "Name": "DayItemFontWeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DayItemFontWeightProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DayOfWeekFormat"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DayOfWeekFormatProperty"
        },
        {
          "Type": "CalendarViewDisplayMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayMode"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DisplayModeProperty"
        },
        {
          "Type": "DayOfWeek",
          "IsGet": true,
          "IsSet": true,
          "Name": "FirstDayOfWeek"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FirstDayOfWeekProperty"
        },
        {
          "Type": "FontFamily",
          "IsGet": true,
          "IsSet": true,
          "Name": "FirstOfMonthLabelFontFamily"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FirstOfMonthLabelFontFamilyProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "FirstOfMonthLabelFontSize"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FirstOfMonthLabelFontSizeProperty"
        },
        {
          "Type": "FontStyle",
          "IsGet": true,
          "IsSet": true,
          "Name": "FirstOfMonthLabelFontStyle"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FirstOfMonthLabelFontStyleProperty"
        },
        {
          "Type": "FontWeight",
          "IsGet": true,
          "IsSet": true,
          "Name": "FirstOfMonthLabelFontWeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FirstOfMonthLabelFontWeightProperty"
        },
        {
          "Type": "FontFamily",
          "IsGet": true,
          "IsSet": true,
          "Name": "FirstOfYearDecadeLabelFontFamily"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FirstOfYearDecadeLabelFontFamilyProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "FirstOfYearDecadeLabelFontSize"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FirstOfYearDecadeLabelFontSizeProperty"
        },
        {
          "Type": "FontStyle",
          "IsGet": true,
          "IsSet": true,
          "Name": "FirstOfYearDecadeLabelFontStyle"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FirstOfYearDecadeLabelFontStyleProperty"
        },
        {
          "Type": "FontWeight",
          "IsGet": true,
          "IsSet": true,
          "Name": "FirstOfYearDecadeLabelFontWeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FirstOfYearDecadeLabelFontWeightProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "FocusBorderBrush"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FocusBorderBrushProperty"
        },
        {
          "Type": "HorizontalAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "HorizontalDayItemAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HorizontalDayItemAlignmentProperty"
        },
        {
          "Type": "HorizontalAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "HorizontalFirstOfMonthLabelAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HorizontalFirstOfMonthLabelAlignmentProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "HoverBorderBrush"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HoverBorderBrushProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsLabelVisible"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsLabelVisibleProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsOutOfScopeEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsOutOfScopeEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsTodayHighlighted"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsTodayHighlightedProperty"
        },
        {
          "Type": "IEnumerable<String>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Languages"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LanguagesProperty"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxDate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MaxDateProperty"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "MinDate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MinDateProperty"
        },
        {
          "Type": "FontFamily",
          "IsGet": true,
          "IsSet": true,
          "Name": "MonthYearItemFontFamily"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MonthYearItemFontFamilyProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "MonthYearItemFontSize"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MonthYearItemFontSizeProperty"
        },
        {
          "Type": "FontStyle",
          "IsGet": true,
          "IsSet": true,
          "Name": "MonthYearItemFontStyle"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MonthYearItemFontStyleProperty"
        },
        {
          "Type": "FontWeight",
          "IsGet": true,
          "IsSet": true,
          "Name": "MonthYearItemFontWeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MonthYearItemFontWeightProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "NumberOfWeeksInView"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NumberOfWeeksInViewProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutOfScopeBackground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OutOfScopeBackgroundProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutOfScopeForeground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OutOfScopeForegroundProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "PressedBorderBrush"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PressedBorderBrushProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "PressedForeground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PressedForegroundProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedBorderBrush"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedBorderBrushProperty"
        },
        {
          "Type": "IList<DateTimeOffset>",
          "IsGet": true,
          "Name": "SelectedDates"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedDatesProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedForeground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedForegroundProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedHoverBorderBrush"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedHoverBorderBrushProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedPressedBorderBrush"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedPressedBorderBrushProperty"
        },
        {
          "Type": "CalendarViewSelectionMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectionMode"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectionModeProperty"
        },
        {
          "Type": "CalendarViewTemplateSettings",
          "IsGet": true,
          "Name": "TemplateSettings"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TemplateSettingsProperty"
        },
        {
          "Type": "FontWeight",
          "IsGet": true,
          "IsSet": true,
          "Name": "TodayFontWeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TodayFontWeightProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "TodayForeground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TodayForegroundProperty"
        },
        {
          "Type": "VerticalAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "VerticalDayItemAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VerticalDayItemAlignmentProperty"
        },
        {
          "Type": "VerticalAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "VerticalFirstOfMonthLabelAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VerticalFirstOfMonthLabelAlignmentProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "date",
              "Type": "DateTimeOffset"
            }
          ],
          "Name": "SetDisplayDate"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "columns",
              "Type": "Int32"
            },
            {
              "Name": "rows",
              "Type": "Int32"
            }
          ],
          "Name": "SetYearDecadeDisplayDimensions"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<CalendarView,CalendarViewDayItemChangingEventArgs>",
          "Name": "CalendarViewDayItemChanging"
        },
        {
          "Type": "TypedEventHandler<CalendarView,SelectedDatesChangedEventArgs>",
          "Name": "SelectedDatesChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.CalendarView"
    },
    {
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Date"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DateProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsBlackout"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsBlackoutProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "colors",
              "Type": "IEnumerable<Color>"
            }
          ],
          "Name": "SetDensityColors"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.CalendarViewDayItem"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "InRecycleQueue"
        },
        {
          "Type": "CalendarViewDayItem",
          "IsGet": true,
          "Name": "Item"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Phase"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "callback",
              "Type": "TypedEventHandler<CalendarView,CalendarViewDayItemChangingEventArgs>"
            }
          ],
          "Name": "RegisterUpdateCallback"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "callbackPhase",
              "Type": "UInt32"
            },
            {
              "Name": "callback",
              "Type": "TypedEventHandler<CalendarView,CalendarViewDayItemChangingEventArgs>"
            }
          ],
          "Name": "RegisterUpdateCallback"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.CalendarViewDayItemChangingEventArgs"
    },
    {
      "BaseType": "Panel",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LeftProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TopProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ZIndexProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Double",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "GetLeft"
        },
        {
          "IsStatic": true,
          "ReturnType": "Double",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "GetTop"
        },
        {
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "GetZIndex"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "length",
              "Type": "Double"
            }
          ],
          "Name": "SetLeft"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "length",
              "Type": "Double"
            }
          ],
          "Name": "SetTop"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Int32"
            }
          ],
          "Name": "SetZIndex"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Canvas"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MediaCapture",
          "IsGet": true,
          "IsSet": true,
          "Name": "Source"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SourceProperty"
        },
        {
          "Type": "Stretch",
          "IsGet": true,
          "IsSet": true,
          "Name": "Stretch"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StretchProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.CaptureElement"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Cancel"
        },
        {
          "Type": "UIElement",
          "IsGet": true,
          "Name": "UIElement"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.CleanUpVirtualizedItemEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ActualWidth"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxWidth"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MaxWidthProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "MinWidth"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MinWidthProperty"
        },
        {
          "Type": "GridLength",
          "IsGet": true,
          "IsSet": true,
          "Name": "Width"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "WidthProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ColumnDefinition"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<ColumnDefinition>",
        "IEnumerable",
        "IEnumerable<ColumnDefinition>",
        "IList<ColumnDefinition>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ColumnDefinitionCollection"
    },
    {
      "BaseType": "Selector",
      "Interfaces": [
        "IItemContainerMapping"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Header"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderProperty"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "HeaderTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderTemplateProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsDropDownOpen"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsDropDownOpenProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsEditable"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsSelectionBoxHighlighted"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxDropDownHeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MaxDropDownHeightProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "PlaceholderText"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PlaceholderTextProperty"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "SelectionBoxItem"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "Name": "SelectionBoxItemTemplate"
        },
        {
          "Type": "ComboBoxTemplateSettings",
          "IsGet": true,
          "Name": "TemplateSettings"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "Name": "DropDownClosed"
        },
        {
          "Type": "EventHandler<Object>",
          "Name": "DropDownOpened"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ComboBox"
    },
    {
      "BaseType": "SelectorItem",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ComboBoxItem"
    },
    {
      "BaseType": "AppBar",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IObservableVector<ICommandBarElement>",
          "IsGet": true,
          "Name": "PrimaryCommands"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PrimaryCommandsProperty"
        },
        {
          "Type": "IObservableVector<ICommandBarElement>",
          "IsGet": true,
          "Name": "SecondaryCommands"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SecondaryCommandsProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.CommandBar"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "InRecycleQueue"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Item"
        },
        {
          "Type": "SelectorItem",
          "IsGet": true,
          "Name": "ItemContainer"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "ItemIndex"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Phase"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "callback",
              "Type": "TypedEventHandler<ListViewBase,ContainerContentChangingEventArgs>"
            }
          ],
          "Name": "RegisterUpdateCallback"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "callbackPhase",
              "Type": "UInt32"
            },
            {
              "Name": "callback",
              "Type": "TypedEventHandler<ListViewBase,ContainerContentChangingEventArgs>"
            }
          ],
          "Name": "RegisterUpdateCallback"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs"
    },
    {
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Content"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContentProperty"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContentTemplateProperty"
        },
        {
          "Type": "UIElement",
          "IsGet": true,
          "Name": "ContentTemplateRoot"
        },
        {
          "Type": "DataTemplateSelector",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentTemplateSelector"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContentTemplateSelectorProperty"
        },
        {
          "Type": "TransitionCollection",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentTransitions"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContentTransitionsProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ContentControl"
    },
    {
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "FullSizeDesired"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FullSizeDesiredProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsPrimaryButtonEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsPrimaryButtonEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsSecondaryButtonEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsSecondaryButtonEnabledProperty"
        },
        {
          "Type": "ICommand",
          "IsGet": true,
          "IsSet": true,
          "Name": "PrimaryButtonCommand"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "PrimaryButtonCommandParameter"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PrimaryButtonCommandParameterProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PrimaryButtonCommandProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "PrimaryButtonText"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PrimaryButtonTextProperty"
        },
        {
          "Type": "ICommand",
          "IsGet": true,
          "IsSet": true,
          "Name": "SecondaryButtonCommand"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "SecondaryButtonCommandParameter"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SecondaryButtonCommandParameterProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SecondaryButtonCommandProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "SecondaryButtonText"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SecondaryButtonTextProperty"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TitleProperty"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "TitleTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TitleTemplateProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Hide"
        },
        {
          "ReturnType": "IAsyncOperation<ContentDialogResult>",
          "Name": "ShowAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<ContentDialog,ContentDialogClosedEventArgs>",
          "Name": "Closed"
        },
        {
          "Type": "TypedEventHandler<ContentDialog,ContentDialogClosingEventArgs>",
          "Name": "Closing"
        },
        {
          "Type": "TypedEventHandler<ContentDialog,ContentDialogOpenedEventArgs>",
          "Name": "Opened"
        },
        {
          "Type": "TypedEventHandler<ContentDialog,ContentDialogButtonClickEventArgs>",
          "Name": "PrimaryButtonClick"
        },
        {
          "Type": "TypedEventHandler<ContentDialog,ContentDialogButtonClickEventArgs>",
          "Name": "SecondaryButtonClick"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ContentDialog"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ContentDialogButtonClickDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Cancel"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "ContentDialogButtonClickDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ContentDialogButtonClickEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ContentDialogResult",
          "IsGet": true,
          "Name": "Result"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ContentDialogClosedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ContentDialogClosingDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Cancel"
        },
        {
          "Type": "ContentDialogResult",
          "IsGet": true,
          "Name": "Result"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "ContentDialogClosingDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ContentDialogClosingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ContentDialogOpenedEventArgs"
    },
    {
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Content"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContentProperty"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContentTemplateProperty"
        },
        {
          "Type": "DataTemplateSelector",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentTemplateSelector"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContentTemplateSelectorProperty"
        },
        {
          "Type": "TransitionCollection",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentTransitions"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContentTransitionsProperty"
        },
        {
          "Type": "FontFamily",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontFamily"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontFamilyProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontSize"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontSizeProperty"
        },
        {
          "Type": "FontStretch",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontStretch"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontStretchProperty"
        },
        {
          "Type": "FontStyle",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontStyle"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontStyleProperty"
        },
        {
          "Type": "FontWeight",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontWeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontWeightProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "Foreground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ForegroundProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "CharacterSpacing"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CharacterSpacingProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsTextScaleFactorEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsTextScaleFactorEnabledProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "LineHeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LineHeightProperty"
        },
        {
          "Type": "LineStackingStrategy",
          "IsGet": true,
          "IsSet": true,
          "Name": "LineStackingStrategy"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LineStackingStrategyProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxLines"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MaxLinesProperty"
        },
        {
          "Type": "OpticalMarginAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "OpticalMarginAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OpticalMarginAlignmentProperty"
        },
        {
          "Type": "TextLineBounds",
          "IsGet": true,
          "IsSet": true,
          "Name": "TextLineBounds"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextLineBoundsProperty"
        },
        {
          "Type": "TextWrapping",
          "IsGet": true,
          "IsSet": true,
          "Name": "TextWrapping"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextWrappingProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ContentPresenter"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "CursorLeft"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "CursorTop"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ContextMenuEventArgs"
    },
    {
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "Background"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BackgroundProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "BorderBrush"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BorderBrushProperty"
        },
        {
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true,
          "Name": "BorderThickness"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BorderThicknessProperty"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "DefaultStyleKey"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DefaultStyleKeyProperty"
        },
        {
          "Type": "FocusState",
          "IsGet": true,
          "Name": "FocusState"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FocusStateProperty"
        },
        {
          "Type": "FontFamily",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontFamily"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontFamilyProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontSize"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontSizeProperty"
        },
        {
          "Type": "FontStretch",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontStretch"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontStretchProperty"
        },
        {
          "Type": "FontStyle",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontStyle"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontStyleProperty"
        },
        {
          "Type": "FontWeight",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontWeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontWeightProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "Foreground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ForegroundProperty"
        },
        {
          "Type": "HorizontalAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "HorizontalContentAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HorizontalContentAlignmentProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "CharacterSpacing"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CharacterSpacingProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsTabStop"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsTabStopProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsTextScaleFactorEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsTextScaleFactorEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsValidationIndicatorEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsValidationIndicatorEnabledProperty"
        },
        {
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true,
          "Name": "Padding"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PaddingProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "TabIndex"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TabIndexProperty"
        },
        {
          "Type": "KeyboardNavigationMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "TabNavigation"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TabNavigationProperty"
        },
        {
          "Type": "ControlTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "Template"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TemplateProperty"
        },
        {
          "Type": "IObservableVector<ControlValidationError>",
          "IsGet": true,
          "Name": "ValidationErrors"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ValidationErrorsProperty"
        },
        {
          "Type": "Style",
          "IsGet": true,
          "IsSet": true,
          "Name": "ValidationIndicatorStyle"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ValidationIndicatorStyleProperty"
        },
        {
          "Type": "ControlValidationState",
          "IsGet": true,
          "Name": "ValidationState"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ValidationStateProperty"
        },
        {
          "Type": "VerticalAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "VerticalContentAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VerticalContentAlignmentProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Name": "ApplyTemplate"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "FocusState"
            }
          ],
          "Name": "Focus"
        }
      ],
      "Events": [
        {
          "Type": "DependencyPropertyChangedEventHandler",
          "Name": "IsEnabledChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Control"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkTemplate",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Type",
          "IsGet": true,
          "IsSet": true,
          "Name": "TargetType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ControlTemplate"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Message"
        },
        {
          "Type": "IEnumerable<String>",
          "IsGet": true,
          "IsSet": true,
          "Name": "PropertyNames"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ControlValidationError"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "DataTemplate",
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            },
            {
              "Name": "container",
              "Type": "DependencyObject"
            }
          ],
          "Name": "SelectTemplate"
        },
        {
          "ReturnType": "DataTemplate",
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            }
          ],
          "Name": "SelectTemplate"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.DataTemplateSelector"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "NewDate"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "OldDate"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.DatePickedEventArgs"
    },
    {
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "CalendarIdentifier"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CalendarIdentifierProperty"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "Date"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DateProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DayFormat"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DayFormatProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "DayVisible"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DayVisibleProperty"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Header"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderProperty"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "HeaderTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderTemplateProperty"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxYear"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MaxYearProperty"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "MinYear"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MinYearProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "MonthFormat"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MonthFormatProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "MonthVisible"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MonthVisibleProperty"
        },
        {
          "Type": "Orientation",
          "IsGet": true,
          "IsSet": true,
          "Name": "Orientation"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OrientationProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "YearFormat"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "YearFormatProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "YearVisible"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "YearVisibleProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "EventHandler<DatePickerValueChangedEventArgs>",
          "Name": "DateChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.DatePicker"
    },
    {
      "IsSealed": true,
      "BaseType": "PickerFlyoutBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "CalendarIdentifier"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CalendarIdentifierProperty"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "Date"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DateProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "DayVisible"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DayVisibleProperty"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxYear"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MaxYearProperty"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "MinYear"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MinYearProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "MonthVisible"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MonthVisibleProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "YearVisible"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "YearVisibleProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<Nullable<DateTimeOffset>>",
          "Parameters": [
            {
              "Name": "target",
              "Type": "FrameworkElement"
            }
          ],
          "Name": "ShowAtAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<DatePickerFlyout,DatePickedEventArgs>",
          "Name": "DatePicked"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.DatePickerFlyout"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [
        "ICustomPropertyProvider"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "PrimaryText"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PrimaryTextProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "SecondaryText"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SecondaryTextProperty"
        },
        {
          "Type": "Type",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "ICustomProperty",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "GetCustomProperty"
        },
        {
          "ReturnType": "ICustomProperty",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "Type"
            }
          ],
          "Name": "GetIndexedProperty"
        },
        {
          "ReturnType": "String",
          "Name": "GetStringRepresentation"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.DatePickerFlyoutItem"
    },
    {
      "IsSealed": true,
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.DatePickerFlyoutPresenter"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "NewDate"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "OldDate"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.DatePickerValueChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DataPackageOperation",
          "IsGet": true,
          "Name": "DropResult"
        },
        {
          "Type": "IReadOnlyList<Object>",
          "IsGet": true,
          "Name": "Items"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Cancel"
        },
        {
          "Type": "DataPackage",
          "IsGet": true,
          "Name": "Data"
        },
        {
          "Type": "IList<Object>",
          "IsGet": true,
          "Name": "Items"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.DragItemsStartingEventArgs"
    },
    {
      "BaseType": "Selector",
      "Interfaces": [
        "IItemContainerMapping"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "UseTouchAnimationsForAllNavigation"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UseTouchAnimationsForAllNavigationProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.FlipView"
    },
    {
      "BaseType": "SelectorItem",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.FlipViewItem"
    },
    {
      "BaseType": "FlyoutBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true,
          "Name": "Content"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContentProperty"
        },
        {
          "Type": "Style",
          "IsGet": true,
          "IsSet": true,
          "Name": "FlyoutPresenterStyle"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FlyoutPresenterStyleProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Flyout"
    },
    {
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.FlyoutPresenter"
    },
    {
      "BaseType": "IconElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "FontFamily",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontFamily"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontFamilyProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontSize"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontSizeProperty"
        },
        {
          "Type": "FontStyle",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontStyle"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontStyleProperty"
        },
        {
          "Type": "FontWeight",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontWeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontWeightProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Glyph"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GlyphProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsTextScaleFactorEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsTextScaleFactorEnabledProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.FontIcon"
    },
    {
      "BaseType": "ContentControl",
      "Interfaces": [
        "INavigate"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<PageStackEntry>",
          "IsGet": true,
          "Name": "BackStack"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "BackStackDepth"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BackStackDepthProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BackStackProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "CacheSize"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CacheSizeProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanGoBack"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CanGoBackProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanGoForward"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CanGoForwardProperty"
        },
        {
          "Type": "Type",
          "IsGet": true,
          "Name": "CurrentSourcePageType"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CurrentSourcePageTypeProperty"
        },
        {
          "Type": "IList<PageStackEntry>",
          "IsGet": true,
          "Name": "ForwardStack"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ForwardStackProperty"
        },
        {
          "Type": "Type",
          "IsGet": true,
          "IsSet": true,
          "Name": "SourcePageType"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SourcePageTypeProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "String",
          "Name": "GetNavigationState"
        },
        {
          "ReturnType": "Void",
          "Name": "GoBack"
        },
        {
          "ReturnType": "Void",
          "Name": "GoForward"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "sourcePageType",
              "Type": "Type"
            },
            {
              "Name": "parameter",
              "Type": "Object"
            }
          ],
          "Name": "Navigate"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "sourcePageType",
              "Type": "Type"
            }
          ],
          "Name": "Navigate"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "sourcePageType",
              "Type": "Type"
            },
            {
              "Name": "parameter",
              "Type": "Object"
            },
            {
              "Name": "infoOverride",
              "Type": "NavigationTransitionInfo"
            }
          ],
          "Name": "Navigate"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "navigationState",
              "Type": "String"
            }
          ],
          "Name": "SetNavigationState"
        }
      ],
      "Events": [
        {
          "Type": "NavigatedEventHandler",
          "Name": "Navigated"
        },
        {
          "Type": "NavigatingCancelEventHandler",
          "Name": "Navigating"
        },
        {
          "Type": "NavigationFailedEventHandler",
          "Name": "NavigationFailed"
        },
        {
          "Type": "NavigationStoppedEventHandler",
          "Name": "NavigationStopped"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Frame"
    },
    {
      "BaseType": "Panel",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ColumnDefinitionCollection",
          "IsGet": true,
          "Name": "ColumnDefinitions"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ColumnProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ColumnSpanProperty"
        },
        {
          "Type": "RowDefinitionCollection",
          "IsGet": true,
          "Name": "RowDefinitions"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RowProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RowSpanProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            }
          ],
          "Name": "GetColumn"
        },
        {
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            }
          ],
          "Name": "GetColumnSpan"
        },
        {
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            }
          ],
          "Name": "GetRow"
        },
        {
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            }
          ],
          "Name": "GetRowSpan"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            },
            {
              "Name": "value",
              "Type": "Int32"
            }
          ],
          "Name": "SetColumn"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            },
            {
              "Name": "value",
              "Type": "Int32"
            }
          ],
          "Name": "SetColumnSpan"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            },
            {
              "Name": "value",
              "Type": "Int32"
            }
          ],
          "Name": "SetRow"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            },
            {
              "Name": "value",
              "Type": "Int32"
            }
          ],
          "Name": "SetRowSpan"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Grid"
    },
    {
      "BaseType": "ListViewBase",
      "Interfaces": [
        "IItemContainerMapping",
        "ISemanticZoomInformation"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.GridView"
    },
    {
      "BaseType": "ListViewBaseHeaderItem",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.GridViewHeaderItem"
    },
    {
      "BaseType": "SelectorItem",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "GridViewItemTemplateSettings",
          "IsGet": true,
          "Name": "TemplateSettings"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.GridViewItem"
    },
    {
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.GroupItem"
    },
    {
      "Interfaces": [
        "INotifyPropertyChanged"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Style",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContainerStyle"
        },
        {
          "Type": "StyleSelector",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContainerStyleSelector"
        },
        {
          "Type": "Style",
          "IsGet": true,
          "IsSet": true,
          "Name": "HeaderContainerStyle"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "HeaderTemplate"
        },
        {
          "Type": "DataTemplateSelector",
          "IsGet": true,
          "IsSet": true,
          "Name": "HeaderTemplateSelector"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "HidesIfEmpty"
        },
        {
          "Type": "ItemsPanelTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "Panel"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "PropertyChangedEventHandler",
          "Name": "PropertyChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.GroupStyle"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "GroupStyle",
          "Parameters": [
            {
              "Name": "group",
              "Type": "Object"
            },
            {
              "Name": "level",
              "Type": "UInt32"
            }
          ],
          "Name": "SelectGroupStyle"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.GroupStyleSelector"
    },
    {
      "BaseType": "Control",
      "Interfaces": [
        "ISemanticZoomInformation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "DefaultSectionIndex"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DefaultSectionIndexProperty"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Header"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderProperty"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "HeaderTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderTemplateProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsActiveView"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsActiveViewProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsZoomedInView"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsZoomedInViewProperty"
        },
        {
          "Type": "Orientation",
          "IsGet": true,
          "IsSet": true,
          "Name": "Orientation"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OrientationProperty"
        },
        {
          "Type": "IObservableVector<Object>",
          "IsGet": true,
          "Name": "SectionHeaders"
        },
        {
          "Type": "IList<HubSection>",
          "IsGet": true,
          "Name": "Sections"
        },
        {
          "Type": "IList<HubSection>",
          "IsGet": true,
          "Name": "SectionsInView"
        },
        {
          "Type": "SemanticZoom",
          "IsGet": true,
          "IsSet": true,
          "Name": "SemanticZoomOwner"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SemanticZoomOwnerProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "CompleteViewChange"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SemanticZoomLocation"
            },
            {
              "Name": "destination",
              "Type": "SemanticZoomLocation"
            }
          ],
          "Name": "CompleteViewChangeFrom"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SemanticZoomLocation"
            },
            {
              "Name": "destination",
              "Type": "SemanticZoomLocation"
            }
          ],
          "Name": "CompleteViewChangeTo"
        },
        {
          "ReturnType": "Void",
          "Name": "InitializeViewChange"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "item",
              "Type": "SemanticZoomLocation"
            }
          ],
          "Name": "MakeVisible"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "section",
              "Type": "HubSection"
            }
          ],
          "Name": "ScrollToSection"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SemanticZoomLocation"
            },
            {
              "Name": "destination",
              "Type": "SemanticZoomLocation"
            }
          ],
          "Name": "StartViewChangeFrom"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SemanticZoomLocation"
            },
            {
              "Name": "destination",
              "Type": "SemanticZoomLocation"
            }
          ],
          "Name": "StartViewChangeTo"
        }
      ],
      "Events": [
        {
          "Type": "HubSectionHeaderClickEventHandler",
          "Name": "SectionHeaderClick"
        },
        {
          "Type": "SectionsInViewChangedEventHandler",
          "Name": "SectionsInViewChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Hub"
    },
    {
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContentTemplateProperty"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Header"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderProperty"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "HeaderTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderTemplateProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsHeaderInteractive"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsHeaderInteractiveProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.HubSection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HubSection>",
        "IEnumerable",
        "IEnumerable<HubSection>",
        "IList<HubSection>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.HubSectionCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "HubSection",
          "IsGet": true,
          "Name": "Section"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.HubSectionHeaderClickEventArgs"
    },
    {
      "BaseType": "ButtonBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "NavigateUri"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NavigateUriProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.HyperlinkButton"
    },
    {
      "BaseType": "ToggleButton",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.CheckBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsContainerPrepared"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Item"
        },
        {
          "Type": "SelectorItem",
          "IsGet": true,
          "IsSet": true,
          "Name": "ItemContainer"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "ItemIndex"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs"
    },
    {
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "Foreground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ForegroundProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.IconElement"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true,
          "Name": "NineGrid"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NineGridProperty"
        },
        {
          "Type": "PlayToSource",
          "IsGet": true,
          "Name": "PlayToSource"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PlayToSourceProperty"
        },
        {
          "Type": "ImageSource",
          "IsGet": true,
          "IsSet": true,
          "Name": "Source"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SourceProperty"
        },
        {
          "Type": "Stretch",
          "IsGet": true,
          "IsSet": true,
          "Name": "Stretch"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StretchProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "CastingSource",
          "Name": "GetAsCastingSource"
        }
      ],
      "Events": [
        {
          "Type": "ExceptionRoutedEventHandler",
          "Name": "ImageFailed"
        },
        {
          "Type": "RoutedEventHandler",
          "Name": "ImageOpened"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Image"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "ClickedItem"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ItemClickEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<Object>",
        "IEnumerable",
        "IEnumerable<Object>",
        "IList<Object>",
        "IObservableVector<Object>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "VectorChangedEventHandler<Object>",
          "Name": "VectorChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ItemCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "DependencyObject",
          "Parameters": [
            {
              "Name": "index",
              "Type": "Int32"
            }
          ],
          "Name": "ContainerFromIndex"
        },
        {
          "ReturnType": "DependencyObject",
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            }
          ],
          "Name": "ContainerFromItem"
        },
        {
          "ReturnType": "DependencyObject",
          "Parameters": [
            {
              "Name": "isNewlyRealized",
              "Type": "Boolean&",
              "Out": true
            }
          ],
          "Name": "GenerateNext"
        },
        {
          "ReturnType": "GeneratorPosition",
          "Parameters": [
            {
              "Name": "itemIndex",
              "Type": "Int32"
            }
          ],
          "Name": "GeneratorPositionFromIndex"
        },
        {
          "ReturnType": "ItemContainerGenerator",
          "Parameters": [
            {
              "Name": "panel",
              "Type": "Panel"
            }
          ],
          "Name": "GetItemContainerGeneratorForPanel"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "container",
              "Type": "DependencyObject"
            }
          ],
          "Name": "IndexFromContainer"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "position",
              "Type": "GeneratorPosition"
            }
          ],
          "Name": "IndexFromGeneratorPosition"
        },
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "container",
              "Type": "DependencyObject"
            }
          ],
          "Name": "ItemFromContainer"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "container",
              "Type": "DependencyObject"
            }
          ],
          "Name": "PrepareItemContainer"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "GeneratorPosition"
            },
            {
              "Name": "count",
              "Type": "Int32"
            }
          ],
          "Name": "Recycle"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "GeneratorPosition"
            },
            {
              "Name": "count",
              "Type": "Int32"
            }
          ],
          "Name": "Remove"
        },
        {
          "ReturnType": "Void",
          "Name": "RemoveAll"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "GeneratorPosition"
            },
            {
              "Name": "direction",
              "Type": "GeneratorDirection"
            },
            {
              "Name": "allowStartAtRealizedItem",
              "Type": "Boolean"
            }
          ],
          "Name": "StartAt"
        },
        {
          "ReturnType": "Void",
          "Name": "Stop"
        }
      ],
      "Events": [
        {
          "Type": "ItemsChangedEventHandler",
          "Name": "ItemsChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ItemContainerGenerator"
    },
    {
      "BaseType": "Control",
      "Interfaces": [
        "IItemContainerMapping"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayMemberPath"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DisplayMemberPathProperty"
        },
        {
          "Type": "IObservableVector<GroupStyle>",
          "IsGet": true,
          "Name": "GroupStyle"
        },
        {
          "Type": "GroupStyleSelector",
          "IsGet": true,
          "IsSet": true,
          "Name": "GroupStyleSelector"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GroupStyleSelectorProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsGrouping"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsGroupingProperty"
        },
        {
          "Type": "ItemContainerGenerator",
          "IsGet": true,
          "Name": "ItemContainerGenerator"
        },
        {
          "Type": "Style",
          "IsGet": true,
          "IsSet": true,
          "Name": "ItemContainerStyle"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemContainerStyleProperty"
        },
        {
          "Type": "StyleSelector",
          "IsGet": true,
          "IsSet": true,
          "Name": "ItemContainerStyleSelector"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemContainerStyleSelectorProperty"
        },
        {
          "Type": "TransitionCollection",
          "IsGet": true,
          "IsSet": true,
          "Name": "ItemContainerTransitions"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemContainerTransitionsProperty"
        },
        {
          "Type": "ItemCollection",
          "IsGet": true,
          "Name": "Items"
        },
        {
          "Type": "ItemsPanelTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "ItemsPanel"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemsPanelProperty"
        },
        {
          "Type": "Panel",
          "IsGet": true,
          "Name": "ItemsPanelRoot"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "ItemsSource"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemsSourceProperty"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "ItemTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemTemplateProperty"
        },
        {
          "Type": "DataTemplateSelector",
          "IsGet": true,
          "IsSet": true,
          "Name": "ItemTemplateSelector"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemTemplateSelectorProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "DependencyObject",
          "Parameters": [
            {
              "Name": "index",
              "Type": "Int32"
            }
          ],
          "Name": "ContainerFromIndex"
        },
        {
          "ReturnType": "DependencyObject",
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            }
          ],
          "Name": "ContainerFromItem"
        },
        {
          "IsStatic": true,
          "ReturnType": "ItemsControl",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetItemsOwner"
        },
        {
          "ReturnType": "DependencyObject",
          "Parameters": [
            {
              "Name": "itemContainer",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GroupHeaderContainerFromItemContainer"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "container",
              "Type": "DependencyObject"
            }
          ],
          "Name": "IndexFromContainer"
        },
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "container",
              "Type": "DependencyObject"
            }
          ],
          "Name": "ItemFromContainer"
        },
        {
          "IsStatic": true,
          "ReturnType": "ItemsControl",
          "Parameters": [
            {
              "Name": "container",
              "Type": "DependencyObject"
            }
          ],
          "Name": "ItemsControlFromItemContainer"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ItemsControl"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkTemplate",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ItemsPanelTemplate"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<Object>",
          "IsGet": true,
          "Name": "AddedItems"
        },
        {
          "Type": "IList<Object>",
          "IsGet": true,
          "Name": "RemovedItems"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ItemsPickedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [
        "IScrollSnapPointsInfo"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AreHorizontalSnapPointsRegular"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AreVerticalSnapPointsRegular"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Footer"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FooterProperty"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "FooterTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FooterTemplateProperty"
        },
        {
          "Type": "TransitionCollection",
          "IsGet": true,
          "IsSet": true,
          "Name": "FooterTransitions"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FooterTransitionsProperty"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Header"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderProperty"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "HeaderTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderTemplateProperty"
        },
        {
          "Type": "TransitionCollection",
          "IsGet": true,
          "IsSet": true,
          "Name": "HeaderTransitions"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderTransitionsProperty"
        },
        {
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true,
          "Name": "Padding"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PaddingProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IReadOnlyList<Single>",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            }
          ],
          "Name": "GetIrregularSnapPoints"
        },
        {
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            },
            {
              "Name": "offset",
              "Type": "Single&",
              "Out": true
            }
          ],
          "Name": "GetRegularSnapPoints"
        }
      ],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "Name": "HorizontalSnapPointsChanged"
        },
        {
          "Type": "EventHandler<Object>",
          "Name": "VerticalSnapPointsChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ItemsPresenter"
    },
    {
      "IsSealed": true,
      "BaseType": "Panel",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "CacheLength"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CacheLengthProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "FirstCacheIndex"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "FirstVisibleIndex"
        },
        {
          "Type": "GroupHeaderPlacement",
          "IsGet": true,
          "IsSet": true,
          "Name": "GroupHeaderPlacement"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GroupHeaderPlacementProperty"
        },
        {
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true,
          "Name": "GroupPadding"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GroupPaddingProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsStickyGroupHeadersEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsStickyGroupHeadersEnabledProperty"
        },
        {
          "Type": "ItemsUpdatingScrollMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "ItemsUpdatingScrollMode"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "LastCacheIndex"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "LastVisibleIndex"
        },
        {
          "Type": "Orientation",
          "IsGet": true,
          "IsSet": true,
          "Name": "Orientation"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OrientationProperty"
        },
        {
          "Type": "PanelScrollingDirection",
          "IsGet": true,
          "Name": "ScrollingDirection"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ItemsStackPanel"
    },
    {
      "IsSealed": true,
      "BaseType": "Panel",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "CacheLength"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CacheLengthProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "FirstCacheIndex"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "FirstVisibleIndex"
        },
        {
          "Type": "GroupHeaderPlacement",
          "IsGet": true,
          "IsSet": true,
          "Name": "GroupHeaderPlacement"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GroupHeaderPlacementProperty"
        },
        {
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true,
          "Name": "GroupPadding"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GroupPaddingProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsStickyGroupHeadersEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsStickyGroupHeadersEnabledProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "ItemHeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemHeightProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "ItemWidth"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemWidthProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "LastCacheIndex"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "LastVisibleIndex"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaximumRowsOrColumns"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MaximumRowsOrColumnsProperty"
        },
        {
          "Type": "Orientation",
          "IsGet": true,
          "IsSet": true,
          "Name": "Orientation"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OrientationProperty"
        },
        {
          "Type": "PanelScrollingDirection",
          "IsGet": true,
          "Name": "ScrollingDirection"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ItemsWrapGrid"
    },
    {
      "BaseType": "Selector",
      "Interfaces": [
        "IItemContainerMapping"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<Object>",
          "IsGet": true,
          "Name": "SelectedItems"
        },
        {
          "Type": "SelectionMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectionMode"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectionModeProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            }
          ],
          "Name": "ScrollIntoView"
        },
        {
          "ReturnType": "Void",
          "Name": "SelectAll"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ListBox"
    },
    {
      "BaseType": "SelectorItem",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ListBoxItem"
    },
    {
      "IsSealed": true,
      "BaseType": "PickerFlyoutBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayMemberPath"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DisplayMemberPathProperty"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "ItemsSource"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemsSourceProperty"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "ItemTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemTemplateProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedIndex"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedIndexProperty"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedItem"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedItemProperty"
        },
        {
          "Type": "IList<Object>",
          "IsGet": true,
          "Name": "SelectedItems"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedValue"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedValuePath"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedValuePathProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedValueProperty"
        },
        {
          "Type": "ListPickerFlyoutSelectionMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectionMode"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectionModeProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<Object>>",
          "Parameters": [
            {
              "Name": "target",
              "Type": "FrameworkElement"
            }
          ],
          "Name": "ShowAtAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<ListPickerFlyout,ItemsPickedEventArgs>",
          "Name": "ItemsPicked"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ListPickerFlyout"
    },
    {
      "IsSealed": true,
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ListPickerFlyoutPresenter"
    },
    {
      "BaseType": "ListViewBase",
      "Interfaces": [
        "IItemContainerMapping",
        "ISemanticZoomInformation"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ListView"
    },
    {
      "BaseType": "Selector",
      "Interfaces": [
        "IItemContainerMapping",
        "ISemanticZoomInformation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "CanDragItems"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CanDragItemsProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "CanReorderItems"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CanReorderItemsProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "DataFetchSize"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DataFetchSizeProperty"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Footer"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FooterProperty"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "FooterTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FooterTemplateProperty"
        },
        {
          "Type": "TransitionCollection",
          "IsGet": true,
          "IsSet": true,
          "Name": "FooterTransitions"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FooterTransitionsProperty"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Header"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderProperty"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "HeaderTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderTemplateProperty"
        },
        {
          "Type": "TransitionCollection",
          "IsGet": true,
          "IsSet": true,
          "Name": "HeaderTransitions"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderTransitionsProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "IncrementalLoadingThreshold"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IncrementalLoadingThresholdProperty"
        },
        {
          "Type": "IncrementalLoadingTrigger",
          "IsGet": true,
          "IsSet": true,
          "Name": "IncrementalLoadingTrigger"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IncrementalLoadingTriggerProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsActiveView"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsActiveViewProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsItemClickEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsItemClickEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsMultiSelectCheckBoxEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsMultiSelectCheckBoxEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsSwipeEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsSwipeEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsZoomedInView"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsZoomedInViewProperty"
        },
        {
          "Type": "ListViewReorderMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReorderMode"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ReorderModeProperty"
        },
        {
          "Type": "IList<Object>",
          "IsGet": true,
          "Name": "SelectedItems"
        },
        {
          "Type": "IReadOnlyList<ItemIndexRange>",
          "IsGet": true,
          "Name": "SelectedRanges"
        },
        {
          "Type": "ListViewSelectionMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectionMode"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectionModeProperty"
        },
        {
          "Type": "SemanticZoom",
          "IsGet": true,
          "IsSet": true,
          "Name": "SemanticZoomOwner"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SemanticZoomOwnerProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "ShowsScrollingPlaceholders"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ShowsScrollingPlaceholdersProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "CompleteViewChange"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SemanticZoomLocation"
            },
            {
              "Name": "destination",
              "Type": "SemanticZoomLocation"
            }
          ],
          "Name": "CompleteViewChangeFrom"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SemanticZoomLocation"
            },
            {
              "Name": "destination",
              "Type": "SemanticZoomLocation"
            }
          ],
          "Name": "CompleteViewChangeTo"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "itemIndexRange",
              "Type": "ItemIndexRange"
            }
          ],
          "Name": "DeselectRange"
        },
        {
          "ReturnType": "Void",
          "Name": "InitializeViewChange"
        },
        {
          "ReturnType": "IAsyncOperation<LoadMoreItemsResult>",
          "Name": "LoadMoreItemsAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "item",
              "Type": "SemanticZoomLocation"
            }
          ],
          "Name": "MakeVisible"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            }
          ],
          "Name": "ScrollIntoView"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            },
            {
              "Name": "alignment",
              "Type": "ScrollIntoViewAlignment"
            }
          ],
          "Name": "ScrollIntoView"
        },
        {
          "ReturnType": "Void",
          "Name": "SelectAll"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "itemIndexRange",
              "Type": "ItemIndexRange"
            }
          ],
          "Name": "SelectRange"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "duration",
              "Type": "TimeSpan"
            }
          ],
          "Name": "SetDesiredContainerUpdateDuration"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SemanticZoomLocation"
            },
            {
              "Name": "destination",
              "Type": "SemanticZoomLocation"
            }
          ],
          "Name": "StartViewChangeFrom"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SemanticZoomLocation"
            },
            {
              "Name": "destination",
              "Type": "SemanticZoomLocation"
            }
          ],
          "Name": "StartViewChangeTo"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<ListViewBase,ContainerContentChangingEventArgs>",
          "Name": "ContainerContentChanging"
        },
        {
          "Type": "TypedEventHandler<ListViewBase,DragItemsCompletedEventArgs>",
          "Name": "DragItemsCompleted"
        },
        {
          "Type": "DragItemsStartingEventHandler",
          "Name": "DragItemsStarting"
        },
        {
          "Type": "TypedEventHandler<ListViewBase,ChoosingItemContainerEventArgs>",
          "Name": "ChoosingItemContainer"
        },
        {
          "Type": "ItemClickEventHandler",
          "Name": "ItemClick"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ListViewBase"
    },
    {
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ListViewBaseHeaderItem"
    },
    {
      "BaseType": "ListViewBaseHeaderItem",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ListViewHeaderItem"
    },
    {
      "BaseType": "SelectorItem",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ListViewItemTemplateSettings",
          "IsGet": true,
          "Name": "TemplateSettings"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ListViewItem"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "listViewBase",
              "Type": "ListViewBase"
            },
            {
              "Name": "itemToKeyHandler",
              "Type": "ListViewItemToKeyHandler"
            }
          ],
          "Name": "GetRelativeScrollPosition"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "listViewBase",
              "Type": "ListViewBase"
            },
            {
              "Name": "relativeScrollPosition",
              "Type": "String"
            },
            {
              "Name": "keyToItemHandler",
              "Type": "ListViewKeyToItemHandler"
            }
          ],
          "Name": "SetRelativeScrollPositionAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ListViewPersistenceHelper"
    },
    {
      "BaseType": "MapTileDataSource",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "TypedEventHandler<CustomMapTileDataSource,MapTileBitmapRequestedEventArgs>",
          "Name": "BitmapRequested"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Maps.CustomMapTileDataSource"
    },
    {
      "BaseType": "MapTileDataSource",
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "uriFormatString",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IDictionary<String,String>",
          "IsGet": true,
          "Name": "AdditionalRequestHeaders"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AllowCaching"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "UriFormatString"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "TypedEventHandler<HttpMapTileDataSource,MapTileUriRequestedEventArgs>",
          "Name": "UriRequested"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Maps.HttpMapTileDataSource"
    },
    {
      "BaseType": "MapTileDataSource",
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "uriFormatString",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "UriFormatString"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "TypedEventHandler<LocalMapTileDataSource,MapTileUriRequestedEventArgs>",
          "Name": "UriRequested"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Maps.LocalMapTileDataSource"
    },
    {
      "IsSealed": true,
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Geopoint",
          "IsGet": true,
          "IsSet": true,
          "Name": "Center"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CenterProperty"
        },
        {
          "Type": "MapColorScheme",
          "IsGet": true,
          "IsSet": true,
          "Name": "ColorScheme"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ColorSchemeProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "DesiredPitch"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DesiredPitchProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Heading"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeadingProperty"
        },
        {
          "Type": "IList<DependencyObject>",
          "IsGet": true,
          "Name": "Children"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ChildrenProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "LandmarksVisible"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LandmarksVisibleProperty"
        },
        {
          "Type": "MapLoadingStatus",
          "IsGet": true,
          "Name": "LoadingStatus"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LoadingStatusProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LocationProperty"
        },
        {
          "Type": "IList<MapElement>",
          "IsGet": true,
          "Name": "MapElements"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MapElementsProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "MapServiceToken"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MapServiceTokenProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "MaxZoomLevel"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "MinZoomLevel"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NormalizedAnchorPointProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "PedestrianFeaturesVisible"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PedestrianFeaturesVisibleProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "Pitch"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PitchProperty"
        },
        {
          "Type": "IList<MapRouteView>",
          "IsGet": true,
          "Name": "Routes"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RoutesProperty"
        },
        {
          "Type": "MapStyle",
          "IsGet": true,
          "IsSet": true,
          "Name": "Style"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StyleProperty"
        },
        {
          "Type": "IList<MapTileSource>",
          "IsGet": true,
          "Name": "TileSources"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TileSourcesProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "TrafficFlowVisible"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TrafficFlowVisibleProperty"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "IsSet": true,
          "Name": "TransformOrigin"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TransformOriginProperty"
        },
        {
          "Type": "MapWatermarkMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "WatermarkMode"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "WatermarkModeProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "ZoomLevel"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ZoomLevelProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IReadOnlyList<MapElement>",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "Point"
            }
          ],
          "Name": "FindMapElementsAtOffset"
        },
        {
          "IsStatic": true,
          "ReturnType": "Geopoint",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetLocation"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "Point"
            },
            {
              "Name": "location",
              "Type": "Geopoint&",
              "Out": true
            }
          ],
          "Name": "GetLocationFromOffset"
        },
        {
          "IsStatic": true,
          "ReturnType": "Point",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetNormalizedAnchorPoint"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "location",
              "Type": "Geopoint"
            },
            {
              "Name": "offset",
              "Type": "Point&",
              "Out": true
            }
          ],
          "Name": "GetOffsetFromLocation"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "location",
              "Type": "Geopoint"
            },
            {
              "Name": "isInView",
              "Type": "Boolean&",
              "Out": true
            }
          ],
          "Name": "IsLocationInView"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Geopoint"
            }
          ],
          "Name": "SetLocation"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Point"
            }
          ],
          "Name": "SetNormalizedAnchorPoint"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "center",
              "Type": "Geopoint"
            }
          ],
          "Name": "TrySetViewAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "center",
              "Type": "Geopoint"
            },
            {
              "Name": "zoomLevel",
              "Type": "Nullable<Double>"
            }
          ],
          "Name": "TrySetViewAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "center",
              "Type": "Geopoint"
            },
            {
              "Name": "zoomLevel",
              "Type": "Nullable<Double>"
            },
            {
              "Name": "heading",
              "Type": "Nullable<Double>"
            },
            {
              "Name": "desiredPitch",
              "Type": "Nullable<Double>"
            }
          ],
          "Name": "TrySetViewAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "center",
              "Type": "Geopoint"
            },
            {
              "Name": "zoomLevel",
              "Type": "Nullable<Double>"
            },
            {
              "Name": "heading",
              "Type": "Nullable<Double>"
            },
            {
              "Name": "desiredPitch",
              "Type": "Nullable<Double>"
            },
            {
              "Name": "animation",
              "Type": "MapAnimationKind"
            }
          ],
          "Name": "TrySetViewAsync"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "bounds",
              "Type": "GeoboundingBox"
            },
            {
              "Name": "margin",
              "Type": "Nullable<Thickness>"
            },
            {
              "Name": "animation",
              "Type": "MapAnimationKind"
            }
          ],
          "Name": "TrySetViewBoundsAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<MapControl,Object>",
          "Name": "CenterChanged"
        },
        {
          "Type": "TypedEventHandler<MapControl,Object>",
          "Name": "HeadingChanged"
        },
        {
          "Type": "TypedEventHandler<MapControl,Object>",
          "Name": "LoadingStatusChanged"
        },
        {
          "Type": "TypedEventHandler<MapControl,MapInputEventArgs>",
          "Name": "MapDoubleTapped"
        },
        {
          "Type": "TypedEventHandler<MapControl,MapInputEventArgs>",
          "Name": "MapHolding"
        },
        {
          "Type": "TypedEventHandler<MapControl,MapInputEventArgs>",
          "Name": "MapTapped"
        },
        {
          "Type": "TypedEventHandler<MapControl,Object>",
          "Name": "PitchChanged"
        },
        {
          "Type": "TypedEventHandler<MapControl,Object>",
          "Name": "TransformOriginChanged"
        },
        {
          "Type": "TypedEventHandler<MapControl,Object>",
          "Name": "ZoomLevelChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapControl"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Visible"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VisibleProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ZIndex"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ZIndexProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapElement"
    },
    {
      "IsSealed": true,
      "BaseType": "MapElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true,
          "Name": "Image"
        },
        {
          "Type": "Geopoint",
          "IsGet": true,
          "IsSet": true,
          "Name": "Location"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LocationProperty"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "IsSet": true,
          "Name": "NormalizedAnchorPoint"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NormalizedAnchorPointProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TitleProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapIcon"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Geopoint",
          "IsGet": true,
          "Name": "Location"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "Name": "Position"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapInputEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<DependencyObject>",
          "IsGet": true,
          "Name": "Items"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemsProperty"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "ItemsSource"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemsSourceProperty"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "ItemTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemTemplateProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapItemsControl"
    },
    {
      "IsSealed": true,
      "BaseType": "MapElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Color",
          "IsGet": true,
          "IsSet": true,
          "Name": "FillColor"
        },
        {
          "Type": "Geopath",
          "IsGet": true,
          "IsSet": true,
          "Name": "Path"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PathProperty"
        },
        {
          "Type": "Color",
          "IsGet": true,
          "IsSet": true,
          "Name": "StrokeColor"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "StrokeDashed"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StrokeDashedProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "StrokeThickness"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StrokeThicknessProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapPolygon"
    },
    {
      "IsSealed": true,
      "BaseType": "MapElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Geopath",
          "IsGet": true,
          "IsSet": true,
          "Name": "Path"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PathProperty"
        },
        {
          "Type": "Color",
          "IsGet": true,
          "IsSet": true,
          "Name": "StrokeColor"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "StrokeDashed"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StrokeDashedProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "StrokeThickness"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapPolyline"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "route",
              "Type": "MapRoute"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Color",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutlineColor"
        },
        {
          "Type": "MapRoute",
          "IsGet": true,
          "Name": "Route"
        },
        {
          "Type": "Color",
          "IsGet": true,
          "IsSet": true,
          "Name": "RouteColor"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapRouteView"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "IsSet": true,
          "Name": "PixelData"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "MapTileBitmapRequestDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequestDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MapTileBitmapRequest",
          "IsGet": true,
          "Name": "Request"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "X"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "Y"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "ZoomLevel"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequestedEventArgs"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapTileDataSource"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "dataSource",
              "Type": "MapTileDataSource"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "dataSource",
              "Type": "MapTileDataSource"
            },
            {
              "Name": "zoomLevelRange",
              "Type": "MapZoomLevelRange"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "dataSource",
              "Type": "MapTileDataSource"
            },
            {
              "Name": "zoomLevelRange",
              "Type": "MapZoomLevelRange"
            },
            {
              "Name": "bounds",
              "Type": "GeoboundingBox"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "dataSource",
              "Type": "MapTileDataSource"
            },
            {
              "Name": "zoomLevelRange",
              "Type": "MapZoomLevelRange"
            },
            {
              "Name": "bounds",
              "Type": "GeoboundingBox"
            },
            {
              "Name": "tileSizeInPixels",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AllowOverstretch"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AllowOverstretchProperty"
        },
        {
          "Type": "GeoboundingBox",
          "IsGet": true,
          "IsSet": true,
          "Name": "Bounds"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BoundsProperty"
        },
        {
          "Type": "MapTileDataSource",
          "IsGet": true,
          "IsSet": true,
          "Name": "DataSource"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DataSourceProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsFadingEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsFadingEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsRetryEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsRetryEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsTransparencyEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsTransparencyEnabledProperty"
        },
        {
          "Type": "MapTileLayer",
          "IsGet": true,
          "IsSet": true,
          "Name": "Layer"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LayerProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "TilePixelSize"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TilePixelSizeProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Visible"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VisibleProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ZIndex"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ZIndexProperty"
        },
        {
          "Type": "MapZoomLevelRange",
          "IsGet": true,
          "IsSet": true,
          "Name": "ZoomLevelRange"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ZoomLevelRangeProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapTileSource"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "Uri"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "MapTileUriRequestDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapTileUriRequest"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapTileUriRequestDeferral"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MapTileUriRequest",
          "IsGet": true,
          "Name": "Request"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "X"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "Y"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "ZoomLevel"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapTileUriRequestedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Stereo3DVideoPackingMode",
          "IsGet": true,
          "Name": "ActualStereo3DVideoPackingMode"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ActualStereo3DVideoPackingModeProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AreTransportControlsEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AreTransportControlsEnabledProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "AspectRatioHeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AspectRatioHeightProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "AspectRatioWidth"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AspectRatioWidthProperty"
        },
        {
          "Type": "AudioCategory",
          "IsGet": true,
          "IsSet": true,
          "Name": "AudioCategory"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AudioCategoryProperty"
        },
        {
          "Type": "AudioDeviceType",
          "IsGet": true,
          "IsSet": true,
          "Name": "AudioDeviceType"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AudioDeviceTypeProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "AudioStreamCount"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AudioStreamCountProperty"
        },
        {
          "Type": "Nullable<Int32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "AudioStreamIndex"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AudioStreamIndexProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AutoPlay"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AutoPlayProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Balance"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BalanceProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "BufferingProgress"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BufferingProgressProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanPause"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CanPauseProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanSeek"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CanSeekProperty"
        },
        {
          "Type": "MediaElementState",
          "IsGet": true,
          "Name": "CurrentState"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CurrentStateProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "DefaultPlaybackRate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DefaultPlaybackRateProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "DownloadProgress"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "DownloadProgressOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DownloadProgressOffsetProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DownloadProgressProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsAudioOnly"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsAudioOnlyProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsFullWindow"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsFullWindowProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsLooping"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsLoopingProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsMuted"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsMutedProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsStereo3DVideo"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsStereo3DVideoProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsTimedTextVisible"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsTimedTextVisibleProperty"
        },
        {
          "Type": "TimelineMarkerCollection",
          "IsGet": true,
          "Name": "Markers"
        },
        {
          "Type": "Duration",
          "IsGet": true,
          "Name": "NaturalDuration"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NaturalDurationProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "NaturalVideoHeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NaturalVideoHeightProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "NaturalVideoWidth"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NaturalVideoWidthProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "PlaybackRate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PlaybackRateProperty"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "PlayToPreferredSourceUri"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PlayToPreferredSourceUriProperty"
        },
        {
          "Type": "PlayToSource",
          "IsGet": true,
          "Name": "PlayToSource"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PlayToSourceProperty"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "Position"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PositionProperty"
        },
        {
          "Type": "ImageSource",
          "IsGet": true,
          "IsSet": true,
          "Name": "PosterSource"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PosterSourceProperty"
        },
        {
          "Type": "MediaProtectionManager",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProtectionManager"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ProtectionManagerProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "RealTimePlayback"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RealTimePlaybackProperty"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "Source"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SourceProperty"
        },
        {
          "Type": "Stereo3DVideoPackingMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "Stereo3DVideoPackingMode"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Stereo3DVideoPackingModeProperty"
        },
        {
          "Type": "Stereo3DVideoRenderMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "Stereo3DVideoRenderMode"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Stereo3DVideoRenderModeProperty"
        },
        {
          "Type": "Stretch",
          "IsGet": true,
          "IsSet": true,
          "Name": "Stretch"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StretchProperty"
        },
        {
          "Type": "IList<TimedTextTrack>",
          "IsGet": true,
          "IsSet": true,
          "Name": "TimedTextTracks"
        },
        {
          "Type": "MediaTransportControls",
          "IsGet": true,
          "IsSet": true,
          "Name": "TransportControls"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Volume"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VolumeProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "effectID",
              "Type": "String"
            },
            {
              "Name": "effectOptional",
              "Type": "Boolean"
            },
            {
              "Name": "effectConfiguration",
              "Type": "IPropertySet"
            }
          ],
          "Name": "AddAudioEffect"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "effectID",
              "Type": "String"
            },
            {
              "Name": "effectOptional",
              "Type": "Boolean"
            },
            {
              "Name": "effectConfiguration",
              "Type": "IPropertySet"
            }
          ],
          "Name": "AddVideoEffect"
        },
        {
          "ReturnType": "MediaCanPlayResponse",
          "Parameters": [
            {
              "Name": "type",
              "Type": "String"
            }
          ],
          "Name": "CanPlayType"
        },
        {
          "ReturnType": "CastingSource",
          "Name": "GetAsCastingSource"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "index",
              "Type": "Nullable<Int32>"
            }
          ],
          "Name": "GetAudioStreamLanguage"
        },
        {
          "ReturnType": "Void",
          "Name": "Pause"
        },
        {
          "ReturnType": "Void",
          "Name": "Play"
        },
        {
          "ReturnType": "Void",
          "Name": "RemoveAllEffects"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "IMediaSource"
            }
          ],
          "Name": "SetMediaStreamSource"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            },
            {
              "Name": "mimeType",
              "Type": "String"
            }
          ],
          "Name": "SetSource"
        },
        {
          "ReturnType": "Void",
          "Name": "Stop"
        }
      ],
      "Events": [
        {
          "Type": "RoutedEventHandler",
          "Name": "BufferingProgressChanged"
        },
        {
          "Type": "RoutedEventHandler",
          "Name": "CurrentStateChanged"
        },
        {
          "Type": "RoutedEventHandler",
          "Name": "DownloadProgressChanged"
        },
        {
          "Type": "TimelineMarkerRoutedEventHandler",
          "Name": "MarkerReached"
        },
        {
          "Type": "RoutedEventHandler",
          "Name": "MediaEnded"
        },
        {
          "Type": "ExceptionRoutedEventHandler",
          "Name": "MediaFailed"
        },
        {
          "Type": "RoutedEventHandler",
          "Name": "MediaOpened"
        },
        {
          "Type": "TypedEventHandler<MediaElement,PartialMediaFailureDetectedEventArgs>",
          "Name": "PartialMediaFailureDetected"
        },
        {
          "Type": "RateChangedRoutedEventHandler",
          "Name": "RateChanged"
        },
        {
          "Type": "RoutedEventHandler",
          "Name": "SeekCompleted"
        },
        {
          "Type": "TypedEventHandler<MediaElement,TimedTextCueEventArgs>",
          "Name": "TimedTextCueReady"
        },
        {
          "Type": "TypedEventHandler<MediaElement,TimedTextErrorEventArgs>",
          "Name": "TimedTextErrorOccurred"
        },
        {
          "Type": "RoutedEventHandler",
          "Name": "VolumeChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.MediaElement"
    },
    {
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DropoutPriorityProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsCompact"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsCompactProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsFastForwardButtonVisible"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsFastForwardButtonVisibleProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsFastForwardEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsFastForwardEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsFastRewindButtonVisible"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsFastRewindButtonVisibleProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsFastRewindEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsFastRewindEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsFullWindowButtonVisible"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsFullWindowButtonVisibleProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsFullWindowEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsFullWindowEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsPlaybackRateButtonVisible"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsPlaybackRateButtonVisibleProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsPlaybackRateEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsPlaybackRateEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsSeekBarVisible"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsSeekBarVisibleProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsSeekEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsSeekEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsStopButtonVisible"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsStopButtonVisibleProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsStopEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsStopEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsVolumeButtonVisible"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsVolumeButtonVisibleProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsVolumeEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsVolumeEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsZoomButtonVisible"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsZoomButtonVisibleProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsZoomEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsZoomEnabledProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "GetDropoutPriority"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Int32"
            }
          ],
          "Name": "SetDropoutPriority"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.MediaTransportControls"
    },
    {
      "BaseType": "FlyoutBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<MenuFlyoutItemBase>",
          "IsGet": true,
          "Name": "Items"
        },
        {
          "Type": "Style",
          "IsGet": true,
          "IsSet": true,
          "Name": "MenuFlyoutPresenterStyle"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MenuFlyoutPresenterStyleProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "targetElement",
              "Type": "UIElement"
            },
            {
              "Name": "point",
              "Type": "Point"
            }
          ],
          "Name": "ShowAt"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.MenuFlyout"
    },
    {
      "BaseType": "MenuFlyoutItemBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ICommand",
          "IsGet": true,
          "IsSet": true,
          "Name": "Command"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "CommandParameter"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CommandParameterProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CommandProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Text"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "RoutedEventHandler",
          "Name": "Click"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.MenuFlyoutItem"
    },
    {
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.MenuFlyoutItemBase"
    },
    {
      "BaseType": "ItemsControl",
      "Interfaces": [
        "IItemContainerMapping"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.MenuFlyoutPresenter"
    },
    {
      "BaseType": "MenuFlyoutItemBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.MenuFlyoutSeparator"
    },
    {
      "IsSealed": true,
      "BaseType": "MenuFlyoutItemBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<MenuFlyoutItemBase>",
          "IsGet": true,
          "Name": "Items"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Text"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.MenuFlyoutSubItem"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "CallingUri"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.NotifyEventArgs"
    },
    {
      "BaseType": "UserControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AppBar",
          "IsGet": true,
          "IsSet": true,
          "Name": "BottomAppBar"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BottomAppBarProperty"
        },
        {
          "Type": "Frame",
          "IsGet": true,
          "Name": "Frame"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FrameProperty"
        },
        {
          "Type": "NavigationCacheMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "NavigationCacheMode"
        },
        {
          "Type": "AppBar",
          "IsGet": true,
          "IsSet": true,
          "Name": "TopAppBar"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TopAppBarProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Page"
    },
    {
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "Background"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BackgroundProperty"
        },
        {
          "Type": "UIElementCollection",
          "IsGet": true,
          "Name": "Children"
        },
        {
          "Type": "TransitionCollection",
          "IsGet": true,
          "IsSet": true,
          "Name": "ChildrenTransitions"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ChildrenTransitionsProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsItemsHost"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsItemsHostProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Panel"
    },
    {
      "IsSealed": true,
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Header"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderProperty"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "HeaderTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderTemplateProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsPasswordRevealButtonEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsPasswordRevealButtonEnabledProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxLength"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MaxLengthProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Password"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "PasswordChar"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PasswordCharProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PasswordProperty"
        },
        {
          "Type": "PasswordRevealMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "PasswordRevealMode"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PasswordRevealModeProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "PlaceholderText"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PlaceholderTextProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "PreventKeyboardDisplayOnProgrammaticFocus"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PreventKeyboardDisplayOnProgrammaticFocusProperty"
        },
        {
          "Type": "SolidColorBrush",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectionHighlightColor"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectionHighlightColorProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "SelectAll"
        }
      ],
      "Events": [
        {
          "Type": "ContextMenuOpeningEventHandler",
          "Name": "ContextMenuOpening"
        },
        {
          "Type": "RoutedEventHandler",
          "Name": "PasswordChanged"
        },
        {
          "Type": "TextControlPasteEventHandler",
          "Name": "Paste"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.PasswordBox"
    },
    {
      "BaseType": "IconElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Geometry",
          "IsGet": true,
          "IsSet": true,
          "Name": "Data"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DataProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.PathIcon"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.PickerConfirmedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "PickerFlyoutBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "ConfirmationButtonsVisible"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ConfirmationButtonsVisibleProperty"
        },
        {
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true,
          "Name": "Content"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContentProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Parameters": [
            {
              "Name": "target",
              "Type": "FrameworkElement"
            }
          ],
          "Name": "ShowAtAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<PickerFlyout,PickerConfirmedEventArgs>",
          "Name": "Confirmed"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.PickerFlyout"
    },
    {
      "IsSealed": true,
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.PickerFlyoutPresenter"
    },
    {
      "BaseType": "ItemsControl",
      "Interfaces": [
        "IItemContainerMapping"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "HeaderTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderTemplateProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsLocked"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsLockedProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedIndex"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedIndexProperty"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedItem"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedItemProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SlideInAnimationGroupProperty"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TitleProperty"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "TitleTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TitleTemplateProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "PivotSlideInAnimationGroup",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            }
          ],
          "Name": "GetSlideInAnimationGroup"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            },
            {
              "Name": "value",
              "Type": "PivotSlideInAnimationGroup"
            }
          ],
          "Name": "SetSlideInAnimationGroup"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<Pivot,PivotItemEventArgs>",
          "Name": "PivotItemLoaded"
        },
        {
          "Type": "TypedEventHandler<Pivot,PivotItemEventArgs>",
          "Name": "PivotItemLoading"
        },
        {
          "Type": "TypedEventHandler<Pivot,PivotItemEventArgs>",
          "Name": "PivotItemUnloaded"
        },
        {
          "Type": "TypedEventHandler<Pivot,PivotItemEventArgs>",
          "Name": "PivotItemUnloading"
        },
        {
          "Type": "SelectionChangedEventHandler",
          "Name": "SelectionChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Pivot"
    },
    {
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Header"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.PivotItem"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PivotItem",
          "IsGet": true,
          "IsSet": true,
          "Name": "Item"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.PivotItemEventArgs"
    },
    {
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ClickMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "ClickMode"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ClickModeProperty"
        },
        {
          "Type": "ICommand",
          "IsGet": true,
          "IsSet": true,
          "Name": "Command"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "CommandParameter"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CommandParameterProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CommandProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsPointerOver"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsPointerOverProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsPressed"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsPressedProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "RoutedEventHandler",
          "Name": "Click"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ButtonBase"
    },
    {
      "IsSealed": true,
      "BaseType": "Panel",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.CalendarPanel"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasMoreContentAfter"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasMoreContentBefore"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasMoreViews"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "HeaderText"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "MinViewWidth"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "WeekDay1"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "WeekDay2"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "WeekDay3"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "WeekDay4"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "WeekDay5"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "WeekDay6"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "WeekDay7"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.CalendarViewTemplateSettings"
    },
    {
      "BaseType": "VirtualizingPanel",
      "Interfaces": [
        "IScrollSnapPointsInfo"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AreHorizontalSnapPointsRegular"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AreVerticalSnapPointsRegular"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "CanHorizontallyScroll"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "CanVerticallyScroll"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ExtentHeight"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ExtentWidth"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "HorizontalOffset"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "ScrollOwner"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "VerticalOffset"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ViewportHeight"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ViewportWidth"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IReadOnlyList<Single>",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            }
          ],
          "Name": "GetIrregularSnapPoints"
        },
        {
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            },
            {
              "Name": "offset",
              "Type": "Single&",
              "Out": true
            }
          ],
          "Name": "GetRegularSnapPoints"
        },
        {
          "ReturnType": "Void",
          "Name": "LineDown"
        },
        {
          "ReturnType": "Void",
          "Name": "LineLeft"
        },
        {
          "ReturnType": "Void",
          "Name": "LineRight"
        },
        {
          "ReturnType": "Void",
          "Name": "LineUp"
        },
        {
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "visual",
              "Type": "UIElement"
            },
            {
              "Name": "rectangle",
              "Type": "Rect"
            }
          ],
          "Name": "MakeVisible"
        },
        {
          "ReturnType": "Void",
          "Name": "MouseWheelDown"
        },
        {
          "ReturnType": "Void",
          "Name": "MouseWheelLeft"
        },
        {
          "ReturnType": "Void",
          "Name": "MouseWheelRight"
        },
        {
          "ReturnType": "Void",
          "Name": "MouseWheelUp"
        },
        {
          "ReturnType": "Void",
          "Name": "PageDown"
        },
        {
          "ReturnType": "Void",
          "Name": "PageLeft"
        },
        {
          "ReturnType": "Void",
          "Name": "PageRight"
        },
        {
          "ReturnType": "Void",
          "Name": "PageUp"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "Double"
            }
          ],
          "Name": "SetHorizontalOffset"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "Double"
            }
          ],
          "Name": "SetVerticalOffset"
        }
      ],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "Name": "HorizontalSnapPointsChanged"
        },
        {
          "Type": "EventHandler<Object>",
          "Name": "VerticalSnapPointsChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.CarouselPanel"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "DropDownClosedHeight"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "DropDownOffset"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "DropDownOpenedHeight"
        },
        {
          "Type": "AnimationDirection",
          "IsGet": true,
          "Name": "SelectedItemDirection"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ComboBoxTemplateSettings"
    },
    {
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "horizontalChange",
              "Type": "Double"
            },
            {
              "Name": "verticalChange",
              "Type": "Double"
            },
            {
              "Name": "canceled",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Canceled"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "HorizontalChange"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "VerticalChange"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.DragCompletedEventArgs"
    },
    {
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "horizontalChange",
              "Type": "Double"
            },
            {
              "Name": "verticalChange",
              "Type": "Double"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "HorizontalChange"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "VerticalChange"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.DragDeltaEventArgs"
    },
    {
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "horizontalOffset",
              "Type": "Double"
            },
            {
              "Name": "verticalOffset",
              "Type": "Double"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "HorizontalOffset"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "VerticalOffset"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.DragStartedEventArgs"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AttachedFlyoutProperty"
        },
        {
          "Type": "FlyoutPlacementMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "Placement"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PlacementProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "FlyoutBase",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            }
          ],
          "Name": "GetAttachedFlyout"
        },
        {
          "ReturnType": "Void",
          "Name": "Hide"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            },
            {
              "Name": "value",
              "Type": "FlyoutBase"
            }
          ],
          "Name": "SetAttachedFlyout"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "placementTarget",
              "Type": "FrameworkElement"
            }
          ],
          "Name": "ShowAt"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "flyoutOwner",
              "Type": "FrameworkElement"
            }
          ],
          "Name": "ShowAttachedFlyout"
        }
      ],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "Name": "Closed"
        },
        {
          "Type": "EventHandler<Object>",
          "Name": "Opened"
        },
        {
          "Type": "EventHandler<Object>",
          "Name": "Opening"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.FlyoutBase"
    },
    {
      "BaseType": "ContentPresenter",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentMargin"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContentMarginProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisabledOpacity"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DisabledOpacityProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "DragBackground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DragBackgroundProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "DragForeground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DragForegroundProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "DragOpacity"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DragOpacityProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "FocusBorderBrush"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FocusBorderBrushProperty"
        },
        {
          "Type": "HorizontalAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "HorizontalContentAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HorizontalContentAlignmentProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "CheckBrush"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CheckBrushProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "CheckHintBrush"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CheckHintBrushProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "CheckSelectingBrush"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CheckSelectingBrushProperty"
        },
        {
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true,
          "Name": "Padding"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PaddingProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "PlaceholderBackground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PlaceholderBackgroundProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "PointerOverBackground"
        },
        {
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true,
          "Name": "PointerOverBackgroundMargin"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PointerOverBackgroundMarginProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PointerOverBackgroundProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReorderHintOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ReorderHintOffsetProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedBackground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedBackgroundProperty"
        },
        {
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedBorderThickness"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedBorderThicknessProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedForeground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedForegroundProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedPointerOverBackground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedPointerOverBackgroundProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedPointerOverBorderBrush"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedPointerOverBorderBrushProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectionCheckMarkVisualEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectionCheckMarkVisualEnabledProperty"
        },
        {
          "Type": "VerticalAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "VerticalContentAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VerticalContentAlignmentProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "DragItemsCount"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.GridViewItemTemplateSettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "Action"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "ItemCount"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "ItemUICount"
        },
        {
          "Type": "GeneratorPosition",
          "IsGet": true,
          "Name": "OldPosition"
        },
        {
          "Type": "GeneratorPosition",
          "IsGet": true,
          "Name": "Position"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ItemsChangedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [
        "IValueConverter"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "Disabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DisabledProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "Enabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EnabledProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            },
            {
              "Name": "targetType",
              "Type": "Type"
            },
            {
              "Name": "parameter",
              "Type": "Object"
            },
            {
              "Name": "language",
              "Type": "String"
            }
          ],
          "Name": "Convert"
        },
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            },
            {
              "Name": "targetType",
              "Type": "Type"
            },
            {
              "Name": "parameter",
              "Type": "Object"
            },
            {
              "Name": "language",
              "Type": "String"
            }
          ],
          "Name": "ConvertBack"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [
        "IValueConverter"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "Disabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DisabledProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "Enabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EnabledProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            },
            {
              "Name": "targetType",
              "Type": "Type"
            },
            {
              "Name": "parameter",
              "Type": "Object"
            },
            {
              "Name": "language",
              "Type": "String"
            }
          ],
          "Name": "Convert"
        },
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            },
            {
              "Name": "targetType",
              "Type": "Type"
            },
            {
              "Name": "parameter",
              "Type": "Object"
            },
            {
              "Name": "language",
              "Type": "String"
            }
          ],
          "Name": "ConvertBack"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "UIElement",
          "Parameters": [
            {
              "Name": "dispatcher",
              "Type": "Object"
            }
          ],
          "Name": "GetLayoutExceptionElement"
        },
        {
          "IsStatic": true,
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            }
          ],
          "Name": "GetLayoutSlot"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.LayoutInformation"
    },
    {
      "BaseType": "ContentPresenter",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentMargin"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContentMarginProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisabledOpacity"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DisabledOpacityProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "DragBackground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DragBackgroundProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "DragForeground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DragForegroundProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "DragOpacity"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DragOpacityProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "FocusBorderBrush"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FocusBorderBrushProperty"
        },
        {
          "Type": "HorizontalAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "HorizontalContentAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HorizontalContentAlignmentProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "CheckBrush"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CheckBrushProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "CheckHintBrush"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CheckHintBrushProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "CheckSelectingBrush"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CheckSelectingBrushProperty"
        },
        {
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true,
          "Name": "Padding"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PaddingProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "PlaceholderBackground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PlaceholderBackgroundProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "PointerOverBackground"
        },
        {
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true,
          "Name": "PointerOverBackgroundMargin"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PointerOverBackgroundMarginProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PointerOverBackgroundProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReorderHintOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ReorderHintOffsetProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedBackground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedBackgroundProperty"
        },
        {
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedBorderThickness"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedBorderThicknessProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedForeground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedForegroundProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedPointerOverBackground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedPointerOverBackgroundProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedPointerOverBorderBrush"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedPointerOverBorderBrushProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectionCheckMarkVisualEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectionCheckMarkVisualEnabledProperty"
        },
        {
          "Type": "VerticalAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "VerticalContentAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VerticalContentAlignmentProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "DragItemsCount"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ListViewItemTemplateSettings"
    },
    {
      "IsSealed": true,
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ItemHeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemHeightProperty"
        },
        {
          "Type": "IList<Object>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Items"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemsProperty"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "ItemTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemTemplateProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ItemWidth"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemWidthProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedIndex"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedIndexProperty"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedItem"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedItemProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "ShouldLoop"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ShouldLoopProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "SelectionChangedEventHandler",
          "Name": "SelectionChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.LoopingSelector"
    },
    {
      "IsSealed": true,
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.LoopingSelectorItem"
    },
    {
      "IsSealed": true,
      "BaseType": "Canvas",
      "Interfaces": [
        "IScrollSnapPointsInfo"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AreHorizontalSnapPointsRegular"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AreVerticalSnapPointsRegular"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IReadOnlyList<Single>",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            }
          ],
          "Name": "GetIrregularSnapPoints"
        },
        {
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            },
            {
              "Name": "offset",
              "Type": "Single&",
              "Out": true
            }
          ],
          "Name": "GetRegularSnapPoints"
        }
      ],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "Name": "HorizontalSnapPointsChanged"
        },
        {
          "Type": "EventHandler<Object>",
          "Name": "VerticalSnapPointsChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.LoopingSelectorPanel"
    },
    {
      "BaseType": "VirtualizingPanel",
      "Interfaces": [
        "IScrollSnapPointsInfo"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AreHorizontalSnapPointsRegular"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AreVerticalSnapPointsRegular"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "CanHorizontallyScroll"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "CanVerticallyScroll"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ExtentHeight"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ExtentWidth"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "HorizontalOffset"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "ScrollOwner"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "VerticalOffset"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ViewportHeight"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ViewportWidth"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IReadOnlyList<Single>",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            }
          ],
          "Name": "GetIrregularSnapPoints"
        },
        {
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            },
            {
              "Name": "offset",
              "Type": "Single&",
              "Out": true
            }
          ],
          "Name": "GetRegularSnapPoints"
        },
        {
          "ReturnType": "Void",
          "Name": "LineDown"
        },
        {
          "ReturnType": "Void",
          "Name": "LineLeft"
        },
        {
          "ReturnType": "Void",
          "Name": "LineRight"
        },
        {
          "ReturnType": "Void",
          "Name": "LineUp"
        },
        {
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "visual",
              "Type": "UIElement"
            },
            {
              "Name": "rectangle",
              "Type": "Rect"
            }
          ],
          "Name": "MakeVisible"
        },
        {
          "ReturnType": "Void",
          "Name": "MouseWheelDown"
        },
        {
          "ReturnType": "Void",
          "Name": "MouseWheelLeft"
        },
        {
          "ReturnType": "Void",
          "Name": "MouseWheelRight"
        },
        {
          "ReturnType": "Void",
          "Name": "MouseWheelUp"
        },
        {
          "ReturnType": "Void",
          "Name": "PageDown"
        },
        {
          "ReturnType": "Void",
          "Name": "PageLeft"
        },
        {
          "ReturnType": "Void",
          "Name": "PageRight"
        },
        {
          "ReturnType": "Void",
          "Name": "PageUp"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "Double"
            }
          ],
          "Name": "SetHorizontalOffset"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "Double"
            }
          ],
          "Name": "SetVerticalOffset"
        }
      ],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "Name": "HorizontalSnapPointsChanged"
        },
        {
          "Type": "EventHandler<Object>",
          "Name": "VerticalSnapPointsChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel"
    },
    {
      "BaseType": "FlyoutBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TitleProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetTitle"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "SetTitle"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.PickerFlyoutBase"
    },
    {
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.PivotHeaderItem"
    },
    {
      "IsSealed": true,
      "BaseType": "Panel",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.PivotHeaderPanel"
    },
    {
      "IsSealed": true,
      "BaseType": "Panel",
      "Interfaces": [
        "IScrollSnapPointsInfo"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AreHorizontalSnapPointsRegular"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AreVerticalSnapPointsRegular"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IReadOnlyList<Single>",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            }
          ],
          "Name": "GetIrregularSnapPoints"
        },
        {
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            },
            {
              "Name": "offset",
              "Type": "Single&",
              "Out": true
            }
          ],
          "Name": "GetRegularSnapPoints"
        }
      ],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "Name": "HorizontalSnapPointsChanged"
        },
        {
          "Type": "EventHandler<Object>",
          "Name": "VerticalSnapPointsChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.PivotPanel"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "HorizontalOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HorizontalOffsetProperty"
        },
        {
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true,
          "Name": "Child"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ChildProperty"
        },
        {
          "Type": "TransitionCollection",
          "IsGet": true,
          "IsSet": true,
          "Name": "ChildTransitions"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ChildTransitionsProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsLightDismissEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsLightDismissEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsOpen"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsOpenProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "VerticalOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VerticalOffsetProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "Name": "Closed"
        },
        {
          "Type": "EventHandler<Object>",
          "Name": "Opened"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.Popup"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ContainerAnimationEndPosition"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ContainerAnimationStartPosition"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "EllipseAnimationEndPosition"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "EllipseAnimationWellPosition"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "EllipseDiameter"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "EllipseOffset"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "IndicatorLengthDelta"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ProgressBarTemplateSettings"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "EllipseDiameter"
        },
        {
          "Type": "Thickness",
          "IsGet": true,
          "Name": "EllipseOffset"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "MaxSideLength"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ProgressRingTemplateSettings"
    },
    {
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "LargeChange"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LargeChangeProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Maximum"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MaximumProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Minimum"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MinimumProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "SmallChange"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SmallChangeProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Value"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ValueProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "RangeBaseValueChangedEventHandler",
          "Name": "ValueChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.RangeBase"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "NewValue"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "OldValue"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "ButtonBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Delay"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DelayProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Interval"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IntervalProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.RepeatButton"
    },
    {
      "IsSealed": true,
      "BaseType": "RangeBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ScrollingIndicatorMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "IndicatorMode"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IndicatorModeProperty"
        },
        {
          "Type": "Orientation",
          "IsGet": true,
          "IsSet": true,
          "Name": "Orientation"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OrientationProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "ViewportSize"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ViewportSizeProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "ScrollEventHandler",
          "Name": "Scroll"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ScrollBar"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "NewValue"
        },
        {
          "Type": "ScrollEventType",
          "IsGet": true,
          "Name": "ScrollEventType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ScrollEventArgs"
    },
    {
      "BaseType": "ItemsControl",
      "Interfaces": [
        "IItemContainerMapping"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<Boolean>",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsSynchronizedWithCurrentItem"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsSynchronizedWithCurrentItemProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedIndex"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedIndexProperty"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedItem"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedItemProperty"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedValue"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedValuePath"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedValuePathProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedValueProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetIsSelectionActive"
        }
      ],
      "Events": [
        {
          "Type": "SelectionChangedEventHandler",
          "Name": "SelectionChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.Selector"
    },
    {
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsSelected"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsSelectedProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.SelectorItem"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Brush",
          "IsGet": true,
          "Name": "BorderBrush"
        },
        {
          "Type": "Thickness",
          "IsGet": true,
          "Name": "BorderThickness"
        },
        {
          "Type": "TransitionCollection",
          "IsGet": true,
          "Name": "ContentTransitions"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "Name": "HeaderBackground"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "Name": "HeaderForeground"
        },
        {
          "Type": "ImageSource",
          "IsGet": true,
          "Name": "IconSource"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.SettingsFlyoutTemplateSettings"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "GridLength",
          "IsGet": true,
          "Name": "CompactPaneGridLength"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "NegativeOpenPaneLength"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "NegativeOpenPaneLengthMinusCompactLength"
        },
        {
          "Type": "GridLength",
          "IsGet": true,
          "Name": "OpenPaneGridLength"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "OpenPaneLength"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "OpenPaneLengthMinusCompactLength"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.SplitViewTemplateSettings"
    },
    {
      "IsSealed": true,
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsDragging"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsDraggingProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "CancelDrag"
        }
      ],
      "Events": [
        {
          "Type": "DragCompletedEventHandler",
          "Name": "DragCompleted"
        },
        {
          "Type": "DragDeltaEventHandler",
          "Name": "DragDelta"
        },
        {
          "Type": "DragStartedEventHandler",
          "Name": "DragStarted"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.Thumb"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "Fill"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FillProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.TickBar"
    },
    {
      "BaseType": "ButtonBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<Boolean>",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsChecked"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsCheckedProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsThreeState"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsThreeStateProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "RoutedEventHandler",
          "Name": "Checked"
        },
        {
          "Type": "RoutedEventHandler",
          "Name": "Indeterminate"
        },
        {
          "Type": "RoutedEventHandler",
          "Name": "Unchecked"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ToggleButton"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "CurtainCurrentToOffOffset"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "CurtainCurrentToOnOffset"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "CurtainOffToOnOffset"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "CurtainOnToOffOffset"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "KnobCurrentToOffOffset"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "KnobCurrentToOnOffset"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "KnobOffToOnOffset"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "KnobOnToOffOffset"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ToggleSwitchTemplateSettings"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "FromHorizontalOffset"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "FromVerticalOffset"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ToolTipTemplateSettings"
    },
    {
      "BaseType": "RangeBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsIndeterminate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsIndeterminateProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "ShowError"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ShowErrorProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "ShowPaused"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ShowPausedProperty"
        },
        {
          "Type": "ProgressBarTemplateSettings",
          "IsGet": true,
          "Name": "TemplateSettings"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ProgressBar"
    },
    {
      "IsSealed": true,
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsActive"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsActiveProperty"
        },
        {
          "Type": "ProgressRingTemplateSettings",
          "IsGet": true,
          "Name": "TemplateSettings"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ProgressRing"
    },
    {
      "BaseType": "ToggleButton",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "GroupName"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GroupNameProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.RadioButton"
    },
    {
      "BaseType": "Panel",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AboveProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AlignBottomWithPanelProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AlignBottomWithProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AlignHorizontalCenterWithPanelProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AlignHorizontalCenterWithProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AlignLeftWithPanelProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AlignLeftWithProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AlignRightWithPanelProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AlignRightWithProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AlignTopWithPanelProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AlignTopWithProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AlignVerticalCenterWithPanelProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AlignVerticalCenterWithProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BelowProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LeftOfProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RightOfProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "GetAbove"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "GetAlignBottomWith"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "GetAlignBottomWithPanel"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "GetAlignHorizontalCenterWith"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "GetAlignHorizontalCenterWithPanel"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "GetAlignLeftWith"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "GetAlignLeftWithPanel"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "GetAlignRightWith"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "GetAlignRightWithPanel"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "GetAlignTopWith"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "GetAlignTopWithPanel"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "GetAlignVerticalCenterWith"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "GetAlignVerticalCenterWithPanel"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "GetBelow"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "GetLeftOf"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "GetRightOf"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "SetAbove"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "SetAlignBottomWith"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetAlignBottomWithPanel"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "SetAlignHorizontalCenterWith"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetAlignHorizontalCenterWithPanel"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "SetAlignLeftWith"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetAlignLeftWithPanel"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "SetAlignRightWith"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetAlignRightWithPanel"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "SetAlignTopWith"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetAlignTopWithPanel"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "SetAlignVerticalCenterWith"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetAlignVerticalCenterWithPanel"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "SetBelow"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "SetLeftOf"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "SetRightOf"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.RelativePanel"
    },
    {
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AcceptsReturn"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AcceptsReturnProperty"
        },
        {
          "Type": "ITextDocument",
          "IsGet": true,
          "Name": "Document"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Header"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderProperty"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "HeaderTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderTemplateProperty"
        },
        {
          "Type": "InputScope",
          "IsGet": true,
          "IsSet": true,
          "Name": "InputScope"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "InputScopeProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsColorFontEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsColorFontEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsReadOnly"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsReadOnlyProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsSpellCheckEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsSpellCheckEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsTextPredictionEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsTextPredictionEnabledProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "PlaceholderText"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PlaceholderTextProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "PreventKeyboardDisplayOnProgrammaticFocus"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PreventKeyboardDisplayOnProgrammaticFocusProperty"
        },
        {
          "Type": "SolidColorBrush",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectionHighlightColor"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectionHighlightColorProperty"
        },
        {
          "Type": "TextAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "TextAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextAlignmentProperty"
        },
        {
          "Type": "TextWrapping",
          "IsGet": true,
          "IsSet": true,
          "Name": "TextWrapping"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextWrappingProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "ContextMenuOpeningEventHandler",
          "Name": "ContextMenuOpening"
        },
        {
          "Type": "TextControlPasteEventHandler",
          "Name": "Paste"
        },
        {
          "Type": "RoutedEventHandler",
          "Name": "SelectionChanged"
        },
        {
          "Type": "TypedEventHandler<RichEditBox,TextCompositionEndedEventArgs>",
          "Name": "TextCompositionEnded"
        },
        {
          "Type": "TypedEventHandler<RichEditBox,TextCompositionChangedEventArgs>",
          "Name": "TextCompositionChanged"
        },
        {
          "Type": "TypedEventHandler<RichEditBox,TextCompositionStartedEventArgs>",
          "Name": "TextCompositionStarted"
        },
        {
          "Type": "RoutedEventHandler",
          "Name": "TextChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.RichEditBox"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "BaselineOffset"
        },
        {
          "Type": "BlockCollection",
          "IsGet": true,
          "Name": "Blocks"
        },
        {
          "Type": "TextPointer",
          "IsGet": true,
          "Name": "ContentEnd"
        },
        {
          "Type": "TextPointer",
          "IsGet": true,
          "Name": "ContentStart"
        },
        {
          "Type": "FontFamily",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontFamily"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontFamilyProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontSize"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontSizeProperty"
        },
        {
          "Type": "FontStretch",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontStretch"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontStretchProperty"
        },
        {
          "Type": "FontStyle",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontStyle"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontStyleProperty"
        },
        {
          "Type": "FontWeight",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontWeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontWeightProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "Foreground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ForegroundProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasOverflowContent"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HasOverflowContentProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "CharacterSpacing"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CharacterSpacingProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsColorFontEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsColorFontEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsTextScaleFactorEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsTextScaleFactorEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsTextSelectionEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsTextSelectionEnabledProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "LineHeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LineHeightProperty"
        },
        {
          "Type": "LineStackingStrategy",
          "IsGet": true,
          "IsSet": true,
          "Name": "LineStackingStrategy"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LineStackingStrategyProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxLines"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MaxLinesProperty"
        },
        {
          "Type": "OpticalMarginAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "OpticalMarginAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OpticalMarginAlignmentProperty"
        },
        {
          "Type": "RichTextBlockOverflow",
          "IsGet": true,
          "IsSet": true,
          "Name": "OverflowContentTarget"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OverflowContentTargetProperty"
        },
        {
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true,
          "Name": "Padding"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PaddingProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "SelectedText"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedTextProperty"
        },
        {
          "Type": "TextPointer",
          "IsGet": true,
          "Name": "SelectionEnd"
        },
        {
          "Type": "SolidColorBrush",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectionHighlightColor"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectionHighlightColorProperty"
        },
        {
          "Type": "TextPointer",
          "IsGet": true,
          "Name": "SelectionStart"
        },
        {
          "Type": "TextAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "TextAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextAlignmentProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "TextIndent"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextIndentProperty"
        },
        {
          "Type": "TextLineBounds",
          "IsGet": true,
          "IsSet": true,
          "Name": "TextLineBounds"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextLineBoundsProperty"
        },
        {
          "Type": "TextReadingOrder",
          "IsGet": true,
          "IsSet": true,
          "Name": "TextReadingOrder"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextReadingOrderProperty"
        },
        {
          "Type": "TextTrimming",
          "IsGet": true,
          "IsSet": true,
          "Name": "TextTrimming"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextTrimmingProperty"
        },
        {
          "Type": "TextWrapping",
          "IsGet": true,
          "IsSet": true,
          "Name": "TextWrapping"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextWrappingProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "FocusState"
            }
          ],
          "Name": "Focus"
        },
        {
          "ReturnType": "TextPointer",
          "Parameters": [
            {
              "Name": "point",
              "Type": "Point"
            }
          ],
          "Name": "GetPositionFromPoint"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "start",
              "Type": "TextPointer"
            },
            {
              "Name": "end",
              "Type": "TextPointer"
            }
          ],
          "Name": "Select"
        },
        {
          "ReturnType": "Void",
          "Name": "SelectAll"
        }
      ],
      "Events": [
        {
          "Type": "ContextMenuOpeningEventHandler",
          "Name": "ContextMenuOpening"
        },
        {
          "Type": "RoutedEventHandler",
          "Name": "SelectionChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.RichTextBlock"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "BaselineOffset"
        },
        {
          "Type": "TextPointer",
          "IsGet": true,
          "Name": "ContentEnd"
        },
        {
          "Type": "RichTextBlock",
          "IsGet": true,
          "Name": "ContentSource"
        },
        {
          "Type": "TextPointer",
          "IsGet": true,
          "Name": "ContentStart"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasOverflowContent"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HasOverflowContentProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxLines"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MaxLinesProperty"
        },
        {
          "Type": "RichTextBlockOverflow",
          "IsGet": true,
          "IsSet": true,
          "Name": "OverflowContentTarget"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OverflowContentTargetProperty"
        },
        {
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true,
          "Name": "Padding"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PaddingProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "FocusState"
            }
          ],
          "Name": "Focus"
        },
        {
          "ReturnType": "TextPointer",
          "Parameters": [
            {
              "Name": "point",
              "Type": "Point"
            }
          ],
          "Name": "GetPositionFromPoint"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.RichTextBlockOverflow"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ActualHeight"
        },
        {
          "Type": "GridLength",
          "IsGet": true,
          "IsSet": true,
          "Name": "Height"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeightProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxHeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MaxHeightProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "MinHeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MinHeightProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.RowDefinition"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<RowDefinition>",
        "IEnumerable",
        "IEnumerable<RowDefinition>",
        "IList<RowDefinition>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.RowDefinitionCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "ContentPresenter",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "CanHorizontallyScroll"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "CanVerticallyScroll"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ExtentHeight"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ExtentWidth"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "HorizontalOffset"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "ScrollOwner"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "VerticalOffset"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ViewportHeight"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ViewportWidth"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "LineDown"
        },
        {
          "ReturnType": "Void",
          "Name": "LineLeft"
        },
        {
          "ReturnType": "Void",
          "Name": "LineRight"
        },
        {
          "ReturnType": "Void",
          "Name": "LineUp"
        },
        {
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "visual",
              "Type": "UIElement"
            },
            {
              "Name": "rectangle",
              "Type": "Rect"
            }
          ],
          "Name": "MakeVisible"
        },
        {
          "ReturnType": "Void",
          "Name": "MouseWheelDown"
        },
        {
          "ReturnType": "Void",
          "Name": "MouseWheelLeft"
        },
        {
          "ReturnType": "Void",
          "Name": "MouseWheelRight"
        },
        {
          "ReturnType": "Void",
          "Name": "MouseWheelUp"
        },
        {
          "ReturnType": "Void",
          "Name": "PageDown"
        },
        {
          "ReturnType": "Void",
          "Name": "PageLeft"
        },
        {
          "ReturnType": "Void",
          "Name": "PageRight"
        },
        {
          "ReturnType": "Void",
          "Name": "PageUp"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "Double"
            }
          ],
          "Name": "SetHorizontalOffset"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "Double"
            }
          ],
          "Name": "SetVerticalOffset"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ScrollContentPresenter"
    },
    {
      "IsSealed": true,
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "BringIntoViewOnFocusChange"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BringIntoViewOnFocusChangeProperty"
        },
        {
          "Type": "Visibility",
          "IsGet": true,
          "Name": "ComputedHorizontalScrollBarVisibility"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ComputedHorizontalScrollBarVisibilityProperty"
        },
        {
          "Type": "Visibility",
          "IsGet": true,
          "Name": "ComputedVerticalScrollBarVisibility"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ComputedVerticalScrollBarVisibilityProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ExtentHeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ExtentHeightProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ExtentWidth"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ExtentWidthProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "HorizontalOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HorizontalOffsetProperty"
        },
        {
          "Type": "ScrollBarVisibility",
          "IsGet": true,
          "IsSet": true,
          "Name": "HorizontalScrollBarVisibility"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HorizontalScrollBarVisibilityProperty"
        },
        {
          "Type": "ScrollMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "HorizontalScrollMode"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HorizontalScrollModeProperty"
        },
        {
          "Type": "SnapPointsAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "HorizontalSnapPointsAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HorizontalSnapPointsAlignmentProperty"
        },
        {
          "Type": "SnapPointsType",
          "IsGet": true,
          "IsSet": true,
          "Name": "HorizontalSnapPointsType"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HorizontalSnapPointsTypeProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsDeferredScrollingEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsDeferredScrollingEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsHorizontalRailEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsHorizontalRailEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsHorizontalScrollChainingEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsHorizontalScrollChainingEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsScrollInertiaEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsScrollInertiaEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsVerticalRailEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsVerticalRailEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsVerticalScrollChainingEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsVerticalScrollChainingEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsZoomChainingEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsZoomChainingEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsZoomInertiaEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsZoomInertiaEnabledProperty"
        },
        {
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true,
          "Name": "LeftHeader"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LeftHeaderProperty"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxZoomFactor"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MaxZoomFactorProperty"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "MinZoomFactor"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MinZoomFactorProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ScrollableHeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ScrollableHeightProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ScrollableWidth"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ScrollableWidthProperty"
        },
        {
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true,
          "Name": "TopHeader"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TopHeaderProperty"
        },
        {
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true,
          "Name": "TopLeftHeader"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TopLeftHeaderProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "VerticalOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VerticalOffsetProperty"
        },
        {
          "Type": "ScrollBarVisibility",
          "IsGet": true,
          "IsSet": true,
          "Name": "VerticalScrollBarVisibility"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VerticalScrollBarVisibilityProperty"
        },
        {
          "Type": "ScrollMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "VerticalScrollMode"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VerticalScrollModeProperty"
        },
        {
          "Type": "SnapPointsAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "VerticalSnapPointsAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VerticalSnapPointsAlignmentProperty"
        },
        {
          "Type": "SnapPointsType",
          "IsGet": true,
          "IsSet": true,
          "Name": "VerticalSnapPointsType"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VerticalSnapPointsTypeProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ViewportHeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ViewportHeightProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ViewportWidth"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ViewportWidthProperty"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "ZoomFactor"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ZoomFactorProperty"
        },
        {
          "Type": "ZoomMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "ZoomMode"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ZoomModeProperty"
        },
        {
          "Type": "IList<Single>",
          "IsGet": true,
          "Name": "ZoomSnapPoints"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ZoomSnapPointsProperty"
        },
        {
          "Type": "SnapPointsType",
          "IsGet": true,
          "IsSet": true,
          "Name": "ZoomSnapPointsType"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ZoomSnapPointsTypeProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetBringIntoViewOnFocusChange"
        },
        {
          "IsStatic": true,
          "ReturnType": "ScrollBarVisibility",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetHorizontalScrollBarVisibility"
        },
        {
          "IsStatic": true,
          "ReturnType": "ScrollMode",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetHorizontalScrollMode"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetIsDeferredScrollingEnabled"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetIsHorizontalRailEnabled"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetIsHorizontalScrollChainingEnabled"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetIsScrollInertiaEnabled"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetIsVerticalRailEnabled"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetIsVerticalScrollChainingEnabled"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetIsZoomChainingEnabled"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetIsZoomInertiaEnabled"
        },
        {
          "IsStatic": true,
          "ReturnType": "ScrollBarVisibility",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetVerticalScrollBarVisibility"
        },
        {
          "IsStatic": true,
          "ReturnType": "ScrollMode",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetVerticalScrollMode"
        },
        {
          "IsStatic": true,
          "ReturnType": "ZoomMode",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetZoomMode"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "horizontalOffset",
              "Type": "Nullable<Double>"
            },
            {
              "Name": "verticalOffset",
              "Type": "Nullable<Double>"
            },
            {
              "Name": "zoomFactor",
              "Type": "Nullable<Single>"
            }
          ],
          "Name": "ChangeView"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "horizontalOffset",
              "Type": "Nullable<Double>"
            },
            {
              "Name": "verticalOffset",
              "Type": "Nullable<Double>"
            },
            {
              "Name": "zoomFactor",
              "Type": "Nullable<Single>"
            },
            {
              "Name": "disableAnimation",
              "Type": "Boolean"
            }
          ],
          "Name": "ChangeView"
        },
        {
          "ReturnType": "Void",
          "Name": "InvalidateScrollInfo"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "Double"
            }
          ],
          "Name": "ScrollToHorizontalOffset"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "Double"
            }
          ],
          "Name": "ScrollToVerticalOffset"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "bringIntoViewOnFocusChange",
              "Type": "Boolean"
            }
          ],
          "Name": "SetBringIntoViewOnFocusChange"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "horizontalScrollBarVisibility",
              "Type": "ScrollBarVisibility"
            }
          ],
          "Name": "SetHorizontalScrollBarVisibility"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "horizontalScrollMode",
              "Type": "ScrollMode"
            }
          ],
          "Name": "SetHorizontalScrollMode"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "isDeferredScrollingEnabled",
              "Type": "Boolean"
            }
          ],
          "Name": "SetIsDeferredScrollingEnabled"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "isHorizontalRailEnabled",
              "Type": "Boolean"
            }
          ],
          "Name": "SetIsHorizontalRailEnabled"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "isHorizontalScrollChainingEnabled",
              "Type": "Boolean"
            }
          ],
          "Name": "SetIsHorizontalScrollChainingEnabled"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "isScrollInertiaEnabled",
              "Type": "Boolean"
            }
          ],
          "Name": "SetIsScrollInertiaEnabled"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "isVerticalRailEnabled",
              "Type": "Boolean"
            }
          ],
          "Name": "SetIsVerticalRailEnabled"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "isVerticalScrollChainingEnabled",
              "Type": "Boolean"
            }
          ],
          "Name": "SetIsVerticalScrollChainingEnabled"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "isZoomChainingEnabled",
              "Type": "Boolean"
            }
          ],
          "Name": "SetIsZoomChainingEnabled"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "isZoomInertiaEnabled",
              "Type": "Boolean"
            }
          ],
          "Name": "SetIsZoomInertiaEnabled"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "verticalScrollBarVisibility",
              "Type": "ScrollBarVisibility"
            }
          ],
          "Name": "SetVerticalScrollBarVisibility"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "verticalScrollMode",
              "Type": "ScrollMode"
            }
          ],
          "Name": "SetVerticalScrollMode"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "zoomMode",
              "Type": "ZoomMode"
            }
          ],
          "Name": "SetZoomMode"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "factor",
              "Type": "Single"
            }
          ],
          "Name": "ZoomToFactor"
        }
      ],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "Name": "DirectManipulationCompleted"
        },
        {
          "Type": "EventHandler<Object>",
          "Name": "DirectManipulationStarted"
        },
        {
          "Type": "EventHandler<ScrollViewerViewChangedEventArgs>",
          "Name": "ViewChanged"
        },
        {
          "Type": "EventHandler<ScrollViewerViewChangingEventArgs>",
          "Name": "ViewChanging"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ScrollViewer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "HorizontalOffset"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "VerticalOffset"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "ZoomFactor"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ScrollViewerView"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsIntermediate"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ScrollViewerView",
          "IsGet": true,
          "Name": "FinalView"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsInertial"
        },
        {
          "Type": "ScrollViewerView",
          "IsGet": true,
          "Name": "NextView"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs"
    },
    {
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "FocusOnKeyboardInput"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FocusOnKeyboardInputProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "ChooseSuggestionOnEnter"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ChooseSuggestionOnEnterProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "PlaceholderText"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PlaceholderTextProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "QueryText"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "QueryTextProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "SearchHistoryContext"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SearchHistoryContextProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "SearchHistoryEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SearchHistoryEnabledProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "settings",
              "Type": "LocalContentSuggestionSettings"
            }
          ],
          "Name": "SetLocalContentSuggestionSettings"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<SearchBox,RoutedEventArgs>",
          "Name": "PrepareForFocusOnKeyboardInput"
        },
        {
          "Type": "TypedEventHandler<SearchBox,SearchBoxQueryChangedEventArgs>",
          "Name": "QueryChanged"
        },
        {
          "Type": "TypedEventHandler<SearchBox,SearchBoxQuerySubmittedEventArgs>",
          "Name": "QuerySubmitted"
        },
        {
          "Type": "TypedEventHandler<SearchBox,SearchBoxResultSuggestionChosenEventArgs>",
          "Name": "ResultSuggestionChosen"
        },
        {
          "Type": "TypedEventHandler<SearchBox,SearchBoxSuggestionsRequestedEventArgs>",
          "Name": "SuggestionsRequested"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.SearchBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Language"
        },
        {
          "Type": "SearchQueryLinguisticDetails",
          "IsGet": true,
          "Name": "LinguisticDetails"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "QueryText"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.SearchBoxQueryChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "VirtualKeyModifiers",
          "IsGet": true,
          "Name": "KeyModifiers"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Language"
        },
        {
          "Type": "SearchQueryLinguisticDetails",
          "IsGet": true,
          "Name": "LinguisticDetails"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "QueryText"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.SearchBoxQuerySubmittedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "VirtualKeyModifiers",
          "IsGet": true,
          "Name": "KeyModifiers"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Tag"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.SearchBoxResultSuggestionChosenEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Language"
        },
        {
          "Type": "SearchQueryLinguisticDetails",
          "IsGet": true,
          "Name": "LinguisticDetails"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "QueryText"
        },
        {
          "Type": "SearchSuggestionsRequest",
          "IsGet": true,
          "Name": "Request"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.SearchBoxSuggestionsRequestedEventArgs"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<HubSection>",
          "IsGet": true,
          "Name": "AddedSections"
        },
        {
          "Type": "IList<HubSection>",
          "IsGet": true,
          "Name": "RemovedSections"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.SectionsInViewChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<DateTimeOffset>",
          "IsGet": true,
          "Name": "AddedDates"
        },
        {
          "Type": "IReadOnlyList<DateTimeOffset>",
          "IsGet": true,
          "Name": "RemovedDates"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.SelectedDatesChangedEventArgs"
    },
    {
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "removedItems",
              "Type": "IList<Object>"
            },
            {
              "Name": "addedItems",
              "Type": "IList<Object>"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IList<Object>",
          "IsGet": true,
          "Name": "AddedItems"
        },
        {
          "Type": "IList<Object>",
          "IsGet": true,
          "Name": "RemovedItems"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.SelectionChangedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "CanChangeViews"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CanChangeViewsProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsZoomedInViewActive"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsZoomedInViewActiveProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsZoomOutButtonEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsZoomOutButtonEnabledProperty"
        },
        {
          "Type": "ISemanticZoomInformation",
          "IsGet": true,
          "IsSet": true,
          "Name": "ZoomedInView"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ZoomedInViewProperty"
        },
        {
          "Type": "ISemanticZoomInformation",
          "IsGet": true,
          "IsSet": true,
          "Name": "ZoomedOutView"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ZoomedOutViewProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "ToggleActiveView"
        }
      ],
      "Events": [
        {
          "Type": "SemanticZoomViewChangedEventHandler",
          "Name": "ViewChangeCompleted"
        },
        {
          "Type": "SemanticZoomViewChangedEventHandler",
          "Name": "ViewChangeStarted"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.SemanticZoom"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Rect",
          "IsGet": true,
          "IsSet": true,
          "Name": "Bounds"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Item"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.SemanticZoomLocation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SemanticZoomLocation",
          "IsGet": true,
          "IsSet": true,
          "Name": "DestinationItem"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsSourceZoomedInView"
        },
        {
          "Type": "SemanticZoomLocation",
          "IsGet": true,
          "IsSet": true,
          "Name": "SourceItem"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.SemanticZoomViewChangedEventArgs"
    },
    {
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "HeaderBackground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderBackgroundProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "HeaderForeground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderForegroundProperty"
        },
        {
          "Type": "ImageSource",
          "IsGet": true,
          "IsSet": true,
          "Name": "IconSource"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IconSourceProperty"
        },
        {
          "Type": "SettingsFlyoutTemplateSettings",
          "IsGet": true,
          "Name": "TemplateSettings"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TitleProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Hide"
        },
        {
          "ReturnType": "Void",
          "Name": "Show"
        },
        {
          "ReturnType": "Void",
          "Name": "ShowIndependent"
        }
      ],
      "Events": [
        {
          "Type": "BackClickEventHandler",
          "Name": "BackClick"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.SettingsFlyout"
    },
    {
      "BaseType": "RangeBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Header"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderProperty"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "HeaderTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderTemplateProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "IntermediateValue"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IntermediateValueProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsDirectionReversed"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsDirectionReversedProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsThumbToolTipEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsThumbToolTipEnabledProperty"
        },
        {
          "Type": "Orientation",
          "IsGet": true,
          "IsSet": true,
          "Name": "Orientation"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OrientationProperty"
        },
        {
          "Type": "SliderSnapsTo",
          "IsGet": true,
          "IsSet": true,
          "Name": "SnapsTo"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SnapsToProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "StepFrequency"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StepFrequencyProperty"
        },
        {
          "Type": "IValueConverter",
          "IsGet": true,
          "IsSet": true,
          "Name": "ThumbToolTipValueConverter"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ThumbToolTipValueConverterProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "TickFrequency"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TickFrequencyProperty"
        },
        {
          "Type": "TickPlacement",
          "IsGet": true,
          "IsSet": true,
          "Name": "TickPlacement"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TickPlacementProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Slider"
    },
    {
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "CompactPaneLength"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CompactPaneLengthProperty"
        },
        {
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true,
          "Name": "Content"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContentProperty"
        },
        {
          "Type": "SplitViewDisplayMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayMode"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DisplayModeProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsPaneOpen"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsPaneOpenProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "OpenPaneLength"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OpenPaneLengthProperty"
        },
        {
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true,
          "Name": "Pane"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "PaneBackground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PaneBackgroundProperty"
        },
        {
          "Type": "SplitViewPanePlacement",
          "IsGet": true,
          "IsSet": true,
          "Name": "PanePlacement"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PanePlacementProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PaneProperty"
        },
        {
          "Type": "SplitViewTemplateSettings",
          "IsGet": true,
          "Name": "TemplateSettings"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TemplateSettingsProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "TypedEventHandler<SplitView,Object>",
          "Name": "PaneClosed"
        },
        {
          "Type": "TypedEventHandler<SplitView,SplitViewPaneClosingEventArgs>",
          "Name": "PaneClosing"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.SplitView"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Cancel"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.SplitViewPaneClosingEventArgs"
    },
    {
      "BaseType": "Panel",
      "Interfaces": [
        "IScrollSnapPointsInfo"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AreHorizontalSnapPointsRegular"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AreScrollSnapPointsRegular"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AreScrollSnapPointsRegularProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AreVerticalSnapPointsRegular"
        },
        {
          "Type": "Orientation",
          "IsGet": true,
          "IsSet": true,
          "Name": "Orientation"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OrientationProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IReadOnlyList<Single>",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            }
          ],
          "Name": "GetIrregularSnapPoints"
        },
        {
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            },
            {
              "Name": "offset",
              "Type": "Single&",
              "Out": true
            }
          ],
          "Name": "GetRegularSnapPoints"
        }
      ],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "Name": "HorizontalSnapPointsChanged"
        },
        {
          "Type": "EventHandler<Object>",
          "Name": "VerticalSnapPointsChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.StackPanel"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Style",
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            },
            {
              "Name": "container",
              "Type": "DependencyObject"
            }
          ],
          "Name": "SelectStyle"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.StyleSelector"
    },
    {
      "BaseType": "Grid",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "CoreIndependentInputSource",
          "Parameters": [
            {
              "Name": "deviceTypes",
              "Type": "CoreInputDeviceTypes"
            }
          ],
          "Name": "CreateCoreIndependentInputSource"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.SwapChainBackgroundPanel"
    },
    {
      "BaseType": "Grid",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "CompositionScaleX"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CompositionScaleXProperty"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "CompositionScaleY"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CompositionScaleYProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "CoreIndependentInputSource",
          "Parameters": [
            {
              "Name": "deviceTypes",
              "Type": "CoreInputDeviceTypes"
            }
          ],
          "Name": "CreateCoreIndependentInputSource"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<SwapChainPanel,Object>",
          "Name": "CompositionScaleChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.SwapChainPanel"
    },
    {
      "IsSealed": true,
      "BaseType": "IconElement",
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "symbol",
              "Type": "Symbol"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Symbol",
          "IsGet": true,
          "IsSet": true,
          "Name": "Symbol"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SymbolProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.SymbolIcon"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "BaselineOffset"
        },
        {
          "Type": "TextPointer",
          "IsGet": true,
          "Name": "ContentEnd"
        },
        {
          "Type": "TextPointer",
          "IsGet": true,
          "Name": "ContentStart"
        },
        {
          "Type": "FontFamily",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontFamily"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontFamilyProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontSize"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontSizeProperty"
        },
        {
          "Type": "FontStretch",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontStretch"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontStretchProperty"
        },
        {
          "Type": "FontStyle",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontStyle"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontStyleProperty"
        },
        {
          "Type": "FontWeight",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontWeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontWeightProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "Foreground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ForegroundProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "CharacterSpacing"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CharacterSpacingProperty"
        },
        {
          "Type": "InlineCollection",
          "IsGet": true,
          "Name": "Inlines"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsColorFontEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsColorFontEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsTextScaleFactorEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsTextScaleFactorEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsTextSelectionEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsTextSelectionEnabledProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "LineHeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LineHeightProperty"
        },
        {
          "Type": "LineStackingStrategy",
          "IsGet": true,
          "IsSet": true,
          "Name": "LineStackingStrategy"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LineStackingStrategyProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxLines"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MaxLinesProperty"
        },
        {
          "Type": "OpticalMarginAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "OpticalMarginAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OpticalMarginAlignmentProperty"
        },
        {
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true,
          "Name": "Padding"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PaddingProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "SelectedText"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectedTextProperty"
        },
        {
          "Type": "TextPointer",
          "IsGet": true,
          "Name": "SelectionEnd"
        },
        {
          "Type": "SolidColorBrush",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectionHighlightColor"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectionHighlightColorProperty"
        },
        {
          "Type": "TextPointer",
          "IsGet": true,
          "Name": "SelectionStart"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Text"
        },
        {
          "Type": "TextAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "TextAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextAlignmentProperty"
        },
        {
          "Type": "TextLineBounds",
          "IsGet": true,
          "IsSet": true,
          "Name": "TextLineBounds"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextLineBoundsProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextProperty"
        },
        {
          "Type": "TextReadingOrder",
          "IsGet": true,
          "IsSet": true,
          "Name": "TextReadingOrder"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextReadingOrderProperty"
        },
        {
          "Type": "TextTrimming",
          "IsGet": true,
          "IsSet": true,
          "Name": "TextTrimming"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextTrimmingProperty"
        },
        {
          "Type": "TextWrapping",
          "IsGet": true,
          "IsSet": true,
          "Name": "TextWrapping"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextWrappingProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "FocusState"
            }
          ],
          "Name": "Focus"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "start",
              "Type": "TextPointer"
            },
            {
              "Name": "end",
              "Type": "TextPointer"
            }
          ],
          "Name": "Select"
        },
        {
          "ReturnType": "Void",
          "Name": "SelectAll"
        }
      ],
      "Events": [
        {
          "Type": "ContextMenuOpeningEventHandler",
          "Name": "ContextMenuOpening"
        },
        {
          "Type": "RoutedEventHandler",
          "Name": "SelectionChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.TextBlock"
    },
    {
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AcceptsReturn"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AcceptsReturnProperty"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Header"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderProperty"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "HeaderTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderTemplateProperty"
        },
        {
          "Type": "InputScope",
          "IsGet": true,
          "IsSet": true,
          "Name": "InputScope"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "InputScopeProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsColorFontEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsColorFontEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsReadOnly"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsReadOnlyProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsSpellCheckEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsSpellCheckEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsTextPredictionEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsTextPredictionEnabledProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxLength"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MaxLengthProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "PlaceholderText"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PlaceholderTextProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "PreventKeyboardDisplayOnProgrammaticFocus"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PreventKeyboardDisplayOnProgrammaticFocusProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectedText"
        },
        {
          "Type": "SolidColorBrush",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectionHighlightColor"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SelectionHighlightColorProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectionLength"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "SelectionStart"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Text"
        },
        {
          "Type": "TextAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "TextAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextAlignmentProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextProperty"
        },
        {
          "Type": "TextWrapping",
          "IsGet": true,
          "IsSet": true,
          "Name": "TextWrapping"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextWrappingProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "charIndex",
              "Type": "Int32"
            },
            {
              "Name": "trailingEdge",
              "Type": "Boolean"
            }
          ],
          "Name": "GetRectFromCharacterIndex"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "start",
              "Type": "Int32"
            },
            {
              "Name": "length",
              "Type": "Int32"
            }
          ],
          "Name": "Select"
        },
        {
          "ReturnType": "Void",
          "Name": "SelectAll"
        }
      ],
      "Events": [
        {
          "Type": "ContextMenuOpeningEventHandler",
          "Name": "ContextMenuOpening"
        },
        {
          "Type": "TextControlPasteEventHandler",
          "Name": "Paste"
        },
        {
          "Type": "RoutedEventHandler",
          "Name": "SelectionChanged"
        },
        {
          "Type": "TypedEventHandler<TextBox,TextCompositionEndedEventArgs>",
          "Name": "TextCompositionEnded"
        },
        {
          "Type": "TypedEventHandler<TextBox,TextCompositionChangedEventArgs>",
          "Name": "TextCompositionChanged"
        },
        {
          "Type": "TypedEventHandler<TextBox,TextCompositionStartedEventArgs>",
          "Name": "TextCompositionStarted"
        },
        {
          "Type": "TextChangedEventHandler",
          "Name": "TextChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.TextBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "Length"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "StartIndex"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "Length"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "StartIndex"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "Length"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "StartIndex"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.TextControlPasteEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.TextChangedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "NewTime"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "OldTime"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.TimePickedEventArgs"
    },
    {
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ClockIdentifier"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ClockIdentifierProperty"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Header"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderProperty"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "HeaderTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderTemplateProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "MinuteIncrement"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MinuteIncrementProperty"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "Time"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TimeProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "EventHandler<TimePickerValueChangedEventArgs>",
          "Name": "TimeChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.TimePicker"
    },
    {
      "IsSealed": true,
      "BaseType": "PickerFlyoutBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ClockIdentifier"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ClockIdentifierProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "MinuteIncrement"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MinuteIncrementProperty"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "Time"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TimeProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<Nullable<TimeSpan>>",
          "Parameters": [
            {
              "Name": "target",
              "Type": "FrameworkElement"
            }
          ],
          "Name": "ShowAtAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<TimePickerFlyout,TimePickedEventArgs>",
          "Name": "TimePicked"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.TimePickerFlyout"
    },
    {
      "IsSealed": true,
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.TimePickerFlyoutPresenter"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "NewTime"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "OldTime"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.TimePickerValueChangedEventArgs"
    },
    {
      "BaseType": "MenuFlyoutItem",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsChecked"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsCheckedProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ToggleMenuFlyoutItem"
    },
    {
      "IsSealed": true,
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Header"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderProperty"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "HeaderTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeaderTemplateProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsOn"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsOnProperty"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "OffContent"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OffContentProperty"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "OffContentTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OffContentTemplateProperty"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "OnContent"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OnContentProperty"
        },
        {
          "Type": "DataTemplate",
          "IsGet": true,
          "IsSet": true,
          "Name": "OnContentTemplate"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OnContentTemplateProperty"
        },
        {
          "Type": "ToggleSwitchTemplateSettings",
          "IsGet": true,
          "Name": "TemplateSettings"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "RoutedEventHandler",
          "Name": "Toggled"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ToggleSwitch"
    },
    {
      "BaseType": "ContentControl",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "HorizontalOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HorizontalOffsetProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsOpen"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsOpenProperty"
        },
        {
          "Type": "PlacementMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "Placement"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PlacementProperty"
        },
        {
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true,
          "Name": "PlacementTarget"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PlacementTargetProperty"
        },
        {
          "Type": "ToolTipTemplateSettings",
          "IsGet": true,
          "Name": "TemplateSettings"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "VerticalOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VerticalOffsetProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "RoutedEventHandler",
          "Name": "Closed"
        },
        {
          "Type": "RoutedEventHandler",
          "Name": "Opened"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ToolTip"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PlacementProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PlacementTargetProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ToolTipProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "PlacementMode",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetPlacement"
        },
        {
          "IsStatic": true,
          "ReturnType": "UIElement",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetPlacementTarget"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetToolTip"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "PlacementMode"
            }
          ],
          "Name": "SetPlacement"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "UIElement"
            }
          ],
          "Name": "SetPlacementTarget"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "SetToolTip"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ToolTipService"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<UIElement>",
        "IEnumerable",
        "IEnumerable<UIElement>",
        "IList<UIElement>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "oldIndex",
              "Type": "UInt32"
            },
            {
              "Name": "newIndex",
              "Type": "UInt32"
            }
          ],
          "Name": "Move"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.UIElementCollection"
    },
    {
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true,
          "Name": "Content"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContentProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.UserControl"
    },
    {
      "BaseType": "Control",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Control",
          "IsGet": true,
          "Name": "Target"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ValidationIndicator"
    },
    {
      "IsSealed": true,
      "BaseType": "Panel",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ColumnSpanProperty"
        },
        {
          "Type": "HorizontalAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "HorizontalChildrenAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HorizontalChildrenAlignmentProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "ItemHeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemHeightProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "ItemWidth"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemWidthProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaximumRowsOrColumns"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MaximumRowsOrColumnsProperty"
        },
        {
          "Type": "Orientation",
          "IsGet": true,
          "IsSet": true,
          "Name": "Orientation"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OrientationProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RowSpanProperty"
        },
        {
          "Type": "VerticalAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "VerticalChildrenAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VerticalChildrenAlignmentProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "GetColumnSpan"
        },
        {
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "GetRowSpan"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Int32"
            }
          ],
          "Name": "SetColumnSpan"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Int32"
            }
          ],
          "Name": "SetRowSpan"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.VariableSizedWrapGrid"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true,
          "Name": "Child"
        },
        {
          "Type": "Stretch",
          "IsGet": true,
          "IsSet": true,
          "Name": "Stretch"
        },
        {
          "Type": "StretchDirection",
          "IsGet": true,
          "IsSet": true,
          "Name": "StretchDirection"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StretchDirectionProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StretchProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Viewbox"
    },
    {
      "BaseType": "Panel",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ItemContainerGenerator",
          "IsGet": true,
          "Name": "ItemContainerGenerator"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.VirtualizingPanel"
    },
    {
      "IsSealed": true,
      "BaseType": "OrientedVirtualizingPanel",
      "Interfaces": [
        "IScrollSnapPointsInfo"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AreScrollSnapPointsRegular"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AreScrollSnapPointsRegularProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsVirtualizingProperty"
        },
        {
          "Type": "Orientation",
          "IsGet": true,
          "IsSet": true,
          "Name": "Orientation"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OrientationProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VirtualizationModeProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "o",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetIsVirtualizing"
        },
        {
          "IsStatic": true,
          "ReturnType": "VirtualizationMode",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetVirtualizationMode"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "VirtualizationMode"
            }
          ],
          "Name": "SetVirtualizationMode"
        }
      ],
      "Events": [
        {
          "Type": "CleanUpVirtualizedItemEventHandler",
          "Name": "CleanUpVirtualizedItemEvent"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.VirtualizingStackPanel"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<Uri>",
          "IsGet": true,
          "IsSet": true,
          "Name": "AllowedScriptNotifyUris"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AllowedScriptNotifyUrisProperty"
        },
        {
          "Type": "IList<Uri>",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AnyScriptNotifyUri"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanGoBack"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CanGoBackProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanGoForward"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CanGoForwardProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "ContainsFullScreenElement"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContainsFullScreenElementProperty"
        },
        {
          "Type": "DataPackage",
          "IsGet": true,
          "Name": "DataTransferPackage"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DataTransferPackageProperty"
        },
        {
          "Type": "Color",
          "IsGet": true,
          "IsSet": true,
          "Name": "DefaultBackgroundColor"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DefaultBackgroundColorProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DocumentTitle"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DocumentTitleProperty"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "Source"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SourceProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "pObject",
              "Type": "Object"
            }
          ],
          "Name": "AddWebAllowedObject"
        },
        {
          "ReturnType": "Uri",
          "Parameters": [
            {
              "Name": "contentIdentifier",
              "Type": "String"
            },
            {
              "Name": "relativePath",
              "Type": "String"
            }
          ],
          "Name": "BuildLocalStreamUri"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IRandomAccessStream"
            }
          ],
          "Name": "CapturePreviewToStreamAsync"
        },
        {
          "ReturnType": "IAsyncOperation<DataPackage>",
          "Name": "CaptureSelectedContentToDataPackageAsync"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "FocusState"
            }
          ],
          "Name": "Focus"
        },
        {
          "ReturnType": "Void",
          "Name": "GoBack"
        },
        {
          "ReturnType": "Void",
          "Name": "GoForward"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "scriptName",
              "Type": "String"
            },
            {
              "Name": "arguments",
              "Type": "String[]"
            }
          ],
          "Name": "InvokeScript"
        },
        {
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "scriptName",
              "Type": "String"
            },
            {
              "Name": "arguments",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "InvokeScriptAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "Uri"
            }
          ],
          "Name": "Navigate"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "Uri"
            },
            {
              "Name": "streamResolver",
              "Type": "IUriToStreamResolver"
            }
          ],
          "Name": "NavigateToLocalStreamUri"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ],
          "Name": "NavigateToString"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "requestMessage",
              "Type": "HttpRequestMessage"
            }
          ],
          "Name": "NavigateWithHttpRequestMessage"
        },
        {
          "ReturnType": "Void",
          "Name": "Refresh"
        },
        {
          "ReturnType": "Void",
          "Name": "Stop"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<WebView,Object>",
          "Name": "ContainsFullScreenElementChanged"
        },
        {
          "Type": "TypedEventHandler<WebView,WebViewContentLoadingEventArgs>",
          "Name": "ContentLoading"
        },
        {
          "Type": "TypedEventHandler<WebView,WebViewDOMContentLoadedEventArgs>",
          "Name": "DOMContentLoaded"
        },
        {
          "Type": "TypedEventHandler<WebView,WebViewContentLoadingEventArgs>",
          "Name": "FrameContentLoading"
        },
        {
          "Type": "TypedEventHandler<WebView,WebViewDOMContentLoadedEventArgs>",
          "Name": "FrameDOMContentLoaded"
        },
        {
          "Type": "TypedEventHandler<WebView,WebViewNavigationCompletedEventArgs>",
          "Name": "FrameNavigationCompleted"
        },
        {
          "Type": "TypedEventHandler<WebView,WebViewNavigationStartingEventArgs>",
          "Name": "FrameNavigationStarting"
        },
        {
          "Type": "LoadCompletedEventHandler",
          "Name": "LoadCompleted"
        },
        {
          "Type": "TypedEventHandler<WebView,WebViewLongRunningScriptDetectedEventArgs>",
          "Name": "LongRunningScriptDetected"
        },
        {
          "Type": "TypedEventHandler<WebView,WebViewNavigationCompletedEventArgs>",
          "Name": "NavigationCompleted"
        },
        {
          "Type": "WebViewNavigationFailedEventHandler",
          "Name": "NavigationFailed"
        },
        {
          "Type": "TypedEventHandler<WebView,WebViewNavigationStartingEventArgs>",
          "Name": "NavigationStarting"
        },
        {
          "Type": "NotifyEventHandler",
          "Name": "ScriptNotify"
        },
        {
          "Type": "TypedEventHandler<WebView,Object>",
          "Name": "UnsafeContentWarningDisplaying"
        },
        {
          "Type": "TypedEventHandler<WebView,WebViewUnviewableContentIdentifiedEventArgs>",
          "Name": "UnviewableContentIdentified"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.WebView"
    },
    {
      "IsSealed": true,
      "BaseType": "TileBrush",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "SourceName"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SourceNameProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Redraw"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "WebView"
            }
          ],
          "Name": "SetSource"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.WebViewBrush"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "Uri"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.WebViewContentLoadingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "Uri"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.WebViewDOMContentLoadedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "ExecutionTime"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "StopPageScriptExecution"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.WebViewLongRunningScriptDetectedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsSuccess"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "Uri"
        },
        {
          "Type": "WebErrorStatus",
          "IsGet": true,
          "Name": "WebErrorStatus"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.WebViewNavigationCompletedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "Uri"
        },
        {
          "Type": "WebErrorStatus",
          "IsGet": true,
          "Name": "WebErrorStatus"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.WebViewNavigationFailedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Cancel"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "Uri"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.WebViewNavigationStartingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "Referrer"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "Uri"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.WebViewUnviewableContentIdentifiedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "OrientedVirtualizingPanel",
      "Interfaces": [
        "IScrollSnapPointsInfo"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "HorizontalAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "HorizontalChildrenAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HorizontalChildrenAlignmentProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "ItemHeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemHeightProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "ItemWidth"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemWidthProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaximumRowsOrColumns"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MaximumRowsOrColumnsProperty"
        },
        {
          "Type": "Orientation",
          "IsGet": true,
          "IsSet": true,
          "Name": "Orientation"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OrientationProperty"
        },
        {
          "Type": "VerticalAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "VerticalChildrenAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VerticalChildrenAlignmentProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.WrapGrid"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.BindableAttribute"
    },
    {
      "BaseType": "BindingBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IValueConverter",
          "IsGet": true,
          "IsSet": true,
          "Name": "Converter"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ConverterLanguage"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "ConverterParameter"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ElementName"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "FallbackValue"
        },
        {
          "Type": "BindingMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "Mode"
        },
        {
          "Type": "PropertyPath",
          "IsGet": true,
          "IsSet": true,
          "Name": "Path"
        },
        {
          "Type": "RelativeSource",
          "IsGet": true,
          "IsSet": true,
          "Name": "RelativeSource"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Source"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "TargetNullValue"
        },
        {
          "Type": "UpdateSourceTrigger",
          "IsGet": true,
          "IsSet": true,
          "Name": "UpdateSourceTrigger"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.Binding"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.BindingBase"
    },
    {
      "BaseType": "BindingExpressionBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "DataItem"
        },
        {
          "Type": "Binding",
          "IsGet": true,
          "Name": "ParentBinding"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "UpdateSource"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.BindingExpression"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.BindingExpressionBase"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "target",
              "Type": "DependencyObject"
            },
            {
              "Name": "dp",
              "Type": "DependencyProperty"
            },
            {
              "Name": "binding",
              "Type": "BindingBase"
            }
          ],
          "Name": "SetBinding"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.BindingOperations"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsSourceGrouped"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsSourceGroupedProperty"
        },
        {
          "Type": "PropertyPath",
          "IsGet": true,
          "IsSet": true,
          "Name": "ItemsPath"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ItemsPathProperty"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Source"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SourceProperty"
        },
        {
          "Type": "ICollectionView",
          "IsGet": true,
          "Name": "View"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ViewProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.CollectionViewSource"
    },
    {
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "isCancelable",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Cancel"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsCancelable"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.CurrentChangingEventArgs"
    },
    {
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "firstIndex",
              "Type": "Int32"
            },
            {
              "Name": "length",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "FirstIndex"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "LastIndex"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Length"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.ItemIndexRange"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "RelativeSourceMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "Mode"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.RelativeSource"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "NewValue"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.DataContextChangedEventArgs"
    },
    {
      "BaseType": "FrameworkTemplate",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ExtensionInstanceProperty"
        },
        {
          "Type": "Type",
          "IsGet": true,
          "IsSet": true,
          "Name": "TargetType"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IDataTemplateExtension",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            }
          ],
          "Name": "GetExtensionInstance"
        },
        {
          "ReturnType": "DependencyObject",
          "Name": "LoadContent"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "FrameworkElement"
            },
            {
              "Name": "value",
              "Type": "IDataTemplateExtension"
            }
          ],
          "Name": "SetExtensionInstance"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.DataTemplate"
    },
    {
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "dataType",
              "Type": "Object"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "DataType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.DataTemplateKey"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "EnableFrameRateCounter"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "EnableRedrawRegions"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsBindingTracingEnabled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsOverdrawHeatMapEnabled"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "BindingFailedEventHandler",
          "Name": "BindingFailed"
        }
      ],
      "Name": "Windows.UI.Xaml.DebugSettings"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "CoreDispatcher",
          "IsGet": true,
          "Name": "Dispatcher"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "dp",
              "Type": "DependencyProperty"
            }
          ],
          "Name": "ClearValue"
        },
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "dp",
              "Type": "DependencyProperty"
            }
          ],
          "Name": "GetAnimationBaseValue"
        },
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "dp",
              "Type": "DependencyProperty"
            }
          ],
          "Name": "GetValue"
        },
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "dp",
              "Type": "DependencyProperty"
            }
          ],
          "Name": "ReadLocalValue"
        },
        {
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "dp",
              "Type": "DependencyProperty"
            },
            {
              "Name": "callback",
              "Type": "DependencyPropertyChangedCallback"
            }
          ],
          "Name": "RegisterPropertyChangedCallback"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "dp",
              "Type": "DependencyProperty"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "SetValue"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "dp",
              "Type": "DependencyProperty"
            },
            {
              "Name": "token",
              "Type": "Int64"
            }
          ],
          "Name": "UnregisterPropertyChangedCallback"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.DependencyObject"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [
        "ICollection<DependencyObject>",
        "IEnumerable",
        "IEnumerable<DependencyObject>",
        "IList<DependencyObject>",
        "IObservableVector<DependencyObject>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "VectorChangedEventHandler<DependencyObject>",
          "Name": "VectorChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.DependencyObjectCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Object",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UnsetValue"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "PropertyMetadata",
          "Parameters": [
            {
              "Name": "forType",
              "Type": "Type"
            }
          ],
          "Name": "GetMetadata"
        },
        {
          "IsStatic": true,
          "ReturnType": "DependencyProperty",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "propertyType",
              "Type": "Type"
            },
            {
              "Name": "ownerType",
              "Type": "Type"
            },
            {
              "Name": "typeMetadata",
              "Type": "PropertyMetadata"
            }
          ],
          "Name": "Register"
        },
        {
          "IsStatic": true,
          "ReturnType": "DependencyProperty",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "propertyType",
              "Type": "Type"
            },
            {
              "Name": "ownerType",
              "Type": "Type"
            },
            {
              "Name": "defaultMetadata",
              "Type": "PropertyMetadata"
            }
          ],
          "Name": "RegisterAttached"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.DependencyProperty"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "NewValue"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "OldValue"
        },
        {
          "Type": "DependencyProperty",
          "IsGet": true,
          "Name": "Property"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.DependencyPropertyChangedEventArgs"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "Interval"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsEnabled"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Start"
        },
        {
          "ReturnType": "Void",
          "Name": "Stop"
        }
      ],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "Name": "Tick"
        }
      ],
      "Name": "Windows.UI.Xaml.DispatcherTimer"
    },
    {
      "BaseType": "TextElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "LineHeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LineHeightProperty"
        },
        {
          "Type": "LineStackingStrategy",
          "IsGet": true,
          "IsSet": true,
          "Name": "LineStackingStrategy"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LineStackingStrategyProperty"
        },
        {
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true,
          "Name": "Margin"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MarginProperty"
        },
        {
          "Type": "TextAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "TextAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextAlignmentProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.Block"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<Block>",
        "IEnumerable",
        "IEnumerable<Block>",
        "IList<Block>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.BlockCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "Span",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.Bold"
    },
    {
      "IsSealed": true,
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ColorFontPaletteIndex"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ColorFontPaletteIndexProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "Fill"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FillProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontRenderingEmSize"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontRenderingEmSizeProperty"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontUri"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontUriProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Indices"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IndicesProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsColorFontEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsColorFontEnabledProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "OriginX"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OriginXProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "OriginY"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OriginYProperty"
        },
        {
          "Type": "StyleSimulations",
          "IsGet": true,
          "IsSet": true,
          "Name": "StyleSimulations"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StyleSimulationsProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "UnicodeString"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UnicodeStringProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.Glyphs"
    },
    {
      "IsSealed": true,
      "BaseType": "Span",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "NavigateUri"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NavigateUriProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "TypedEventHandler<Hyperlink,HyperlinkClickEventArgs>",
          "Name": "Click"
        }
      ],
      "Name": "Windows.UI.Xaml.Documents.Hyperlink"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.HyperlinkClickEventArgs"
    },
    {
      "BaseType": "TextElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.Inline"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<Inline>",
        "IEnumerable",
        "IEnumerable<Inline>",
        "IList<Inline>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.InlineCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "Inline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true,
          "Name": "Child"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.InlineUIContainer"
    },
    {
      "IsSealed": true,
      "BaseType": "Span",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.Italic"
    },
    {
      "IsSealed": true,
      "BaseType": "Inline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.LineBreak"
    },
    {
      "IsSealed": true,
      "BaseType": "Block",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "InlineCollection",
          "IsGet": true,
          "Name": "Inlines"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "TextIndent"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextIndentProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.Paragraph"
    },
    {
      "IsSealed": true,
      "BaseType": "Inline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "FlowDirection",
          "IsGet": true,
          "IsSet": true,
          "Name": "FlowDirection"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FlowDirectionProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Text"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.Run"
    },
    {
      "BaseType": "Inline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "InlineCollection",
          "IsGet": true,
          "IsSet": true,
          "Name": "Inlines"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.Span"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TextPointer",
          "IsGet": true,
          "Name": "ContentEnd"
        },
        {
          "Type": "TextPointer",
          "IsGet": true,
          "Name": "ContentStart"
        },
        {
          "Type": "TextPointer",
          "IsGet": true,
          "Name": "ElementEnd"
        },
        {
          "Type": "TextPointer",
          "IsGet": true,
          "Name": "ElementStart"
        },
        {
          "Type": "FontFamily",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontFamily"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontFamilyProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontSize"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontSizeProperty"
        },
        {
          "Type": "FontStretch",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontStretch"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontStretchProperty"
        },
        {
          "Type": "FontStyle",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontStyle"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontStyleProperty"
        },
        {
          "Type": "FontWeight",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontWeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FontWeightProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "Foreground"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ForegroundProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "CharacterSpacing"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CharacterSpacingProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsTextScaleFactorEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsTextScaleFactorEnabledProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Language"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LanguageProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "FindName"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.TextElement"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "LogicalDirection",
          "IsGet": true,
          "Name": "LogicalDirection"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "Offset"
        },
        {
          "Type": "DependencyObject",
          "IsGet": true,
          "Name": "Parent"
        },
        {
          "Type": "FrameworkElement",
          "IsGet": true,
          "Name": "VisualParent"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "direction",
              "Type": "LogicalDirection"
            }
          ],
          "Name": "GetCharacterRect"
        },
        {
          "ReturnType": "TextPointer",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "Int32"
            },
            {
              "Name": "direction",
              "Type": "LogicalDirection"
            }
          ],
          "Name": "GetPositionAtOffset"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.TextPointer"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AnnotationAlternatesProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CapitalSpacingProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CapitalsProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CaseSensitiveFormsProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContextualAlternatesProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContextualLigaturesProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContextualSwashesProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DiscretionaryLigaturesProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EastAsianExpertFormsProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EastAsianLanguageProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EastAsianWidthsProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FractionProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HistoricalFormsProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HistoricalLigaturesProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "KerningProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MathematicalGreekProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NumeralAlignmentProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NumeralStyleProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SlashedZeroProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StandardLigaturesProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StandardSwashesProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StylisticAlternatesProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StylisticSet10Property"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StylisticSet11Property"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StylisticSet12Property"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StylisticSet13Property"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StylisticSet14Property"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StylisticSet15Property"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StylisticSet16Property"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StylisticSet17Property"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StylisticSet18Property"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StylisticSet19Property"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StylisticSet1Property"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StylisticSet20Property"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StylisticSet2Property"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StylisticSet3Property"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StylisticSet4Property"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StylisticSet5Property"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StylisticSet6Property"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StylisticSet7Property"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StylisticSet8Property"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StylisticSet9Property"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VariantsProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetAnnotationAlternates"
        },
        {
          "IsStatic": true,
          "ReturnType": "FontCapitals",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetCapitals"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetCapitalSpacing"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetCaseSensitiveForms"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetContextualAlternates"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetContextualLigatures"
        },
        {
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetContextualSwashes"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetDiscretionaryLigatures"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetEastAsianExpertForms"
        },
        {
          "IsStatic": true,
          "ReturnType": "FontEastAsianLanguage",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetEastAsianLanguage"
        },
        {
          "IsStatic": true,
          "ReturnType": "FontEastAsianWidths",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetEastAsianWidths"
        },
        {
          "IsStatic": true,
          "ReturnType": "FontFraction",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetFraction"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetHistoricalForms"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetHistoricalLigatures"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetKerning"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetMathematicalGreek"
        },
        {
          "IsStatic": true,
          "ReturnType": "FontNumeralAlignment",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetNumeralAlignment"
        },
        {
          "IsStatic": true,
          "ReturnType": "FontNumeralStyle",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetNumeralStyle"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetSlashedZero"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetStandardLigatures"
        },
        {
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetStandardSwashes"
        },
        {
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetStylisticAlternates"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetStylisticSet1"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetStylisticSet10"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetStylisticSet11"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetStylisticSet12"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetStylisticSet13"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetStylisticSet14"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetStylisticSet15"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetStylisticSet16"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetStylisticSet17"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetStylisticSet18"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetStylisticSet19"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetStylisticSet2"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetStylisticSet20"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetStylisticSet3"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetStylisticSet4"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetStylisticSet5"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetStylisticSet6"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetStylisticSet7"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetStylisticSet8"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetStylisticSet9"
        },
        {
          "IsStatic": true,
          "ReturnType": "FontVariants",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetVariants"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Int32"
            }
          ],
          "Name": "SetAnnotationAlternates"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "FontCapitals"
            }
          ],
          "Name": "SetCapitals"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetCapitalSpacing"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetCaseSensitiveForms"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetContextualAlternates"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetContextualLigatures"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Int32"
            }
          ],
          "Name": "SetContextualSwashes"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetDiscretionaryLigatures"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetEastAsianExpertForms"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "FontEastAsianLanguage"
            }
          ],
          "Name": "SetEastAsianLanguage"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "FontEastAsianWidths"
            }
          ],
          "Name": "SetEastAsianWidths"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "FontFraction"
            }
          ],
          "Name": "SetFraction"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetHistoricalForms"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetHistoricalLigatures"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetKerning"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetMathematicalGreek"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "FontNumeralAlignment"
            }
          ],
          "Name": "SetNumeralAlignment"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "FontNumeralStyle"
            }
          ],
          "Name": "SetNumeralStyle"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetSlashedZero"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetStandardLigatures"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Int32"
            }
          ],
          "Name": "SetStandardSwashes"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Int32"
            }
          ],
          "Name": "SetStylisticAlternates"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetStylisticSet1"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetStylisticSet10"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetStylisticSet11"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetStylisticSet12"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetStylisticSet13"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetStylisticSet14"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetStylisticSet15"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetStylisticSet16"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetStylisticSet17"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetStylisticSet18"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetStylisticSet19"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetStylisticSet2"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetStylisticSet20"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetStylisticSet3"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetStylisticSet4"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetStylisticSet5"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetStylisticSet6"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetStylisticSet7"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetStylisticSet8"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetStylisticSet9"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "DependencyObject"
            },
            {
              "Name": "value",
              "Type": "FontVariants"
            }
          ],
          "Name": "SetVariants"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.Typography"
    },
    {
      "IsSealed": true,
      "BaseType": "Span",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Documents.Underline"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DataPackage",
          "IsGet": true,
          "IsSet": true,
          "Name": "Data"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Point",
          "Parameters": [
            {
              "Name": "relativeTo",
              "Type": "UIElement"
            }
          ],
          "Name": "GetPosition"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.DragEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.DragOperationDeferral"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Cancel"
        },
        {
          "Type": "DataPackage",
          "IsGet": true,
          "Name": "Data"
        },
        {
          "Type": "DragVisual",
          "IsGet": true,
          "IsSet": true,
          "Name": "DragVisual"
        },
        {
          "Type": "DragVisualKind",
          "IsGet": true,
          "IsSet": true,
          "Name": "DragVisualKind"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "IsSet": true,
          "Name": "DragVisualOffset"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.DragStartingEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "DragVisual",
          "Parameters": [
            {
              "Name": "bitmapImage",
              "Type": "BitmapImage"
            }
          ],
          "Name": "CreateFromBitmap"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.DragVisual"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DataPackageOperation",
          "IsGet": true,
          "Name": "DropResult"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.DropCompletedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "TriggerBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TriggerActionCollection",
          "IsGet": true,
          "Name": "Actions"
        },
        {
          "Type": "RoutedEvent",
          "IsGet": true,
          "IsSet": true,
          "Name": "RoutedEvent"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.EventTrigger"
    },
    {
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ErrorMessage"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.ExceptionRoutedEventArgs"
    },
    {
      "BaseType": "UIElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ActualHeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ActualHeightProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ActualWidth"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ActualWidthProperty"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "BaseUri"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "DataContext"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DataContextProperty"
        },
        {
          "Type": "FlowDirection",
          "IsGet": true,
          "IsSet": true,
          "Name": "FlowDirection"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FlowDirectionProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Height"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HeightProperty"
        },
        {
          "Type": "HorizontalAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "HorizontalAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HorizontalAlignmentProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Language"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LanguageProperty"
        },
        {
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true,
          "Name": "Margin"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MarginProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxHeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MaxHeightProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxWidth"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MaxWidthProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "MinHeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MinHeightProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "MinWidth"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MinWidthProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Name"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "NameProperty"
        },
        {
          "Type": "DependencyObject",
          "IsGet": true,
          "Name": "Parent"
        },
        {
          "Type": "ElementTheme",
          "IsGet": true,
          "IsSet": true,
          "Name": "RequestedTheme"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RequestedThemeProperty"
        },
        {
          "Type": "ResourceDictionary",
          "IsGet": true,
          "IsSet": true,
          "Name": "Resources"
        },
        {
          "Type": "Style",
          "IsGet": true,
          "IsSet": true,
          "Name": "Style"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StyleProperty"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Tag"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TagProperty"
        },
        {
          "Type": "TriggerCollection",
          "IsGet": true,
          "Name": "Triggers"
        },
        {
          "Type": "VerticalAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "VerticalAlignment"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VerticalAlignmentProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Width"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "WidthProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "FindName"
        },
        {
          "ReturnType": "BindingExpression",
          "Parameters": [
            {
              "Name": "dp",
              "Type": "DependencyProperty"
            }
          ],
          "Name": "GetBindingExpression"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "dp",
              "Type": "DependencyProperty"
            },
            {
              "Name": "binding",
              "Type": "BindingBase"
            }
          ],
          "Name": "SetBinding"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<FrameworkElement,DataContextChangedEventArgs>",
          "Name": "DataContextChanged"
        },
        {
          "Type": "EventHandler<Object>",
          "Name": "LayoutUpdated"
        },
        {
          "Type": "RoutedEventHandler",
          "Name": "Loaded"
        },
        {
          "Type": "TypedEventHandler<FrameworkElement,Object>",
          "Name": "Loading"
        },
        {
          "Type": "SizeChangedEventHandler",
          "Name": "SizeChanged"
        },
        {
          "Type": "RoutedEventHandler",
          "Name": "Unloaded"
        }
      ],
      "Name": "Windows.UI.Xaml.FrameworkElement"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.FrameworkTemplate"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IFrameworkView"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "applicationView",
              "Type": "CoreApplicationView"
            }
          ],
          "Name": "Initialize"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "entryPoint",
              "Type": "String"
            }
          ],
          "Name": "Load"
        },
        {
          "ReturnType": "Void",
          "Name": "Run"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "window",
              "Type": "CoreWindow"
            }
          ],
          "Name": "SetWindow"
        },
        {
          "ReturnType": "Void",
          "Name": "Uninitialize"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.FrameworkView"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IFrameworkViewSource"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IFrameworkView",
          "Name": "CreateView"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.FrameworkViewSource"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "PointerDeviceType",
          "IsGet": true,
          "Name": "PointerDeviceType"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Point",
          "Parameters": [
            {
              "Name": "relativeTo",
              "Type": "UIElement"
            }
          ],
          "Name": "GetPosition"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "UIElement",
          "Parameters": [
            {
              "Name": "focusNavigationDirection",
              "Type": "FocusNavigationDirection"
            }
          ],
          "Name": "FindNextFocus"
        },
        {
          "IsStatic": true,
          "ReturnType": "UIElement",
          "Parameters": [
            {
              "Name": "focusNavigationDirection",
              "Type": "FocusNavigationDirection"
            },
            {
              "Name": "hintRect",
              "Type": "Rect"
            }
          ],
          "Name": "FindNextFocus"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Name": "GetFocusedElement"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "focusNavigationDirection",
              "Type": "FocusNavigationDirection"
            }
          ],
          "Name": "TryMoveFocus"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.FocusManager"
    },
    {
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "FocusNavigationDirection",
          "IsGet": true,
          "Name": "FocusNavigationDirection"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true,
          "Name": "NewFocus"
        },
        {
          "Type": "UIElement",
          "IsGet": true,
          "Name": "OldFocus"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.GettingFocusEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "HoldingState",
          "IsGet": true,
          "Name": "HoldingState"
        },
        {
          "Type": "PointerDeviceType",
          "IsGet": true,
          "Name": "PointerDeviceType"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Point",
          "Parameters": [
            {
              "Name": "relativeTo",
              "Type": "UIElement"
            }
          ],
          "Name": "GetPosition"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.HoldingRoutedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "DesiredDeceleration"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "DesiredExpansion"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.InertiaExpansionBehavior"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "DesiredDeceleration"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "DesiredRotation"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.InertiaRotationBehavior"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "DesiredDeceleration"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "DesiredDisplacement"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.InertiaTranslationBehavior"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<InputScopeName>",
          "IsGet": true,
          "Name": "Names"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.InputScope"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "nameValue",
              "Type": "InputScopeNameValue"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "InputScopeNameValue",
          "IsGet": true,
          "IsSet": true,
          "Name": "NameValue"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.InputScopeName"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "VirtualKey",
          "IsGet": true,
          "Name": "Key"
        },
        {
          "Type": "CorePhysicalKeyStatus",
          "IsGet": true,
          "Name": "KeyStatus"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.KeyRoutedEventArgs"
    },
    {
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "FocusNavigationDirection",
          "IsGet": true,
          "Name": "FocusNavigationDirection"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true,
          "Name": "NewFocus"
        },
        {
          "Type": "UIElement",
          "IsGet": true,
          "Name": "OldFocus"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.LosingFocusEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UIElement",
          "IsGet": true,
          "Name": "Container"
        },
        {
          "Type": "ManipulationDelta",
          "IsGet": true,
          "Name": "Cumulative"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsInertial"
        },
        {
          "Type": "PointerDeviceType",
          "IsGet": true,
          "Name": "PointerDeviceType"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "Name": "Position"
        },
        {
          "Type": "ManipulationVelocities",
          "IsGet": true,
          "Name": "Velocities"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UIElement",
          "IsGet": true,
          "Name": "Container"
        },
        {
          "Type": "ManipulationDelta",
          "IsGet": true,
          "Name": "Cumulative"
        },
        {
          "Type": "ManipulationDelta",
          "IsGet": true,
          "Name": "Delta"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsInertial"
        },
        {
          "Type": "PointerDeviceType",
          "IsGet": true,
          "Name": "PointerDeviceType"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "Name": "Position"
        },
        {
          "Type": "ManipulationVelocities",
          "IsGet": true,
          "Name": "Velocities"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UIElement",
          "IsGet": true,
          "Name": "Container"
        },
        {
          "Type": "ManipulationDelta",
          "IsGet": true,
          "Name": "Cumulative"
        },
        {
          "Type": "ManipulationDelta",
          "IsGet": true,
          "Name": "Delta"
        },
        {
          "Type": "InertiaExpansionBehavior",
          "IsGet": true,
          "IsSet": true,
          "Name": "ExpansionBehavior"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "PointerDeviceType",
          "IsGet": true,
          "Name": "PointerDeviceType"
        },
        {
          "Type": "InertiaRotationBehavior",
          "IsGet": true,
          "IsSet": true,
          "Name": "RotationBehavior"
        },
        {
          "Type": "InertiaTranslationBehavior",
          "IsGet": true,
          "IsSet": true,
          "Name": "TranslationBehavior"
        },
        {
          "Type": "ManipulationVelocities",
          "IsGet": true,
          "Name": "Velocities"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "center",
              "Type": "Point"
            },
            {
              "Name": "radius",
              "Type": "Double"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Point",
          "IsGet": true,
          "IsSet": true,
          "Name": "Center"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Radius"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.ManipulationPivot"
    },
    {
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UIElement",
          "IsGet": true,
          "Name": "Container"
        },
        {
          "Type": "ManipulationDelta",
          "IsGet": true,
          "Name": "Cumulative"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "PointerDeviceType",
          "IsGet": true,
          "Name": "PointerDeviceType"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "Name": "Position"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true,
          "Name": "Container"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "ManipulationModes",
          "IsGet": true,
          "IsSet": true,
          "Name": "Mode"
        },
        {
          "Type": "ManipulationPivot",
          "IsGet": true,
          "IsSet": true,
          "Name": "Pivot"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsInContact"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsInRange"
        },
        {
          "Type": "PointerDeviceType",
          "IsGet": true,
          "Name": "PointerDeviceType"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "PointerId"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.Pointer"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "VirtualKeyModifiers",
          "IsGet": true,
          "Name": "KeyModifiers"
        },
        {
          "Type": "Pointer",
          "IsGet": true,
          "Name": "Pointer"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "PointerPoint",
          "Parameters": [
            {
              "Name": "relativeTo",
              "Type": "UIElement"
            }
          ],
          "Name": "GetCurrentPoint"
        },
        {
          "ReturnType": "IList<PointerPoint>",
          "Parameters": [
            {
              "Name": "relativeTo",
              "Type": "UIElement"
            }
          ],
          "Name": "GetIntermediatePoints"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.PointerRoutedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "PointerDeviceType",
          "IsGet": true,
          "Name": "PointerDeviceType"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Point",
          "Parameters": [
            {
              "Name": "relativeTo",
              "Type": "UIElement"
            }
          ],
          "Name": "GetPosition"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.RightTappedRoutedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "PointerDeviceType",
          "IsGet": true,
          "Name": "PointerDeviceType"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Point",
          "Parameters": [
            {
              "Name": "relativeTo",
              "Type": "UIElement"
            }
          ],
          "Name": "GetPosition"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Input.TappedRoutedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "String",
          "Name": "Name"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Markup.ContentPropertyAttribute"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "target",
              "Type": "UIElement"
            }
          ],
          "Name": "ResumeRendering"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "target",
              "Type": "UIElement"
            }
          ],
          "Name": "SuspendRendering"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Markup.XamlBindingHelper"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "connector",
              "Type": "IComponentConnector"
            },
            {
              "Name": "connectionId",
              "Type": "Int32"
            }
          ],
          "Name": "EnsureElementRealized"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "xaml",
              "Type": "String"
            }
          ],
          "Name": "Load"
        },
        {
          "IsStatic": true,
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "xaml",
              "Type": "String"
            }
          ],
          "Name": "LoadWithInitialTemplateValidation"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Markup.XamlReader"
    },
    {
      "IsSealed": true,
      "BaseType": "Transition",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.AddDeleteThemeTransition"
    },
    {
      "IsSealed": true,
      "BaseType": "EasingFunctionBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Amplitude"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AmplitudeProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.BackEase"
    },
    {
      "IsSealed": true,
      "BaseType": "TriggerAction",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Storyboard",
          "IsGet": true,
          "IsSet": true,
          "Name": "Storyboard"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StoryboardProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.BeginStoryboard"
    },
    {
      "IsSealed": true,
      "BaseType": "EasingFunctionBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Bounces"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BouncesProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Bounciness"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BouncinessProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.BounceEase"
    },
    {
      "IsSealed": true,
      "BaseType": "EasingFunctionBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.CircleEase"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<Color>",
          "IsGet": true,
          "IsSet": true,
          "Name": "By"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ByProperty"
        },
        {
          "Type": "EasingFunctionBase",
          "IsGet": true,
          "IsSet": true,
          "Name": "EasingFunction"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EasingFunctionProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "EnableDependentAnimation"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EnableDependentAnimationProperty"
        },
        {
          "Type": "Nullable<Color>",
          "IsGet": true,
          "IsSet": true,
          "Name": "From"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FromProperty"
        },
        {
          "Type": "Nullable<Color>",
          "IsGet": true,
          "IsSet": true,
          "Name": "To"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ToProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ColorAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "EnableDependentAnimation"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EnableDependentAnimationProperty"
        },
        {
          "Type": "ColorKeyFrameCollection",
          "IsGet": true,
          "Name": "KeyFrames"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "KeyTime",
          "IsGet": true,
          "IsSet": true,
          "Name": "KeyTime"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "KeyTimeProperty"
        },
        {
          "Type": "Color",
          "IsGet": true,
          "IsSet": true,
          "Name": "Value"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ValueProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ColorKeyFrame"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<ColorKeyFrame>",
        "IEnumerable",
        "IEnumerable<ColorKeyFrame>",
        "IList<ColorKeyFrame>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ColorKeyFrameCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "NavigationTransitionInfo",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsStaggerElementProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsStaggeringEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsStaggeringEnabledProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "GetIsStaggerElement"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetIsStaggerElement"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ConditionallyIndependentlyAnimatableAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Transition",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "HorizontalOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HorizontalOffsetProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "VerticalOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VerticalOffsetProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ContentThemeTransition"
    },
    {
      "IsSealed": true,
      "BaseType": "NavigationTransitionInfo",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true,
          "Name": "ExitElement"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ExitElementContainerProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ExitElementProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsEntranceElementProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsExitElementProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "ListViewBase"
            }
          ],
          "Name": "GetExitElementContainer"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "GetIsEntranceElement"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "GetIsExitElement"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "ListViewBase"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetExitElementContainer"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetIsEntranceElement"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "SetIsExitElement"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo"
    },
    {
      "IsSealed": true,
      "BaseType": "EasingFunctionBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.CubicEase"
    },
    {
      "IsSealed": true,
      "BaseType": "ColorKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.DiscreteColorKeyFrame"
    },
    {
      "IsSealed": true,
      "BaseType": "DoubleKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.DiscreteDoubleKeyFrame"
    },
    {
      "IsSealed": true,
      "BaseType": "ObjectKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.DiscreteObjectKeyFrame"
    },
    {
      "IsSealed": true,
      "BaseType": "PointKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.DiscretePointKeyFrame"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<Double>",
          "IsGet": true,
          "IsSet": true,
          "Name": "By"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ByProperty"
        },
        {
          "Type": "EasingFunctionBase",
          "IsGet": true,
          "IsSet": true,
          "Name": "EasingFunction"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EasingFunctionProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "EnableDependentAnimation"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EnableDependentAnimationProperty"
        },
        {
          "Type": "Nullable<Double>",
          "IsGet": true,
          "IsSet": true,
          "Name": "From"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FromProperty"
        },
        {
          "Type": "Nullable<Double>",
          "IsGet": true,
          "IsSet": true,
          "Name": "To"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ToProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.DoubleAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "EnableDependentAnimation"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EnableDependentAnimationProperty"
        },
        {
          "Type": "DoubleKeyFrameCollection",
          "IsGet": true,
          "Name": "KeyFrames"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "KeyTime",
          "IsGet": true,
          "IsSet": true,
          "Name": "KeyTime"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "KeyTimeProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Value"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ValueProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.DoubleKeyFrame"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<DoubleKeyFrame>",
        "IEnumerable",
        "IEnumerable<DoubleKeyFrame>",
        "IList<DoubleKeyFrame>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.DoubleKeyFrameCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "TargetName"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TargetNameProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.DragItemThemeAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AnimationDirection",
          "IsGet": true,
          "IsSet": true,
          "Name": "Direction"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DirectionProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "TargetName"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TargetNameProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "ToOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ToOffsetProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.DragOverThemeAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "TargetName"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TargetNameProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.DropTargetItemThemeAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "ColorKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "EasingFunctionBase",
          "IsGet": true,
          "IsSet": true,
          "Name": "EasingFunction"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EasingFunctionProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.EasingColorKeyFrame"
    },
    {
      "IsSealed": true,
      "BaseType": "DoubleKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "EasingFunctionBase",
          "IsGet": true,
          "IsSet": true,
          "Name": "EasingFunction"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EasingFunctionProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.EasingDoubleKeyFrame"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "EasingMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "EasingMode"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EasingModeProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Double",
          "Parameters": [
            {
              "Name": "normalizedTime",
              "Type": "Double"
            }
          ],
          "Name": "Ease"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.EasingFunctionBase"
    },
    {
      "IsSealed": true,
      "BaseType": "PointKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "EasingFunctionBase",
          "IsGet": true,
          "IsSet": true,
          "Name": "EasingFunction"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EasingFunctionProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.EasingPointKeyFrame"
    },
    {
      "IsSealed": true,
      "BaseType": "Transition",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "EdgeTransitionLocation",
          "IsGet": true,
          "IsSet": true,
          "Name": "Edge"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EdgeProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.EdgeUIThemeTransition"
    },
    {
      "IsSealed": true,
      "BaseType": "EasingFunctionBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Oscillations"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OscillationsProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Springiness"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SpringinessProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ElasticEase"
    },
    {
      "IsSealed": true,
      "BaseType": "Transition",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "FromHorizontalOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FromHorizontalOffsetProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "FromVerticalOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FromVerticalOffsetProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsStaggeringEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsStaggeringEnabledProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.EntranceThemeTransition"
    },
    {
      "IsSealed": true,
      "BaseType": "EasingFunctionBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Exponent"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ExponentProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ExponentialEase"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "TargetName"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TargetNameProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.FadeInThemeAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "TargetName"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TargetNameProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.FadeOutThemeAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.IndependentlyAnimatableAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Point",
          "IsGet": true,
          "IsSet": true,
          "Name": "ControlPoint1"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "IsSet": true,
          "Name": "ControlPoint2"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.KeySpline"
    },
    {
      "IsSealed": true,
      "BaseType": "ColorKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.LinearColorKeyFrame"
    },
    {
      "IsSealed": true,
      "BaseType": "DoubleKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.LinearDoubleKeyFrame"
    },
    {
      "IsSealed": true,
      "BaseType": "PointKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.LinearPointKeyFrame"
    },
    {
      "IsSealed": true,
      "BaseType": "Transition",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "NavigationTransitionInfo",
          "IsGet": true,
          "IsSet": true,
          "Name": "DefaultNavigationTransitionInfo"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DefaultNavigationTransitionInfoProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.NavigationThemeTransition"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "EnableDependentAnimation"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EnableDependentAnimationProperty"
        },
        {
          "Type": "ObjectKeyFrameCollection",
          "IsGet": true,
          "Name": "KeyFrames"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "KeyTime",
          "IsGet": true,
          "IsSet": true,
          "Name": "KeyTime"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "KeyTimeProperty"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Value"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ValueProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ObjectKeyFrame"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<ObjectKeyFrame>",
        "IEnumerable",
        "IEnumerable<ObjectKeyFrame>",
        "IList<ObjectKeyFrame>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "Transition",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "EdgeTransitionLocation",
          "IsGet": true,
          "IsSet": true,
          "Name": "Edge"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EdgeProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.PaneThemeTransition"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<Point>",
          "IsGet": true,
          "IsSet": true,
          "Name": "By"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ByProperty"
        },
        {
          "Type": "EasingFunctionBase",
          "IsGet": true,
          "IsSet": true,
          "Name": "EasingFunction"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EasingFunctionProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "EnableDependentAnimation"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EnableDependentAnimationProperty"
        },
        {
          "Type": "Nullable<Point>",
          "IsGet": true,
          "IsSet": true,
          "Name": "From"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FromProperty"
        },
        {
          "Type": "Nullable<Point>",
          "IsGet": true,
          "IsSet": true,
          "Name": "To"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ToProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.PointAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "EnableDependentAnimation"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EnableDependentAnimationProperty"
        },
        {
          "Type": "PointKeyFrameCollection",
          "IsGet": true,
          "Name": "KeyFrames"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "TargetName"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TargetNameProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.PointerDownThemeAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "TargetName"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TargetNameProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.PointerUpThemeAnimation"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "KeyTime",
          "IsGet": true,
          "IsSet": true,
          "Name": "KeyTime"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "KeyTimeProperty"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "IsSet": true,
          "Name": "Value"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ValueProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.PointKeyFrame"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<PointKeyFrame>",
        "IEnumerable",
        "IEnumerable<PointKeyFrame>",
        "IList<PointKeyFrame>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.PointKeyFrameCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "FromHorizontalOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FromHorizontalOffsetProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "FromVerticalOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FromVerticalOffsetProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "TargetName"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TargetNameProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.PopInThemeAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "TargetName"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TargetNameProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.PopOutThemeAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Transition",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "FromHorizontalOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FromHorizontalOffsetProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "FromVerticalOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FromVerticalOffsetProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.PopupThemeTransition"
    },
    {
      "IsSealed": true,
      "BaseType": "EasingFunctionBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Power"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PowerProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.PowerEase"
    },
    {
      "IsSealed": true,
      "BaseType": "EasingFunctionBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.QuadraticEase"
    },
    {
      "IsSealed": true,
      "BaseType": "EasingFunctionBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.QuarticEase"
    },
    {
      "IsSealed": true,
      "BaseType": "EasingFunctionBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.QuinticEase"
    },
    {
      "IsSealed": true,
      "BaseType": "Transition",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.ReorderThemeTransition"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "FromHorizontalOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FromHorizontalOffsetProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "FromVerticalOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FromVerticalOffsetProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "TargetName"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TargetNameProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.RepositionThemeAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Transition",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.RepositionThemeTransition"
    },
    {
      "IsSealed": true,
      "BaseType": "EasingFunctionBase",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.SineEase"
    },
    {
      "IsSealed": true,
      "BaseType": "NavigationTransitionInfo",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.SlideNavigationTransitionInfo"
    },
    {
      "IsSealed": true,
      "BaseType": "ColorKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "KeySpline",
          "IsGet": true,
          "IsSet": true,
          "Name": "KeySpline"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "KeySplineProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.SplineColorKeyFrame"
    },
    {
      "IsSealed": true,
      "BaseType": "DoubleKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "KeySpline",
          "IsGet": true,
          "IsSet": true,
          "Name": "KeySpline"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "KeySplineProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.SplineDoubleKeyFrame"
    },
    {
      "IsSealed": true,
      "BaseType": "PointKeyFrame",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "KeySpline",
          "IsGet": true,
          "IsSet": true,
          "Name": "KeySpline"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "KeySplineProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.SplinePointKeyFrame"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "ClosedLength"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ClosedLengthProperty"
        },
        {
          "Type": "DependencyObject",
          "IsGet": true,
          "IsSet": true,
          "Name": "ClosedTarget"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ClosedTargetName"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ClosedTargetNameProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ClosedTargetProperty"
        },
        {
          "Type": "DependencyObject",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentTarget"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentTargetName"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContentTargetNameProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContentTargetProperty"
        },
        {
          "Type": "AnimationDirection",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentTranslationDirection"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContentTranslationDirectionProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentTranslationOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContentTranslationOffsetProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "OffsetFromCenter"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OffsetFromCenterProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "OpenedLength"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OpenedLengthProperty"
        },
        {
          "Type": "DependencyObject",
          "IsGet": true,
          "IsSet": true,
          "Name": "OpenedTarget"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "OpenedTargetName"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OpenedTargetNameProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OpenedTargetProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "ClosedLength"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ClosedLengthProperty"
        },
        {
          "Type": "DependencyObject",
          "IsGet": true,
          "IsSet": true,
          "Name": "ClosedTarget"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ClosedTargetName"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ClosedTargetNameProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ClosedTargetProperty"
        },
        {
          "Type": "DependencyObject",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentTarget"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentTargetName"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContentTargetNameProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContentTargetProperty"
        },
        {
          "Type": "AnimationDirection",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentTranslationDirection"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContentTranslationDirectionProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentTranslationOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ContentTranslationOffsetProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "OffsetFromCenter"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OffsetFromCenterProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "OpenedLength"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OpenedLengthProperty"
        },
        {
          "Type": "DependencyObject",
          "IsGet": true,
          "IsSet": true,
          "Name": "OpenedTarget"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "OpenedTargetName"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OpenedTargetNameProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OpenedTargetProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TimelineCollection",
          "IsGet": true,
          "Name": "Children"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TargetNameProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TargetPropertyProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Begin"
        },
        {
          "ReturnType": "ClockState",
          "Name": "GetCurrentState"
        },
        {
          "ReturnType": "TimeSpan",
          "Name": "GetCurrentTime"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "element",
              "Type": "Timeline"
            }
          ],
          "Name": "GetTargetName"
        },
        {
          "IsStatic": true,
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "element",
              "Type": "Timeline"
            }
          ],
          "Name": "GetTargetProperty"
        },
        {
          "ReturnType": "Void",
          "Name": "Pause"
        },
        {
          "ReturnType": "Void",
          "Name": "Resume"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "TimeSpan"
            }
          ],
          "Name": "Seek"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "TimeSpan"
            }
          ],
          "Name": "SeekAlignedToLastTick"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "timeline",
              "Type": "Timeline"
            },
            {
              "Name": "target",
              "Type": "DependencyObject"
            }
          ],
          "Name": "SetTarget"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "Timeline"
            },
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "SetTargetName"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "Timeline"
            },
            {
              "Name": "path",
              "Type": "String"
            }
          ],
          "Name": "SetTargetProperty"
        },
        {
          "ReturnType": "Void",
          "Name": "SkipToFill"
        },
        {
          "ReturnType": "Void",
          "Name": "Stop"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.Storyboard"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "FromHorizontalOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FromHorizontalOffsetProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "FromVerticalOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FromVerticalOffsetProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "TargetName"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TargetNameProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.SwipeBackThemeAnimation"
    },
    {
      "IsSealed": true,
      "BaseType": "Timeline",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "TargetName"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TargetNameProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "ToHorizontalOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ToHorizontalOffsetProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "ToVerticalOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ToVerticalOffsetProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.SwipeHintThemeAnimation"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true,
          "Name": "AllowDependentAnimations"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AutoReverse"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AutoReverseProperty"
        },
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "BeginTime"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "BeginTimeProperty"
        },
        {
          "Type": "Duration",
          "IsGet": true,
          "IsSet": true,
          "Name": "Duration"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DurationProperty"
        },
        {
          "Type": "FillBehavior",
          "IsGet": true,
          "IsSet": true,
          "Name": "FillBehavior"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FillBehaviorProperty"
        },
        {
          "Type": "RepeatBehavior",
          "IsGet": true,
          "IsSet": true,
          "Name": "RepeatBehavior"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RepeatBehaviorProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "SpeedRatio"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SpeedRatioProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "Name": "Completed"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.Animation.Timeline"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<Timeline>",
        "IEnumerable",
        "IEnumerable<Timeline>",
        "IList<Timeline>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.TimelineCollection"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.Transition"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<Transition>",
        "IEnumerable",
        "IEnumerable<Transition>",
        "IList<Transition>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Animation.TransitionCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "PathSegment",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsLargeArc"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsLargeArcProperty"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "IsSet": true,
          "Name": "Point"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PointProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "RotationAngle"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RotationAngleProperty"
        },
        {
          "Type": "Size",
          "IsGet": true,
          "IsSet": true,
          "Name": "Size"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SizeProperty"
        },
        {
          "Type": "SweepDirection",
          "IsGet": true,
          "IsSet": true,
          "Name": "SweepDirection"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SweepDirectionProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.ArcSegment"
    },
    {
      "IsSealed": true,
      "BaseType": "PathSegment",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Point",
          "IsGet": true,
          "IsSet": true,
          "Name": "Point1"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Point1Property"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "IsSet": true,
          "Name": "Point2"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Point2Property"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "IsSet": true,
          "Name": "Point3"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Point3Property"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.BezierSegment"
    },
    {
      "IsSealed": true,
      "BaseType": "CacheMode",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.BitmapCache"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Opacity"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OpacityProperty"
        },
        {
          "Type": "Transform",
          "IsGet": true,
          "IsSet": true,
          "Name": "RelativeTransform"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RelativeTransformProperty"
        },
        {
          "Type": "Transform",
          "IsGet": true,
          "IsSet": true,
          "Name": "Transform"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TransformProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Brush"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.CacheMode"
    },
    {
      "IsSealed": true,
      "BaseType": "Transform",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "CenterX"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CenterXProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "CenterY"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CenterYProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Rotation"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RotationProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "ScaleX"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ScaleXProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "ScaleY"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ScaleYProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "SkewX"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SkewXProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "SkewY"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SkewYProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "TranslateX"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TranslateXProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "TranslateY"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TranslateYProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.CompositeTransform"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "IsStatic": true,
          "Name": "Rendering"
        },
        {
          "Type": "EventHandler<Object>",
          "IsStatic": true,
          "Name": "SurfaceContentsLost"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.CompositionTarget"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<Double>",
        "IEnumerable",
        "IEnumerable<Double>",
        "IList<Double>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.DoubleCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "Geometry",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Point",
          "IsGet": true,
          "IsSet": true,
          "Name": "Center"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CenterProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "RadiusX"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RadiusXProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "RadiusY"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RadiusYProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.EllipseGeometry"
    },
    {
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "familyName",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Source"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.FontFamily"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "GeneralTransform",
          "IsGet": true,
          "Name": "Inverse"
        },
        {
          "Type": "GeneralTransform",
          "IsGet": true,
          "Name": "InverseCore"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "rect",
              "Type": "Rect"
            }
          ],
          "Name": "TransformBounds"
        },
        {
          "ReturnType": "Point",
          "Parameters": [
            {
              "Name": "point",
              "Type": "Point"
            }
          ],
          "Name": "TransformPoint"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "inPoint",
              "Type": "Point"
            },
            {
              "Name": "outPoint",
              "Type": "Point&",
              "Out": true
            }
          ],
          "Name": "TryTransform"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.GeneralTransform"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Rect",
          "IsGet": true,
          "Name": "Bounds"
        },
        {
          "Type": "Geometry",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Empty"
        },
        {
          "Type": "Double",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StandardFlatteningTolerance"
        },
        {
          "Type": "Transform",
          "IsGet": true,
          "IsSet": true,
          "Name": "Transform"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TransformProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Geometry"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<Geometry>",
        "IEnumerable",
        "IEnumerable<Geometry>",
        "IList<Geometry>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.GeometryCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "Geometry",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "FillRule",
          "IsGet": true,
          "IsSet": true,
          "Name": "FillRule"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FillRuleProperty"
        },
        {
          "Type": "GeometryCollection",
          "IsGet": true,
          "IsSet": true,
          "Name": "Children"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ChildrenProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.GeometryGroup"
    },
    {
      "BaseType": "Brush",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ColorInterpolationMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "ColorInterpolationMode"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ColorInterpolationModeProperty"
        },
        {
          "Type": "GradientStopCollection",
          "IsGet": true,
          "IsSet": true,
          "Name": "GradientStops"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GradientStopsProperty"
        },
        {
          "Type": "BrushMappingMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "MappingMode"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MappingModeProperty"
        },
        {
          "Type": "GradientSpreadMethod",
          "IsGet": true,
          "IsSet": true,
          "Name": "SpreadMethod"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SpreadMethodProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.GradientBrush"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Color",
          "IsGet": true,
          "IsSet": true,
          "Name": "Color"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ColorProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Offset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OffsetProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.GradientStop"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<GradientStop>",
        "IEnumerable",
        "IEnumerable<GradientStop>",
        "IList<GradientStop>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.GradientStopCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "TileBrush",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "ImageSource",
          "IsGet": true,
          "IsSet": true,
          "Name": "ImageSource"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ImageSourceProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "ExceptionRoutedEventHandler",
          "Name": "ImageFailed"
        },
        {
          "Type": "RoutedEventHandler",
          "Name": "ImageOpened"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.ImageBrush"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.ImageSource"
    },
    {
      "IsSealed": true,
      "BaseType": "BitmapSource",
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "uriSource",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "BitmapCreateOptions",
          "IsGet": true,
          "IsSet": true,
          "Name": "CreateOptions"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CreateOptionsProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "DecodePixelHeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DecodePixelHeightProperty"
        },
        {
          "Type": "DecodePixelType",
          "IsGet": true,
          "IsSet": true,
          "Name": "DecodePixelType"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DecodePixelTypeProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "DecodePixelWidth"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DecodePixelWidthProperty"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "UriSource"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UriSourceProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "DownloadProgressEventHandler",
          "Name": "DownloadProgress"
        },
        {
          "Type": "ExceptionRoutedEventHandler",
          "Name": "ImageFailed"
        },
        {
          "Type": "RoutedEventHandler",
          "Name": "ImageOpened"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.Imaging.BitmapImage"
    },
    {
      "BaseType": "ImageSource",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "PixelHeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PixelHeightProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "PixelWidth"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PixelWidthProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "streamSource",
              "Type": "IRandomAccessStream"
            }
          ],
          "Name": "SetSource"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "streamSource",
              "Type": "IRandomAccessStream"
            }
          ],
          "Name": "SetSourceAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Imaging.BitmapSource"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Progress"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Imaging.DownloadProgressEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "ImageSource",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "PixelHeight"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PixelHeightProperty"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "PixelWidth"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PixelWidthProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IBuffer>",
          "Name": "GetPixelsAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "RenderAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            },
            {
              "Name": "scaledWidth",
              "Type": "Int32"
            },
            {
              "Name": "scaledHeight",
              "Type": "Int32"
            }
          ],
          "Name": "RenderAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Imaging.RenderTargetBitmap"
    },
    {
      "BaseType": "ImageSource",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "pixelWidth",
              "Type": "Int32"
            },
            {
              "Name": "pixelHeight",
              "Type": "Int32"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "pixelWidth",
              "Type": "Int32"
            },
            {
              "Name": "pixelHeight",
              "Type": "Int32"
            },
            {
              "Name": "isOpaque",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Imaging.SurfaceImageSource"
    },
    {
      "IsSealed": true,
      "BaseType": "SurfaceImageSource",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "pixelWidth",
              "Type": "Int32"
            },
            {
              "Name": "pixelHeight",
              "Type": "Int32"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "pixelWidth",
              "Type": "Int32"
            },
            {
              "Name": "pixelHeight",
              "Type": "Int32"
            },
            {
              "Name": "isOpaque",
              "Type": "Boolean"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Imaging.VirtualSurfaceImageSource"
    },
    {
      "IsSealed": true,
      "BaseType": "BitmapSource",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "pixelWidth",
              "Type": "Int32"
            },
            {
              "Name": "pixelHeight",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "PixelBuffer"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Invalidate"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Imaging.WriteableBitmap"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Imaging.XamlRenderingBackgroundTask"
    },
    {
      "IsSealed": true,
      "BaseType": "GradientBrush",
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "gradientStopCollection",
              "Type": "GradientStopCollection"
            },
            {
              "Name": "angle",
              "Type": "Double"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Point",
          "IsGet": true,
          "IsSet": true,
          "Name": "EndPoint"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EndPointProperty"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "IsSet": true,
          "Name": "StartPoint"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StartPointProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.LinearGradientBrush"
    },
    {
      "IsSealed": true,
      "BaseType": "Geometry",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Point",
          "IsGet": true,
          "IsSet": true,
          "Name": "EndPoint"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "EndPointProperty"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "IsSet": true,
          "Name": "StartPoint"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StartPointProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.LineGeometry"
    },
    {
      "IsSealed": true,
      "BaseType": "PathSegment",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Point",
          "IsGet": true,
          "IsSet": true,
          "Name": "Point"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PointProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.LineSegment"
    },
    {
      "IsSealed": true,
      "BaseType": "Projection",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Matrix3D",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProjectionMatrix"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ProjectionMatrixProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Matrix3DProjection"
    },
    {
      "IsSealed": true,
      "BaseType": "Transform",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Matrix",
          "IsGet": true,
          "IsSet": true,
          "Name": "Matrix"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "MatrixProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.MatrixTransform"
    },
    {
      "IsSealed": true,
      "BaseType": "Transform3D",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "CenterX"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CenterXProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "CenterY"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CenterYProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "CenterZ"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CenterZProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "RotationX"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RotationXProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "RotationY"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RotationYProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "RotationZ"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RotationZProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "ScaleX"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ScaleXProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "ScaleY"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ScaleYProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "ScaleZ"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ScaleZProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "TranslateX"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TranslateXProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "TranslateY"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TranslateYProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "TranslateZ"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TranslateZProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Media3D.CompositeTransform3D"
    },
    {
      "IsSealed": true,
      "BaseType": "Transform3D",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Depth"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DepthProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "OffsetX"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OffsetXProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "OffsetY"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OffsetYProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Media3D.PerspectiveTransform3D"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Media3D.Transform3D"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "FailedMediaStreamKind",
          "IsGet": true,
          "Name": "StreamKind"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.PartialMediaFailureDetectedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsClosed"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsClosedProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsFilled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsFilledProperty"
        },
        {
          "Type": "PathSegmentCollection",
          "IsGet": true,
          "IsSet": true,
          "Name": "Segments"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SegmentsProperty"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "IsSet": true,
          "Name": "StartPoint"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StartPointProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.PathFigure"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<PathFigure>",
        "IEnumerable",
        "IEnumerable<PathFigure>",
        "IList<PathFigure>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.PathFigureCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "Geometry",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PathFigureCollection",
          "IsGet": true,
          "IsSet": true,
          "Name": "Figures"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FiguresProperty"
        },
        {
          "Type": "FillRule",
          "IsGet": true,
          "IsSet": true,
          "Name": "FillRule"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FillRuleProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.PathGeometry"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.PathSegment"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<PathSegment>",
        "IEnumerable",
        "IEnumerable<PathSegment>",
        "IList<PathSegment>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.PathSegmentCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "Projection",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "CenterOfRotationX"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CenterOfRotationXProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "CenterOfRotationY"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CenterOfRotationYProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "CenterOfRotationZ"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CenterOfRotationZProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "GlobalOffsetX"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GlobalOffsetXProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "GlobalOffsetY"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GlobalOffsetYProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "GlobalOffsetZ"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "GlobalOffsetZProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "LocalOffsetX"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LocalOffsetXProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "LocalOffsetY"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LocalOffsetYProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "LocalOffsetZ"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "LocalOffsetZProperty"
        },
        {
          "Type": "Matrix3D",
          "IsGet": true,
          "Name": "ProjectionMatrix"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ProjectionMatrixProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "RotationX"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RotationXProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "RotationY"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RotationYProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "RotationZ"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RotationZProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.PlaneProjection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<Point>",
        "IEnumerable",
        "IEnumerable<Point>",
        "IList<Point>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.PointCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "PathSegment",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PointCollection",
          "IsGet": true,
          "IsSet": true,
          "Name": "Points"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PointsProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.PolyBezierSegment"
    },
    {
      "IsSealed": true,
      "BaseType": "PathSegment",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PointCollection",
          "IsGet": true,
          "IsSet": true,
          "Name": "Points"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PointsProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.PolyLineSegment"
    },
    {
      "IsSealed": true,
      "BaseType": "PathSegment",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PointCollection",
          "IsGet": true,
          "IsSet": true,
          "Name": "Points"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PointsProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.PolyQuadraticBezierSegment"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Projection"
    },
    {
      "IsSealed": true,
      "BaseType": "PathSegment",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Point",
          "IsGet": true,
          "IsSet": true,
          "Name": "Point1"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Point1Property"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "IsSet": true,
          "Name": "Point2"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Point2Property"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.QuadraticBezierSegment"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.RateChangedRoutedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "Geometry",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Rect",
          "IsGet": true,
          "IsSet": true,
          "Name": "Rect"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RectProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.RectangleGeometry"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "RenderingTime"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.RenderingEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "Transform",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Angle"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AngleProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "CenterX"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CenterXProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "CenterY"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CenterYProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.RotateTransform"
    },
    {
      "IsSealed": true,
      "BaseType": "Transform",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "CenterX"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CenterXProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "CenterY"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CenterYProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "ScaleX"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ScaleXProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "ScaleY"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ScaleYProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.ScaleTransform"
    },
    {
      "IsSealed": true,
      "BaseType": "Transform",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "AngleX"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AngleXProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "AngleY"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AngleYProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "CenterX"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CenterXProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "CenterY"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CenterYProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.SkewTransform"
    },
    {
      "IsSealed": true,
      "BaseType": "Brush",
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "color",
              "Type": "Color"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Color",
          "IsGet": true,
          "IsSet": true,
          "Name": "Color"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ColorProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.SolidColorBrush"
    },
    {
      "BaseType": "Brush",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "AlignmentX",
          "IsGet": true,
          "IsSet": true,
          "Name": "AlignmentX"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AlignmentXProperty"
        },
        {
          "Type": "AlignmentY",
          "IsGet": true,
          "IsSet": true,
          "Name": "AlignmentY"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AlignmentYProperty"
        },
        {
          "Type": "Stretch",
          "IsGet": true,
          "IsSet": true,
          "Name": "Stretch"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StretchProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.TileBrush"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TimedTextRegion",
          "IsGet": true,
          "IsSet": true,
          "Name": "CueRegion"
        },
        {
          "Type": "TimedTextStyle",
          "IsGet": true,
          "IsSet": true,
          "Name": "CueStyle"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "Duration"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Id"
        },
        {
          "Type": "TimedTextTrackKind",
          "IsGet": true,
          "IsSet": true,
          "Name": "Kind"
        },
        {
          "Type": "IList<TimedTextLine>",
          "IsGet": true,
          "Name": "Lines"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "StartTime"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IBuffer",
          "Name": "GetData"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.TimedTextCue"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TimedTextCue",
          "IsGet": true,
          "Name": "Cue"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.TimedTextCueEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Exception",
          "IsGet": true,
          "Name": "Exception"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.TimedTextErrorEventArgs"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<TimedTextSubformat>",
          "IsGet": true,
          "Name": "Subformats"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Text"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.TimedTextLine"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SolidColorBrush",
          "IsGet": true,
          "IsSet": true,
          "Name": "Background"
        },
        {
          "Type": "Size",
          "IsGet": true,
          "IsSet": true,
          "Name": "Extent"
        },
        {
          "Type": "TimedTextUnit",
          "IsGet": true,
          "IsSet": true,
          "Name": "ExtentUnit"
        },
        {
          "Type": "HorizontalAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "HorizontalAlignment"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsOverflowClipped"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "LineHeight"
        },
        {
          "Type": "TimedTextUnit",
          "IsGet": true,
          "IsSet": true,
          "Name": "LineHeightUnit"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Name"
        },
        {
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true,
          "Name": "Padding"
        },
        {
          "Type": "TimedTextUnit",
          "IsGet": true,
          "IsSet": true,
          "Name": "PaddingUnit"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "IsSet": true,
          "Name": "Position"
        },
        {
          "Type": "TimedTextUnit",
          "IsGet": true,
          "IsSet": true,
          "Name": "PositionUnit"
        },
        {
          "Type": "TimedTextScrollMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "ScrollMode"
        },
        {
          "Type": "TextWrapping",
          "IsGet": true,
          "IsSet": true,
          "Name": "TextWrapping"
        },
        {
          "Type": "TimedTextWritingMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "WritingMode"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ZIndex"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.TimedTextRegion"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "SolidColorBrush",
          "IsGet": true,
          "IsSet": true,
          "Name": "Background"
        },
        {
          "Type": "FlowDirection",
          "IsGet": true,
          "IsSet": true,
          "Name": "FlowDirection"
        },
        {
          "Type": "FontFamily",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontFamily"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontSize"
        },
        {
          "Type": "FontWeight",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontWeight"
        },
        {
          "Type": "SolidColorBrush",
          "IsGet": true,
          "IsSet": true,
          "Name": "Foreground"
        },
        {
          "Type": "HorizontalAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "HorizontalAlignment"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsBackgroundAlwaysShown"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Name"
        },
        {
          "Type": "SolidColorBrush",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutlineColor"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutlineRadius"
        },
        {
          "Type": "Thickness",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutlineThickness"
        },
        {
          "Type": "TimedTextUnit",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutlineUnit"
        },
        {
          "Type": "VerticalAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "VerticalAlignment"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.TimedTextStyle"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Length"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "StartIndex"
        },
        {
          "Type": "TimedTextStyle",
          "IsGet": true,
          "IsSet": true,
          "Name": "SubformatStyle"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.TimedTextSubformat"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Id"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsDefault"
        },
        {
          "Type": "TimedTextTrackKind",
          "IsGet": true,
          "IsSet": true,
          "Name": "Kind"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Label"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Language"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "SourceUri"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.TimedTextTrack"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Text"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TextProperty"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "IsSet": true,
          "Name": "Time"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TimeProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Type"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TypeProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.TimelineMarker"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<TimelineMarker>",
        "IEnumerable",
        "IEnumerable<TimelineMarker>",
        "IList<TimelineMarker>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.TimelineMarkerCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TimelineMarker",
          "IsGet": true,
          "IsSet": true,
          "Name": "Marker"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.TimelineMarkerRoutedEventArgs"
    },
    {
      "BaseType": "GeneralTransform",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.Transform"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<Transform>",
        "IEnumerable",
        "IEnumerable<Transform>",
        "IList<Transform>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.TransformCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "Transform",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "TransformCollection",
          "IsGet": true,
          "IsSet": true,
          "Name": "Children"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ChildrenProperty"
        },
        {
          "Type": "Matrix",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.TransformGroup"
    },
    {
      "IsSealed": true,
      "BaseType": "Transform",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "X"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "XProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Y"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "YProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.TranslateTransform"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "element",
              "Type": "UIElement"
            }
          ],
          "Name": "DisconnectChildrenRecursive"
        },
        {
          "IsStatic": true,
          "ReturnType": "IEnumerable<UIElement>",
          "Parameters": [
            {
              "Name": "intersectingPoint",
              "Type": "Point"
            },
            {
              "Name": "subtree",
              "Type": "UIElement"
            }
          ],
          "Name": "FindElementsInHostCoordinates"
        },
        {
          "IsStatic": true,
          "ReturnType": "IEnumerable<UIElement>",
          "Parameters": [
            {
              "Name": "intersectingRect",
              "Type": "Rect"
            },
            {
              "Name": "subtree",
              "Type": "UIElement"
            }
          ],
          "Name": "FindElementsInHostCoordinates"
        },
        {
          "IsStatic": true,
          "ReturnType": "IEnumerable<UIElement>",
          "Parameters": [
            {
              "Name": "intersectingPoint",
              "Type": "Point"
            },
            {
              "Name": "subtree",
              "Type": "UIElement"
            },
            {
              "Name": "includeAllElements",
              "Type": "Boolean"
            }
          ],
          "Name": "FindElementsInHostCoordinates"
        },
        {
          "IsStatic": true,
          "ReturnType": "IEnumerable<UIElement>",
          "Parameters": [
            {
              "Name": "intersectingRect",
              "Type": "Rect"
            },
            {
              "Name": "subtree",
              "Type": "UIElement"
            },
            {
              "Name": "includeAllElements",
              "Type": "Boolean"
            }
          ],
          "Name": "FindElementsInHostCoordinates"
        },
        {
          "IsStatic": true,
          "ReturnType": "DependencyObject",
          "Parameters": [
            {
              "Name": "reference",
              "Type": "DependencyObject"
            },
            {
              "Name": "childIndex",
              "Type": "Int32"
            }
          ],
          "Name": "GetChild"
        },
        {
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "reference",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetChildrenCount"
        },
        {
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<Popup>",
          "Parameters": [
            {
              "Name": "window",
              "Type": "Window"
            }
          ],
          "Name": "GetOpenPopups"
        },
        {
          "IsStatic": true,
          "ReturnType": "DependencyObject",
          "Parameters": [
            {
              "Name": "reference",
              "Type": "DependencyObject"
            }
          ],
          "Name": "GetParent"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Media.VisualTreeHelper"
    },
    {
      "IsSealed": true,
      "BaseType": "ExceptionRoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ErrorTrace"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.MediaFailedRoutedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Cancel"
        },
        {
          "Type": "NavigationMode",
          "IsGet": true,
          "Name": "NavigationMode"
        },
        {
          "Type": "NavigationTransitionInfo",
          "IsGet": true,
          "Name": "NavigationTransitionInfo"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Parameter"
        },
        {
          "Type": "Type",
          "IsGet": true,
          "Name": "SourcePageType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Content"
        },
        {
          "Type": "NavigationMode",
          "IsGet": true,
          "Name": "NavigationMode"
        },
        {
          "Type": "NavigationTransitionInfo",
          "IsGet": true,
          "Name": "NavigationTransitionInfo"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Parameter"
        },
        {
          "Type": "Type",
          "IsGet": true,
          "Name": "SourcePageType"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "Uri"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Navigation.NavigationEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Exception",
          "IsGet": true,
          "Name": "Exception"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "Type",
          "IsGet": true,
          "Name": "SourcePageType"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Navigation.NavigationFailedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "sourcePageType",
              "Type": "Type"
            },
            {
              "Name": "parameter",
              "Type": "Object"
            },
            {
              "Name": "navigationTransitionInfo",
              "Type": "NavigationTransitionInfo"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "NavigationTransitionInfo",
          "IsGet": true,
          "Name": "NavigationTransitionInfo"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Parameter"
        },
        {
          "Type": "Type",
          "IsGet": true,
          "Name": "SourcePageType"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "SourcePageTypeProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Navigation.PageStackEntry"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Point",
          "Parameters": [
            {
              "Name": "x",
              "Type": "Single"
            },
            {
              "Name": "y",
              "Type": "Single"
            }
          ],
          "Name": "FromCoordinates"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.PointHelper"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PrintTaskOptions",
          "IsGet": true,
          "Name": "PrintTaskOptions"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Printing.AddPagesEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "PageNumber"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Printing.GetPreviewPageEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "CurrentPreviewPageNumber"
        },
        {
          "Type": "PrintTaskOptions",
          "IsGet": true,
          "Name": "PrintTaskOptions"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Printing.PaginateEventArgs"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IPrintDocumentSource",
          "IsGet": true,
          "Name": "DocumentSource"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DocumentSourceProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pageVisual",
              "Type": "UIElement"
            }
          ],
          "Name": "AddPage"
        },
        {
          "ReturnType": "Void",
          "Name": "AddPagesComplete"
        },
        {
          "ReturnType": "Void",
          "Name": "InvalidatePreview"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pageNumber",
              "Type": "Int32"
            },
            {
              "Name": "pageVisual",
              "Type": "UIElement"
            }
          ],
          "Name": "SetPreviewPage"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "count",
              "Type": "Int32"
            },
            {
              "Name": "type",
              "Type": "PreviewPageCountType"
            }
          ],
          "Name": "SetPreviewPageCount"
        }
      ],
      "Events": [
        {
          "Type": "AddPagesEventHandler",
          "Name": "AddPages"
        },
        {
          "Type": "GetPreviewPageEventHandler",
          "Name": "GetPreviewPage"
        },
        {
          "Type": "PaginateEventHandler",
          "Name": "Paginate"
        }
      ],
      "Name": "Windows.UI.Xaml.Printing.PrintDocument"
    },
    {
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "defaultValue",
              "Type": "Object"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "defaultValue",
              "Type": "Object"
            },
            {
              "Name": "propertyChangedCallback",
              "Type": "PropertyChangedCallback"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "CreateDefaultValueCallback",
          "IsGet": true,
          "Name": "CreateDefaultValueCallback"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "DefaultValue"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "PropertyMetadata",
          "Parameters": [
            {
              "Name": "defaultValue",
              "Type": "Object"
            }
          ],
          "Name": "Create"
        },
        {
          "IsStatic": true,
          "ReturnType": "PropertyMetadata",
          "Parameters": [
            {
              "Name": "defaultValue",
              "Type": "Object"
            },
            {
              "Name": "propertyChangedCallback",
              "Type": "PropertyChangedCallback"
            }
          ],
          "Name": "Create"
        },
        {
          "IsStatic": true,
          "ReturnType": "PropertyMetadata",
          "Parameters": [
            {
              "Name": "createDefaultValueCallback",
              "Type": "CreateDefaultValueCallback"
            }
          ],
          "Name": "Create"
        },
        {
          "IsStatic": true,
          "ReturnType": "PropertyMetadata",
          "Parameters": [
            {
              "Name": "createDefaultValueCallback",
              "Type": "CreateDefaultValueCallback"
            },
            {
              "Name": "propertyChangedCallback",
              "Type": "PropertyChangedCallback"
            }
          ],
          "Name": "Create"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.PropertyMetadata"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "path",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Path"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.PropertyPath"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Rect",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Empty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Rect"
            },
            {
              "Name": "point",
              "Type": "Point"
            }
          ],
          "Name": "Contains"
        },
        {
          "IsStatic": true,
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "x",
              "Type": "Single"
            },
            {
              "Name": "y",
              "Type": "Single"
            },
            {
              "Name": "width",
              "Type": "Single"
            },
            {
              "Name": "height",
              "Type": "Single"
            }
          ],
          "Name": "FromCoordinatesAndDimensions"
        },
        {
          "IsStatic": true,
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "location",
              "Type": "Point"
            },
            {
              "Name": "size",
              "Type": "Size"
            }
          ],
          "Name": "FromLocationAndSize"
        },
        {
          "IsStatic": true,
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "point1",
              "Type": "Point"
            },
            {
              "Name": "point2",
              "Type": "Point"
            }
          ],
          "Name": "FromPoints"
        },
        {
          "IsStatic": true,
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Rect"
            }
          ],
          "Name": "GetBottom"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Rect"
            }
          ],
          "Name": "GetIsEmpty"
        },
        {
          "IsStatic": true,
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Rect"
            }
          ],
          "Name": "GetLeft"
        },
        {
          "IsStatic": true,
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Rect"
            }
          ],
          "Name": "GetRight"
        },
        {
          "IsStatic": true,
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Rect"
            }
          ],
          "Name": "GetTop"
        },
        {
          "IsStatic": true,
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Rect"
            },
            {
              "Name": "rect",
              "Type": "Rect"
            }
          ],
          "Name": "Intersect"
        },
        {
          "IsStatic": true,
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Rect"
            },
            {
              "Name": "point",
              "Type": "Point"
            }
          ],
          "Name": "Union"
        },
        {
          "IsStatic": true,
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Rect"
            },
            {
              "Name": "rect",
              "Type": "Rect"
            }
          ],
          "Name": "Union"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.RectHelper"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [
        "ICollection<KeyValuePair<Object,Object>>",
        "IDictionary<Object,Object>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<Object,Object>>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<ResourceDictionary>",
          "IsGet": true,
          "Name": "MergedDictionaries"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "Source"
        },
        {
          "Type": "IDictionary<Object,Object>",
          "IsGet": true,
          "Name": "ThemeDictionaries"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.ResourceDictionary"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "CustomXamlResourceLoader",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true,
          "Name": "Current"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Resources.CustomXamlResourceLoader"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.RoutedEvent"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "OriginalSource"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.RoutedEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "SetterBase",
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "targetProperty",
              "Type": "DependencyProperty"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "DependencyProperty",
          "IsGet": true,
          "IsSet": true,
          "Name": "Property"
        },
        {
          "Type": "TargetPropertyPath",
          "IsGet": true,
          "IsSet": true,
          "Name": "Target"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Setter"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsSealed"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.SetterBase"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<SetterBase>",
        "IEnumerable",
        "IEnumerable<SetterBase>",
        "IList<SetterBase>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsSealed"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.SetterBaseCollection"
    },
    {
      "IsSealed": true,
      "BaseType": "Shape",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Shapes.Ellipse"
    },
    {
      "IsSealed": true,
      "BaseType": "Shape",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "X1"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "X1Property"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "X2"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "X2Property"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Y1"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Y1Property"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Y2"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Y2Property"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Shapes.Line"
    },
    {
      "BaseType": "Shape",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Geometry",
          "IsGet": true,
          "IsSet": true,
          "Name": "Data"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DataProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Shapes.Path"
    },
    {
      "IsSealed": true,
      "BaseType": "Shape",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "FillRule",
          "IsGet": true,
          "IsSet": true,
          "Name": "FillRule"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FillRuleProperty"
        },
        {
          "Type": "PointCollection",
          "IsGet": true,
          "IsSet": true,
          "Name": "Points"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PointsProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Shapes.Polygon"
    },
    {
      "IsSealed": true,
      "BaseType": "Shape",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "FillRule",
          "IsGet": true,
          "IsSet": true,
          "Name": "FillRule"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FillRuleProperty"
        },
        {
          "Type": "PointCollection",
          "IsGet": true,
          "IsSet": true,
          "Name": "Points"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PointsProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Shapes.Polyline"
    },
    {
      "IsSealed": true,
      "BaseType": "Shape",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "RadiusX"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RadiusXProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "RadiusY"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RadiusYProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Shapes.Rectangle"
    },
    {
      "BaseType": "FrameworkElement",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "Fill"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "FillProperty"
        },
        {
          "Type": "Transform",
          "IsGet": true,
          "Name": "GeometryTransform"
        },
        {
          "Type": "Stretch",
          "IsGet": true,
          "IsSet": true,
          "Name": "Stretch"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StretchProperty"
        },
        {
          "Type": "Brush",
          "IsGet": true,
          "IsSet": true,
          "Name": "Stroke"
        },
        {
          "Type": "DoubleCollection",
          "IsGet": true,
          "IsSet": true,
          "Name": "StrokeDashArray"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StrokeDashArrayProperty"
        },
        {
          "Type": "PenLineCap",
          "IsGet": true,
          "IsSet": true,
          "Name": "StrokeDashCap"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StrokeDashCapProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "StrokeDashOffset"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StrokeDashOffsetProperty"
        },
        {
          "Type": "PenLineCap",
          "IsGet": true,
          "IsSet": true,
          "Name": "StrokeEndLineCap"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StrokeEndLineCapProperty"
        },
        {
          "Type": "PenLineJoin",
          "IsGet": true,
          "IsSet": true,
          "Name": "StrokeLineJoin"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StrokeLineJoinProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "StrokeMiterLimit"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StrokeMiterLimitProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StrokeProperty"
        },
        {
          "Type": "PenLineCap",
          "IsGet": true,
          "IsSet": true,
          "Name": "StrokeStartLineCap"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StrokeStartLineCapProperty"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "StrokeThickness"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "StrokeThicknessProperty"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Shapes.Shape"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Size",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Empty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Size",
          "Parameters": [
            {
              "Name": "width",
              "Type": "Single"
            },
            {
              "Name": "height",
              "Type": "Single"
            }
          ],
          "Name": "FromDimensions"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Size"
            }
          ],
          "Name": "GetIsEmpty"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.SizeHelper"
    },
    {
      "IsSealed": true,
      "BaseType": "RoutedEventArgs",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Size",
          "IsGet": true,
          "Name": "NewSize"
        },
        {
          "Type": "Size",
          "IsGet": true,
          "Name": "PreviousSize"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.SizeChangedEventArgs"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.StateTrigger"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "targetType",
              "Type": "Type"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Style",
          "IsGet": true,
          "IsSet": true,
          "Name": "BasedOn"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsSealed"
        },
        {
          "Type": "SetterBaseCollection",
          "IsGet": true,
          "Name": "Setters"
        },
        {
          "Type": "Type",
          "IsGet": true,
          "IsSet": true,
          "Name": "TargetType"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Seal"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Style"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "String",
          "Name": "Property"
        },
        {
          "Type": "Type",
          "Name": "StyleTargetType"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.StyleTypedPropertyAttribute"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "PropertyPath",
          "IsGet": true,
          "IsSet": true,
          "Name": "Path"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Target"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.TargetPropertyPath"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "String",
          "Name": "Name"
        },
        {
          "Type": "Type",
          "Name": "Type"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.TemplatePartAttribute"
    },
    {
      "IsSealed": true,
      "BaseType": "Attribute",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "String",
          "Name": "GroupName"
        },
        {
          "Type": "String",
          "Name": "Name"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.TemplateVisualStateAttribute"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.TriggerAction"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<TriggerAction>",
        "IEnumerable",
        "IEnumerable<TriggerAction>",
        "IList<TriggerAction>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.TriggerActionCollection"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.TriggerBase"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<TriggerBase>",
        "IEnumerable",
        "IEnumerable<TriggerBase>",
        "IList<TriggerBase>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.TriggerCollection"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AllowDrop"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "AllowDropProperty"
        },
        {
          "Type": "CacheMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "CacheMode"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CacheModeProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "CanDrag"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CanDragProperty"
        },
        {
          "Type": "RectangleGeometry",
          "IsGet": true,
          "IsSet": true,
          "Name": "Clip"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ClipProperty"
        },
        {
          "Type": "ElementCompositeMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "CompositeMode"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CompositeModeProperty"
        },
        {
          "Type": "Size",
          "IsGet": true,
          "Name": "DesiredSize"
        },
        {
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DoubleTappedEvent"
        },
        {
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DragEnterEvent"
        },
        {
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DragLeaveEvent"
        },
        {
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DragOverEvent"
        },
        {
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true,
          "Name": "DropEvent"
        },
        {
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true,
          "Name": "HoldingEvent"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsDoubleTapEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsDoubleTapEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsHitTestVisible"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsHitTestVisibleProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsHoldingEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsHoldingEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsRightTapEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsRightTapEnabledProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsTapEnabled"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "IsTapEnabledProperty"
        },
        {
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true,
          "Name": "KeyDownEvent"
        },
        {
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true,
          "Name": "KeyUpEvent"
        },
        {
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ManipulationCompletedEvent"
        },
        {
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ManipulationDeltaEvent"
        },
        {
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ManipulationInertiaStartingEvent"
        },
        {
          "Type": "ManipulationModes",
          "IsGet": true,
          "IsSet": true,
          "Name": "ManipulationMode"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ManipulationModeProperty"
        },
        {
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ManipulationStartedEvent"
        },
        {
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ManipulationStartingEvent"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Opacity"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "OpacityProperty"
        },
        {
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PointerCanceledEvent"
        },
        {
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PointerCaptureLostEvent"
        },
        {
          "Type": "IReadOnlyList<Pointer>",
          "IsGet": true,
          "Name": "PointerCaptures"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PointerCapturesProperty"
        },
        {
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PointerEnteredEvent"
        },
        {
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PointerExitedEvent"
        },
        {
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PointerMovedEvent"
        },
        {
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PointerPressedEvent"
        },
        {
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PointerReleasedEvent"
        },
        {
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true,
          "Name": "PointerWheelChangedEvent"
        },
        {
          "Type": "Projection",
          "IsGet": true,
          "IsSet": true,
          "Name": "Projection"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "ProjectionProperty"
        },
        {
          "Type": "Size",
          "IsGet": true,
          "Name": "RenderSize"
        },
        {
          "Type": "Transform",
          "IsGet": true,
          "IsSet": true,
          "Name": "RenderTransform"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "IsSet": true,
          "Name": "RenderTransformOrigin"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RenderTransformOriginProperty"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RenderTransformProperty"
        },
        {
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true,
          "Name": "RightTappedEvent"
        },
        {
          "Type": "RoutedEvent",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TappedEvent"
        },
        {
          "Type": "Transform3D",
          "IsGet": true,
          "IsSet": true,
          "Name": "Transform3D"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Transform3DProperty"
        },
        {
          "Type": "TransitionCollection",
          "IsGet": true,
          "IsSet": true,
          "Name": "Transitions"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "TransitionsProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "UseLayoutRounding"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "UseLayoutRoundingProperty"
        },
        {
          "Type": "Visibility",
          "IsGet": true,
          "IsSet": true,
          "Name": "Visibility"
        },
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "VisibilityProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "routedEvent",
              "Type": "RoutedEvent"
            },
            {
              "Name": "handler",
              "Type": "Object"
            },
            {
              "Name": "handledEventsToo",
              "Type": "Boolean"
            }
          ],
          "Name": "AddHandler"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "finalRect",
              "Type": "Rect"
            }
          ],
          "Name": "Arrange"
        },
        {
          "ReturnType": "Boolean",
          "Name": "CancelDirectManipulations"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Pointer"
            }
          ],
          "Name": "CapturePointer"
        },
        {
          "ReturnType": "Void",
          "Name": "InvalidateArrange"
        },
        {
          "ReturnType": "Void",
          "Name": "InvalidateMeasure"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "availableSize",
              "Type": "Size"
            }
          ],
          "Name": "Measure"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Pointer"
            }
          ],
          "Name": "ReleasePointerCapture"
        },
        {
          "ReturnType": "Void",
          "Name": "ReleasePointerCaptures"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "routedEvent",
              "Type": "RoutedEvent"
            },
            {
              "Name": "handler",
              "Type": "Object"
            }
          ],
          "Name": "RemoveHandler"
        },
        {
          "ReturnType": "IAsyncOperation<DataPackageOperation>",
          "Parameters": [
            {
              "Name": "pointerPoint",
              "Type": "PointerPoint"
            }
          ],
          "Name": "StartDragAsync"
        },
        {
          "ReturnType": "GeneralTransform",
          "Parameters": [
            {
              "Name": "visual",
              "Type": "UIElement"
            }
          ],
          "Name": "TransformToVisual"
        },
        {
          "ReturnType": "Void",
          "Name": "UpdateLayout"
        }
      ],
      "Events": [
        {
          "Type": "DoubleTappedEventHandler",
          "Name": "DoubleTapped"
        },
        {
          "Type": "DragEventHandler",
          "Name": "DragEnter"
        },
        {
          "Type": "DragEventHandler",
          "Name": "DragLeave"
        },
        {
          "Type": "DragEventHandler",
          "Name": "DragOver"
        },
        {
          "Type": "TypedEventHandler<UIElement,DragStartingEventArgs>",
          "Name": "DragStarting"
        },
        {
          "Type": "DragEventHandler",
          "Name": "Drop"
        },
        {
          "Type": "TypedEventHandler<UIElement,DropCompletedEventArgs>",
          "Name": "DropCompleted"
        },
        {
          "Type": "TypedEventHandler<UIElement,GettingFocusEventArgs>",
          "Name": "GettingFocus"
        },
        {
          "Type": "RoutedEventHandler",
          "Name": "GotFocus"
        },
        {
          "Type": "HoldingEventHandler",
          "Name": "Holding"
        },
        {
          "Type": "KeyEventHandler",
          "Name": "KeyDown"
        },
        {
          "Type": "KeyEventHandler",
          "Name": "KeyUp"
        },
        {
          "Type": "TypedEventHandler<UIElement,LosingFocusEventArgs>",
          "Name": "LosingFocus"
        },
        {
          "Type": "RoutedEventHandler",
          "Name": "LostFocus"
        },
        {
          "Type": "ManipulationCompletedEventHandler",
          "Name": "ManipulationCompleted"
        },
        {
          "Type": "ManipulationDeltaEventHandler",
          "Name": "ManipulationDelta"
        },
        {
          "Type": "ManipulationInertiaStartingEventHandler",
          "Name": "ManipulationInertiaStarting"
        },
        {
          "Type": "ManipulationStartedEventHandler",
          "Name": "ManipulationStarted"
        },
        {
          "Type": "ManipulationStartingEventHandler",
          "Name": "ManipulationStarting"
        },
        {
          "Type": "PointerEventHandler",
          "Name": "PointerCanceled"
        },
        {
          "Type": "PointerEventHandler",
          "Name": "PointerCaptureLost"
        },
        {
          "Type": "PointerEventHandler",
          "Name": "PointerEntered"
        },
        {
          "Type": "PointerEventHandler",
          "Name": "PointerExited"
        },
        {
          "Type": "PointerEventHandler",
          "Name": "PointerMoved"
        },
        {
          "Type": "PointerEventHandler",
          "Name": "PointerPressed"
        },
        {
          "Type": "PointerEventHandler",
          "Name": "PointerReleased"
        },
        {
          "Type": "PointerEventHandler",
          "Name": "PointerWheelChanged"
        },
        {
          "Type": "RightTappedEventHandler",
          "Name": "RightTapped"
        },
        {
          "Type": "TappedEventHandler",
          "Name": "Tapped"
        }
      ],
      "Name": "Windows.UI.Xaml.UIElement"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Exception",
          "IsGet": true,
          "Name": "Exception"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Message"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.UnhandledExceptionEventArgs"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "SetterBaseCollection",
          "IsGet": true,
          "Name": "Setters"
        },
        {
          "Type": "IList<StateTrigger>",
          "IsGet": true,
          "Name": "StateTriggers"
        },
        {
          "Type": "Storyboard",
          "IsGet": true,
          "IsSet": true,
          "Name": "Storyboard"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.VisualState"
    },
    {
      "IsSealed": true,
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "VisualState",
          "IsGet": true,
          "Name": "CurrentState"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "IList<VisualState>",
          "IsGet": true,
          "Name": "States"
        },
        {
          "Type": "IList<VisualTransition>",
          "IsGet": true,
          "Name": "Transitions"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [
        {
          "Type": "VisualStateChangedEventHandler",
          "Name": "CurrentStateChanged"
        },
        {
          "Type": "VisualStateChangedEventHandler",
          "Name": "CurrentStateChanging"
        }
      ],
      "Name": "Windows.UI.Xaml.VisualStateGroup"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Control",
          "IsGet": true,
          "IsSet": true,
          "Name": "Control"
        },
        {
          "Type": "VisualState",
          "IsGet": true,
          "IsSet": true,
          "Name": "NewState"
        },
        {
          "Type": "VisualState",
          "IsGet": true,
          "IsSet": true,
          "Name": "OldState"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.VisualStateChangedEventArgs"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "DependencyProperty",
          "IsStatic": true,
          "IsGet": true,
          "Name": "CustomVisualStateManagerProperty"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "VisualStateManager",
          "Parameters": [
            {
              "Name": "obj",
              "Type": "FrameworkElement"
            }
          ],
          "Name": "GetCustomVisualStateManager"
        },
        {
          "IsStatic": true,
          "ReturnType": "IList<VisualStateGroup>",
          "Parameters": [
            {
              "Name": "obj",
              "Type": "FrameworkElement"
            }
          ],
          "Name": "GetVisualStateGroups"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "control",
              "Type": "Control"
            },
            {
              "Name": "stateName",
              "Type": "String"
            },
            {
              "Name": "useTransitions",
              "Type": "Boolean"
            }
          ],
          "Name": "GoToState"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "obj",
              "Type": "FrameworkElement"
            },
            {
              "Name": "value",
              "Type": "VisualStateManager"
            }
          ],
          "Name": "SetCustomVisualStateManager"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.VisualStateManager"
    },
    {
      "BaseType": "DependencyObject",
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "From"
        },
        {
          "Type": "Duration",
          "IsGet": true,
          "IsSet": true,
          "Name": "GeneratedDuration"
        },
        {
          "Type": "EasingFunctionBase",
          "IsGet": true,
          "IsSet": true,
          "Name": "GeneratedEasingFunction"
        },
        {
          "Type": "Storyboard",
          "IsGet": true,
          "IsSet": true,
          "Name": "Storyboard"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "To"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.VisualTransition"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Rect",
          "IsGet": true,
          "Name": "Bounds"
        },
        {
          "Type": "UIElement",
          "IsGet": true,
          "IsSet": true,
          "Name": "Content"
        },
        {
          "Type": "CoreWindow",
          "IsGet": true,
          "Name": "CoreWindow"
        },
        {
          "Type": "Window",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Current"
        },
        {
          "Type": "CoreDispatcher",
          "IsGet": true,
          "Name": "Dispatcher"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Visible"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Activate"
        },
        {
          "ReturnType": "Void",
          "Name": "Close"
        }
      ],
      "Events": [
        {
          "Type": "WindowActivatedEventHandler",
          "Name": "Activated"
        },
        {
          "Type": "WindowClosedEventHandler",
          "Name": "Closed"
        },
        {
          "Type": "WindowSizeChangedEventHandler",
          "Name": "SizeChanged"
        },
        {
          "Type": "WindowVisibilityChangedEventHandler",
          "Name": "VisibilityChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Window"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Window",
          "IsGet": true,
          "Name": "Window"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.WindowCreatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationClient"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "serverCredential",
              "Type": "PasswordCredential"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "BypassCacheOnRetrieve"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxResponseBufferSize"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProxyCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServerCredential"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Timeout"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "CancelAsyncOperations"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<SyndicationItem,TransferProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "mediaType",
              "Type": "String"
            },
            {
              "Name": "description",
              "Type": "String"
            },
            {
              "Name": "mediaStream",
              "Type": "IInputStream"
            }
          ],
          "Name": "CreateMediaResourceAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<SyndicationItem,TransferProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "description",
              "Type": "String"
            },
            {
              "Name": "item",
              "Type": "SyndicationItem"
            }
          ],
          "Name": "CreateResourceAsync"
        },
        {
          "ReturnType": "IAsyncActionWithProgress<TransferProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "DeleteResourceAsync"
        },
        {
          "ReturnType": "IAsyncActionWithProgress<TransferProgress>",
          "Parameters": [
            {
              "Name": "item",
              "Type": "SyndicationItem"
            }
          ],
          "Name": "DeleteResourceItemAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<SyndicationFeed,RetrievalProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "RetrieveFeedAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IInputStream,RetrievalProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "RetrieveMediaResourceAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<SyndicationItem,RetrievalProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "RetrieveResourceAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<ServiceDocument,RetrievalProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "RetrieveServiceDocumentAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "SetRequestHeader"
        },
        {
          "ReturnType": "IAsyncActionWithProgress<TransferProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "mediaType",
              "Type": "String"
            },
            {
              "Name": "mediaStream",
              "Type": "IInputStream"
            }
          ],
          "Name": "UpdateMediaResourceAsync"
        },
        {
          "ReturnType": "IAsyncActionWithProgress<TransferProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "item",
              "Type": "SyndicationItem"
            }
          ],
          "Name": "UpdateResourceAsync"
        },
        {
          "ReturnType": "IAsyncActionWithProgress<TransferProgress>",
          "Parameters": [
            {
              "Name": "item",
              "Type": "SyndicationItem"
            }
          ],
          "Name": "UpdateResourceItemAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.AtomPub.AtomPubClient"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationNode"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "Accepts"
        },
        {
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true,
          "Name": "AttributeExtensions"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "BaseUri"
        },
        {
          "Type": "IReadOnlyList<SyndicationCategory>",
          "IsGet": true,
          "Name": "Categories"
        },
        {
          "Type": "IList<ISyndicationNode>",
          "IsGet": true,
          "Name": "ElementExtensions"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Language"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeNamespace"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        },
        {
          "Type": "ISyndicationText",
          "IsGet": true,
          "Name": "Title"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "Uri"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ],
          "Name": "GetXmlDocument"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.AtomPub.ResourceCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationNode"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true,
          "Name": "AttributeExtensions"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "BaseUri"
        },
        {
          "Type": "IList<ISyndicationNode>",
          "IsGet": true,
          "Name": "ElementExtensions"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Language"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeNamespace"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        },
        {
          "Type": "IReadOnlyList<Workspace>",
          "IsGet": true,
          "Name": "Workspaces"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ],
          "Name": "GetXmlDocument"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.AtomPub.ServiceDocument"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationNode"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true,
          "Name": "AttributeExtensions"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "BaseUri"
        },
        {
          "Type": "IReadOnlyList<ResourceCollection>",
          "IsGet": true,
          "Name": "Collections"
        },
        {
          "Type": "IList<ISyndicationNode>",
          "IsGet": true,
          "Name": "ElementExtensions"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Language"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeNamespace"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        },
        {
          "Type": "ISyndicationText",
          "IsGet": true,
          "Name": "Title"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ],
          "Name": "GetXmlDocument"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.AtomPub.Workspace"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IHttpFilter"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AllowAutoRedirect"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AllowUI"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AutomaticDecompression"
        },
        {
          "Type": "HttpCacheControl",
          "IsGet": true,
          "Name": "CacheControl"
        },
        {
          "Type": "Certificate",
          "IsGet": true,
          "IsSet": true,
          "Name": "ClientCertificate"
        },
        {
          "Type": "HttpCookieManager",
          "IsGet": true,
          "Name": "CookieManager"
        },
        {
          "Type": "IList<ChainValidationResult>",
          "IsGet": true,
          "Name": "IgnorableServerCertificateErrors"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxConnectionsPerServer"
        },
        {
          "Type": "HttpVersion",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxVersion"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProxyCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServerCredential"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "UseProxy"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<HttpResponseMessage,HttpProgress>",
          "Parameters": [
            {
              "Name": "request",
              "Type": "HttpRequestMessage"
            }
          ],
          "Name": "SendRequestAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Filters.HttpBaseProtocolFilter"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "HttpCacheReadBehavior",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReadBehavior"
        },
        {
          "Type": "HttpCacheWriteBehavior",
          "IsGet": true,
          "IsSet": true,
          "Name": "WriteBehavior"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Web.Http.Filters.HttpCacheControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HttpNameValueHeaderValue>",
        "IEnumerable",
        "IEnumerable<HttpNameValueHeaderValue>",
        "IList<HttpNameValueHeaderValue>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxAge"
        },
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxStale"
        },
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "MinFresh"
        },
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "SharedMaxAge"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "ParseAdd"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "TryParseAdd"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Token"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "HttpConnectionOptionHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "Parse"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "connectionOptionHeaderValue",
              "Type": "HttpConnectionOptionHeaderValue&",
              "Out": true
            }
          ],
          "Name": "TryParse"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HttpConnectionOptionHeaderValue>",
        "IEnumerable",
        "IEnumerable<HttpConnectionOptionHeaderValue>",
        "IList<HttpConnectionOptionHeaderValue>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "ParseAdd"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "TryParseAdd"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "contentCoding",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ContentCoding"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "HttpContentCodingHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "Parse"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "contentCodingHeaderValue",
              "Type": "HttpContentCodingHeaderValue&",
              "Out": true
            }
          ],
          "Name": "TryParse"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpContentCodingHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HttpContentCodingHeaderValue>",
        "IEnumerable",
        "IEnumerable<HttpContentCodingHeaderValue>",
        "IList<HttpContentCodingHeaderValue>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "ParseAdd"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "TryParseAdd"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "contentCoding",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "contentCoding",
              "Type": "String"
            },
            {
              "Name": "quality",
              "Type": "Double"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ContentCoding"
        },
        {
          "Type": "Nullable<Double>",
          "IsGet": true,
          "Name": "Quality"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "HttpContentCodingWithQualityHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "Parse"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "contentCodingWithQualityHeaderValue",
              "Type": "HttpContentCodingWithQualityHeaderValue&",
              "Out": true
            }
          ],
          "Name": "TryParse"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HttpContentCodingWithQualityHeaderValue>",
        "IEnumerable",
        "IEnumerable<HttpContentCodingWithQualityHeaderValue>",
        "IList<HttpContentCodingWithQualityHeaderValue>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "ParseAdd"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "TryParseAdd"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "dispositionType",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DispositionType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "FileName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "FileNameStar"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Name"
        },
        {
          "Type": "IList<HttpNameValueHeaderValue>",
          "IsGet": true,
          "Name": "Parameters"
        },
        {
          "Type": "Nullable<UInt64>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "HttpContentDispositionHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "Parse"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "contentDispositionHeaderValue",
              "Type": "HttpContentDispositionHeaderValue&",
              "Out": true
            }
          ],
          "Name": "TryParse"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpContentDispositionHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,String>>",
        "IDictionary<String,String>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,String>>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "HttpContentDispositionHeaderValue",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentDisposition"
        },
        {
          "Type": "HttpContentCodingHeaderValueCollection",
          "IsGet": true,
          "Name": "ContentEncoding"
        },
        {
          "Type": "HttpLanguageHeaderValueCollection",
          "IsGet": true,
          "Name": "ContentLanguage"
        },
        {
          "Type": "Nullable<UInt64>",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentLength"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentLocation"
        },
        {
          "Type": "IBuffer",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentMD5"
        },
        {
          "Type": "HttpContentRangeHeaderValue",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentRange"
        },
        {
          "Type": "HttpMediaTypeHeaderValue",
          "IsGet": true,
          "IsSet": true,
          "Name": "ContentType"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Expires"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true,
          "Name": "LastModified"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "Append"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "TryAppendWithoutValidation"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpContentHeaderCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "from",
              "Type": "UInt64"
            },
            {
              "Name": "to",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "from",
              "Type": "UInt64"
            },
            {
              "Name": "to",
              "Type": "UInt64"
            },
            {
              "Name": "length",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "length",
              "Type": "UInt64"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Nullable<UInt64>",
          "IsGet": true,
          "Name": "FirstBytePosition"
        },
        {
          "Type": "Nullable<UInt64>",
          "IsGet": true,
          "Name": "LastBytePosition"
        },
        {
          "Type": "Nullable<UInt64>",
          "IsGet": true,
          "Name": "Length"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Unit"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "HttpContentRangeHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "Parse"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "contentRangeHeaderValue",
              "Type": "HttpContentRangeHeaderValue&",
              "Out": true
            }
          ],
          "Name": "TryParse"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpContentRangeHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "HttpCookiePairHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "Parse"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "cookiePairHeaderValue",
              "Type": "HttpCookiePairHeaderValue&",
              "Out": true
            }
          ],
          "Name": "TryParse"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpCookiePairHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HttpCookiePairHeaderValue>",
        "IEnumerable",
        "IEnumerable<HttpCookiePairHeaderValue>",
        "IList<HttpCookiePairHeaderValue>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "ParseAdd"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "TryParseAdd"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "scheme",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "scheme",
              "Type": "String"
            },
            {
              "Name": "token",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IList<HttpNameValueHeaderValue>",
          "IsGet": true,
          "Name": "Parameters"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Scheme"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Token"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "HttpCredentialsHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "Parse"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "credentialsHeaderValue",
              "Type": "HttpCredentialsHeaderValue&",
              "Out": true
            }
          ],
          "Name": "TryParse"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpCredentialsHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "Name": "Date"
        },
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "Name": "Delta"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "HttpDateOrDeltaHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "Parse"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "dateOrDeltaHeaderValue",
              "Type": "HttpDateOrDeltaHeaderValue&",
              "Out": true
            }
          ],
          "Name": "TryParse"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "IList<HttpNameValueHeaderValue>",
          "IsGet": true,
          "Name": "Parameters"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "HttpExpectationHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "Parse"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "expectationHeaderValue",
              "Type": "HttpExpectationHeaderValue&",
              "Out": true
            }
          ],
          "Name": "TryParse"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpExpectationHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HttpExpectationHeaderValue>",
        "IEnumerable",
        "IEnumerable<HttpExpectationHeaderValue>",
        "IList<HttpExpectationHeaderValue>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "ParseAdd"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "TryParseAdd"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "scheme",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "scheme",
              "Type": "String"
            },
            {
              "Name": "token",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IList<HttpNameValueHeaderValue>",
          "IsGet": true,
          "Name": "Parameters"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Scheme"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Token"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "HttpChallengeHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "Parse"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "challengeHeaderValue",
              "Type": "HttpChallengeHeaderValue&",
              "Out": true
            }
          ],
          "Name": "TryParse"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpChallengeHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HttpChallengeHeaderValue>",
        "IEnumerable",
        "IEnumerable<HttpChallengeHeaderValue>",
        "IList<HttpChallengeHeaderValue>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "ParseAdd"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "TryParseAdd"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<Language>",
        "IEnumerable",
        "IEnumerable<Language>",
        "IList<Language>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "ParseAdd"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "TryParseAdd"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "languageRange",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "languageRange",
              "Type": "String"
            },
            {
              "Name": "quality",
              "Type": "Double"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "LanguageRange"
        },
        {
          "Type": "Nullable<Double>",
          "IsGet": true,
          "Name": "Quality"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "HttpLanguageRangeWithQualityHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "Parse"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "languageRangeWithQualityHeaderValue",
              "Type": "HttpLanguageRangeWithQualityHeaderValue&",
              "Out": true
            }
          ],
          "Name": "TryParse"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HttpLanguageRangeWithQualityHeaderValue>",
        "IEnumerable",
        "IEnumerable<HttpLanguageRangeWithQualityHeaderValue>",
        "IList<HttpLanguageRangeWithQualityHeaderValue>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "ParseAdd"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "TryParseAdd"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "mediaType",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "CharSet"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "MediaType"
        },
        {
          "Type": "IList<HttpNameValueHeaderValue>",
          "IsGet": true,
          "Name": "Parameters"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "HttpMediaTypeHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "Parse"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "mediaTypeHeaderValue",
              "Type": "HttpMediaTypeHeaderValue&",
              "Out": true
            }
          ],
          "Name": "TryParse"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpMediaTypeHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "mediaType",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "mediaType",
              "Type": "String"
            },
            {
              "Name": "quality",
              "Type": "Double"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "CharSet"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "MediaType"
        },
        {
          "Type": "IList<HttpNameValueHeaderValue>",
          "IsGet": true,
          "Name": "Parameters"
        },
        {
          "Type": "Nullable<Double>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Quality"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "HttpMediaTypeWithQualityHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "Parse"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "mediaTypeWithQualityHeaderValue",
              "Type": "HttpMediaTypeWithQualityHeaderValue&",
              "Out": true
            }
          ],
          "Name": "TryParse"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HttpMediaTypeWithQualityHeaderValue>",
        "IEnumerable",
        "IEnumerable<HttpMediaTypeWithQualityHeaderValue>",
        "IList<HttpMediaTypeWithQualityHeaderValue>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "ParseAdd"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "TryParseAdd"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HttpMethod>",
        "IEnumerable",
        "IEnumerable<HttpMethod>",
        "IList<HttpMethod>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "ParseAdd"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "TryParseAdd"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpMethodHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "HttpNameValueHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "Parse"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "nameValueHeaderValue",
              "Type": "HttpNameValueHeaderValue&",
              "Out": true
            }
          ],
          "Name": "TryParse"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpNameValueHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "productName",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "productName",
              "Type": "String"
            },
            {
              "Name": "productVersion",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Version"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "HttpProductHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "Parse"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "productHeaderValue",
              "Type": "HttpProductHeaderValue&",
              "Out": true
            }
          ],
          "Name": "TryParse"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpProductHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "productComment",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "productName",
              "Type": "String"
            },
            {
              "Name": "productVersion",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Comment"
        },
        {
          "Type": "HttpProductHeaderValue",
          "IsGet": true,
          "Name": "Product"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "HttpProductInfoHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "Parse"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "productInfoHeaderValue",
              "Type": "HttpProductInfoHeaderValue&",
              "Out": true
            }
          ],
          "Name": "TryParse"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpProductInfoHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HttpProductInfoHeaderValue>",
        "IEnumerable",
        "IEnumerable<HttpProductInfoHeaderValue>",
        "IList<HttpProductInfoHeaderValue>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "ParseAdd"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "TryParseAdd"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,String>>",
        "IDictionary<String,String>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,String>>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "HttpMediaTypeWithQualityHeaderValueCollection",
          "IsGet": true,
          "Name": "Accept"
        },
        {
          "Type": "HttpContentCodingWithQualityHeaderValueCollection",
          "IsGet": true,
          "Name": "AcceptEncoding"
        },
        {
          "Type": "HttpLanguageRangeWithQualityHeaderValueCollection",
          "IsGet": true,
          "Name": "AcceptLanguage"
        },
        {
          "Type": "HttpCredentialsHeaderValue",
          "IsGet": true,
          "IsSet": true,
          "Name": "Authorization"
        },
        {
          "Type": "HttpCacheDirectiveHeaderValueCollection",
          "IsGet": true,
          "Name": "CacheControl"
        },
        {
          "Type": "HttpConnectionOptionHeaderValueCollection",
          "IsGet": true,
          "Name": "Connection"
        },
        {
          "Type": "HttpCookiePairHeaderValueCollection",
          "IsGet": true,
          "Name": "Cookie"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Date"
        },
        {
          "Type": "HttpExpectationHeaderValueCollection",
          "IsGet": true,
          "Name": "Expect"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "From"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "IsSet": true,
          "Name": "Host"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true,
          "Name": "IfModifiedSince"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true,
          "Name": "IfUnmodifiedSince"
        },
        {
          "Type": "Nullable<UInt32>",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxForwards"
        },
        {
          "Type": "HttpCredentialsHeaderValue",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProxyAuthorization"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "Referer"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        },
        {
          "Type": "HttpTransferCodingHeaderValueCollection",
          "IsGet": true,
          "Name": "TransferEncoding"
        },
        {
          "Type": "HttpProductInfoHeaderValueCollection",
          "IsGet": true,
          "Name": "UserAgent"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "Append"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "TryAppendWithoutValidation"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpRequestHeaderCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<KeyValuePair<String,String>>",
        "IDictionary<String,String>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,String>>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Age"
        },
        {
          "Type": "HttpMethodHeaderValueCollection",
          "IsGet": true,
          "Name": "Allow"
        },
        {
          "Type": "HttpCacheDirectiveHeaderValueCollection",
          "IsGet": true,
          "Name": "CacheControl"
        },
        {
          "Type": "HttpConnectionOptionHeaderValueCollection",
          "IsGet": true,
          "Name": "Connection"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Date"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "Location"
        },
        {
          "Type": "HttpChallengeHeaderValueCollection",
          "IsGet": true,
          "Name": "ProxyAuthenticate"
        },
        {
          "Type": "HttpDateOrDeltaHeaderValue",
          "IsGet": true,
          "IsSet": true,
          "Name": "RetryAfter"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        },
        {
          "Type": "HttpTransferCodingHeaderValueCollection",
          "IsGet": true,
          "Name": "TransferEncoding"
        },
        {
          "Type": "HttpChallengeHeaderValueCollection",
          "IsGet": true,
          "Name": "WwwAuthenticate"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "Append"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "TryAppendWithoutValidation"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpResponseHeaderCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IList<HttpNameValueHeaderValue>",
          "IsGet": true,
          "Name": "Parameters"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "HttpTransferCodingHeaderValue",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "Parse"
        },
        {
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            },
            {
              "Name": "transferCodingHeaderValue",
              "Type": "HttpTransferCodingHeaderValue&",
              "Out": true
            }
          ],
          "Name": "TryParse"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpTransferCodingHeaderValue"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ICollection<HttpTransferCodingHeaderValue>",
        "IEnumerable",
        "IEnumerable<HttpTransferCodingHeaderValue>",
        "IList<HttpTransferCodingHeaderValue>",
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "ParseAdd"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "input",
              "Type": "String"
            }
          ],
          "Name": "TryParseAdd"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IHttpContent",
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "IBuffer"
            },
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "HttpContentHeaderCollection",
          "IsGet": true,
          "Name": "Headers"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Name": "BufferAllAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt64>",
          "Name": "ReadAsBufferAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IInputStream,UInt64>",
          "Name": "ReadAsInputStreamAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<String,UInt64>",
          "Name": "ReadAsStringAsync"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "length",
              "Type": "UInt64&",
              "Out": true
            }
          ],
          "Name": "TryComputeLength"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Parameters": [
            {
              "Name": "outputStream",
              "Type": "IOutputStream"
            }
          ],
          "Name": "WriteToStreamAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.HttpBufferContent"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IStringable"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "filter",
              "Type": "IHttpFilter"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "HttpRequestHeaderCollection",
          "IsGet": true,
          "Name": "DefaultRequestHeaders"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperationWithProgress<HttpResponseMessage,HttpProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "DeleteAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<HttpResponseMessage,HttpProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "GetAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<HttpResponseMessage,HttpProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "completionOption",
              "Type": "HttpCompletionOption"
            }
          ],
          "Name": "GetAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,HttpProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "GetBufferAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IInputStream,HttpProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "GetInputStreamAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<String,HttpProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "GetStringAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<HttpResponseMessage,HttpProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "content",
              "Type": "IHttpContent"
            }
          ],
          "Name": "PostAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<HttpResponseMessage,HttpProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "content",
              "Type": "IHttpContent"
            }
          ],
          "Name": "PutAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<HttpResponseMessage,HttpProgress>",
          "Parameters": [
            {
              "Name": "request",
              "Type": "HttpRequestMessage"
            }
          ],
          "Name": "SendRequestAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<HttpResponseMessage,HttpProgress>",
          "Parameters": [
            {
              "Name": "request",
              "Type": "HttpRequestMessage"
            },
            {
              "Name": "completionOption",
              "Type": "HttpCompletionOption"
            }
          ],
          "Name": "SendRequestAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.HttpClient"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "domain",
              "Type": "String"
            },
            {
              "Name": "path",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Domain"
        },
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Expires"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "HttpOnly"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Path"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Secure"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Web.Http.HttpCookie"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<HttpCookie>",
        "IReadOnlyCollection<HttpCookie>",
        "IReadOnlyList<HttpCookie>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Web.Http.HttpCookieCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "cookie",
              "Type": "HttpCookie"
            }
          ],
          "Name": "DeleteCookie"
        },
        {
          "ReturnType": "HttpCookieCollection",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "GetCookies"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "cookie",
              "Type": "HttpCookie"
            }
          ],
          "Name": "SetCookie"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "cookie",
              "Type": "HttpCookie"
            },
            {
              "Name": "thirdParty",
              "Type": "Boolean"
            }
          ],
          "Name": "SetCookie"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.HttpCookieManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IHttpContent",
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "IEnumerable<KeyValuePair<String,String>>"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "HttpContentHeaderCollection",
          "IsGet": true,
          "Name": "Headers"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Name": "BufferAllAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt64>",
          "Name": "ReadAsBufferAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IInputStream,UInt64>",
          "Name": "ReadAsInputStreamAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<String,UInt64>",
          "Name": "ReadAsStringAsync"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "length",
              "Type": "UInt64&",
              "Out": true
            }
          ],
          "Name": "TryComputeLength"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Parameters": [
            {
              "Name": "outputStream",
              "Type": "IOutputStream"
            }
          ],
          "Name": "WriteToStreamAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.HttpFormUrlEncodedContent"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "method",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "HttpMethod",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Delete"
        },
        {
          "Type": "HttpMethod",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Get"
        },
        {
          "Type": "HttpMethod",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Head"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Method"
        },
        {
          "Type": "HttpMethod",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Options"
        },
        {
          "Type": "HttpMethod",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Patch"
        },
        {
          "Type": "HttpMethod",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Post"
        },
        {
          "Type": "HttpMethod",
          "IsStatic": true,
          "IsGet": true,
          "Name": "Put"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Web.Http.HttpMethod"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IEnumerable",
        "IEnumerable<IHttpContent>",
        "IHttpContent",
        "IStringable"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "subtype",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "subtype",
              "Type": "String"
            },
            {
              "Name": "boundary",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "HttpContentHeaderCollection",
          "IsGet": true,
          "Name": "Headers"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "content",
              "Type": "IHttpContent"
            }
          ],
          "Name": "Add"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Name": "BufferAllAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt64>",
          "Name": "ReadAsBufferAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IInputStream,UInt64>",
          "Name": "ReadAsInputStreamAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<String,UInt64>",
          "Name": "ReadAsStringAsync"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "length",
              "Type": "UInt64&",
              "Out": true
            }
          ],
          "Name": "TryComputeLength"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Parameters": [
            {
              "Name": "outputStream",
              "Type": "IOutputStream"
            }
          ],
          "Name": "WriteToStreamAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.HttpMultipartContent"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IEnumerable",
        "IEnumerable<IHttpContent>",
        "IHttpContent",
        "IStringable"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "boundary",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "HttpContentHeaderCollection",
          "IsGet": true,
          "Name": "Headers"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "content",
              "Type": "IHttpContent"
            }
          ],
          "Name": "Add"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "content",
              "Type": "IHttpContent"
            },
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "Add"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "content",
              "Type": "IHttpContent"
            },
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "fileName",
              "Type": "String"
            }
          ],
          "Name": "Add"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Name": "BufferAllAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt64>",
          "Name": "ReadAsBufferAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IInputStream,UInt64>",
          "Name": "ReadAsInputStreamAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<String,UInt64>",
          "Name": "ReadAsStringAsync"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "length",
              "Type": "UInt64&",
              "Out": true
            }
          ],
          "Name": "TryComputeLength"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Parameters": [
            {
              "Name": "outputStream",
              "Type": "IOutputStream"
            }
          ],
          "Name": "WriteToStreamAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.HttpMultipartFormDataContent"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IStringable"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "method",
              "Type": "HttpMethod"
            },
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IHttpContent",
          "IsGet": true,
          "IsSet": true,
          "Name": "Content"
        },
        {
          "Type": "HttpRequestHeaderCollection",
          "IsGet": true,
          "Name": "Headers"
        },
        {
          "Type": "HttpMethod",
          "IsGet": true,
          "IsSet": true,
          "Name": "Method"
        },
        {
          "Type": "IDictionary<String,Object>",
          "IsGet": true,
          "Name": "Properties"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "RequestUri"
        },
        {
          "Type": "HttpTransportInformation",
          "IsGet": true,
          "Name": "TransportInformation"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.HttpRequestMessage"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IStringable"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "statusCode",
              "Type": "HttpStatusCode"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IHttpContent",
          "IsGet": true,
          "IsSet": true,
          "Name": "Content"
        },
        {
          "Type": "HttpResponseHeaderCollection",
          "IsGet": true,
          "Name": "Headers"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsSuccessStatusCode"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ReasonPhrase"
        },
        {
          "Type": "HttpRequestMessage",
          "IsGet": true,
          "IsSet": true,
          "Name": "RequestMessage"
        },
        {
          "Type": "HttpResponseMessageSource",
          "IsGet": true,
          "IsSet": true,
          "Name": "Source"
        },
        {
          "Type": "HttpStatusCode",
          "IsGet": true,
          "IsSet": true,
          "Name": "StatusCode"
        },
        {
          "Type": "HttpVersion",
          "IsGet": true,
          "IsSet": true,
          "Name": "Version"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "HttpResponseMessage",
          "Name": "EnsureSuccessStatusCode"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.HttpResponseMessage"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IHttpContent",
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "IInputStream"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "HttpContentHeaderCollection",
          "IsGet": true,
          "Name": "Headers"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Name": "BufferAllAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt64>",
          "Name": "ReadAsBufferAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IInputStream,UInt64>",
          "Name": "ReadAsInputStreamAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<String,UInt64>",
          "Name": "ReadAsStringAsync"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "length",
              "Type": "UInt64&",
              "Out": true
            }
          ],
          "Name": "TryComputeLength"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Parameters": [
            {
              "Name": "outputStream",
              "Type": "IOutputStream"
            }
          ],
          "Name": "WriteToStreamAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.HttpStreamContent"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IHttpContent",
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "String"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "content",
              "Type": "String"
            },
            {
              "Name": "encoding",
              "Type": "UnicodeEncoding"
            },
            {
              "Name": "mediaType",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "HttpContentHeaderCollection",
          "IsGet": true,
          "Name": "Headers"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Name": "BufferAllAsync"
        },
        {
          "ReturnType": "Void",
          "Name": "Dispose"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt64>",
          "Name": "ReadAsBufferAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IInputStream,UInt64>",
          "Name": "ReadAsInputStreamAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<String,UInt64>",
          "Name": "ReadAsStringAsync"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "length",
              "Type": "UInt64&",
              "Out": true
            }
          ],
          "Name": "TryComputeLength"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Parameters": [
            {
              "Name": "outputStream",
              "Type": "IOutputStream"
            }
          ],
          "Name": "WriteToStreamAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.HttpStringContent"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Certificate",
          "IsGet": true,
          "Name": "ServerCertificate"
        },
        {
          "Type": "IReadOnlyList<ChainValidationResult>",
          "IsGet": true,
          "Name": "ServerCertificateErrors"
        },
        {
          "Type": "SocketSslErrorSeverity",
          "IsGet": true,
          "Name": "ServerCertificateErrorSeverity"
        },
        {
          "Type": "IReadOnlyList<Certificate>",
          "IsGet": true,
          "Name": "ServerIntermediateCertificates"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Web.Http.HttpTransportInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "attributeName",
              "Type": "String"
            },
            {
              "Name": "attributeNamespace",
              "Type": "String"
            },
            {
              "Name": "attributeValue",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Name"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Namespace"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Value"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Web.Syndication.SyndicationAttribute"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationNode"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "term",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "term",
              "Type": "String"
            },
            {
              "Name": "scheme",
              "Type": "String"
            },
            {
              "Name": "label",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true,
          "Name": "AttributeExtensions"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "BaseUri"
        },
        {
          "Type": "IList<ISyndicationNode>",
          "IsGet": true,
          "Name": "ElementExtensions"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Label"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Language"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeNamespace"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Scheme"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Term"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ],
          "Name": "GetXmlDocument"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.SyndicationCategory"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationClient"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "serverCredential",
              "Type": "PasswordCredential"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "BypassCacheOnRetrieve"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxResponseBufferSize"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProxyCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServerCredential"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Timeout"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperationWithProgress<SyndicationFeed,RetrievalProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "RetrieveFeedAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "SetRequestHeader"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.SyndicationClient"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationNode",
        "ISyndicationText"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "SyndicationTextType"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "sourceUri",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true,
          "Name": "AttributeExtensions"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "BaseUri"
        },
        {
          "Type": "IList<ISyndicationNode>",
          "IsGet": true,
          "Name": "ElementExtensions"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Language"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeNamespace"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "SourceUri"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Text"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Type"
        },
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "IsSet": true,
          "Name": "Xml"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ],
          "Name": "GetXmlDocument"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.SyndicationContent"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "SyndicationErrorStatus",
          "Parameters": [
            {
              "Name": "hresult",
              "Type": "Int32"
            }
          ],
          "Name": "GetStatus"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.SyndicationError"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationNode"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "title",
              "Type": "String"
            },
            {
              "Name": "subtitle",
              "Type": "String"
            },
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true,
          "Name": "AttributeExtensions"
        },
        {
          "Type": "IList<SyndicationPerson>",
          "IsGet": true,
          "Name": "Authors"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "BaseUri"
        },
        {
          "Type": "IList<SyndicationCategory>",
          "IsGet": true,
          "Name": "Categories"
        },
        {
          "Type": "IList<SyndicationPerson>",
          "IsGet": true,
          "Name": "Contributors"
        },
        {
          "Type": "IList<ISyndicationNode>",
          "IsGet": true,
          "Name": "ElementExtensions"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "FirstUri"
        },
        {
          "Type": "SyndicationGenerator",
          "IsGet": true,
          "IsSet": true,
          "Name": "Generator"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "IconUri"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Id"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "ImageUri"
        },
        {
          "Type": "IList<SyndicationItem>",
          "IsGet": true,
          "Name": "Items"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Language"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "LastUpdatedTime"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "LastUri"
        },
        {
          "Type": "IList<SyndicationLink>",
          "IsGet": true,
          "Name": "Links"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "NextUri"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeNamespace"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "PreviousUri"
        },
        {
          "Type": "ISyndicationText",
          "IsGet": true,
          "IsSet": true,
          "Name": "Rights"
        },
        {
          "Type": "SyndicationFormat",
          "IsGet": true,
          "Name": "SourceFormat"
        },
        {
          "Type": "ISyndicationText",
          "IsGet": true,
          "IsSet": true,
          "Name": "Subtitle"
        },
        {
          "Type": "ISyndicationText",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ],
          "Name": "GetXmlDocument"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "feed",
              "Type": "String"
            }
          ],
          "Name": "Load"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "feedDocument",
              "Type": "XmlDocument"
            }
          ],
          "Name": "LoadFromXml"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.SyndicationFeed"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationNode"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true,
          "Name": "AttributeExtensions"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "BaseUri"
        },
        {
          "Type": "IList<ISyndicationNode>",
          "IsGet": true,
          "Name": "ElementExtensions"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Language"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeNamespace"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Text"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "Uri"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Version"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ],
          "Name": "GetXmlDocument"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.SyndicationGenerator"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationNode"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "title",
              "Type": "String"
            },
            {
              "Name": "content",
              "Type": "SyndicationContent"
            },
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true,
          "Name": "AttributeExtensions"
        },
        {
          "Type": "IList<SyndicationPerson>",
          "IsGet": true,
          "Name": "Authors"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "BaseUri"
        },
        {
          "Type": "IList<SyndicationCategory>",
          "IsGet": true,
          "Name": "Categories"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "CommentsUri"
        },
        {
          "Type": "SyndicationContent",
          "IsGet": true,
          "IsSet": true,
          "Name": "Content"
        },
        {
          "Type": "IList<SyndicationPerson>",
          "IsGet": true,
          "Name": "Contributors"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "EditMediaUri"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "EditUri"
        },
        {
          "Type": "IList<ISyndicationNode>",
          "IsGet": true,
          "Name": "ElementExtensions"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ETag"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Id"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "ItemUri"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Language"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "LastUpdatedTime"
        },
        {
          "Type": "IList<SyndicationLink>",
          "IsGet": true,
          "Name": "Links"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeNamespace"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "PublishedDate"
        },
        {
          "Type": "ISyndicationText",
          "IsGet": true,
          "IsSet": true,
          "Name": "Rights"
        },
        {
          "Type": "SyndicationFeed",
          "IsGet": true,
          "IsSet": true,
          "Name": "Source"
        },
        {
          "Type": "ISyndicationText",
          "IsGet": true,
          "IsSet": true,
          "Name": "Summary"
        },
        {
          "Type": "ISyndicationText",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ],
          "Name": "GetXmlDocument"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "item",
              "Type": "String"
            }
          ],
          "Name": "Load"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "itemDocument",
              "Type": "XmlDocument"
            }
          ],
          "Name": "LoadFromXml"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.SyndicationItem"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationNode"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "relationship",
              "Type": "String"
            },
            {
              "Name": "title",
              "Type": "String"
            },
            {
              "Name": "mediaType",
              "Type": "String"
            },
            {
              "Name": "length",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true,
          "Name": "AttributeExtensions"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "BaseUri"
        },
        {
          "Type": "IList<ISyndicationNode>",
          "IsGet": true,
          "Name": "ElementExtensions"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Language"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Length"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "MediaType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeNamespace"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Relationship"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ResourceLanguage"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "Uri"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ],
          "Name": "GetXmlDocument"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.SyndicationLink"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationNode"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "nodeName",
              "Type": "String"
            },
            {
              "Name": "nodeNamespace",
              "Type": "String"
            },
            {
              "Name": "nodeValue",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true,
          "Name": "AttributeExtensions"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "BaseUri"
        },
        {
          "Type": "IList<ISyndicationNode>",
          "IsGet": true,
          "Name": "ElementExtensions"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Language"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeNamespace"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ],
          "Name": "GetXmlDocument"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.SyndicationNode"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationNode"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "email",
              "Type": "String"
            },
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true,
          "Name": "AttributeExtensions"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "BaseUri"
        },
        {
          "Type": "IList<ISyndicationNode>",
          "IsGet": true,
          "Name": "ElementExtensions"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Email"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Language"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Name"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeNamespace"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "Uri"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ],
          "Name": "GetXmlDocument"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.SyndicationPerson"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "ISyndicationNode",
        "ISyndicationText"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "SyndicationTextType"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true,
          "Name": "AttributeExtensions"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "BaseUri"
        },
        {
          "Type": "IList<ISyndicationNode>",
          "IsGet": true,
          "Name": "ElementExtensions"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Language"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeNamespace"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Text"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Type"
        },
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "IsSet": true,
          "Name": "Xml"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ],
          "Name": "GetXmlDocument"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.SyndicationText"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "WebErrorStatus",
          "Parameters": [
            {
              "Name": "hresult",
              "Type": "Int32"
            }
          ],
          "Name": "GetStatus"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.WebError"
    }
  ],
  "Structs": [
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "UInt32",
          "Name": "Flagged"
        },
        {
          "Type": "UInt32",
          "Name": "Total"
        },
        {
          "Type": "UInt32",
          "Name": "Unread"
        },
        {
          "Type": "UInt32",
          "Name": "Urgent"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Email.EmailItemCounts"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "UInt16",
          "Name": "Build"
        },
        {
          "Type": "UInt16",
          "Name": "Major"
        },
        {
          "Type": "UInt16",
          "Name": "Minor"
        },
        {
          "Type": "UInt16",
          "Name": "Revision"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.PackageVersion"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "Int32",
          "Name": "Checksum"
        },
        {
          "Type": "UInt32",
          "Name": "MajorVersion"
        },
        {
          "Type": "UInt32",
          "Name": "MinorVersion"
        },
        {
          "Type": "UInt32",
          "Name": "NamedResourceCount"
        },
        {
          "Type": "UInt32",
          "Name": "ResourceSubtreeCount"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Resources.Core.ResourceLayoutInfo"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "UInt32",
          "Name": "Length"
        },
        {
          "Type": "UInt32",
          "Name": "StartPosition"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Data.Text.TextSegment"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "Double",
          "Name": "Altitude"
        },
        {
          "Type": "Double",
          "Name": "Latitude"
        },
        {
          "Type": "Double",
          "Name": "Longitude"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.BasicGeoposition"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "Int32",
          "Name": "X"
        },
        {
          "Type": "Int32",
          "Name": "Y"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Input.MouseDelta"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "Int32",
          "Name": "MaxLogical"
        },
        {
          "Type": "Int32",
          "Name": "MaxPhysical"
        },
        {
          "Type": "Int32",
          "Name": "MinLogical"
        },
        {
          "Type": "Int32",
          "Name": "MinPhysical"
        },
        {
          "Type": "Single",
          "Name": "PhysicalMultiplier"
        },
        {
          "Type": "UInt32",
          "Name": "Unit"
        },
        {
          "Type": "UInt32",
          "Name": "Usage"
        },
        {
          "Type": "UInt32",
          "Name": "UsagePage"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Input.PointerDeviceUsage"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "Int32",
          "Name": "Count"
        },
        {
          "Type": "Int32",
          "Name": "Quality"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.DirectX.Direct3D11.Direct3DMultisampleDescription"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "DirectXPixelFormat",
          "Name": "Format"
        },
        {
          "Type": "Int32",
          "Name": "Height"
        },
        {
          "Type": "Direct3DMultisampleDescription",
          "Name": "MultisampleDescription"
        },
        {
          "Type": "Int32",
          "Name": "Width"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.DirectX.Direct3D11.Direct3DSurfaceDescription"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "UInt32",
          "Name": "Height"
        },
        {
          "Type": "UInt32",
          "Name": "Width"
        },
        {
          "Type": "UInt32",
          "Name": "X"
        },
        {
          "Type": "UInt32",
          "Name": "Y"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.BitmapBounds"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "Int32",
          "Name": "Height"
        },
        {
          "Type": "Int32",
          "Name": "StartIndex"
        },
        {
          "Type": "Int32",
          "Name": "Stride"
        },
        {
          "Type": "Int32",
          "Name": "Width"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.BitmapPlaneDescription"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "UInt32",
          "Name": "DpiX"
        },
        {
          "Type": "UInt32",
          "Name": "DpiY"
        },
        {
          "Type": "Rect",
          "Name": "ImageableRect"
        },
        {
          "Type": "Size",
          "Name": "PageSize"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.Printing.PrintPageDescription"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "UInt32",
          "Name": "percentage"
        },
        {
          "Type": "DeploymentProgressState",
          "Name": "state"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Management.Deployment.DeploymentProgress"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "Double",
          "Name": "B"
        },
        {
          "Type": "Double",
          "Name": "G"
        },
        {
          "Type": "Double",
          "Name": "R"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Capture.WhiteBalanceGain"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "UInt64",
          "Name": "BytesReceived"
        },
        {
          "Type": "Boolean",
          "Name": "HasResponseChanged"
        },
        {
          "Type": "Boolean",
          "Name": "HasRestarted"
        },
        {
          "Type": "BackgroundTransferStatus",
          "Name": "Status"
        },
        {
          "Type": "UInt64",
          "Name": "TotalBytesToReceive"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundDownloadProgress"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "UInt64",
          "Name": "BytesReceived"
        },
        {
          "Type": "UInt64",
          "Name": "BytesSent"
        },
        {
          "Type": "Boolean",
          "Name": "HasResponseChanged"
        },
        {
          "Type": "Boolean",
          "Name": "HasRestarted"
        },
        {
          "Type": "BackgroundTransferStatus",
          "Name": "Status"
        },
        {
          "Type": "UInt64",
          "Name": "TotalBytesToReceive"
        },
        {
          "Type": "UInt64",
          "Name": "TotalBytesToSend"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundUploadProgress"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "TriStates",
          "Name": "Roaming"
        },
        {
          "Type": "TriStates",
          "Name": "Shared"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.NetworkUsageStates"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "DateTimeOffset",
          "Name": "LastSyncTime"
        },
        {
          "Type": "UInt32",
          "Name": "UsageInMegabytes"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.ProfileUsage"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "Boolean",
          "Name": "InboundBandwidthPeaked"
        },
        {
          "Type": "UInt64",
          "Name": "InboundBitsPerSecond"
        },
        {
          "Type": "UInt64",
          "Name": "InboundBitsPerSecondInstability"
        },
        {
          "Type": "Boolean",
          "Name": "OutboundBandwidthPeaked"
        },
        {
          "Type": "UInt64",
          "Name": "OutboundBitsPerSecond"
        },
        {
          "Type": "UInt64",
          "Name": "OutboundBitsPerSecondInstability"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.BandwidthStatistics"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "UInt32",
          "Name": "Max"
        },
        {
          "Type": "UInt32",
          "Name": "Min"
        },
        {
          "Type": "UInt32",
          "Name": "Sum"
        },
        {
          "Type": "UInt32",
          "Name": "Variance"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.RoundTripTimeStatistics"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "UInt32",
          "Name": "Height"
        },
        {
          "Type": "UInt32",
          "Name": "Width"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.ImageResolution"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "String",
          "Name": "Metadata"
        },
        {
          "Type": "String",
          "Name": "Token"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.AccessCache.AccessListEntry"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "Boolean",
          "Name": "AscendingOrder"
        },
        {
          "Type": "String",
          "Name": "PropertyName"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Search.SortEntry"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "Boolean",
          "Name": "IsExtendedKey"
        },
        {
          "Type": "Boolean",
          "Name": "IsKeyReleased"
        },
        {
          "Type": "Boolean",
          "Name": "IsMenuKeyDown"
        },
        {
          "Type": "UInt32",
          "Name": "RepeatCount"
        },
        {
          "Type": "UInt32",
          "Name": "ScanCode"
        },
        {
          "Type": "Boolean",
          "Name": "WasKeyDown"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.CorePhysicalKeyStatus"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "Point",
          "Name": "AdjustedPoint"
        },
        {
          "Type": "Int32",
          "Name": "Score"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.CoreProximityEvaluation"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "Int32",
          "Name": "EndCaretPosition"
        },
        {
          "Type": "Int32",
          "Name": "StartCaretPosition"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.Text.CoreTextRange"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "Single",
          "Name": "RearrangeStart"
        },
        {
          "Type": "Single",
          "Name": "SelectionStart"
        },
        {
          "Type": "Single",
          "Name": "SpeedBumpEnd"
        },
        {
          "Type": "Single",
          "Name": "SpeedBumpStart"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.CrossSlideThresholds"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "Single",
          "Name": "Expansion"
        },
        {
          "Type": "Single",
          "Name": "Rotation"
        },
        {
          "Type": "Single",
          "Name": "Scale"
        },
        {
          "Type": "Point",
          "Name": "Translation"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.ManipulationDelta"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "Single",
          "Name": "Angular"
        },
        {
          "Type": "Single",
          "Name": "Expansion"
        },
        {
          "Type": "Point",
          "Name": "Linear"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Input.ManipulationVelocities"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "UInt16",
          "Name": "Weight"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Text.FontWeight"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "UInt32",
          "Name": "Part1"
        },
        {
          "Type": "UInt32",
          "Name": "Part2"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Peers.RawElementProviderRuntimeId"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "Double",
          "Name": "Max"
        },
        {
          "Type": "Double",
          "Name": "Min"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapZoomLevelRange"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "UInt32",
          "Name": "Count"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.LoadMoreItemsResult"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "String",
          "Name": "Namespace"
        },
        {
          "Type": "String",
          "Name": "XmlNamespace"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Markup.XmlnsDefinition"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "UInt64",
          "Name": "BytesReceived"
        },
        {
          "Type": "UInt64",
          "Name": "BytesSent"
        },
        {
          "Type": "UInt32",
          "Name": "Retries"
        },
        {
          "Type": "HttpProgressStage",
          "Name": "Stage"
        },
        {
          "Type": "Nullable<UInt64>",
          "Name": "TotalBytesToReceive"
        },
        {
          "Type": "Nullable<UInt64>",
          "Name": "TotalBytesToSend"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Web.Http.HttpProgress"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "UInt32",
          "Name": "BytesRetrieved"
        },
        {
          "Type": "UInt32",
          "Name": "TotalBytesToRetrieve"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Web.Syndication.RetrievalProgress"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Type": "UInt32",
          "Name": "BytesRetrieved"
        },
        {
          "Type": "UInt32",
          "Name": "BytesSent"
        },
        {
          "Type": "UInt32",
          "Name": "TotalBytesToRetrieve"
        },
        {
          "Type": "UInt32",
          "Name": "TotalBytesToSend"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Web.Syndication.TransferProgress"
    }
  ],
  "Interfaces": [
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "ActivationKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "ApplicationExecutionState",
          "IsGet": true,
          "Name": "PreviousExecutionState"
        },
        {
          "Type": "SplashScreen",
          "IsGet": true,
          "Name": "SplashScreen"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Verb"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IAppointmentsProviderActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs",
        "IAppointmentsProviderActivatedEventArgs"
      ],
      "Properties": [
        {
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true,
          "Name": "InstanceStartDate"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "LocalId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RoamingId"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Type": "CachedFileUpdaterUI",
          "IsGet": true,
          "Name": "CachedFileUpdaterUI"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.ICachedFileUpdaterActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Type": "ValueSet",
          "IsGet": true,
          "Name": "ContinuationData"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IContinuationActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Type": "IReadOnlyList<IStorageItem>",
          "IsGet": true,
          "Name": "Files"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Verb"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IFileActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Type": "FileOpenPickerUI",
          "IsGet": true,
          "Name": "FileOpenPickerUI"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IFileOpenPickerActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs",
        "IContinuationActivatedEventArgs"
      ],
      "Properties": [
        {
          "Type": "IReadOnlyList<StorageFile>",
          "IsGet": true,
          "Name": "Files"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IFileOpenPickerContinuationEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Type": "FileSavePickerUI",
          "IsGet": true,
          "Name": "FileSavePickerUI"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IFileSavePickerActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs",
        "IContinuationActivatedEventArgs"
      ],
      "Properties": [
        {
          "Type": "StorageFile",
          "IsGet": true,
          "Name": "File"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IFileSavePickerContinuationEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Type": "IStorageFolder",
          "IsGet": true,
          "Name": "Folder"
        },
        {
          "Type": "IReadOnlyList<IStorageItem>",
          "IsGet": true,
          "Name": "SelectedItems"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IFolderActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs",
        "IContinuationActivatedEventArgs"
      ],
      "Properties": [
        {
          "Type": "StorageFolder",
          "IsGet": true,
          "Name": "Folder"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IFolderPickerContinuationEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Arguments"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "TileId"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Info"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.ILockScreenActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "PickerOperationId"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IPickerReturnedActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "Uri"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IProtocolActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "CallerPackageFamilyName"
        },
        {
          "Type": "ValueSet",
          "IsGet": true,
          "Name": "Data"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Language"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "QueryText"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.ISearchActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Type": "ShareOperation",
          "IsGet": true,
          "Name": "ShareOperation"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IShareTargetActivatedEventArgs"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Rect",
          "IsGet": true,
          "Name": "ImageLocation"
        }
      ],
      "Methods": [],
      "Events": [
        {
          "Type": "TypedEventHandler<SplashScreen,Object>",
          "Name": "Dismissed"
        }
      ],
      "Name": "Windows.ApplicationModel.Activation.ISplashScreen"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Type": "SpeechRecognitionResult",
          "IsGet": true,
          "Name": "Result"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IVoiceCommandActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ActionId"
        },
        {
          "Type": "WalletActionKind",
          "IsGet": true,
          "Name": "ActionKind"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ItemId"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IWalletActionActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Type": "IWebAccountProviderOperation",
          "IsGet": true,
          "Name": "Operation"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IWebAccountProviderActivatedEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs"
      ],
      "Properties": [
        {
          "Type": "WebTokenRequestResult",
          "IsGet": true,
          "Name": "Result"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IWebAccountProviderContinuationEventArgs"
    },
    {
      "Interfaces": [
        "IActivatedEventArgs",
        "IContinuationActivatedEventArgs"
      ],
      "Properties": [
        {
          "Type": "WebAuthenticationResult",
          "IsGet": true,
          "Name": "WebAuthenticationResult"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Activation.IWebAuthenticationBrokerContinuationEventArgs"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Address"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Appointments.IAppointmentParticipant"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.IBackgroundCondition"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "taskInstance",
              "Type": "IBackgroundTaskInstance"
            }
          ],
          "Name": "Run"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.IBackgroundTask"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "InstanceId"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Progress"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "SuspendedCount"
        },
        {
          "Type": "BackgroundTaskRegistration",
          "IsGet": true,
          "Name": "Task"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "TriggerDetails"
        }
      ],
      "Methods": [
        {
          "ReturnType": "BackgroundTaskDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [
        {
          "Type": "BackgroundTaskCanceledEventHandler",
          "Name": "Canceled"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.IBackgroundTaskInstance"
    },
    {
      "Interfaces": [
        "IBackgroundTaskInstance"
      ],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "UInt32",
          "Parameters": [
            {
              "Name": "counter",
              "Type": "BackgroundTaskThrottleCounter"
            }
          ],
          "Name": "GetThrottleCount"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.IBackgroundTaskInstance2"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "TaskId"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "cancelTask",
              "Type": "Boolean"
            }
          ],
          "Name": "Unregister"
        }
      ],
      "Events": [
        {
          "Type": "BackgroundTaskCompletedEventHandler",
          "Name": "Completed"
        },
        {
          "Type": "BackgroundTaskProgressEventHandler",
          "Name": "Progress"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.IBackgroundTaskRegistration"
    },
    {
      "Interfaces": [
        "IBackgroundTaskRegistration"
      ],
      "Properties": [
        {
          "Type": "IBackgroundTrigger",
          "IsGet": true,
          "Name": "Trigger"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.IBackgroundTaskRegistration2"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Background.IBackgroundTrigger"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "ContactFieldCategory",
          "IsGet": true,
          "Name": "Category"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "ContactFieldType",
          "IsGet": true,
          "Name": "Type"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.IContactField"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "ContactField",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            }
          ],
          "Name": "CreateField"
        },
        {
          "ReturnType": "ContactField",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ],
          "Name": "CreateField"
        },
        {
          "ReturnType": "ContactField",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ],
          "Name": "CreateField"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.IContactFieldFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "ContactInstantMessageField",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            }
          ],
          "Name": "CreateInstantMessage"
        },
        {
          "ReturnType": "ContactInstantMessageField",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ],
          "Name": "CreateInstantMessage"
        },
        {
          "ReturnType": "ContactInstantMessageField",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            },
            {
              "Name": "service",
              "Type": "String"
            },
            {
              "Name": "displayText",
              "Type": "String"
            },
            {
              "Name": "verb",
              "Type": "Uri"
            }
          ],
          "Name": "CreateInstantMessage"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.IContactInstantMessageFieldFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "ContactLocationField",
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            }
          ],
          "Name": "CreateLocation"
        },
        {
          "ReturnType": "ContactLocationField",
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ],
          "Name": "CreateLocation"
        },
        {
          "ReturnType": "ContactLocationField",
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            },
            {
              "Name": "street",
              "Type": "String"
            },
            {
              "Name": "city",
              "Type": "String"
            },
            {
              "Name": "region",
              "Type": "String"
            },
            {
              "Name": "country",
              "Type": "String"
            },
            {
              "Name": "postalCode",
              "Type": "String"
            }
          ],
          "Name": "CreateLocation"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Contacts.IContactLocationFieldFactory"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "ContactFieldCategory",
          "IsGet": true,
          "Name": "Category"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "ContactFieldType",
          "IsGet": true,
          "Name": "Type"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.IContactField"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "ContactField",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            }
          ],
          "Name": "CreateField"
        },
        {
          "ReturnType": "ContactField",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ],
          "Name": "CreateField"
        },
        {
          "ReturnType": "ContactField",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "ContactFieldType"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ],
          "Name": "CreateField"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.IContactFieldFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "ContactInstantMessageField",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            }
          ],
          "Name": "CreateInstantMessage"
        },
        {
          "ReturnType": "ContactInstantMessageField",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ],
          "Name": "CreateInstantMessage"
        },
        {
          "ReturnType": "ContactInstantMessageField",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            },
            {
              "Name": "service",
              "Type": "String"
            },
            {
              "Name": "displayText",
              "Type": "String"
            },
            {
              "Name": "verb",
              "Type": "Uri"
            }
          ],
          "Name": "CreateInstantMessage"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.IContactInstantMessageFieldFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "ContactLocationField",
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            }
          ],
          "Name": "CreateLocation"
        },
        {
          "ReturnType": "ContactLocationField",
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            }
          ],
          "Name": "CreateLocation"
        },
        {
          "ReturnType": "ContactLocationField",
          "Parameters": [
            {
              "Name": "unstructuredAddress",
              "Type": "String"
            },
            {
              "Name": "category",
              "Type": "ContactFieldCategory"
            },
            {
              "Name": "street",
              "Type": "String"
            },
            {
              "Name": "city",
              "Type": "String"
            },
            {
              "Name": "region",
              "Type": "String"
            },
            {
              "Name": "country",
              "Type": "String"
            },
            {
              "Name": "postalCode",
              "Type": "String"
            }
          ],
          "Name": "CreateLocation"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.ContactsTemp.IContactLocationFieldFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [],
      "Events": [
        {
          "Type": "EventHandler<UnhandledErrorDetectedEventArgs>",
          "Name": "UnhandledErrorDetected"
        }
      ],
      "Name": "Windows.ApplicationModel.Core.ICoreApplicationUnhandledError"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "applicationView",
              "Type": "CoreApplicationView"
            }
          ],
          "Name": "Initialize"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "entryPoint",
              "Type": "String"
            }
          ],
          "Name": "Load"
        },
        {
          "ReturnType": "Void",
          "Name": "Run"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "window",
              "Type": "CoreWindow"
            }
          ],
          "Name": "SetWindow"
        },
        {
          "ReturnType": "Void",
          "Name": "Uninitialize"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Core.IFrameworkView"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "IFrameworkView",
          "Name": "CreateView"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.Core.IFrameworkViewSource"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Complete"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.ISuspendingDeferral"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "SuspendingOperation",
          "IsGet": true,
          "Name": "SuspendingOperation"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.ApplicationModel.ISuspendingEventArgs"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "Deadline"
        }
      ],
      "Methods": [
        {
          "ReturnType": "SuspendingDeferral",
          "Name": "GetDeferral"
        }
      ],
      "Events": [],
      "Name": "Windows.ApplicationModel.ISuspendingOperation"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "JsonValueType",
          "IsGet": true,
          "Name": "ValueType"
        }
      ],
      "Methods": [
        {
          "ReturnType": "JsonArray",
          "Name": "GetArray"
        },
        {
          "ReturnType": "Boolean",
          "Name": "GetBoolean"
        },
        {
          "ReturnType": "Double",
          "Name": "GetNumber"
        },
        {
          "ReturnType": "JsonObject",
          "Name": "GetObject"
        },
        {
          "ReturnType": "String",
          "Name": "GetString"
        },
        {
          "ReturnType": "String",
          "Name": "Stringify"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Json.IJsonValue"
    },
    {
      "Interfaces": [
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Data"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Length"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "data",
              "Type": "String"
            }
          ],
          "Name": "AppendData"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ],
          "Name": "DeleteData"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "data",
              "Type": "String"
            }
          ],
          "Name": "InsertData"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "data",
              "Type": "String"
            }
          ],
          "Name": "ReplaceData"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ],
          "Name": "SubstringData"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.IXmlCharacterData"
    },
    {
      "Interfaces": [
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Properties": [
        {
          "Type": "XmlNamedNodeMap",
          "IsGet": true,
          "Name": "Attributes"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "FirstChild"
        },
        {
          "Type": "XmlNodeList",
          "IsGet": true,
          "Name": "ChildNodes"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "LastChild"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "LocalName"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "NamespaceUri"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "NextSibling"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NodeName"
        },
        {
          "Type": "NodeType",
          "IsGet": true,
          "Name": "NodeType"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        },
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "Name": "OwnerDocument"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "ParentNode"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Prefix"
        },
        {
          "Type": "IXmlNode",
          "IsGet": true,
          "Name": "PreviousSibling"
        }
      ],
      "Methods": [
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "AppendChild"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "deep",
              "Type": "Boolean"
            }
          ],
          "Name": "CloneNode"
        },
        {
          "ReturnType": "Boolean",
          "Name": "HasChildNodes"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "InsertBefore"
        },
        {
          "ReturnType": "Void",
          "Name": "Normalize"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "childNode",
              "Type": "IXmlNode"
            }
          ],
          "Name": "RemoveChild"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "newChild",
              "Type": "IXmlNode"
            },
            {
              "Name": "referenceChild",
              "Type": "IXmlNode"
            }
          ],
          "Name": "ReplaceChild"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.IXmlNode"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectNodes"
        },
        {
          "ReturnType": "XmlNodeList",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectNodesNS"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            }
          ],
          "Name": "SelectSingleNode"
        },
        {
          "ReturnType": "IXmlNode",
          "Parameters": [
            {
              "Name": "xpath",
              "Type": "String"
            },
            {
              "Name": "namespaces",
              "Type": "Object"
            }
          ],
          "Name": "SelectSingleNodeNS"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.IXmlNodeSelector"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "InnerText"
        }
      ],
      "Methods": [
        {
          "ReturnType": "String",
          "Name": "GetXml"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.IXmlNodeSerializer"
    },
    {
      "Interfaces": [
        "IXmlCharacterData",
        "IXmlNode",
        "IXmlNodeSelector",
        "IXmlNodeSerializer"
      ],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "IXmlText",
          "Parameters": [
            {
              "Name": "offset",
              "Type": "UInt32"
            }
          ],
          "Name": "SplitText"
        }
      ],
      "Events": [],
      "Name": "Windows.Data.Xml.Dom.IXmlText"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "AltitudeReferenceSystem",
          "IsGet": true,
          "Name": "AltitudeReferenceSystem"
        },
        {
          "Type": "GeoshapeType",
          "IsGet": true,
          "Name": "GeoshapeType"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "SpatialReferenceId"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Geolocation.IGeoshape"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Devices.Sensors.ISensorDataThreshold"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "T",
          "IsGet": true,
          "Name": "Current"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasCurrent"
        }
      ],
      "Methods": [
        {
          "ReturnType": "UInt32",
          "Parameters": [
            {
              "Name": "items",
              "Type": "T[]",
              "Out": true
            }
          ],
          "Name": "GetMany"
        },
        {
          "ReturnType": "Boolean",
          "Name": "MoveNext"
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.Collections.IIterator<T>"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "CollectionChange",
          "IsGet": true,
          "Name": "CollectionChange"
        },
        {
          "Type": "K",
          "IsGet": true,
          "Name": "Key"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Collections.IMapChangedEventArgs<K>"
    },
    {
      "Interfaces": [
        "ICollection<KeyValuePair<K,V>>",
        "IDictionary<K,V>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<K,V>>"
      ],
      "Properties": [],
      "Methods": [],
      "Events": [
        {
          "Type": "MapChangedEventHandler<K,V>",
          "Name": "MapChanged"
        }
      ],
      "Name": "Windows.Foundation.Collections.IObservableMap<K,V>"
    },
    {
      "Interfaces": [
        "ICollection<T>",
        "IEnumerable",
        "IEnumerable<T>",
        "IList<T>"
      ],
      "Properties": [],
      "Methods": [],
      "Events": [
        {
          "Type": "VectorChangedEventHandler<T>",
          "Name": "VectorChanged"
        }
      ],
      "Name": "Windows.Foundation.Collections.IObservableVector<T>"
    },
    {
      "Interfaces": [
        "ICollection<KeyValuePair<String,Object>>",
        "IDictionary<String,Object>",
        "IEnumerable",
        "IEnumerable<KeyValuePair<String,Object>>",
        "IObservableMap<String,Object>"
      ],
      "Properties": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Collections.IPropertySet"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "CollectionChange",
          "IsGet": true,
          "Name": "CollectionChange"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Index"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.Collections.IVectorChangedEventArgs"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "ErrorOptions",
          "Name": "GetErrorOptions"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "ErrorOptions"
            }
          ],
          "Name": "SetErrorOptions"
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.Diagnostics.IErrorReportingSettings"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            }
          ],
          "Name": "AddLoggingChannel"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            },
            {
              "Name": "maxLevel",
              "Type": "LoggingLevel"
            }
          ],
          "Name": "AddLoggingChannel"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Name": "CloseAndSaveToFileAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            }
          ],
          "Name": "RemoveLoggingChannel"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<IFileLoggingSession,LogFileGeneratedEventArgs>",
          "Name": "LogFileGenerated"
        }
      ],
      "Name": "Windows.Foundation.Diagnostics.IFileLoggingSession"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Enabled"
        },
        {
          "Type": "LoggingLevel",
          "IsGet": true,
          "Name": "Level"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "eventString",
              "Type": "String"
            }
          ],
          "Name": "LogMessage"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "eventString",
              "Type": "String"
            },
            {
              "Name": "level",
              "Type": "LoggingLevel"
            }
          ],
          "Name": "LogMessage"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value1",
              "Type": "String"
            },
            {
              "Name": "value2",
              "Type": "Int32"
            }
          ],
          "Name": "LogValuePair"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value1",
              "Type": "String"
            },
            {
              "Name": "value2",
              "Type": "Int32"
            },
            {
              "Name": "level",
              "Type": "LoggingLevel"
            }
          ],
          "Name": "LogValuePair"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<ILoggingChannel,Object>",
          "Name": "LoggingEnabled"
        }
      ],
      "Name": "Windows.Foundation.Diagnostics.ILoggingChannel"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            }
          ],
          "Name": "AddLoggingChannel"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            },
            {
              "Name": "maxLevel",
              "Type": "LoggingLevel"
            }
          ],
          "Name": "AddLoggingChannel"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "loggingChannel",
              "Type": "ILoggingChannel"
            }
          ],
          "Name": "RemoveLoggingChannel"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "folder",
              "Type": "IStorageFolder"
            },
            {
              "Name": "fileName",
              "Type": "String"
            }
          ],
          "Name": "SaveToFileAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.Diagnostics.ILoggingSession"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Name": "IsEnabled"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "level",
              "Type": "LoggingLevel"
            }
          ],
          "Name": "IsEnabled"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "level",
              "Type": "LoggingLevel"
            },
            {
              "Name": "keywords",
              "Type": "Int64"
            }
          ],
          "Name": "IsEnabled"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "eventName",
              "Type": "String"
            }
          ],
          "Name": "LogEvent"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "eventName",
              "Type": "String"
            },
            {
              "Name": "fields",
              "Type": "LoggingFields"
            }
          ],
          "Name": "LogEvent"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "eventName",
              "Type": "String"
            },
            {
              "Name": "fields",
              "Type": "LoggingFields"
            },
            {
              "Name": "level",
              "Type": "LoggingLevel"
            }
          ],
          "Name": "LogEvent"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "eventName",
              "Type": "String"
            },
            {
              "Name": "fields",
              "Type": "LoggingFields"
            },
            {
              "Name": "level",
              "Type": "LoggingLevel"
            },
            {
              "Name": "options",
              "Type": "LoggingOptions"
            }
          ],
          "Name": "LogEvent"
        },
        {
          "ReturnType": "LoggingActivity",
          "Parameters": [
            {
              "Name": "startEventName",
              "Type": "String"
            }
          ],
          "Name": "StartActivity"
        },
        {
          "ReturnType": "LoggingActivity",
          "Parameters": [
            {
              "Name": "startEventName",
              "Type": "String"
            },
            {
              "Name": "fields",
              "Type": "LoggingFields"
            }
          ],
          "Name": "StartActivity"
        },
        {
          "ReturnType": "LoggingActivity",
          "Parameters": [
            {
              "Name": "startEventName",
              "Type": "String"
            },
            {
              "Name": "fields",
              "Type": "LoggingFields"
            },
            {
              "Name": "level",
              "Type": "LoggingLevel"
            }
          ],
          "Name": "StartActivity"
        },
        {
          "ReturnType": "LoggingActivity",
          "Parameters": [
            {
              "Name": "startEventName",
              "Type": "String"
            },
            {
              "Name": "fields",
              "Type": "LoggingFields"
            },
            {
              "Name": "level",
              "Type": "LoggingLevel"
            },
            {
              "Name": "options",
              "Type": "LoggingOptions"
            }
          ],
          "Name": "StartActivity"
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.Diagnostics.ILoggingTarget"
    },
    {
      "Interfaces": [
        "IAsyncInfo"
      ],
      "Properties": [
        {
          "Type": "AsyncActionCompletedHandler",
          "IsGet": true,
          "IsSet": true,
          "Name": "Completed"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "GetResults"
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.IAsyncAction"
    },
    {
      "Interfaces": [
        "IAsyncInfo"
      ],
      "Properties": [
        {
          "Type": "AsyncActionWithProgressCompletedHandler<TProgress>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Completed"
        },
        {
          "Type": "AsyncActionProgressHandler<TProgress>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Progress"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "GetResults"
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.IAsyncActionWithProgress<TProgress>"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Exception",
          "IsGet": true,
          "Name": "ErrorCode"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "AsyncStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Cancel"
        },
        {
          "ReturnType": "Void",
          "Name": "Close"
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.IAsyncInfo"
    },
    {
      "Interfaces": [
        "IAsyncInfo"
      ],
      "Properties": [
        {
          "Type": "AsyncOperationCompletedHandler<TResult>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Completed"
        }
      ],
      "Methods": [
        {
          "ReturnType": "TResult",
          "Name": "GetResults"
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.IAsyncOperation<TResult>"
    },
    {
      "Interfaces": [
        "IAsyncInfo"
      ],
      "Properties": [
        {
          "Type": "AsyncOperationWithProgressCompletedHandler<TResult,TProgress>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Completed"
        },
        {
          "Type": "AsyncOperationProgressHandler<TResult,TProgress>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Progress"
        }
      ],
      "Methods": [
        {
          "ReturnType": "TResult",
          "Name": "GetResults"
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.IAsyncOperationWithProgress<TResult,TProgress>"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "activatableClassId",
              "Type": "String"
            }
          ],
          "Name": "GetActivationFactory"
        }
      ],
      "Events": [],
      "Name": "Windows.Foundation.IGetActivationFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.IStringable"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Foundation.IWwwFormUrlDecoderEntry"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ],
          "Name": "Format"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ],
          "Name": "Format"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ],
          "Name": "Format"
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.INumberFormatter"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ],
          "Name": "FormatDouble"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ],
          "Name": "FormatInt"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ],
          "Name": "FormatUInt"
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.INumberFormatter2"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "FractionDigits"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "GeographicRegion"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "IntegerDigits"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsDecimalPointAlwaysDisplayed"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsGrouped"
        },
        {
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "Name": "Languages"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NumeralSystem"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ResolvedGeographicRegion"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ResolvedLanguage"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.INumberFormatterOptions"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Nullable<Double>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ],
          "Name": "ParseDouble"
        },
        {
          "ReturnType": "Nullable<Int64>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ],
          "Name": "ParseInt"
        },
        {
          "ReturnType": "Nullable<UInt64>",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            }
          ],
          "Name": "ParseUInt"
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.INumberParser"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Double",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ],
          "Name": "RoundDouble"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int32"
            }
          ],
          "Name": "RoundInt32"
        },
        {
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ],
          "Name": "RoundInt64"
        },
        {
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Single"
            }
          ],
          "Name": "RoundSingle"
        },
        {
          "ReturnType": "UInt32",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt32"
            }
          ],
          "Name": "RoundUInt32"
        },
        {
          "ReturnType": "UInt64",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ],
          "Name": "RoundUInt64"
        }
      ],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.INumberRounder"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "INumberRounder",
          "IsGet": true,
          "IsSet": true,
          "Name": "NumberRounder"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.INumberRounderOption"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsZeroSigned"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.ISignedZeroOption"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "SignificantDigits"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Globalization.NumberFormatting.ISignificantDigitsOption"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Trim"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.DirectX.Direct3D11.IDirect3DDevice"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [
        {
          "Type": "Direct3DSurfaceDescription",
          "IsGet": true,
          "Name": "Description"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "BitmapAlphaMode",
          "IsGet": true,
          "Name": "BitmapAlphaMode"
        },
        {
          "Type": "BitmapPixelFormat",
          "IsGet": true,
          "Name": "BitmapPixelFormat"
        },
        {
          "Type": "BitmapPropertiesView",
          "IsGet": true,
          "Name": "BitmapProperties"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "DpiX"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "DpiY"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "OrientedPixelHeight"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "OrientedPixelWidth"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "PixelHeight"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "PixelWidth"
        }
      ],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<PixelDataProvider>",
          "Name": "GetPixelDataAsync"
        },
        {
          "ReturnType": "IAsyncOperation<PixelDataProvider>",
          "Parameters": [
            {
              "Name": "pixelFormat",
              "Type": "BitmapPixelFormat"
            },
            {
              "Name": "alphaMode",
              "Type": "BitmapAlphaMode"
            },
            {
              "Name": "transform",
              "Type": "BitmapTransform"
            },
            {
              "Name": "exifOrientationMode",
              "Type": "ExifOrientationMode"
            },
            {
              "Name": "colorManagementMode",
              "Type": "ColorManagementMode"
            }
          ],
          "Name": "GetPixelDataAsync"
        },
        {
          "ReturnType": "IAsyncOperation<ImageStream>",
          "Name": "GetThumbnailAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.IBitmapFrame"
    },
    {
      "Interfaces": [
        "IBitmapFrame"
      ],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<SoftwareBitmap>",
          "Name": "GetSoftwareBitmapAsync"
        },
        {
          "ReturnType": "IAsyncOperation<SoftwareBitmap>",
          "Parameters": [
            {
              "Name": "pixelFormat",
              "Type": "BitmapPixelFormat"
            },
            {
              "Name": "alphaMode",
              "Type": "BitmapAlphaMode"
            }
          ],
          "Name": "GetSoftwareBitmapAsync"
        },
        {
          "ReturnType": "IAsyncOperation<SoftwareBitmap>",
          "Parameters": [
            {
              "Name": "pixelFormat",
              "Type": "BitmapPixelFormat"
            },
            {
              "Name": "alphaMode",
              "Type": "BitmapAlphaMode"
            },
            {
              "Name": "transform",
              "Type": "BitmapTransform"
            },
            {
              "Name": "exifOrientationMode",
              "Type": "ExifOrientationMode"
            },
            {
              "Name": "colorManagementMode",
              "Type": "ColorManagementMode"
            }
          ],
          "Name": "GetSoftwareBitmapAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.IBitmapFrameWithSoftwareBitmap"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<BitmapPropertySet>",
          "Parameters": [
            {
              "Name": "propertiesToRetrieve",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "GetPropertiesAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Imaging.IBitmapPropertiesView"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.Printing.IPrintDocumentSource"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "PrintPageDescription",
          "Parameters": [
            {
              "Name": "jobPageNumber",
              "Type": "UInt32"
            }
          ],
          "Name": "GetPageDescription"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Printing.IPrintTaskOptionsCore"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "PrintBinding",
          "IsGet": true,
          "IsSet": true,
          "Name": "Binding"
        },
        {
          "Type": "PrintCollation",
          "IsGet": true,
          "IsSet": true,
          "Name": "Collation"
        },
        {
          "Type": "PrintColorMode",
          "IsGet": true,
          "IsSet": true,
          "Name": "ColorMode"
        },
        {
          "Type": "PrintDuplex",
          "IsGet": true,
          "IsSet": true,
          "Name": "Duplex"
        },
        {
          "Type": "PrintHolePunch",
          "IsGet": true,
          "IsSet": true,
          "Name": "HolePunch"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MaxCopies"
        },
        {
          "Type": "PrintMediaSize",
          "IsGet": true,
          "IsSet": true,
          "Name": "MediaSize"
        },
        {
          "Type": "PrintMediaType",
          "IsGet": true,
          "IsSet": true,
          "Name": "MediaType"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MinCopies"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "NumberOfCopies"
        },
        {
          "Type": "PrintOrientation",
          "IsGet": true,
          "IsSet": true,
          "Name": "Orientation"
        },
        {
          "Type": "PrintQuality",
          "IsGet": true,
          "IsSet": true,
          "Name": "PrintQuality"
        },
        {
          "Type": "PrintStaple",
          "IsGet": true,
          "IsSet": true,
          "Name": "Staple"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.Printing.IPrintTaskOptionsCoreProperties"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "DisplayedOptions"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.Printing.IPrintTaskOptionsCoreUIConfiguration"
    },
    {
      "Interfaces": [
        "IPrintOptionDetails"
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.Printing.OptionDetails.IPrintCustomOptionDetails"
    },
    {
      "Interfaces": [
        "IPrintOptionDetails"
      ],
      "Properties": [
        {
          "Type": "IReadOnlyList<Object>",
          "IsGet": true,
          "Name": "Items"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.Printing.OptionDetails.IPrintItemListOptionDetails"
    },
    {
      "Interfaces": [
        "IPrintOptionDetails"
      ],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MaxValue"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MinValue"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.Printing.OptionDetails.IPrintNumberOptionDetails"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ErrorText"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "OptionId"
        },
        {
          "Type": "PrintOptionType",
          "IsGet": true,
          "Name": "OptionType"
        },
        {
          "Type": "PrintOptionStates",
          "IsGet": true,
          "IsSet": true,
          "Name": "State"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "TrySetValue"
        }
      ],
      "Events": [],
      "Name": "Windows.Graphics.Printing.OptionDetails.IPrintOptionDetails"
    },
    {
      "Interfaces": [
        "IPrintOptionDetails"
      ],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MaxCharacters"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Graphics.Printing.OptionDetails.IPrintTextOptionDetails"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [
        {
          "Type": "CastingDevice",
          "IsGet": true,
          "Name": "Device"
        },
        {
          "Type": "CastingSource",
          "IsGet": true,
          "IsSet": true,
          "Name": "Source"
        },
        {
          "Type": "CastingConnectionState",
          "IsGet": true,
          "Name": "State"
        }
      ],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<CastingConnectionErrorStatus>",
          "Name": "DisconnectAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<CastingConnection,CastingConnectionErrorOccurredEventArgs>",
          "Name": "ErrorOccurred"
        },
        {
          "Type": "TypedEventHandler<CastingConnection,Object>",
          "Name": "StateChanged"
        }
      ],
      "Name": "Windows.Media.Casting.ICastingConnection"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.IMediaSource"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsSelected"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Language"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Name"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Core.IMediaStreamDescriptor"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "AudioDeviceRole",
          "IsGet": true,
          "Name": "Role"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Devices.IDefaultAudioDeviceChangedEventArgs"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "IReadOnlyList<IMediaEncodingProperties>",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            }
          ],
          "Name": "GetAvailableMediaStreamProperties"
        },
        {
          "ReturnType": "IMediaEncodingProperties",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            }
          ],
          "Name": "GetMediaStreamProperties"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "mediaStreamType",
              "Type": "MediaStreamType"
            },
            {
              "Name": "mediaEncodingProperties",
              "Type": "IMediaEncodingProperties"
            }
          ],
          "Name": "SetMediaStreamPropertiesAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Devices.IMediaDeviceController"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ActivatableClassId"
        },
        {
          "Type": "IPropertySet",
          "IsGet": true,
          "Name": "Properties"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Effects.IAudioEffectDefinition"
    },
    {
      "Interfaces": [
        "IMediaExtension"
      ],
      "Properties": [
        {
          "Type": "IReadOnlyList<AudioEncodingProperties>",
          "IsGet": true,
          "Name": "SupportedEncodingProperties"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "UseInputFrameForOutput"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "reason",
              "Type": "MediaEffectClosedReason"
            }
          ],
          "Name": "Close"
        },
        {
          "ReturnType": "Void",
          "Name": "DiscardQueuedFrames"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "context",
              "Type": "ProcessAudioFrameContext"
            }
          ],
          "Name": "ProcessFrame"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "encodingProperties",
              "Type": "AudioEncodingProperties"
            }
          ],
          "Name": "SetEncodingProperties"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Effects.IBasicAudioEffect"
    },
    {
      "Interfaces": [
        "IMediaExtension"
      ],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsReadOnly"
        },
        {
          "Type": "IReadOnlyList<VideoEncodingProperties>",
          "IsGet": true,
          "Name": "SupportedEncodingProperties"
        },
        {
          "Type": "MediaMemoryTypes",
          "IsGet": true,
          "Name": "SupportedMemoryTypes"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "TimeIndependent"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "reason",
              "Type": "MediaEffectClosedReason"
            }
          ],
          "Name": "Close"
        },
        {
          "ReturnType": "Void",
          "Name": "DiscardQueuedFrames"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "context",
              "Type": "ProcessVideoFrameContext"
            }
          ],
          "Name": "ProcessFrame"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "encodingProperties",
              "Type": "VideoEncodingProperties"
            },
            {
              "Name": "device",
              "Type": "IDirect3DDevice"
            }
          ],
          "Name": "SetEncodingProperties"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Effects.IBasicVideoEffect"
    },
    {
      "Interfaces": [
        "IMediaExtension"
      ],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "TimeIndependent"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "reason",
              "Type": "MediaEffectClosedReason"
            }
          ],
          "Name": "Close"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "context",
              "Type": "CompositeVideoFrameContext"
            }
          ],
          "Name": "CompositeFrame"
        },
        {
          "ReturnType": "Void",
          "Name": "DiscardQueuedFrames"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "backgroundProperties",
              "Type": "VideoEncodingProperties"
            },
            {
              "Name": "device",
              "Type": "IDirect3DDevice"
            }
          ],
          "Name": "SetEncodingProperties"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.Effects.IVideoCompositor"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ActivatableClassId"
        },
        {
          "Type": "IPropertySet",
          "IsGet": true,
          "Name": "Properties"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Effects.IVideoCompositorDefinition"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ActivatableClassId"
        },
        {
          "Type": "IPropertySet",
          "IsGet": true,
          "Name": "Properties"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Effects.IVideoEffectDefinition"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "configuration",
              "Type": "IPropertySet"
            }
          ],
          "Name": "SetProperties"
        }
      ],
      "Events": [],
      "Name": "Windows.Media.IMediaExtension"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "Duration"
        },
        {
          "Type": "IPropertySet",
          "IsGet": true,
          "Name": "ExtendedProperties"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsDiscontinuous"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsReadOnly"
        },
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "RelativeTime"
        },
        {
          "Type": "Nullable<TimeSpan>",
          "IsGet": true,
          "IsSet": true,
          "Name": "SystemRelativeTime"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.IMediaFrame"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "MediaMarkerType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Text"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "Time"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.IMediaMarker"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<IMediaMarker>",
          "IsGet": true,
          "Name": "Markers"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.IMediaMarkers"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "MediaPropertySet",
          "IsGet": true,
          "Name": "Properties"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Subtype"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.MediaProperties.IMediaEncodingProperties"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "ProtectionSystem"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.Protection.IMediaProtectionServiceRequest"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsEnabled"
        },
        {
          "Type": "SpeechRecognitionConstraintProbability",
          "IsGet": true,
          "IsSet": true,
          "Name": "Probability"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Tag"
        },
        {
          "Type": "SpeechRecognitionConstraintType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Media.SpeechRecognition.ISpeechRecognitionConstraint"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "BackgroundTransferCostPolicy",
          "IsGet": true,
          "IsSet": true,
          "Name": "CostPolicy"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Group"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Method"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProxyCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServerCredential"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ],
          "Name": "SetRequestHeader"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.IBackgroundTransferBase"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "BackgroundTransferContentPart",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "CreateWithName"
        },
        {
          "ReturnType": "BackgroundTransferContentPart",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "fileName",
              "Type": "String"
            }
          ],
          "Name": "CreateWithNameAndFileName"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.IBackgroundTransferContentPartFactory"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "BackgroundTransferCostPolicy",
          "IsGet": true,
          "IsSet": true,
          "Name": "CostPolicy"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Group"
        },
        {
          "Type": "Guid",
          "IsGet": true,
          "Name": "Guid"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Method"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "Name": "RequestedUri"
        }
      ],
      "Methods": [
        {
          "ReturnType": "ResponseInformation",
          "Name": "GetResponseInformation"
        },
        {
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "GetResultStreamAt"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.IBackgroundTransferOperation"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "BackgroundTransferPriority",
          "IsGet": true,
          "IsSet": true,
          "Name": "Priority"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.IBackgroundTransferOperationPriority"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "ControlChannelTrigger",
          "IsGet": true,
          "Name": "ControlChannelTrigger"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.IControlChannelTriggerEventDetails"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HardwareSlotReset"
        },
        {
          "Type": "ControlChannelTriggerResetReason",
          "IsGet": true,
          "Name": "ResetReason"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "SoftwareSlotReset"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.IControlChannelTriggerResetEventDetails"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [
        {
          "Type": "IOutputStream",
          "IsGet": true,
          "Name": "OutputStream"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "code",
              "Type": "UInt16"
            },
            {
              "Name": "reason",
              "Type": "String"
            }
          ],
          "Name": "Close"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "ConnectAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ],
          "Name": "SetRequestHeader"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<IWebSocket,WebSocketClosedEventArgs>",
          "Name": "Closed"
        }
      ],
      "Name": "Windows.Networking.Sockets.IWebSocket"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "OutboundBufferSizeInBytes"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProxyCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServerCredential"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "SupportedProtocols"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.IWebSocketControl"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "BandwidthStatistics",
          "IsGet": true,
          "Name": "BandwidthStatistics"
        },
        {
          "Type": "HostName",
          "IsGet": true,
          "Name": "LocalAddress"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Protocol"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.IWebSocketInformation"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AdditionalPin"
        },
        {
          "Type": "Certificate",
          "IsGet": true,
          "Name": "CertificateCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "Name": "OldPasswordCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "Name": "PasskeyCredential"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnCredential"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Bordered"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Compulsory"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Label"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnCustomPrompt"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Compulsory"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Emphasized"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnCustomPromptElement"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "VpnDomainNameInfo",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "nameType",
              "Type": "VpnDomainNameType"
            },
            {
              "Name": "dnsServerList",
              "Type": "IEnumerable<HostName>"
            },
            {
              "Name": "proxyServerList",
              "Type": "IEnumerable<HostName>"
            }
          ],
          "Name": "CreateVpnDomainNameInfo"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnDomainNameInfoFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "thirdPartyPlugIn",
              "Type": "Object"
            },
            {
              "Name": "event",
              "Type": "Object"
            }
          ],
          "Name": "ProcessEventAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnChannelStatics"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "VpnInterfaceId",
          "Parameters": [
            {
              "Name": "address",
              "Type": "Byte[]"
            }
          ],
          "Name": "CreateVpnInterfaceId"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnInterfaceIdFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "VpnNamespaceInfo",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "dnsServerList",
              "Type": "IList<HostName>"
            },
            {
              "Name": "proxyServerList",
              "Type": "IList<HostName>"
            }
          ],
          "Name": "CreateVpnNamespaceInfo"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnNamespaceInfoFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "VpnPacketBuffer",
          "Parameters": [
            {
              "Name": "parentBuffer",
              "Type": "VpnPacketBuffer"
            },
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "length",
              "Type": "UInt32"
            }
          ],
          "Name": "CreateVpnPacketBuffer"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnPacketBufferFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "channel",
              "Type": "VpnChannel"
            }
          ],
          "Name": "Connect"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "channel",
              "Type": "VpnChannel"
            },
            {
              "Name": "encapBuffer",
              "Type": "VpnPacketBuffer"
            },
            {
              "Name": "decapsulatedPackets",
              "Type": "VpnPacketBufferList"
            },
            {
              "Name": "controlPacketsToSend",
              "Type": "VpnPacketBufferList"
            }
          ],
          "Name": "Decapsulate"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "channel",
              "Type": "VpnChannel"
            }
          ],
          "Name": "Disconnect"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "channel",
              "Type": "VpnChannel"
            },
            {
              "Name": "packets",
              "Type": "VpnPacketBufferList"
            },
            {
              "Name": "encapulatedPackets",
              "Type": "VpnPacketBufferList"
            }
          ],
          "Name": "Encapsulate"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "channel",
              "Type": "VpnChannel"
            },
            {
              "Name": "keepAlivePacket",
              "Type": "VpnPacketBuffer&",
              "Out": true
            }
          ],
          "Name": "GetKeepAlivePayload"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnPlugIn"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "AlwaysOn"
        },
        {
          "Type": "IList<VpnAppId>",
          "IsGet": true,
          "Name": "AppTriggers"
        },
        {
          "Type": "IList<VpnDomainNameInfo>",
          "IsGet": true,
          "Name": "DomainNameInfoList"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProfileName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "RememberCredentials"
        },
        {
          "Type": "IList<VpnRoute>",
          "IsGet": true,
          "Name": "Routes"
        },
        {
          "Type": "IList<VpnTrafficFilter>",
          "IsGet": true,
          "Name": "TrafficFilters"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnProfile"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "VpnRoute",
          "Parameters": [
            {
              "Name": "address",
              "Type": "HostName"
            },
            {
              "Name": "prefixSize",
              "Type": "Byte"
            }
          ],
          "Name": "CreateVpnRoute"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnRouteFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Graphics.Interop.IDrawingSurfaceBackgroundContentProvider"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Graphics.Interop.IDrawingSurfaceContentProvider"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "manipulationHost",
              "Type": "DrawingSurfaceManipulationHost"
            }
          ],
          "Name": "SetManipulationHost"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.Input.Interop.IDrawingSurfaceManipulationHandler"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [
        {
          "Type": "Size",
          "IsGet": true,
          "Name": "CaptureResolution"
        },
        {
          "Type": "Nullable<Rect>",
          "IsGet": true,
          "IsSet": true,
          "Name": "FocusRegion"
        },
        {
          "Type": "Size",
          "IsGet": true,
          "Name": "PreviewResolution"
        },
        {
          "Type": "CameraSensorLocation",
          "IsGet": true,
          "Name": "SensorLocation"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "SensorRotationInDegrees"
        }
      ],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<CameraFocusStatus>",
          "Name": "FocusAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pixels",
              "Type": "Int32[]",
              "Out": true
            }
          ],
          "Name": "GetPreviewBufferArgb"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pixels",
              "Type": "Byte[]",
              "Out": true
            }
          ],
          "Name": "GetPreviewBufferY"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "pixels",
              "Type": "Byte[]",
              "Out": true
            }
          ],
          "Name": "GetPreviewBufferYCbCr"
        },
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "propertyId",
              "Type": "Guid"
            }
          ],
          "Name": "GetProperty"
        },
        {
          "ReturnType": "IAsyncOperation<CameraFocusStatus>",
          "Name": "ResetFocusAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Size"
            }
          ],
          "Name": "SetCaptureResolutionAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Size"
            }
          ],
          "Name": "SetPreviewResolutionAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "propertyId",
              "Type": "Guid"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "SetProperty"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<ICameraCaptureDevice,Object>",
          "Name": "PreviewFrameAvailable"
        },
        {
          "Type": "TypedEventHandler<ICameraCaptureDevice,VendorSpecificDataEventArgs>",
          "Name": "VendorSpecificDataAvailable"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.ICameraCaptureDevice"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ConnectionPort"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Media.Capture.IMediaCapturePreviewSink"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "VoipOperationType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Networking.Voip.IVoipOperation"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "AccessoryNotificationType",
          "IsGet": true,
          "Name": "AccessoryNotificationType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AppDisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AppId"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "StartedProcessing"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "TimeCreated"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.Notification.Management.IAccessoryNotificationTriggerDetails"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "IRandomAccessStreamReference",
          "IsGet": true,
          "Name": "DisplayPicture"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "FamilyName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "GivenName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "HonorificPrefix"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "HonorificSuffix"
        }
      ],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Name": "GetDisplayPictureAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IDictionary<String,Object>>",
          "Name": "GetPropertiesAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "stream",
              "Type": "IInputStream"
            }
          ],
          "Name": "SetDisplayPictureAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Name": "ToVcardAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Parameters": [
            {
              "Name": "format",
              "Type": "VCardFormat"
            }
          ],
          "Name": "ToVcardAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.IContactInformation"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "DisplayPictureDate"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.PersonalInformation.IContactInformation2"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Actor",
          "IsGet": true,
          "Name": "Author"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "DefaultTarget"
        },
        {
          "Type": "FeedContent",
          "IsGet": true,
          "Name": "PrimaryContent"
        },
        {
          "Type": "FeedContent",
          "IsGet": true,
          "Name": "SecondaryContent"
        },
        {
          "Type": "FeedItemSharedStory",
          "IsGet": true,
          "IsSet": true,
          "Name": "SharedStory"
        },
        {
          "Type": "IList<FeedMediaThumbnail>",
          "IsGet": true,
          "Name": "Thumbnails"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "Timestamp"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.IFeedItemBase"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "SocialOperationType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "success",
              "Type": "Boolean"
            }
          ],
          "Name": "NotifyCompletion"
        },
        {
          "ReturnType": "Void",
          "Name": "NotifyCompletion"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.ISocialOperation"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "SocialOperationType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<ISocialOperation>",
          "Name": "GetOperationAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.ISocialOperationFactory"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "CreationTime"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RemoteId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Title"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.SocialInformation.OnlineMedia.IOnlineMediaItem"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsKeyboardInputEnabled"
        },
        {
          "Type": "KeyboardInputBuffer",
          "IsGet": true,
          "IsSet": true,
          "Name": "KeyboardInputBuffer"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Phone.UI.Core.ICoreWindowKeyboardInput"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "ReportCompleted"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "WebProviderError"
            }
          ],
          "Name": "ReportError"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.Provider.IWebAccountProviderBaseReportOperation"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "WebAccountProviderOperationKind",
          "IsGet": true,
          "Name": "Kind"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.Provider.IWebAccountProviderOperation"
    },
    {
      "Interfaces": [
        "IWebAccountProviderBaseReportOperation"
      ],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "ReportUserInteractionRequired"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.Provider.IWebAccountProviderSilentReportOperation"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "IWebAccountProviderOperation",
          "IsGet": true,
          "Name": "Operation"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.Provider.IWebAccountProviderTokenObjects"
    },
    {
      "Interfaces": [
        "IWebAccountProviderOperation"
      ],
      "Properties": [
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "IsSet": true,
          "Name": "CacheExpirationTime"
        },
        {
          "Type": "WebProviderTokenRequest",
          "IsGet": true,
          "Name": "ProviderRequest"
        },
        {
          "Type": "IList<WebProviderTokenResponse>",
          "IsGet": true,
          "Name": "ProviderResponses"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.Provider.IWebAccountProviderTokenOperation"
    },
    {
      "Interfaces": [
        "IWebAccountProviderBaseReportOperation"
      ],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "ReportUserCanceled"
        }
      ],
      "Events": [],
      "Name": "Windows.Security.Authentication.Web.Provider.IWebAccountProviderUIReportOperation"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "WebAccountState",
          "IsGet": true,
          "Name": "State"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "UserName"
        },
        {
          "Type": "WebAccountProvider",
          "IsGet": true,
          "Name": "WebAccountProvider"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Security.Credentials.IWebAccount"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "AccessListEntryView",
          "IsGet": true,
          "Name": "Entries"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "MaximumItemsAllowed"
        }
      ],
      "Methods": [
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageItem"
            }
          ],
          "Name": "Add"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageItem"
            },
            {
              "Name": "metadata",
              "Type": "String"
            }
          ],
          "Name": "Add"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "file",
              "Type": "IStorageItem"
            }
          ],
          "Name": "AddOrReplace"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "file",
              "Type": "IStorageItem"
            },
            {
              "Name": "metadata",
              "Type": "String"
            }
          ],
          "Name": "AddOrReplace"
        },
        {
          "ReturnType": "Void",
          "Name": "Clear"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ],
          "Name": "ContainsItem"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ],
          "Name": "GetFileAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "AccessCacheOptions"
            }
          ],
          "Name": "GetFileAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ],
          "Name": "GetFolderAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "AccessCacheOptions"
            }
          ],
          "Name": "GetFolderAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IStorageItem>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ],
          "Name": "GetItemAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IStorageItem>",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "AccessCacheOptions"
            }
          ],
          "Name": "GetItemAsync"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "file",
              "Type": "IStorageItem"
            }
          ],
          "Name": "CheckAccess"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "token",
              "Type": "String"
            }
          ],
          "Name": "Remove"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.AccessCache.IStorageItemAccessList"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IDictionary<String,Object>>",
          "Parameters": [
            {
              "Name": "propertiesToRetrieve",
              "Type": "IEnumerable<String>"
            }
          ],
          "Name": "RetrievePropertiesAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "propertiesToSave",
              "Type": "IEnumerable<KeyValuePair<String,Object>>"
            }
          ],
          "Name": "SavePropertiesAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Name": "SavePropertiesAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.FileProperties.IStorageItemExtraProperties"
    },
    {
      "Interfaces": [
        "IInputStreamReference",
        "IRandomAccessStreamReference",
        "IStorageItem"
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ContentType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "FileType"
        }
      ],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "fileToReplace",
              "Type": "IStorageFile"
            }
          ],
          "Name": "CopyAndReplaceAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "IStorageFolder"
            }
          ],
          "Name": "CopyAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "IStorageFolder"
            },
            {
              "Name": "desiredNewName",
              "Type": "String"
            }
          ],
          "Name": "CopyAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "IStorageFolder"
            },
            {
              "Name": "desiredNewName",
              "Type": "String"
            },
            {
              "Name": "option",
              "Type": "NameCollisionOption"
            }
          ],
          "Name": "CopyAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "fileToReplace",
              "Type": "IStorageFile"
            }
          ],
          "Name": "MoveAndReplaceAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "IStorageFolder"
            }
          ],
          "Name": "MoveAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "IStorageFolder"
            },
            {
              "Name": "desiredNewName",
              "Type": "String"
            }
          ],
          "Name": "MoveAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "destinationFolder",
              "Type": "IStorageFolder"
            },
            {
              "Name": "desiredNewName",
              "Type": "String"
            },
            {
              "Name": "option",
              "Type": "NameCollisionOption"
            }
          ],
          "Name": "MoveAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Parameters": [
            {
              "Name": "accessMode",
              "Type": "FileAccessMode"
            }
          ],
          "Name": "OpenAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageStreamTransaction>",
          "Name": "OpenTransactedWriteAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.IStorageFile"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStream>",
          "Parameters": [
            {
              "Name": "accessMode",
              "Type": "FileAccessMode"
            },
            {
              "Name": "options",
              "Type": "StorageOpenOptions"
            }
          ],
          "Name": "OpenAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageStreamTransaction>",
          "Parameters": [
            {
              "Name": "options",
              "Type": "StorageOpenOptions"
            }
          ],
          "Name": "OpenTransactedWriteAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.IStorageFile2"
    },
    {
      "Interfaces": [
        "IStorageItem"
      ],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            }
          ],
          "Name": "CreateFileAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "CreationCollisionOption"
            }
          ],
          "Name": "CreateFileAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            }
          ],
          "Name": "CreateFolderAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            },
            {
              "Name": "options",
              "Type": "CreationCollisionOption"
            }
          ],
          "Name": "CreateFolderAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFile>",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "GetFileAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFile>>",
          "Name": "GetFilesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "GetFolderAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFolder>>",
          "Name": "GetFoldersAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IStorageItem>",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "GetItemAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<IStorageItem>>",
          "Name": "GetItemsAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.IStorageFolder"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IStorageItem>",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "TryGetItemAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.IStorageFolder2"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "FileAttributes",
          "IsGet": true,
          "Name": "Attributes"
        },
        {
          "Type": "DateTimeOffset",
          "IsGet": true,
          "Name": "DateCreated"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Path"
        }
      ],
      "Methods": [
        {
          "ReturnType": "IAsyncAction",
          "Name": "DeleteAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "option",
              "Type": "StorageDeleteOption"
            }
          ],
          "Name": "DeleteAsync"
        },
        {
          "ReturnType": "IAsyncOperation<BasicProperties>",
          "Name": "GetBasicPropertiesAsync"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "type",
              "Type": "StorageItemTypes"
            }
          ],
          "Name": "IsOfType"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            }
          ],
          "Name": "RenameAsync"
        },
        {
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "desiredName",
              "Type": "String"
            },
            {
              "Name": "option",
              "Type": "NameCollisionOption"
            }
          ],
          "Name": "RenameAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.IStorageItem"
    },
    {
      "Interfaces": [
        "IStorageItem"
      ],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<StorageFolder>",
          "Name": "GetParentAsync"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "item",
              "Type": "IStorageItem"
            }
          ],
          "Name": "IsEqual"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.IStorageItem2"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "FolderRelativeId"
        },
        {
          "Type": "StorageItemContentProperties",
          "IsGet": true,
          "Name": "Properties"
        }
      ],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            }
          ],
          "Name": "GetThumbnailAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            }
          ],
          "Name": "GetThumbnailAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "ThumbnailOptions"
            }
          ],
          "Name": "GetThumbnailAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.IStorageItemProperties"
    },
    {
      "Interfaces": [
        "IStorageItemProperties"
      ],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            }
          ],
          "Name": "GetScaledImageAsThumbnailAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            }
          ],
          "Name": "GetScaledImageAsThumbnailAsync"
        },
        {
          "ReturnType": "IAsyncOperation<StorageItemThumbnail>",
          "Parameters": [
            {
              "Name": "mode",
              "Type": "ThumbnailMode"
            },
            {
              "Name": "requestedSize",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "ThumbnailOptions"
            }
          ],
          "Name": "GetScaledImageAsThumbnailAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.IStorageItemProperties2"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "failureMode",
              "Type": "StreamedFileFailureMode"
            }
          ],
          "Name": "FailAndClose"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.IStreamedFileDataRequest"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "queryOptions",
              "Type": "QueryOptions"
            }
          ],
          "Name": "AreQueryOptionsSupported"
        },
        {
          "ReturnType": "StorageFileQueryResult",
          "Name": "CreateFileQuery"
        },
        {
          "ReturnType": "StorageFileQueryResult",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFileQuery"
            }
          ],
          "Name": "CreateFileQuery"
        },
        {
          "ReturnType": "StorageFileQueryResult",
          "Parameters": [
            {
              "Name": "queryOptions",
              "Type": "QueryOptions"
            }
          ],
          "Name": "CreateFileQueryWithOptions"
        },
        {
          "ReturnType": "StorageFolderQueryResult",
          "Name": "CreateFolderQuery"
        },
        {
          "ReturnType": "StorageFolderQueryResult",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFolderQuery"
            }
          ],
          "Name": "CreateFolderQuery"
        },
        {
          "ReturnType": "StorageFolderQueryResult",
          "Parameters": [
            {
              "Name": "queryOptions",
              "Type": "QueryOptions"
            }
          ],
          "Name": "CreateFolderQueryWithOptions"
        },
        {
          "ReturnType": "StorageItemQueryResult",
          "Name": "CreateItemQuery"
        },
        {
          "ReturnType": "StorageItemQueryResult",
          "Parameters": [
            {
              "Name": "queryOptions",
              "Type": "QueryOptions"
            }
          ],
          "Name": "CreateItemQueryWithOptions"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFile>>",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFileQuery"
            },
            {
              "Name": "startIndex",
              "Type": "UInt32"
            },
            {
              "Name": "maxItemsToRetrieve",
              "Type": "UInt32"
            }
          ],
          "Name": "GetFilesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFile>>",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFileQuery"
            }
          ],
          "Name": "GetFilesAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFolder>>",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFolderQuery"
            },
            {
              "Name": "startIndex",
              "Type": "UInt32"
            },
            {
              "Name": "maxItemsToRetrieve",
              "Type": "UInt32"
            }
          ],
          "Name": "GetFoldersAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorageFolder>>",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFolderQuery"
            }
          ],
          "Name": "GetFoldersAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IndexedState>",
          "Name": "GetIndexedStateAsync"
        },
        {
          "ReturnType": "IAsyncOperation<IReadOnlyList<IStorageItem>>",
          "Parameters": [
            {
              "Name": "startIndex",
              "Type": "UInt32"
            },
            {
              "Name": "maxItemsToRetrieve",
              "Type": "UInt32"
            }
          ],
          "Name": "GetItemsAsync"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFileQuery"
            }
          ],
          "Name": "IsCommonFileQuerySupported"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "query",
              "Type": "CommonFolderQuery"
            }
          ],
          "Name": "IsCommonFolderQuerySupported"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Search.IStorageFolderQueryOperations"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "StorageFolder",
          "IsGet": true,
          "Name": "Folder"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "newQueryOptions",
              "Type": "QueryOptions"
            }
          ],
          "Name": "ApplyNewQueryOptions"
        },
        {
          "ReturnType": "IAsyncOperation<UInt32>",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "FindStartIndexAsync"
        },
        {
          "ReturnType": "QueryOptions",
          "Name": "GetCurrentQueryOptions"
        },
        {
          "ReturnType": "IAsyncOperation<UInt32>",
          "Name": "GetItemCountAsync"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<IStorageQueryResultBase,Object>",
          "Name": "ContentsChanged"
        },
        {
          "Type": "TypedEventHandler<IStorageQueryResultBase,Object>",
          "Name": "OptionsChanged"
        }
      ],
      "Name": "Windows.Storage.Search.IStorageQueryResultBase"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Capacity"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Length"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Streams.IBuffer"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Capacity"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Length"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Streams.IClosableBuffer"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ContentType"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Streams.IContentTypeProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "ByteOrder",
          "IsGet": true,
          "IsSet": true,
          "Name": "ByteOrder"
        },
        {
          "Type": "InputStreamOptions",
          "IsGet": true,
          "IsSet": true,
          "Name": "InputStreamOptions"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "UnconsumedBufferLength"
        },
        {
          "Type": "UnicodeEncoding",
          "IsGet": true,
          "IsSet": true,
          "Name": "UnicodeEncoding"
        }
      ],
      "Methods": [
        {
          "ReturnType": "IBuffer",
          "Name": "DetachBuffer"
        },
        {
          "ReturnType": "IInputStream",
          "Name": "DetachStream"
        },
        {
          "ReturnType": "DataReaderLoadOperation",
          "Parameters": [
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ],
          "Name": "LoadAsync"
        },
        {
          "ReturnType": "Boolean",
          "Name": "ReadBoolean"
        },
        {
          "ReturnType": "IBuffer",
          "Parameters": [
            {
              "Name": "length",
              "Type": "UInt32"
            }
          ],
          "Name": "ReadBuffer"
        },
        {
          "ReturnType": "Byte",
          "Name": "ReadByte"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]",
              "Out": true
            }
          ],
          "Name": "ReadBytes"
        },
        {
          "ReturnType": "DateTimeOffset",
          "Name": "ReadDateTime"
        },
        {
          "ReturnType": "Double",
          "Name": "ReadDouble"
        },
        {
          "ReturnType": "Guid",
          "Name": "ReadGuid"
        },
        {
          "ReturnType": "Int16",
          "Name": "ReadInt16"
        },
        {
          "ReturnType": "Int32",
          "Name": "ReadInt32"
        },
        {
          "ReturnType": "Int64",
          "Name": "ReadInt64"
        },
        {
          "ReturnType": "Single",
          "Name": "ReadSingle"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "codeUnitCount",
              "Type": "UInt32"
            }
          ],
          "Name": "ReadString"
        },
        {
          "ReturnType": "TimeSpan",
          "Name": "ReadTimeSpan"
        },
        {
          "ReturnType": "UInt16",
          "Name": "ReadUInt16"
        },
        {
          "ReturnType": "UInt32",
          "Name": "ReadUInt32"
        },
        {
          "ReturnType": "UInt64",
          "Name": "ReadUInt64"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.IDataReader"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "ByteOrder",
          "IsGet": true,
          "IsSet": true,
          "Name": "ByteOrder"
        },
        {
          "Type": "UnicodeEncoding",
          "IsGet": true,
          "IsSet": true,
          "Name": "UnicodeEncoding"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "UnstoredBufferLength"
        }
      ],
      "Methods": [
        {
          "ReturnType": "IBuffer",
          "Name": "DetachBuffer"
        },
        {
          "ReturnType": "IOutputStream",
          "Name": "DetachStream"
        },
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Name": "FlushAsync"
        },
        {
          "ReturnType": "UInt32",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "MeasureString"
        },
        {
          "ReturnType": "DataWriterStoreOperation",
          "Name": "StoreAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "WriteBoolean"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "WriteBuffer"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "start",
              "Type": "UInt32"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ],
          "Name": "WriteBuffer"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte"
            }
          ],
          "Name": "WriteByte"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]"
            }
          ],
          "Name": "WriteBytes"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "DateTimeOffset"
            }
          ],
          "Name": "WriteDateTime"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ],
          "Name": "WriteDouble"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Guid"
            }
          ],
          "Name": "WriteGuid"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int16"
            }
          ],
          "Name": "WriteInt16"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int32"
            }
          ],
          "Name": "WriteInt32"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Int64"
            }
          ],
          "Name": "WriteInt64"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Single"
            }
          ],
          "Name": "WriteSingle"
        },
        {
          "ReturnType": "UInt32",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "WriteString"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "TimeSpan"
            }
          ],
          "Name": "WriteTimeSpan"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt16"
            }
          ],
          "Name": "WriteUInt16"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt32"
            }
          ],
          "Name": "WriteUInt32"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt64"
            }
          ],
          "Name": "WriteUInt64"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.IDataWriter"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            },
            {
              "Name": "count",
              "Type": "UInt32"
            },
            {
              "Name": "options",
              "Type": "InputStreamOptions"
            }
          ],
          "Name": "ReadAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.IInputStream"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IInputStream>",
          "Name": "OpenSequentialReadAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.IInputStreamReference"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<Boolean>",
          "Name": "FlushAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt32,UInt32>",
          "Parameters": [
            {
              "Name": "buffer",
              "Type": "IBuffer"
            }
          ],
          "Name": "WriteAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.IOutputStream"
    },
    {
      "Interfaces": [
        "IDisposable",
        "IInputStream",
        "IOutputStream"
      ],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanRead"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanWrite"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "Name": "Position"
        },
        {
          "Type": "UInt64",
          "IsGet": true,
          "IsSet": true,
          "Name": "Size"
        }
      ],
      "Methods": [
        {
          "ReturnType": "IRandomAccessStream",
          "Name": "CloneStream"
        },
        {
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "GetInputStreamAt"
        },
        {
          "ReturnType": "IOutputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "GetOutputStreamAt"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ],
          "Name": "Seek"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.IRandomAccessStream"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IRandomAccessStreamWithContentType>",
          "Name": "OpenReadAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Storage.Streams.IRandomAccessStreamReference"
    },
    {
      "Interfaces": [
        "IContentTypeProvider",
        "IDisposable",
        "IInputStream",
        "IOutputStream",
        "IRandomAccessStream"
      ],
      "Properties": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Storage.Streams.IRandomAccessStreamWithContentType"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "ViewSizePreference",
          "IsGet": true,
          "IsSet": true,
          "Name": "DesiredRemainingView"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.System.ILauncherViewOptions"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ],
          "Name": "ReportCompletedPriv"
        }
      ],
      "Events": [],
      "Name": "Windows.System.IProtocolForResultsOperationPriv"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "IBuffer",
          "IsGet": true,
          "Name": "Buffer"
        },
        {
          "Type": "ValueSet",
          "IsGet": true,
          "Name": "ValueSet"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.System.IValueSetProvider"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [],
      "Events": [
        {
          "Type": "TypedEventHandler<CoreDispatcher,AcceleratorKeyEventArgs>",
          "Name": "AcceleratorKeyActivated"
        }
      ],
      "Name": "Windows.UI.Core.ICoreAcceleratorKeys"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "CoreDispatcher",
          "IsGet": true,
          "Name": "Dispatcher"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsInputEnabled"
        }
      ],
      "Methods": [],
      "Events": [
        {
          "Type": "TypedEventHandler<Object,InputEnabledEventArgs>",
          "Name": "InputEnabled"
        }
      ],
      "Name": "Windows.UI.Core.ICoreInputSourceBase"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasCapture"
        },
        {
          "Type": "CoreCursor",
          "IsGet": true,
          "IsSet": true,
          "Name": "PointerCursor"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "Name": "PointerPosition"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "ReleasePointerCapture"
        },
        {
          "ReturnType": "Void",
          "Name": "SetPointerCapture"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerCaptureLost"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerEntered"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerExited"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerMoved"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerPressed"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerReleased"
        },
        {
          "Type": "TypedEventHandler<Object,PointerEventArgs>",
          "Name": "PointerWheelChanged"
        }
      ],
      "Name": "Windows.UI.Core.ICorePointerInputSource"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [],
      "Events": [
        {
          "Type": "TypedEventHandler<ICorePointerRedirector,PointerEventArgs>",
          "Name": "PointerAcquired"
        },
        {
          "Type": "TypedEventHandler<ICorePointerRedirector,PointerEventArgs>",
          "Name": "PointerEnded"
        },
        {
          "Type": "TypedEventHandler<ICorePointerRedirector,PointerEventArgs>",
          "Name": "PointerSuspended"
        }
      ],
      "Name": "Windows.UI.Core.ICorePointerRedirector"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "AutomationHostProvider"
        },
        {
          "Type": "Rect",
          "IsGet": true,
          "Name": "Bounds"
        },
        {
          "Type": "IPropertySet",
          "IsGet": true,
          "Name": "CustomProperties"
        },
        {
          "Type": "CoreDispatcher",
          "IsGet": true,
          "Name": "Dispatcher"
        },
        {
          "Type": "CoreWindowFlowDirection",
          "IsGet": true,
          "IsSet": true,
          "Name": "FlowDirection"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsInputEnabled"
        },
        {
          "Type": "CoreCursor",
          "IsGet": true,
          "IsSet": true,
          "Name": "PointerCursor"
        },
        {
          "Type": "Point",
          "IsGet": true,
          "Name": "PointerPosition"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Visible"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Activate"
        },
        {
          "ReturnType": "Void",
          "Name": "Close"
        },
        {
          "ReturnType": "CoreVirtualKeyStates",
          "Parameters": [
            {
              "Name": "virtualKey",
              "Type": "VirtualKey"
            }
          ],
          "Name": "GetAsyncKeyState"
        },
        {
          "ReturnType": "CoreVirtualKeyStates",
          "Parameters": [
            {
              "Name": "virtualKey",
              "Type": "VirtualKey"
            }
          ],
          "Name": "GetKeyState"
        },
        {
          "ReturnType": "Void",
          "Name": "ReleasePointerCapture"
        },
        {
          "ReturnType": "Void",
          "Name": "SetPointerCapture"
        }
      ],
      "Events": [
        {
          "Type": "TypedEventHandler<CoreWindow,WindowActivatedEventArgs>",
          "Name": "Activated"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,AutomationProviderRequestedEventArgs>",
          "Name": "AutomationProviderRequested"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,CoreWindowEventArgs>",
          "Name": "Closed"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,CharacterReceivedEventArgs>",
          "Name": "CharacterReceived"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,InputEnabledEventArgs>",
          "Name": "InputEnabled"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,KeyEventArgs>",
          "Name": "KeyDown"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,KeyEventArgs>",
          "Name": "KeyUp"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>",
          "Name": "PointerCaptureLost"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>",
          "Name": "PointerEntered"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>",
          "Name": "PointerExited"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>",
          "Name": "PointerMoved"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>",
          "Name": "PointerPressed"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>",
          "Name": "PointerReleased"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,PointerEventArgs>",
          "Name": "PointerWheelChanged"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,WindowSizeChangedEventArgs>",
          "Name": "SizeChanged"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,TouchHitTestingEventArgs>",
          "Name": "TouchHitTesting"
        },
        {
          "Type": "TypedEventHandler<CoreWindow,VisibilityChangedEventArgs>",
          "Name": "VisibilityChanged"
        }
      ],
      "Name": "Windows.UI.Core.ICoreWindow"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Handled"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Core.ICoreWindowEventArgs"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "window",
              "Type": "CoreWindow"
            }
          ],
          "Name": "Initialize"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Core.IInitializeWithCoreWindow"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "IPointerPointTransform",
          "IsGet": true,
          "Name": "Inverse"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Rect",
          "Parameters": [
            {
              "Name": "rect",
              "Type": "Rect"
            }
          ],
          "Name": "TransformBounds"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "inPoint",
              "Type": "Point"
            },
            {
              "Name": "outPoint",
              "Type": "Point&",
              "Out": true
            }
          ],
          "Name": "TryTransform"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Input.IPointerPointTransform"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "IsSet": true,
          "Name": "Id"
        },
        {
          "Type": "UICommandInvokedHandler",
          "IsGet": true,
          "IsSet": true,
          "Name": "Invoked"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Label"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Popups.IUICommand"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "CaretType",
          "IsGet": true,
          "IsSet": true,
          "Name": "CaretType"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "DefaultTabStop"
        },
        {
          "Type": "ITextSelection",
          "IsGet": true,
          "Name": "Selection"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "UndoLimit"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Int32",
          "Name": "ApplyDisplayUpdates"
        },
        {
          "ReturnType": "Int32",
          "Name": "BatchDisplayUpdates"
        },
        {
          "ReturnType": "Void",
          "Name": "BeginUndoGroup"
        },
        {
          "ReturnType": "Boolean",
          "Name": "CanCopy"
        },
        {
          "ReturnType": "Boolean",
          "Name": "CanPaste"
        },
        {
          "ReturnType": "Boolean",
          "Name": "CanRedo"
        },
        {
          "ReturnType": "Boolean",
          "Name": "CanUndo"
        },
        {
          "ReturnType": "Void",
          "Name": "EndUndoGroup"
        },
        {
          "ReturnType": "ITextCharacterFormat",
          "Name": "GetDefaultCharacterFormat"
        },
        {
          "ReturnType": "ITextParagraphFormat",
          "Name": "GetDefaultParagraphFormat"
        },
        {
          "ReturnType": "ITextRange",
          "Parameters": [
            {
              "Name": "startPosition",
              "Type": "Int32"
            },
            {
              "Name": "endPosition",
              "Type": "Int32"
            }
          ],
          "Name": "GetRange"
        },
        {
          "ReturnType": "ITextRange",
          "Parameters": [
            {
              "Name": "point",
              "Type": "Point"
            },
            {
              "Name": "options",
              "Type": "PointOptions"
            }
          ],
          "Name": "GetRangeFromPoint"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "options",
              "Type": "TextGetOptions"
            },
            {
              "Name": "value",
              "Type": "String&",
              "Out": true
            }
          ],
          "Name": "GetText"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "options",
              "Type": "TextSetOptions"
            },
            {
              "Name": "value",
              "Type": "IRandomAccessStream"
            }
          ],
          "Name": "LoadFromStream"
        },
        {
          "ReturnType": "Void",
          "Name": "Redo"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "options",
              "Type": "TextGetOptions"
            },
            {
              "Name": "value",
              "Type": "IRandomAccessStream"
            }
          ],
          "Name": "SaveToStream"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "ITextCharacterFormat"
            }
          ],
          "Name": "SetDefaultCharacterFormat"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "ITextParagraphFormat"
            }
          ],
          "Name": "SetDefaultParagraphFormat"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "options",
              "Type": "TextSetOptions"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "SetText"
        },
        {
          "ReturnType": "Void",
          "Name": "Undo"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Text.ITextDocument"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true,
          "Name": "AllCaps"
        },
        {
          "Type": "Color",
          "IsGet": true,
          "IsSet": true,
          "Name": "BackgroundColor"
        },
        {
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true,
          "Name": "Bold"
        },
        {
          "Type": "FontStretch",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontStretch"
        },
        {
          "Type": "FontStyle",
          "IsGet": true,
          "IsSet": true,
          "Name": "FontStyle"
        },
        {
          "Type": "Color",
          "IsGet": true,
          "IsSet": true,
          "Name": "ForegroundColor"
        },
        {
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true,
          "Name": "Hidden"
        },
        {
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true,
          "Name": "Italic"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "Kerning"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "LanguageTag"
        },
        {
          "Type": "LinkType",
          "IsGet": true,
          "Name": "LinkType"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Name"
        },
        {
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true,
          "Name": "Outline"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "Position"
        },
        {
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProtectedText"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "Size"
        },
        {
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true,
          "Name": "SmallCaps"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "Spacing"
        },
        {
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true,
          "Name": "Strikethrough"
        },
        {
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true,
          "Name": "Subscript"
        },
        {
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true,
          "Name": "Superscript"
        },
        {
          "Type": "TextScript",
          "IsGet": true,
          "IsSet": true,
          "Name": "TextScript"
        },
        {
          "Type": "UnderlineType",
          "IsGet": true,
          "IsSet": true,
          "Name": "Underline"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Weight"
        }
      ],
      "Methods": [
        {
          "ReturnType": "ITextCharacterFormat",
          "Name": "GetClone"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "format",
              "Type": "ITextCharacterFormat"
            }
          ],
          "Name": "IsEqual"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "ITextCharacterFormat"
            }
          ],
          "Name": "SetClone"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Text.ITextCharacterFormat"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "ParagraphAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "Alignment"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "FirstLineIndent"
        },
        {
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true,
          "Name": "KeepTogether"
        },
        {
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true,
          "Name": "KeepWithNext"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "LeftIndent"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "Name": "LineSpacing"
        },
        {
          "Type": "LineSpacingRule",
          "IsGet": true,
          "Name": "LineSpacingRule"
        },
        {
          "Type": "MarkerAlignment",
          "IsGet": true,
          "IsSet": true,
          "Name": "ListAlignment"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ListLevelIndex"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "ListStart"
        },
        {
          "Type": "MarkerStyle",
          "IsGet": true,
          "IsSet": true,
          "Name": "ListStyle"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "ListTab"
        },
        {
          "Type": "MarkerType",
          "IsGet": true,
          "IsSet": true,
          "Name": "ListType"
        },
        {
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true,
          "Name": "NoLineNumber"
        },
        {
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true,
          "Name": "PageBreakBefore"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "RightIndent"
        },
        {
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true,
          "Name": "RightToLeft"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "SpaceAfter"
        },
        {
          "Type": "Single",
          "IsGet": true,
          "IsSet": true,
          "Name": "SpaceBefore"
        },
        {
          "Type": "ParagraphStyle",
          "IsGet": true,
          "IsSet": true,
          "Name": "Style"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "TabCount"
        },
        {
          "Type": "FormatEffect",
          "IsGet": true,
          "IsSet": true,
          "Name": "WidowControl"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "Single"
            },
            {
              "Name": "align",
              "Type": "TabAlignment"
            },
            {
              "Name": "leader",
              "Type": "TabLeader"
            }
          ],
          "Name": "AddTab"
        },
        {
          "ReturnType": "Void",
          "Name": "ClearAllTabs"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "position",
              "Type": "Single"
            }
          ],
          "Name": "DeleteTab"
        },
        {
          "ReturnType": "ITextParagraphFormat",
          "Name": "GetClone"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "index",
              "Type": "Int32"
            },
            {
              "Name": "position",
              "Type": "Single&",
              "Out": true
            },
            {
              "Name": "align",
              "Type": "TabAlignment&",
              "Out": true
            },
            {
              "Name": "leader",
              "Type": "TabLeader&",
              "Out": true
            }
          ],
          "Name": "GetTab"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "format",
              "Type": "ITextParagraphFormat"
            }
          ],
          "Name": "IsEqual"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "format",
              "Type": "ITextParagraphFormat"
            }
          ],
          "Name": "SetClone"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "start",
              "Type": "Single"
            },
            {
              "Name": "left",
              "Type": "Single"
            },
            {
              "Name": "right",
              "Type": "Single"
            }
          ],
          "Name": "SetIndents"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "rule",
              "Type": "LineSpacingRule"
            },
            {
              "Name": "spacing",
              "Type": "Single"
            }
          ],
          "Name": "SetLineSpacing"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Text.ITextParagraphFormat"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "EndPosition"
        },
        {
          "Type": "ITextRange",
          "IsGet": true,
          "IsSet": true,
          "Name": "FormattedText"
        },
        {
          "Type": "RangeGravity",
          "IsGet": true,
          "IsSet": true,
          "Name": "Gravity"
        },
        {
          "Type": "Char",
          "IsGet": true,
          "IsSet": true,
          "Name": "Character"
        },
        {
          "Type": "ITextCharacterFormat",
          "IsGet": true,
          "IsSet": true,
          "Name": "CharacterFormat"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "Length"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Link"
        },
        {
          "Type": "ITextParagraphFormat",
          "IsGet": true,
          "IsSet": true,
          "Name": "ParagraphFormat"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true,
          "Name": "StartPosition"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "StoryLength"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Text"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "format",
              "Type": "Int32"
            }
          ],
          "Name": "CanPaste"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Boolean"
            }
          ],
          "Name": "Collapse"
        },
        {
          "ReturnType": "Void",
          "Name": "Copy"
        },
        {
          "ReturnType": "Void",
          "Name": "Cut"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "count",
              "Type": "Int32"
            }
          ],
          "Name": "Delete"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "extend",
              "Type": "Boolean"
            }
          ],
          "Name": "EndOf"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            }
          ],
          "Name": "Expand"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            },
            {
              "Name": "scanLength",
              "Type": "Int32"
            },
            {
              "Name": "options",
              "Type": "FindOptions"
            }
          ],
          "Name": "FindText"
        },
        {
          "ReturnType": "ITextRange",
          "Name": "GetClone"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "UInt32&",
              "Out": true
            },
            {
              "Name": "offset",
              "Type": "Int32"
            }
          ],
          "Name": "GetCharacterUtf32"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            }
          ],
          "Name": "GetIndex"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "horizontalAlign",
              "Type": "HorizontalCharacterAlignment"
            },
            {
              "Name": "verticalAlign",
              "Type": "VerticalCharacterAlignment"
            },
            {
              "Name": "options",
              "Type": "PointOptions"
            },
            {
              "Name": "point",
              "Type": "Point&",
              "Out": true
            }
          ],
          "Name": "GetPoint"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "options",
              "Type": "PointOptions"
            },
            {
              "Name": "rect",
              "Type": "Rect&",
              "Out": true
            },
            {
              "Name": "hit",
              "Type": "Int32&",
              "Out": true
            }
          ],
          "Name": "GetRect"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "options",
              "Type": "TextGetOptions"
            },
            {
              "Name": "value",
              "Type": "String&",
              "Out": true
            }
          ],
          "Name": "GetText"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "options",
              "Type": "TextGetOptions"
            },
            {
              "Name": "value",
              "Type": "IRandomAccessStream"
            }
          ],
          "Name": "GetTextViaStream"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "LetterCase"
            }
          ],
          "Name": "ChangeCase"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "range",
              "Type": "ITextRange"
            }
          ],
          "Name": "InRange"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "width",
              "Type": "Int32"
            },
            {
              "Name": "height",
              "Type": "Int32"
            },
            {
              "Name": "ascent",
              "Type": "Int32"
            },
            {
              "Name": "verticalAlign",
              "Type": "VerticalCharacterAlignment"
            },
            {
              "Name": "alternateText",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "IRandomAccessStream"
            }
          ],
          "Name": "InsertImage"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "range",
              "Type": "ITextRange"
            }
          ],
          "Name": "InStory"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "range",
              "Type": "ITextRange"
            }
          ],
          "Name": "IsEqual"
        },
        {
          "ReturnType": "Void",
          "Name": "MatchSelection"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "count",
              "Type": "Int32"
            }
          ],
          "Name": "Move"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "count",
              "Type": "Int32"
            }
          ],
          "Name": "MoveEnd"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "count",
              "Type": "Int32"
            }
          ],
          "Name": "MoveStart"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "format",
              "Type": "Int32"
            }
          ],
          "Name": "Paste"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "PointOptions"
            }
          ],
          "Name": "ScrollIntoView"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "index",
              "Type": "Int32"
            },
            {
              "Name": "extend",
              "Type": "Boolean"
            }
          ],
          "Name": "SetIndex"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "point",
              "Type": "Point"
            },
            {
              "Name": "options",
              "Type": "PointOptions"
            },
            {
              "Name": "extend",
              "Type": "Boolean"
            }
          ],
          "Name": "SetPoint"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "startPosition",
              "Type": "Int32"
            },
            {
              "Name": "endPosition",
              "Type": "Int32"
            }
          ],
          "Name": "SetRange"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "options",
              "Type": "TextSetOptions"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "SetText"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "options",
              "Type": "TextSetOptions"
            },
            {
              "Name": "value",
              "Type": "IRandomAccessStream"
            }
          ],
          "Name": "SetTextViaStream"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "extend",
              "Type": "Boolean"
            }
          ],
          "Name": "StartOf"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Text.ITextRange"
    },
    {
      "Interfaces": [
        "ITextRange"
      ],
      "Properties": [
        {
          "Type": "SelectionOptions",
          "IsGet": true,
          "IsSet": true,
          "Name": "Options"
        },
        {
          "Type": "SelectionType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "extend",
              "Type": "Boolean"
            }
          ],
          "Name": "EndKey"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "extend",
              "Type": "Boolean"
            }
          ],
          "Name": "HomeKey"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "count",
              "Type": "Int32"
            },
            {
              "Name": "extend",
              "Type": "Boolean"
            }
          ],
          "Name": "MoveDown"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "count",
              "Type": "Int32"
            },
            {
              "Name": "extend",
              "Type": "Boolean"
            }
          ],
          "Name": "MoveLeft"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "count",
              "Type": "Int32"
            },
            {
              "Name": "extend",
              "Type": "Boolean"
            }
          ],
          "Name": "MoveRight"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextRangeUnit"
            },
            {
              "Name": "count",
              "Type": "Int32"
            },
            {
              "Name": "extend",
              "Type": "Boolean"
            }
          ],
          "Name": "MoveUp"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "TypeText"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Text.ITextSelection"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.Core.IWebUICommandBarElement"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.Core.IWebUICommandBarIcon"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "ActivatedOperation",
          "IsGet": true,
          "Name": "ActivatedOperation"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.IActivatedEventArgsDeferral"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Succeeded"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.IWebUIBackgroundTaskInstance"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "WebUINavigatedOperation",
          "IsGet": true,
          "Name": "NavigatedOperation"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.WebUI.IWebUINavigatedEventArgs"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "AnnotationTypeId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "AnnotationTypeName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Author"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DateTime"
        },
        {
          "Type": "IRawElementProviderSimple",
          "IsGet": true,
          "Name": "Target"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IAnnotationProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "DockPosition",
          "IsGet": true,
          "Name": "DockPosition"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "dockPosition",
              "Type": "DockPosition"
            }
          ],
          "Name": "SetDockPosition"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IDockProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DropEffect"
        },
        {
          "Type": "String[]",
          "IsGet": true,
          "Name": "DropEffects"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsGrabbed"
        }
      ],
      "Methods": [
        {
          "ReturnType": "IRawElementProviderSimple[]",
          "Name": "GetGrabbedItems"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IDragProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DropEffect"
        },
        {
          "Type": "String[]",
          "IsGet": true,
          "Name": "DropEffects"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IDropTargetProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "ExpandCollapseState",
          "IsGet": true,
          "Name": "ExpandCollapseState"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Collapse"
        },
        {
          "ReturnType": "Void",
          "Name": "Expand"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "Column"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "ColumnSpan"
        },
        {
          "Type": "IRawElementProviderSimple",
          "IsGet": true,
          "Name": "ContainingGrid"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "Row"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "RowSpan"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IGridItemProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "ColumnCount"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "RowCount"
        }
      ],
      "Methods": [
        {
          "ReturnType": "IRawElementProviderSimple",
          "Parameters": [
            {
              "Name": "row",
              "Type": "Int32"
            },
            {
              "Name": "column",
              "Type": "Int32"
            }
          ],
          "Name": "GetItem"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IGridProvider"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Invoke"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IInvokeProvider"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "IRawElementProviderSimple",
          "Parameters": [
            {
              "Name": "startAfter",
              "Type": "IRawElementProviderSimple"
            },
            {
              "Name": "automationProperty",
              "Type": "AutomationProperty"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "FindItemByProperty"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IItemContainerProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "CurrentView"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Int32[]",
          "Name": "GetSupportedViews"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "viewId",
              "Type": "Int32"
            }
          ],
          "Name": "GetViewName"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "viewId",
              "Type": "Int32"
            }
          ],
          "Name": "SetCurrentView"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IMultipleViewProvider"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Object",
          "Name": "GetUnderlyingObjectModel"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IObjectModelProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsReadOnly"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "LargeChange"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "Maximum"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "Minimum"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "SmallChange"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Double"
            }
          ],
          "Name": "SetValue"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IRangeValueProvider"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "ScrollIntoView"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IScrollItemProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HorizontallyScrollable"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "HorizontalScrollPercent"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "HorizontalViewSize"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "VerticallyScrollable"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "VerticalScrollPercent"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "VerticalViewSize"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "horizontalAmount",
              "Type": "ScrollAmount"
            },
            {
              "Name": "verticalAmount",
              "Type": "ScrollAmount"
            }
          ],
          "Name": "Scroll"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "horizontalPercent",
              "Type": "Double"
            },
            {
              "Name": "verticalPercent",
              "Type": "Double"
            }
          ],
          "Name": "SetScrollPercent"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IScrollProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsSelected"
        },
        {
          "Type": "IRawElementProviderSimple",
          "IsGet": true,
          "Name": "SelectionContainer"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "AddToSelection"
        },
        {
          "ReturnType": "Void",
          "Name": "RemoveFromSelection"
        },
        {
          "ReturnType": "Void",
          "Name": "Select"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ISelectionItemProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanSelectMultiple"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsSelectionRequired"
        }
      ],
      "Methods": [
        {
          "ReturnType": "IRawElementProviderSimple[]",
          "Name": "GetSelection"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ISelectionProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Formula"
        }
      ],
      "Methods": [
        {
          "ReturnType": "IRawElementProviderSimple[]",
          "Name": "GetAnnotationObjects"
        },
        {
          "ReturnType": "AnnotationType[]",
          "Name": "GetAnnotationTypes"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ISpreadsheetItemProvider"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "IRawElementProviderSimple",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "GetItemByName"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ISpreadsheetProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ExtendedProperties"
        },
        {
          "Type": "Color",
          "IsGet": true,
          "Name": "FillColor"
        },
        {
          "Type": "Color",
          "IsGet": true,
          "Name": "FillPatternColor"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "FillPatternStyle"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Shape"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "StyleId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "StyleName"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IStylesProvider"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Cancel"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "inputType",
              "Type": "SynchronizedInputType"
            }
          ],
          "Name": "StartListening"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ISynchronizedInputProvider"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "IRawElementProviderSimple[]",
          "Name": "GetColumnHeaderItems"
        },
        {
          "ReturnType": "IRawElementProviderSimple[]",
          "Name": "GetRowHeaderItems"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ITableItemProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "RowOrColumnMajor",
          "IsGet": true,
          "Name": "RowOrColumnMajor"
        }
      ],
      "Methods": [
        {
          "ReturnType": "IRawElementProviderSimple[]",
          "Name": "GetColumnHeaders"
        },
        {
          "ReturnType": "IRawElementProviderSimple[]",
          "Name": "GetRowHeaders"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ITableProvider"
    },
    {
      "Interfaces": [
        "ITextProvider"
      ],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "ITextRangeProvider",
          "Name": "GetActiveComposition"
        },
        {
          "ReturnType": "ITextRangeProvider",
          "Name": "GetConversionTarget"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ITextEditProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "IRawElementProviderSimple",
          "IsGet": true,
          "Name": "TextContainer"
        },
        {
          "Type": "ITextRangeProvider",
          "IsGet": true,
          "Name": "TextRange"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ITextChildProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "ITextRangeProvider",
          "IsGet": true,
          "Name": "DocumentRange"
        },
        {
          "Type": "SupportedTextSelection",
          "IsGet": true,
          "Name": "SupportedTextSelection"
        }
      ],
      "Methods": [
        {
          "ReturnType": "ITextRangeProvider[]",
          "Name": "GetSelection"
        },
        {
          "ReturnType": "ITextRangeProvider[]",
          "Name": "GetVisibleRanges"
        },
        {
          "ReturnType": "ITextRangeProvider",
          "Parameters": [
            {
              "Name": "childElement",
              "Type": "IRawElementProviderSimple"
            }
          ],
          "Name": "RangeFromChild"
        },
        {
          "ReturnType": "ITextRangeProvider",
          "Parameters": [
            {
              "Name": "screenLocation",
              "Type": "Point"
            }
          ],
          "Name": "RangeFromPoint"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ITextProvider"
    },
    {
      "Interfaces": [
        "ITextProvider"
      ],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "ITextRangeProvider",
          "Parameters": [
            {
              "Name": "isActive",
              "Type": "Boolean&",
              "Out": true
            }
          ],
          "Name": "GetCaretRange"
        },
        {
          "ReturnType": "ITextRangeProvider",
          "Parameters": [
            {
              "Name": "annotationElement",
              "Type": "IRawElementProviderSimple"
            }
          ],
          "Name": "RangeFromAnnotation"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ITextProvider2"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "AddToSelection"
        },
        {
          "ReturnType": "ITextRangeProvider",
          "Name": "Clone"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "textRangeProvider",
              "Type": "ITextRangeProvider"
            }
          ],
          "Name": "Compare"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "endpoint",
              "Type": "TextPatternRangeEndpoint"
            },
            {
              "Name": "textRangeProvider",
              "Type": "ITextRangeProvider"
            },
            {
              "Name": "targetEndpoint",
              "Type": "TextPatternRangeEndpoint"
            }
          ],
          "Name": "CompareEndpoints"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextUnit"
            }
          ],
          "Name": "ExpandToEnclosingUnit"
        },
        {
          "ReturnType": "ITextRangeProvider",
          "Parameters": [
            {
              "Name": "attributeId",
              "Type": "Int32"
            },
            {
              "Name": "value",
              "Type": "Object"
            },
            {
              "Name": "backward",
              "Type": "Boolean"
            }
          ],
          "Name": "FindAttribute"
        },
        {
          "ReturnType": "ITextRangeProvider",
          "Parameters": [
            {
              "Name": "text",
              "Type": "String"
            },
            {
              "Name": "backward",
              "Type": "Boolean"
            },
            {
              "Name": "ignoreCase",
              "Type": "Boolean"
            }
          ],
          "Name": "FindText"
        },
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "attributeId",
              "Type": "Int32"
            }
          ],
          "Name": "GetAttributeValue"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "returnValue",
              "Type": "Double[]&",
              "Out": true
            }
          ],
          "Name": "GetBoundingRectangles"
        },
        {
          "ReturnType": "IRawElementProviderSimple",
          "Name": "GetEnclosingElement"
        },
        {
          "ReturnType": "IRawElementProviderSimple[]",
          "Name": "GetChildren"
        },
        {
          "ReturnType": "String",
          "Parameters": [
            {
              "Name": "maxLength",
              "Type": "Int32"
            }
          ],
          "Name": "GetText"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "unit",
              "Type": "TextUnit"
            },
            {
              "Name": "count",
              "Type": "Int32"
            }
          ],
          "Name": "Move"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "endpoint",
              "Type": "TextPatternRangeEndpoint"
            },
            {
              "Name": "textRangeProvider",
              "Type": "ITextRangeProvider"
            },
            {
              "Name": "targetEndpoint",
              "Type": "TextPatternRangeEndpoint"
            }
          ],
          "Name": "MoveEndpointByRange"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "endpoint",
              "Type": "TextPatternRangeEndpoint"
            },
            {
              "Name": "unit",
              "Type": "TextUnit"
            },
            {
              "Name": "count",
              "Type": "Int32"
            }
          ],
          "Name": "MoveEndpointByUnit"
        },
        {
          "ReturnType": "Void",
          "Name": "RemoveFromSelection"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "alignToTop",
              "Type": "Boolean"
            }
          ],
          "Name": "ScrollIntoView"
        },
        {
          "ReturnType": "Void",
          "Name": "Select"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ITextRangeProvider"
    },
    {
      "Interfaces": [
        "ITextRangeProvider"
      ],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "ShowContextMenu"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ITextRangeProvider2"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "ToggleState",
          "IsGet": true,
          "Name": "ToggleState"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Toggle"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IToggleProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanMove"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanResize"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanRotate"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "x",
              "Type": "Double"
            },
            {
              "Name": "y",
              "Type": "Double"
            }
          ],
          "Name": "Move"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "width",
              "Type": "Double"
            },
            {
              "Name": "height",
              "Type": "Double"
            }
          ],
          "Name": "Resize"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "degrees",
              "Type": "Double"
            }
          ],
          "Name": "Rotate"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ITransformProvider"
    },
    {
      "Interfaces": [
        "ITransformProvider"
      ],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanZoom"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "MaxZoom"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "MinZoom"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "ZoomLevel"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "zoom",
              "Type": "Double"
            }
          ],
          "Name": "Zoom"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "zoomUnit",
              "Type": "ZoomUnit"
            }
          ],
          "Name": "ZoomByUnit"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.ITransformProvider2"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsReadOnly"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Value"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "SetValue"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IValueProvider"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Realize"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IVirtualizedItemProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "WindowInteractionState",
          "IsGet": true,
          "Name": "InteractionState"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsModal"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsTopmost"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Maximizable"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "Minimizable"
        },
        {
          "Type": "WindowVisualState",
          "IsGet": true,
          "Name": "VisualState"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Close"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "state",
              "Type": "WindowVisualState"
            }
          ],
          "Name": "SetVisualState"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "milliseconds",
              "Type": "Int32"
            }
          ],
          "Name": "WaitForInputIdle"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Automation.Provider.IWindowProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsCompact"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ICommandBarElement"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "DependencyObject",
          "Parameters": [
            {
              "Name": "index",
              "Type": "Int32"
            }
          ],
          "Name": "ContainerFromIndex"
        },
        {
          "ReturnType": "DependencyObject",
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            }
          ],
          "Name": "ContainerFromItem"
        },
        {
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "container",
              "Type": "DependencyObject"
            }
          ],
          "Name": "IndexFromContainer"
        },
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "container",
              "Type": "DependencyObject"
            }
          ],
          "Name": "ItemFromContainer"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.IItemContainerMapping"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "sourcePageType",
              "Type": "Type"
            }
          ],
          "Name": "Navigate"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.INavigate"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsActiveView"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "IsZoomedInView"
        },
        {
          "Type": "SemanticZoom",
          "IsGet": true,
          "IsSet": true,
          "Name": "SemanticZoomOwner"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "CompleteViewChange"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SemanticZoomLocation"
            },
            {
              "Name": "destination",
              "Type": "SemanticZoomLocation"
            }
          ],
          "Name": "CompleteViewChangeFrom"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SemanticZoomLocation"
            },
            {
              "Name": "destination",
              "Type": "SemanticZoomLocation"
            }
          ],
          "Name": "CompleteViewChangeTo"
        },
        {
          "ReturnType": "Void",
          "Name": "InitializeViewChange"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "item",
              "Type": "SemanticZoomLocation"
            }
          ],
          "Name": "MakeVisible"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SemanticZoomLocation"
            },
            {
              "Name": "destination",
              "Type": "SemanticZoomLocation"
            }
          ],
          "Name": "StartViewChangeFrom"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "source",
              "Type": "SemanticZoomLocation"
            },
            {
              "Name": "destination",
              "Type": "SemanticZoomLocation"
            }
          ],
          "Name": "StartViewChangeTo"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Controls.ISemanticZoomInformation"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AreHorizontalSnapPointsRegular"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "AreVerticalSnapPointsRegular"
        }
      ],
      "Methods": [
        {
          "ReturnType": "IReadOnlyList<Single>",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            }
          ],
          "Name": "GetIrregularSnapPoints"
        },
        {
          "ReturnType": "Single",
          "Parameters": [
            {
              "Name": "orientation",
              "Type": "Orientation"
            },
            {
              "Name": "alignment",
              "Type": "SnapPointsAlignment"
            },
            {
              "Name": "offset",
              "Type": "Single&",
              "Out": true
            }
          ],
          "Name": "GetRegularSnapPoints"
        }
      ],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "Name": "HorizontalSnapPointsChanged"
        },
        {
          "Type": "EventHandler<Object>",
          "Name": "VerticalSnapPointsChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo"
    },
    {
      "Interfaces": [
        "ICollection<Object>",
        "IEnumerable",
        "IEnumerable<Object>",
        "IList<Object>",
        "IObservableVector<Object>"
      ],
      "Properties": [
        {
          "Type": "IObservableVector<Object>",
          "IsGet": true,
          "Name": "CollectionGroups"
        },
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "CurrentItem"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "CurrentPosition"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasMoreItems"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsCurrentAfterLast"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsCurrentBeforeFirst"
        }
      ],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<LoadMoreItemsResult>",
          "Parameters": [
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ],
          "Name": "LoadMoreItemsAsync"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "item",
              "Type": "Object"
            }
          ],
          "Name": "MoveCurrentTo"
        },
        {
          "ReturnType": "Boolean",
          "Name": "MoveCurrentToFirst"
        },
        {
          "ReturnType": "Boolean",
          "Name": "MoveCurrentToLast"
        },
        {
          "ReturnType": "Boolean",
          "Name": "MoveCurrentToNext"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "index",
              "Type": "Int32"
            }
          ],
          "Name": "MoveCurrentToPosition"
        },
        {
          "ReturnType": "Boolean",
          "Name": "MoveCurrentToPrevious"
        }
      ],
      "Events": [
        {
          "Type": "EventHandler<Object>",
          "Name": "CurrentChanged"
        },
        {
          "Type": "CurrentChangingEventHandler",
          "Name": "CurrentChanging"
        }
      ],
      "Name": "Windows.UI.Xaml.Data.ICollectionView"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "ICollectionView",
          "Name": "CreateView"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.ICollectionViewFactory"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Group"
        },
        {
          "Type": "IObservableVector<Object>",
          "IsGet": true,
          "Name": "GroupItems"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.ICollectionViewGroup"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanRead"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "CanWrite"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "Type",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Object"
            },
            {
              "Name": "index",
              "Type": "Object"
            }
          ],
          "Name": "GetIndexedValue"
        },
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Object"
            }
          ],
          "Name": "GetValue"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Object"
            },
            {
              "Name": "value",
              "Type": "Object"
            },
            {
              "Name": "index",
              "Type": "Object"
            }
          ],
          "Name": "SetIndexedValue"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "target",
              "Type": "Object"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "SetValue"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.ICustomProperty"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Type",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Methods": [
        {
          "ReturnType": "ICustomProperty",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "GetCustomProperty"
        },
        {
          "ReturnType": "ICustomProperty",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "type",
              "Type": "Type"
            }
          ],
          "Name": "GetIndexedProperty"
        },
        {
          "ReturnType": "String",
          "Name": "GetStringRepresentation"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.ICustomPropertyProvider"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "visibleRange",
              "Type": "ItemIndexRange"
            },
            {
              "Name": "trackedItems",
              "Type": "IReadOnlyList<ItemIndexRange>"
            }
          ],
          "Name": "RangesChanged"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.IItemsRangeInfo"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "IItemsRangeInfo",
          "Name": "CreateItemsRangeInfo"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.IItemsRangeInfoFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "itemIndexRange",
              "Type": "ItemIndexRange"
            }
          ],
          "Name": "DeselectRange"
        },
        {
          "ReturnType": "IReadOnlyList<ItemIndexRange>",
          "Name": "GetSelectedRanges"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "index",
              "Type": "Int32"
            }
          ],
          "Name": "IsSelected"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "itemIndexRange",
              "Type": "ItemIndexRange"
            }
          ],
          "Name": "SelectRange"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.ISelectionInfo"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "ISelectionInfo",
          "Name": "CreateSelectionInfo"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.ISelectionInfoFactory"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasMoreItems"
        }
      ],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<LoadMoreItemsResult>",
          "Parameters": [
            {
              "Name": "count",
              "Type": "UInt32"
            }
          ],
          "Name": "LoadMoreItemsAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.ISupportIncrementalLoading"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            },
            {
              "Name": "targetType",
              "Type": "Type"
            },
            {
              "Name": "parameter",
              "Type": "Object"
            },
            {
              "Name": "language",
              "Type": "String"
            }
          ],
          "Name": "Convert"
        },
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            },
            {
              "Name": "targetType",
              "Type": "Type"
            },
            {
              "Name": "parameter",
              "Type": "Object"
            },
            {
              "Name": "language",
              "Type": "String"
            }
          ],
          "Name": "ConvertBack"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Data.IValueConverter"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "phase",
              "Type": "UInt32"
            }
          ],
          "Name": "ProcessBinding"
        },
        {
          "ReturnType": "Void",
          "Name": "ResetTemplate"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.IDataTemplateExtension"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Object",
          "IsGet": true,
          "Name": "Current"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasCurrent"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Name": "MoveNext"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Interop.IBindableIterator"
    },
    {
      "Interfaces": [
        "ICollection",
        "IEnumerable",
        "IList"
      ],
      "Properties": [],
      "Methods": [],
      "Events": [
        {
          "Type": "BindableVectorChangedEventHandler",
          "Name": "VectorChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Interop.IBindableObservableVector"
    },
    {
      "Interfaces": [
        "IEnumerable"
      ],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Size"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "index",
              "Type": "UInt32"
            }
          ],
          "Name": "GetAt"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Object"
            },
            {
              "Name": "index",
              "Type": "UInt32&",
              "Out": true
            }
          ],
          "Name": "IndexOf"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Interop.IBindableVectorView"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "connectionId",
              "Type": "Int32"
            },
            {
              "Name": "target",
              "Type": "Object"
            }
          ],
          "Name": "Connect"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Markup.IComponentConnector"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsAttachable"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsDependencyProperty"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsReadOnly"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Name"
        },
        {
          "Type": "IXamlType",
          "IsGet": true,
          "Name": "TargetType"
        },
        {
          "Type": "IXamlType",
          "IsGet": true,
          "Name": "Type"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "instance",
              "Type": "Object"
            }
          ],
          "Name": "GetValue"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "instance",
              "Type": "Object"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "SetValue"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Markup.IXamlMember"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "IXamlType",
          "Parameters": [
            {
              "Name": "type",
              "Type": "Type"
            }
          ],
          "Name": "GetXamlType"
        },
        {
          "ReturnType": "IXamlType",
          "Parameters": [
            {
              "Name": "fullName",
              "Type": "String"
            }
          ],
          "Name": "GetXamlType"
        },
        {
          "ReturnType": "XmlnsDefinition[]",
          "Name": "GetXmlnsDefinitions"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Markup.IXamlMetadataProvider"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "IXamlType",
          "IsGet": true,
          "Name": "BaseType"
        },
        {
          "Type": "IXamlMember",
          "IsGet": true,
          "Name": "ContentProperty"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "FullName"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsArray"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsBindable"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsCollection"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsConstructible"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsDictionary"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsMarkupExtension"
        },
        {
          "Type": "IXamlType",
          "IsGet": true,
          "Name": "ItemType"
        },
        {
          "Type": "IXamlType",
          "IsGet": true,
          "Name": "KeyType"
        },
        {
          "Type": "Type",
          "IsGet": true,
          "Name": "UnderlyingType"
        }
      ],
      "Methods": [
        {
          "ReturnType": "Object",
          "Name": "ActivateInstance"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "instance",
              "Type": "Object"
            },
            {
              "Name": "key",
              "Type": "Object"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "AddToMap"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "instance",
              "Type": "Object"
            },
            {
              "Name": "value",
              "Type": "Object"
            }
          ],
          "Name": "AddToVector"
        },
        {
          "ReturnType": "Object",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "CreateFromString"
        },
        {
          "ReturnType": "IXamlMember",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ],
          "Name": "GetMember"
        },
        {
          "ReturnType": "Void",
          "Name": "RunInitializer"
        }
      ],
      "Events": [],
      "Name": "Windows.UI.Xaml.Markup.IXamlType"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperationWithProgress<HttpResponseMessage,HttpProgress>",
          "Parameters": [
            {
              "Name": "request",
              "Type": "HttpRequestMessage"
            }
          ],
          "Name": "SendRequestAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.Filters.IHttpFilter"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [
        {
          "Type": "HttpContentHeaderCollection",
          "IsGet": true,
          "Name": "Headers"
        }
      ],
      "Methods": [
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Name": "BufferAllAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IBuffer,UInt64>",
          "Name": "ReadAsBufferAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<IInputStream,UInt64>",
          "Name": "ReadAsInputStreamAsync"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<String,UInt64>",
          "Name": "ReadAsStringAsync"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "length",
              "Type": "UInt64&",
              "Out": true
            }
          ],
          "Name": "TryComputeLength"
        },
        {
          "ReturnType": "IAsyncOperationWithProgress<UInt64,UInt64>",
          "Parameters": [
            {
              "Name": "outputStream",
              "Type": "IOutputStream"
            }
          ],
          "Name": "WriteToStreamAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Http.IHttpContent"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "ReturnType": "IAsyncOperation<IInputStream>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "UriToStreamAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.IUriToStreamResolver"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "BypassCacheOnRetrieve"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "MaxResponseBufferSize"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ProxyCredential"
        },
        {
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true,
          "Name": "ServerCredential"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "Timeout"
        }
      ],
      "Methods": [
        {
          "ReturnType": "IAsyncOperationWithProgress<SyndicationFeed,RetrievalProgress>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ],
          "Name": "RetrieveFeedAsync"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ],
          "Name": "SetRequestHeader"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.ISyndicationClient"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Type": "IList<SyndicationAttribute>",
          "IsGet": true,
          "Name": "AttributeExtensions"
        },
        {
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true,
          "Name": "BaseUri"
        },
        {
          "Type": "IList<ISyndicationNode>",
          "IsGet": true,
          "Name": "ElementExtensions"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Language"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeNamespace"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "NodeValue"
        }
      ],
      "Methods": [
        {
          "ReturnType": "XmlDocument",
          "Parameters": [
            {
              "Name": "format",
              "Type": "SyndicationFormat"
            }
          ],
          "Name": "GetXmlDocument"
        }
      ],
      "Events": [],
      "Name": "Windows.Web.Syndication.ISyndicationNode"
    },
    {
      "Interfaces": [
        "ISyndicationNode"
      ],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Text"
        },
        {
          "Type": "String",
          "IsGet": true,
          "IsSet": true,
          "Name": "Type"
        },
        {
          "Type": "XmlDocument",
          "IsGet": true,
          "IsSet": true,
          "Name": "Xml"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Web.Syndication.ISyndicationText"
    }
  ],
  "Enums": [
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Launch"
        },
        {
          "Value": "1",
          "Name": "Search"
        },
        {
          "Value": "2",
          "Name": "ShareTarget"
        },
        {
          "Value": "3",
          "Name": "File"
        },
        {
          "Value": "4",
          "Name": "Protocol"
        },
        {
          "Value": "5",
          "Name": "FileOpenPicker"
        },
        {
          "Value": "6",
          "Name": "FileSavePicker"
        },
        {
          "Value": "7",
          "Name": "CachedFileUpdater"
        },
        {
          "Value": "8",
          "Name": "ContactPicker"
        },
        {
          "Value": "9",
          "Name": "Device"
        },
        {
          "Value": "10",
          "Name": "PrintTaskSettings"
        },
        {
          "Value": "11",
          "Name": "CameraSettings"
        },
        {
          "Value": "13",
          "Name": "AppointmentsProvider"
        },
        {
          "Value": "16",
          "Name": "VoiceCommand"
        },
        {
          "Value": "17",
          "Name": "LockScreen"
        },
        {
          "Value": "1000",
          "Name": "PickerReturned"
        },
        {
          "Value": "1001",
          "Name": "WalletAction"
        },
        {
          "Value": "1002",
          "Name": "PickFileContinuation"
        },
        {
          "Value": "1003",
          "Name": "PickSaveFileContinuation"
        },
        {
          "Value": "1004",
          "Name": "PickFolderContinuation"
        },
        {
          "Value": "1005",
          "Name": "WebAuthenticationBrokerContinuation"
        },
        {
          "Value": "1006",
          "Name": "WebAccountProvider"
        },
        {
          "Value": "1007",
          "Name": "WebAccountProviderContinuation"
        },
        {
          "Value": "1008",
          "Name": "ComponentUI"
        },
        {
          "Value": "1009",
          "Name": "ProtocolWithResultsContinuation"
        },
        {
          "Value": "1010",
          "Name": "ProtocolForResults"
        }
      ],
      "Name": "Windows.ApplicationModel.Activation.ActivationKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "NotRunning"
        },
        {
          "Value": "1",
          "Name": "Running"
        },
        {
          "Value": "2",
          "Name": "Suspended"
        },
        {
          "Value": "3",
          "Name": "Terminated"
        },
        {
          "Value": "4",
          "Name": "ClosedByUser"
        }
      ],
      "Name": "Windows.ApplicationModel.Activation.ApplicationExecutionState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Busy"
        },
        {
          "Value": "1",
          "Name": "Tentative"
        },
        {
          "Value": "2",
          "Name": "Free"
        },
        {
          "Value": "3",
          "Name": "OutOfOffice"
        },
        {
          "Value": "4",
          "Name": "WorkingElsewhere"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentBusyStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "SystemOnly"
        },
        {
          "Value": "1",
          "Name": "Limited"
        },
        {
          "Value": "2",
          "Name": "Full"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentCalendarOtherAppReadAccess"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "SystemOnly"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentCalendarOtherAppWriteAccess"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "Idle"
        },
        {
          "Value": "2",
          "Name": "Syncing"
        },
        {
          "Value": "3",
          "Name": "Disconnected"
        },
        {
          "Value": "4",
          "Name": "Throttled"
        },
        {
          "Value": "5",
          "Name": "UserAttentionRequired"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentCalendarSyncState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Adjacent"
        },
        {
          "Value": "2",
          "Name": "Overlap"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentConflictType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Sunday"
        },
        {
          "Value": "2",
          "Name": "Monday"
        },
        {
          "Value": "4",
          "Name": "Tuesday"
        },
        {
          "Value": "8",
          "Name": "Wednesday"
        },
        {
          "Value": "16",
          "Name": "Thursday"
        },
        {
          "Value": "32",
          "Name": "Friday"
        },
        {
          "Value": "64",
          "Name": "Saturday"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentDaysOfWeek"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Tentative"
        },
        {
          "Value": "2",
          "Name": "Accepted"
        },
        {
          "Value": "3",
          "Name": "Declined"
        },
        {
          "Value": "4",
          "Name": "Unknown"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentParticipantResponse"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "RequiredAttendee"
        },
        {
          "Value": "1",
          "Name": "OptionalAttendee"
        },
        {
          "Value": "2",
          "Name": "Resource"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentParticipantRole"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Daily"
        },
        {
          "Value": "1",
          "Name": "Weekly"
        },
        {
          "Value": "2",
          "Name": "Monthly"
        },
        {
          "Value": "3",
          "Name": "MonthlyOnDay"
        },
        {
          "Value": "4",
          "Name": "Yearly"
        },
        {
          "Value": "5",
          "Name": "YearlyOnDay"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentRecurrenceUnit"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Public"
        },
        {
          "Value": "1",
          "Name": "Private"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentSensitivity"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "AppCalendarsReadWrite"
        },
        {
          "Value": "1",
          "Name": "AllCalendarsReadOnly"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentStoreAccessType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "AppointmentCreated"
        },
        {
          "Value": "1",
          "Name": "AppointmentModified"
        },
        {
          "Value": "2",
          "Name": "AppointmentDeleted"
        },
        {
          "Value": "3",
          "Name": "ChangeTrackingLost"
        },
        {
          "Value": "4",
          "Name": "CalendarCreated"
        },
        {
          "Value": "5",
          "Name": "CalendarModified"
        },
        {
          "Value": "6",
          "Name": "CalendarDeleted"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentStoreChangeType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "System"
        },
        {
          "Value": "1",
          "Name": "App"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentSummaryCardView"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "First"
        },
        {
          "Value": "1",
          "Name": "Second"
        },
        {
          "Value": "2",
          "Name": "Third"
        },
        {
          "Value": "3",
          "Name": "Fourth"
        },
        {
          "Value": "4",
          "Name": "Last"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.AppointmentWeekOfMonth"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "IncludeHidden"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.FindAppointmentCalendarsOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Master"
        },
        {
          "Value": "1",
          "Name": "Instance"
        },
        {
          "Value": "2",
          "Name": "ExceptionInstance"
        }
      ],
      "Name": "Windows.ApplicationModel.Appointments.RecurrenceType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Completed"
        },
        {
          "Value": "1",
          "Name": "Canceled"
        },
        {
          "Value": "2",
          "Name": "ResourceLimitsExceeded"
        },
        {
          "Value": "3",
          "Name": "Unknown"
        }
      ],
      "Name": "Windows.ApplicationModel.AppService.AppServiceClosedStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "AppNotInstalled"
        },
        {
          "Value": "2",
          "Name": "AppUnavailable"
        },
        {
          "Value": "3",
          "Name": "AppServiceUnavailable"
        },
        {
          "Value": "4",
          "Name": "Unknown"
        }
      ],
      "Name": "Windows.ApplicationModel.AppService.AppServiceConnectionStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "Failure"
        },
        {
          "Value": "2",
          "Name": "ResourceLimitsExceeded"
        },
        {
          "Value": "3",
          "Name": "Unknown"
        }
      ],
      "Name": "Windows.ApplicationModel.AppService.AppServiceResponseStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Allowed"
        },
        {
          "Value": "1",
          "Name": "CurrentlyRunning"
        },
        {
          "Value": "2",
          "Name": "DisabledByPolicy"
        },
        {
          "Value": "3",
          "Name": "UnknownError"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.ApplicationTriggerResult"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unspecified"
        },
        {
          "Value": "1",
          "Name": "AllowedWithAlwaysOnRealTimeConnectivity"
        },
        {
          "Value": "2",
          "Name": "AllowedMayUseActiveRealTimeConnectivity"
        },
        {
          "Value": "3",
          "Name": "Denied"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.BackgroundAccessStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Abort"
        },
        {
          "Value": "1",
          "Name": "Terminating"
        },
        {
          "Value": "2",
          "Name": "LoggingOff"
        },
        {
          "Value": "3",
          "Name": "ServicingUpdate"
        },
        {
          "Value": "4",
          "Name": "IdleTask"
        },
        {
          "Value": "5",
          "Name": "Uninstall"
        },
        {
          "Value": "6",
          "Name": "ConditionLoss"
        },
        {
          "Value": "7",
          "Name": "SystemPolicy"
        },
        {
          "Value": "8",
          "Name": "QuietHoursEntered"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.BackgroundTaskCancellationReason"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "All"
        },
        {
          "Value": "1",
          "Name": "Cpu"
        },
        {
          "Value": "2",
          "Name": "Network"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.BackgroundTaskThrottleCounter"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Low"
        },
        {
          "Value": "1",
          "Name": "Medium"
        },
        {
          "Value": "2",
          "Name": "High"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.BackgroundWorkCostValue"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Allowed"
        },
        {
          "Value": "1",
          "Name": "DeniedByUser"
        },
        {
          "Value": "2",
          "Name": "DeniedBySystem"
        },
        {
          "Value": "3",
          "Name": "LowBattery"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.DeviceTriggerResult"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Geofence"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.LocationTriggerType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Invalid"
        },
        {
          "Value": "1",
          "Name": "UserPresent"
        },
        {
          "Value": "2",
          "Name": "UserNotPresent"
        },
        {
          "Value": "3",
          "Name": "InternetAvailable"
        },
        {
          "Value": "4",
          "Name": "InternetNotAvailable"
        },
        {
          "Value": "5",
          "Name": "SessionConnected"
        },
        {
          "Value": "6",
          "Name": "SessionDisconnected"
        },
        {
          "Value": "7",
          "Name": "FreeNetworkAvailable"
        },
        {
          "Value": "8",
          "Name": "BackgroundWorkCostNotHigh"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.SystemConditionType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Invalid"
        },
        {
          "Value": "1",
          "Name": "SmsReceived"
        },
        {
          "Value": "2",
          "Name": "UserPresent"
        },
        {
          "Value": "3",
          "Name": "UserAway"
        },
        {
          "Value": "4",
          "Name": "NetworkStateChange"
        },
        {
          "Value": "5",
          "Name": "ControlChannelReset"
        },
        {
          "Value": "6",
          "Name": "InternetAvailable"
        },
        {
          "Value": "7",
          "Name": "SessionConnected"
        },
        {
          "Value": "8",
          "Name": "ServicingComplete"
        },
        {
          "Value": "9",
          "Name": "LockScreenApplicationAdded"
        },
        {
          "Value": "10",
          "Name": "LockScreenApplicationRemoved"
        },
        {
          "Value": "11",
          "Name": "TimeZoneChange"
        },
        {
          "Value": "12",
          "Name": "OnlineIdConnectedStateChange"
        },
        {
          "Value": "13",
          "Name": "BackgroundWorkCostChange"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.SystemTriggerType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Added"
        },
        {
          "Value": "1",
          "Name": "Removed"
        },
        {
          "Value": "2",
          "Name": "Changed"
        }
      ],
      "Name": "Windows.ApplicationModel.Calls.Background.PhoneLineChangeType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "BrandingOptions"
        },
        {
          "Value": "2",
          "Name": "CanDial"
        },
        {
          "Value": "4",
          "Name": "CellularDetails"
        },
        {
          "Value": "8",
          "Name": "DisplayColor"
        },
        {
          "Value": "16",
          "Name": "Name"
        },
        {
          "Value": "32",
          "Name": "NetworkName"
        },
        {
          "Value": "64",
          "Name": "NetworkState"
        },
        {
          "Value": "128",
          "Name": "Transport"
        },
        {
          "Value": "256",
          "Name": "Voicemail"
        }
      ],
      "Name": "Windows.ApplicationModel.Calls.Background.PhoneLineProperties"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "CallStateChanged"
        },
        {
          "Value": "1",
          "Name": "NewVoicemailMessage"
        },
        {
          "Value": "2",
          "Name": "CallHistoryChanged"
        },
        {
          "Value": "3",
          "Name": "LineChanged"
        },
        {
          "Value": "4",
          "Name": "AirplaneModeDisabledForEmergencyCall"
        }
      ],
      "Name": "Windows.ApplicationModel.Calls.Background.PhoneTriggerType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "Bluetooth"
        },
        {
          "Value": "2",
          "Name": "Speakerphone"
        }
      ],
      "Name": "Windows.ApplicationModel.Calls.PhoneAudioRoutingEndpoint"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Audio"
        },
        {
          "Value": "1",
          "Name": "AudioAndVideo"
        }
      ],
      "Name": "Windows.ApplicationModel.Calls.PhoneCallMedia"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Cellular"
        },
        {
          "Value": "1",
          "Name": "VoipApp"
        }
      ],
      "Name": "Windows.ApplicationModel.Calls.PhoneLineTransport"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Created"
        },
        {
          "Value": "1",
          "Name": "Started"
        },
        {
          "Value": "2",
          "Name": "EnumerationCompleted"
        },
        {
          "Value": "3",
          "Name": "Stopped"
        },
        {
          "Value": "4",
          "Name": "Aborted"
        }
      ],
      "Name": "Windows.ApplicationModel.Calls.PhoneLineWatcherStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "NoSignal"
        },
        {
          "Value": "2",
          "Name": "Deregistered"
        },
        {
          "Value": "3",
          "Name": "Denied"
        },
        {
          "Value": "4",
          "Name": "Searching"
        },
        {
          "Value": "5",
          "Name": "Home"
        },
        {
          "Value": "6",
          "Name": "RoamingInternational"
        },
        {
          "Value": "7",
          "Name": "RoamingDomestic"
        }
      ],
      "Name": "Windows.ApplicationModel.Calls.PhoneNetworkState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "PinNotRequired"
        },
        {
          "Value": "2",
          "Name": "PinUnlocked"
        },
        {
          "Value": "3",
          "Name": "PinLocked"
        },
        {
          "Value": "4",
          "Name": "PukLocked"
        },
        {
          "Value": "5",
          "Name": "NotInserted"
        },
        {
          "Value": "6",
          "Name": "Invalid"
        },
        {
          "Value": "7",
          "Name": "Disabled"
        }
      ],
      "Name": "Windows.ApplicationModel.Calls.PhoneSimState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Traditional"
        },
        {
          "Value": "2",
          "Name": "Visual"
        }
      ],
      "Name": "Windows.ApplicationModel.Calls.PhoneVoicemailType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Home"
        },
        {
          "Value": "1",
          "Name": "Work"
        },
        {
          "Value": "2",
          "Name": "Other"
        }
      ],
      "Name": "Windows.ApplicationModel.Contacts.ContactAddressKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Birthday"
        },
        {
          "Value": "1",
          "Name": "Anniversary"
        },
        {
          "Value": "2",
          "Name": "Other"
        }
      ],
      "Name": "Windows.ApplicationModel.Contacts.ContactDateKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Personal"
        },
        {
          "Value": "1",
          "Name": "Work"
        },
        {
          "Value": "2",
          "Name": "Other"
        }
      ],
      "Name": "Windows.ApplicationModel.Contacts.ContactEmailKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Home"
        },
        {
          "Value": "2",
          "Name": "Work"
        },
        {
          "Value": "3",
          "Name": "Mobile"
        },
        {
          "Value": "4",
          "Name": "Other"
        }
      ],
      "Name": "Windows.ApplicationModel.Contacts.ContactFieldCategory"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Email"
        },
        {
          "Value": "1",
          "Name": "PhoneNumber"
        },
        {
          "Value": "7",
          "Name": "Address"
        }
      ],
      "Name": "Windows.ApplicationModel.Contacts.ContactFieldType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Home"
        },
        {
          "Value": "1",
          "Name": "Mobile"
        },
        {
          "Value": "2",
          "Name": "Work"
        },
        {
          "Value": "3",
          "Name": "Other"
        }
      ],
      "Name": "Windows.ApplicationModel.Contacts.ContactPhoneKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Contacts"
        },
        {
          "Value": "1",
          "Name": "Fields"
        }
      ],
      "Name": "Windows.ApplicationModel.Contacts.ContactSelectionMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Home"
        },
        {
          "Value": "1",
          "Name": "Work"
        },
        {
          "Value": "2",
          "Name": "Other"
        }
      ],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactAddressKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "ServerSearchPartnershipError"
        }
      ],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactBatchStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Birthday"
        },
        {
          "Value": "1",
          "Name": "Anniversary"
        },
        {
          "Value": "2",
          "Name": "Other"
        }
      ],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactDateKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Personal"
        },
        {
          "Value": "1",
          "Name": "Work"
        },
        {
          "Value": "2",
          "Name": "Other"
        }
      ],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactEmailKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Home"
        },
        {
          "Value": "2",
          "Name": "Work"
        },
        {
          "Value": "3",
          "Name": "Mobile"
        },
        {
          "Value": "4",
          "Name": "Other"
        }
      ],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactFieldCategory"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Email"
        },
        {
          "Value": "1",
          "Name": "PhoneNumber"
        },
        {
          "Value": "7",
          "Name": "Address"
        }
      ],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactFieldType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "ContactGroupCreated"
        },
        {
          "Value": "1",
          "Name": "ContactGroupModified"
        },
        {
          "Value": "2",
          "Name": "ContactGroupDeleted"
        },
        {
          "Value": "3",
          "Name": "ChangeTrackingLost"
        }
      ],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactGroupChangeType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "Room"
        },
        {
          "Value": "2",
          "Name": "SpeedDial"
        },
        {
          "Value": "65535",
          "Name": "Custom"
        }
      ],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactGroupKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Created"
        },
        {
          "Value": "1",
          "Name": "Modified"
        },
        {
          "Value": "2",
          "Name": "Deleted"
        },
        {
          "Value": "3",
          "Name": "ChangeTrackingLost"
        }
      ],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactChangeType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "SystemOnly"
        },
        {
          "Value": "1",
          "Name": "Limited"
        },
        {
          "Value": "2",
          "Name": "Full"
        }
      ],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactListOtherAppReadAccess"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "SystemOnly"
        }
      ],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactListOtherAppWriteAccess"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "Idle"
        },
        {
          "Value": "2",
          "Name": "Syncing"
        },
        {
          "Value": "3",
          "Name": "Disconnected"
        },
        {
          "Value": "4",
          "Name": "Throttled"
        },
        {
          "Value": "5",
          "Name": "UserAttentionRequired"
        }
      ],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactListSyncState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "ContactName"
        },
        {
          "Value": "1",
          "Name": "ContactEmail"
        },
        {
          "Value": "2",
          "Name": "ContactPhone"
        },
        {
          "Value": "3",
          "Name": "ContactJobInfo"
        },
        {
          "Value": "4",
          "Name": "ContactYomiName"
        }
      ],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactMatchReasonType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Home"
        },
        {
          "Value": "1",
          "Name": "Mobile"
        },
        {
          "Value": "2",
          "Name": "Work"
        },
        {
          "Value": "3",
          "Name": "Other"
        },
        {
          "Value": "4",
          "Name": "Pager"
        },
        {
          "Value": "5",
          "Name": "BusinessFax"
        },
        {
          "Value": "6",
          "Name": "HomeFax"
        },
        {
          "Value": "7",
          "Name": "Company"
        },
        {
          "Value": "8",
          "Name": "Assistant"
        },
        {
          "Value": "9",
          "Name": "Radio"
        }
      ],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactPhoneKind"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "PhoneNumber"
        },
        {
          "Value": "2",
          "Name": "EmailAddress"
        },
        {
          "Value": "4",
          "Name": "PostalAddress"
        }
      ],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactQueryRequiredFields"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Name"
        },
        {
          "Value": "2",
          "Name": "Email"
        },
        {
          "Value": "4",
          "Name": "Phone"
        },
        {
          "Value": "4294967295",
          "Name": "All"
        }
      ],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactQuerySearchFields"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Other"
        },
        {
          "Value": "1",
          "Name": "Spouse"
        },
        {
          "Value": "2",
          "Name": "Partner"
        },
        {
          "Value": "3",
          "Name": "Sibling"
        },
        {
          "Value": "4",
          "Name": "Parent"
        },
        {
          "Value": "5",
          "Name": "Child"
        }
      ],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactRelationship"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Contacts"
        },
        {
          "Value": "1",
          "Name": "Fields"
        }
      ],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactSelectionMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "AppContactsReadWrite"
        },
        {
          "Value": "1",
          "Name": "AllContactsReadOnly"
        },
        {
          "Value": "2",
          "Name": "AllContactsReadWrite"
        }
      ],
      "Name": "Windows.ApplicationModel.ContactsTemp.ContactStoreAccessType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Copy"
        },
        {
          "Value": "2",
          "Name": "Move"
        },
        {
          "Value": "4",
          "Name": "Link"
        }
      ],
      "Name": "Windows.ApplicationModel.DataTransfer.DataPackageOperation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "NotDownloaded"
        },
        {
          "Value": "1",
          "Name": "Downloading"
        },
        {
          "Value": "2",
          "Name": "Downloaded"
        },
        {
          "Value": "3",
          "Name": "Failed"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailAttachmentDownloadState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "ServerSearchPartnershipError"
        },
        {
          "Value": "2",
          "Name": "ServerSearchUnknownError"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailBatchStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "NormalMessage"
        },
        {
          "Value": "1",
          "Name": "Newsletter"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailClassification"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unflagged"
        },
        {
          "Value": "1",
          "Name": "Flagged"
        },
        {
          "Value": "2",
          "Name": "Completed"
        },
        {
          "Value": "3",
          "Name": "Cleared"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailFlagState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Normal"
        },
        {
          "Value": "1",
          "Name": "High"
        },
        {
          "Value": "2",
          "Name": "Low"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailImportance"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "1",
          "Name": "EditAllowed"
        },
        {
          "Value": "2",
          "Name": "ReplyAllowed"
        },
        {
          "Value": "4",
          "Name": "ReplyAllAllowed"
        },
        {
          "Value": "8",
          "Name": "ForwardAllowed"
        },
        {
          "Value": "16",
          "Name": "ModifyRecipientsAllowed"
        },
        {
          "Value": "32",
          "Name": "ExtractAllowed"
        },
        {
          "Value": "64",
          "Name": "PrintAllowed"
        },
        {
          "Value": "128",
          "Name": "ExportAllowed"
        },
        {
          "Value": "256",
          "Name": "ProgrammaticAccessAllowed"
        },
        {
          "Value": "512",
          "Name": "Owner"
        },
        {
          "Value": "4294967295",
          "Name": "AllPermissions"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailIrmPermissions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "MarkMessageAsSeen"
        },
        {
          "Value": "1",
          "Name": "MarkMessageRead"
        },
        {
          "Value": "2",
          "Name": "ChangeMessageFlagState"
        },
        {
          "Value": "3",
          "Name": "MoveMessage"
        },
        {
          "Value": "4",
          "Name": "SaveDraft"
        },
        {
          "Value": "5",
          "Name": "SendMessage"
        },
        {
          "Value": "6",
          "Name": "CreateReplyMessage"
        },
        {
          "Value": "7",
          "Name": "CreateReplyAllMessage"
        },
        {
          "Value": "8",
          "Name": "CreateForwardMessage"
        },
        {
          "Value": "9",
          "Name": "MoveFolder"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailMailboxActionType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "1",
          "Name": "InternalOofMessages"
        },
        {
          "Value": "2",
          "Name": "ExternalOofMessages"
        },
        {
          "Value": "4",
          "Name": "ServerSearch"
        },
        {
          "Value": "8",
          "Name": "AllFoldersServerSearch"
        },
        {
          "Value": "16",
          "Name": "SubFolderServerSearch"
        },
        {
          "Value": "32",
          "Name": "SmartReply"
        },
        {
          "Value": "64",
          "Name": "Irm"
        },
        {
          "Value": "128",
          "Name": "CanResolveRecipients"
        },
        {
          "Value": "256",
          "Name": "CanValidateCertificates"
        },
        {
          "Value": "512",
          "Name": "CanCreateMeetings"
        },
        {
          "Value": "1024",
          "Name": "CanForwardMeetings"
        },
        {
          "Value": "2048",
          "Name": "CanRespondToMeetings"
        },
        {
          "Value": "4096",
          "Name": "CanSendNewTimeProposals"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailMailboxCapabilities"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "MessageCreated"
        },
        {
          "Value": "1",
          "Name": "MessageModified"
        },
        {
          "Value": "2",
          "Name": "MessageDeleted"
        },
        {
          "Value": "3",
          "Name": "FolderCreated"
        },
        {
          "Value": "4",
          "Name": "FolderModified"
        },
        {
          "Value": "5",
          "Name": "FolderDeleted"
        },
        {
          "Value": "6",
          "Name": "ChangeTrackingLost"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailMailboxChangeType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "SystemOnly"
        },
        {
          "Value": "1",
          "Name": "Full"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailMailboxOtherAppReadAccess"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Limited"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailMailboxOtherAppWriteAccess"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "Idle"
        },
        {
          "Value": "2",
          "Name": "Syncing"
        },
        {
          "Value": "3",
          "Name": "Disconnected"
        },
        {
          "Value": "4",
          "Name": "Throttled"
        },
        {
          "Value": "5",
          "Name": "UserAttentionRequired"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailMailboxSyncState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "AuthenticationError"
        },
        {
          "Value": "2",
          "Name": "UnknownError"
        },
        {
          "Value": "3",
          "Name": "NoConnectivity"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailMailboxSyncStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Email"
        },
        {
          "Value": "1",
          "Name": "VisualVoiceMail"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailMailboxType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Accept"
        },
        {
          "Value": "1",
          "Name": "Decline"
        },
        {
          "Value": "2",
          "Name": "Tentative"
        },
        {
          "Value": "3",
          "Name": "Cancel"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailMeetingResponseType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Html"
        },
        {
          "Value": "1",
          "Name": "PlainText"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailMessageBodyType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Reply"
        },
        {
          "Value": "2",
          "Name": "ReplyAll"
        },
        {
          "Value": "3",
          "Name": "Forward"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailMessageResponseType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "All"
        },
        {
          "Value": "1",
          "Name": "Important"
        },
        {
          "Value": "2",
          "Name": "Flagged"
        },
        {
          "Value": "3",
          "Name": "Unread"
        },
        {
          "Value": "4",
          "Name": "Read"
        },
        {
          "Value": "5",
          "Name": "Unseen"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailMessageTypeFilter"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Email"
        },
        {
          "Value": "1",
          "Name": "Sms"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailRecipientAddressType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Subject"
        },
        {
          "Value": "2",
          "Name": "Sender"
        },
        {
          "Value": "4",
          "Name": "Preview"
        },
        {
          "Value": "8",
          "Name": "Recipients"
        },
        {
          "Value": "4294967295",
          "Name": "All"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailSearchFields"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Descending"
        },
        {
          "Value": "1",
          "Name": "Ascending"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailSortDirection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Date"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailSortProperty"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Root"
        },
        {
          "Value": "2",
          "Name": "Inbox"
        },
        {
          "Value": "3",
          "Name": "Outbox"
        },
        {
          "Value": "4",
          "Name": "Drafts"
        },
        {
          "Value": "5",
          "Name": "Deleted"
        },
        {
          "Value": "6",
          "Name": "Sent"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailSpecialFolderType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "AppMailboxesReadWrite"
        },
        {
          "Value": "1",
          "Name": "AllMailboxesLimitedReadWrite"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.EmailStoreAccessType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Any"
        },
        {
          "Value": "1",
          "Name": "TripleDES"
        },
        {
          "Value": "2",
          "Name": "DES"
        },
        {
          "Value": "3",
          "Name": "RC2128bit"
        },
        {
          "Value": "4",
          "Name": "RC264bit"
        },
        {
          "Value": "5",
          "Name": "RC240bit"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.SmimeEncryptionAlgorithm"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Any"
        },
        {
          "Value": "1",
          "Name": "SHA1"
        },
        {
          "Value": "2",
          "Name": "MD5"
        }
      ],
      "Name": "Windows.ApplicationModel.Email.SmimeSigningAlgorithm"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Participants"
        },
        {
          "Value": "1",
          "Name": "Contact"
        },
        {
          "Value": "2",
          "Name": "ConversationId"
        },
        {
          "Value": "3",
          "Name": "Custom"
        }
      ],
      "Name": "Windows.ApplicationModel.Chat.ChatConversationThreadingType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "MessageCreated"
        },
        {
          "Value": "1",
          "Name": "MessageModified"
        },
        {
          "Value": "2",
          "Name": "MessageDeleted"
        },
        {
          "Value": "3",
          "Name": "ChangeTrackingLost"
        }
      ],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageChangeType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Poke"
        },
        {
          "Value": "2",
          "Name": "Toast"
        },
        {
          "Value": "4",
          "Name": "Tile"
        },
        {
          "Value": "8",
          "Name": "Badge"
        },
        {
          "Value": "16",
          "Name": "ActionCenter"
        }
      ],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageNotificationAction"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "1",
          "Name": "AutoReplied"
        },
        {
          "Value": "2",
          "Name": "PlayedOverSpeech"
        }
      ],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageNotificationPretreatment"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Draft"
        },
        {
          "Value": "1",
          "Name": "Sending"
        },
        {
          "Value": "2",
          "Name": "Sent"
        },
        {
          "Value": "3",
          "Name": "SendRetryNeeded"
        },
        {
          "Value": "4",
          "Name": "SendFailed"
        },
        {
          "Value": "5",
          "Name": "Received"
        },
        {
          "Value": "6",
          "Name": "ReceiveDownloadNeeded"
        },
        {
          "Value": "7",
          "Name": "ReceiveDownloadFailed"
        },
        {
          "Value": "8",
          "Name": "ReceiveDownloading"
        },
        {
          "Value": "9",
          "Name": "Deleted"
        }
      ],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Standard"
        },
        {
          "Value": "1",
          "Name": "AutoReply"
        },
        {
          "Value": "2",
          "Name": "ReceivedDuringQuiteHours"
        },
        {
          "Value": "3",
          "Name": "FileTransferRequest"
        },
        {
          "Value": "4",
          "Name": "TransportCustom"
        }
      ],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Valid"
        },
        {
          "Value": "1",
          "Name": "NoRecipients"
        },
        {
          "Value": "2",
          "Name": "InvalidData"
        },
        {
          "Value": "3",
          "Name": "MessageTooLarge"
        },
        {
          "Value": "4",
          "Name": "TooManyRecipients"
        },
        {
          "Value": "5",
          "Name": "TransportInactive"
        },
        {
          "Value": "6",
          "Name": "TransportNotFound"
        },
        {
          "Value": "7",
          "Name": "TooManyAttachments"
        },
        {
          "Value": "8",
          "Name": "InvalidRecipients"
        },
        {
          "Value": "9",
          "Name": "InvalidBody"
        },
        {
          "Value": "10",
          "Name": "InvalidOther"
        }
      ],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageValidationStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "H264_AAC_MP4"
        },
        {
          "Value": "1",
          "Name": "H254_AAC_3GP"
        },
        {
          "Value": "2",
          "Name": "H263_AMRNB_3GP"
        },
        {
          "Value": "3",
          "Name": "MPEG4_AMRNB_3GP"
        }
      ],
      "Name": "Windows.ApplicationModel.Chat.ChatMessageVideoFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Lost"
        },
        {
          "Value": "1",
          "Name": "StoreModified"
        },
        {
          "Value": "2",
          "Name": "MessageCreated"
        },
        {
          "Value": "3",
          "Name": "MessageModified"
        },
        {
          "Value": "4",
          "Name": "MessageDeleted"
        },
        {
          "Value": "5",
          "Name": "ConversationModified"
        },
        {
          "Value": "6",
          "Name": "ConversationDeleted"
        },
        {
          "Value": "7",
          "Name": "ConversationTransportDeleted"
        }
      ],
      "Name": "Windows.ApplicationModel.Chat.ChatStoreChangedEventType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Succeeded"
        },
        {
          "Value": "1",
          "Name": "NothingToFulfill"
        },
        {
          "Value": "2",
          "Name": "PurchasePending"
        },
        {
          "Value": "3",
          "Name": "PurchaseReverted"
        },
        {
          "Value": "4",
          "Name": "ServerError"
        }
      ],
      "Name": "Windows.ApplicationModel.Store.FulfillmentResult"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Succeeded"
        },
        {
          "Value": "1",
          "Name": "AlreadyPurchased"
        },
        {
          "Value": "2",
          "Name": "NotFulfilled"
        },
        {
          "Value": "3",
          "Name": "NotPurchased"
        }
      ],
      "Name": "Windows.ApplicationModel.Store.ProductPurchaseStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "Durable"
        },
        {
          "Value": "2",
          "Name": "Consumable"
        }
      ],
      "Name": "Windows.ApplicationModel.Store.ProductType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "OpenItem"
        },
        {
          "Value": "1",
          "Name": "Transaction"
        },
        {
          "Value": "2",
          "Name": "MoreTransactions"
        },
        {
          "Value": "3",
          "Name": "Message"
        },
        {
          "Value": "4",
          "Name": "Verb"
        }
      ],
      "Name": "Windows.ApplicationModel.Wallet.WalletActionKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Invalid"
        },
        {
          "Value": "1",
          "Name": "Upca"
        },
        {
          "Value": "2",
          "Name": "Upce"
        },
        {
          "Value": "3",
          "Name": "Ean13"
        },
        {
          "Value": "4",
          "Name": "Ean8"
        },
        {
          "Value": "5",
          "Name": "Itf"
        },
        {
          "Value": "6",
          "Name": "Code39"
        },
        {
          "Value": "7",
          "Name": "Code128"
        },
        {
          "Value": "8",
          "Name": "Qr"
        },
        {
          "Value": "9",
          "Name": "Pdf417"
        },
        {
          "Value": "10",
          "Name": "Aztec"
        },
        {
          "Value": "100000",
          "Name": "Custom"
        }
      ],
      "Name": "Windows.ApplicationModel.Wallet.WalletBarcodeSymbology"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Hidden"
        },
        {
          "Value": "1",
          "Name": "HeaderField1"
        },
        {
          "Value": "2",
          "Name": "HeaderField2"
        },
        {
          "Value": "3",
          "Name": "PrimaryField1"
        },
        {
          "Value": "4",
          "Name": "PrimaryField2"
        },
        {
          "Value": "5",
          "Name": "SecondaryField1"
        },
        {
          "Value": "6",
          "Name": "SecondaryField2"
        },
        {
          "Value": "7",
          "Name": "SecondaryField3"
        },
        {
          "Value": "8",
          "Name": "SecondaryField4"
        },
        {
          "Value": "9",
          "Name": "SecondaryField5"
        },
        {
          "Value": "10",
          "Name": "CenterField1"
        },
        {
          "Value": "11",
          "Name": "FooterField1"
        },
        {
          "Value": "12",
          "Name": "FooterField2"
        },
        {
          "Value": "13",
          "Name": "FooterField3"
        },
        {
          "Value": "14",
          "Name": "FooterField4"
        }
      ],
      "Name": "Windows.ApplicationModel.Wallet.WalletDetailViewPosition"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Invalid"
        },
        {
          "Value": "1",
          "Name": "Deal"
        },
        {
          "Value": "2",
          "Name": "General"
        },
        {
          "Value": "3",
          "Name": "PaymentInstrument"
        },
        {
          "Value": "4",
          "Name": "Ticket"
        },
        {
          "Value": "5",
          "Name": "BoardingPass"
        },
        {
          "Value": "6",
          "Name": "MembershipCard"
        }
      ],
      "Name": "Windows.ApplicationModel.Wallet.WalletItemKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Hidden"
        },
        {
          "Value": "1",
          "Name": "Field1"
        },
        {
          "Value": "2",
          "Name": "Field2"
        }
      ],
      "Name": "Windows.ApplicationModel.Wallet.WalletSummaryViewPosition"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "InvalidJsonString"
        },
        {
          "Value": "2",
          "Name": "InvalidJsonNumber"
        },
        {
          "Value": "3",
          "Name": "JsonValueNotFound"
        },
        {
          "Value": "4",
          "Name": "ImplementationLimit"
        }
      ],
      "Name": "Windows.Data.Json.JsonErrorStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Null"
        },
        {
          "Value": "1",
          "Name": "Boolean"
        },
        {
          "Value": "2",
          "Name": "Number"
        },
        {
          "Value": "3",
          "Name": "String"
        },
        {
          "Value": "4",
          "Name": "Array"
        },
        {
          "Value": "5",
          "Name": "Object"
        }
      ],
      "Name": "Windows.Data.Json.JsonValueType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "NotNormalized"
        },
        {
          "Value": "1",
          "Name": "Number"
        },
        {
          "Value": "3",
          "Name": "Currency"
        },
        {
          "Value": "4",
          "Name": "Date"
        },
        {
          "Value": "5",
          "Name": "Time"
        }
      ],
      "Name": "Windows.Data.Text.AlternateNormalizationFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "UppercaseLetter"
        },
        {
          "Value": "1",
          "Name": "LowercaseLetter"
        },
        {
          "Value": "2",
          "Name": "TitlecaseLetter"
        },
        {
          "Value": "3",
          "Name": "ModifierLetter"
        },
        {
          "Value": "4",
          "Name": "OtherLetter"
        },
        {
          "Value": "5",
          "Name": "NonspacingMark"
        },
        {
          "Value": "6",
          "Name": "SpacingCombiningMark"
        },
        {
          "Value": "7",
          "Name": "EnclosingMark"
        },
        {
          "Value": "8",
          "Name": "DecimalDigitNumber"
        },
        {
          "Value": "9",
          "Name": "LetterNumber"
        },
        {
          "Value": "10",
          "Name": "OtherNumber"
        },
        {
          "Value": "11",
          "Name": "SpaceSeparator"
        },
        {
          "Value": "12",
          "Name": "LineSeparator"
        },
        {
          "Value": "13",
          "Name": "ParagraphSeparator"
        },
        {
          "Value": "14",
          "Name": "Control"
        },
        {
          "Value": "15",
          "Name": "Format"
        },
        {
          "Value": "16",
          "Name": "Surrogate"
        },
        {
          "Value": "17",
          "Name": "PrivateUse"
        },
        {
          "Value": "18",
          "Name": "ConnectorPunctuation"
        },
        {
          "Value": "19",
          "Name": "DashPunctuation"
        },
        {
          "Value": "20",
          "Name": "OpenPunctuation"
        },
        {
          "Value": "21",
          "Name": "ClosePunctuation"
        },
        {
          "Value": "22",
          "Name": "InitialQuotePunctuation"
        },
        {
          "Value": "23",
          "Name": "FinalQuotePunctuation"
        },
        {
          "Value": "24",
          "Name": "OtherPunctuation"
        },
        {
          "Value": "25",
          "Name": "MathSymbol"
        },
        {
          "Value": "26",
          "Name": "CurrencySymbol"
        },
        {
          "Value": "27",
          "Name": "ModifierSymbol"
        },
        {
          "Value": "28",
          "Name": "OtherSymbol"
        },
        {
          "Value": "29",
          "Name": "NotAssigned"
        }
      ],
      "Name": "Windows.Data.Text.UnicodeGeneralCategory"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Decimal"
        },
        {
          "Value": "2",
          "Name": "Digit"
        },
        {
          "Value": "3",
          "Name": "Numeric"
        }
      ],
      "Name": "Windows.Data.Text.UnicodeNumericType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Invalid"
        },
        {
          "Value": "1",
          "Name": "ElementNode"
        },
        {
          "Value": "2",
          "Name": "AttributeNode"
        },
        {
          "Value": "3",
          "Name": "TextNode"
        },
        {
          "Value": "4",
          "Name": "DataSectionNode"
        },
        {
          "Value": "5",
          "Name": "EntityReferenceNode"
        },
        {
          "Value": "6",
          "Name": "EntityNode"
        },
        {
          "Value": "7",
          "Name": "ProcessingInstructionNode"
        },
        {
          "Value": "8",
          "Name": "CommentNode"
        },
        {
          "Value": "9",
          "Name": "DocumentNode"
        },
        {
          "Value": "10",
          "Name": "DocumentTypeNode"
        },
        {
          "Value": "11",
          "Name": "DocumentFragmentNode"
        },
        {
          "Value": "12",
          "Name": "NotationNode"
        }
      ],
      "Name": "Windows.Data.Xml.Dom.NodeType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "LimitedDiscoverableMode"
        },
        {
          "Value": "2",
          "Name": "GeneralDiscoverableMode"
        },
        {
          "Value": "4",
          "Name": "ClassicNotSupported"
        },
        {
          "Value": "8",
          "Name": "DualModeControllerCapable"
        },
        {
          "Value": "16",
          "Name": "DualModeHostCapable"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisementFlags"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Created"
        },
        {
          "Value": "1",
          "Name": "Waiting"
        },
        {
          "Value": "2",
          "Name": "Started"
        },
        {
          "Value": "3",
          "Name": "Stopping"
        },
        {
          "Value": "4",
          "Name": "Stopped"
        },
        {
          "Value": "5",
          "Name": "Aborted"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisementPublisherStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "ConnectableUndirected"
        },
        {
          "Value": "1",
          "Name": "ConnectableDirected"
        },
        {
          "Value": "2",
          "Name": "ScannableUndirected"
        },
        {
          "Value": "3",
          "Name": "NonConnectableUndirected"
        },
        {
          "Value": "4",
          "Name": "ScanResponse"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisementType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Created"
        },
        {
          "Value": "1",
          "Name": "Started"
        },
        {
          "Value": "2",
          "Name": "Stopping"
        },
        {
          "Value": "3",
          "Name": "Stopped"
        },
        {
          "Value": "4",
          "Name": "Aborted"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisementWatcherStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Passive"
        },
        {
          "Value": "1",
          "Name": "Active"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.Advertisement.BluetoothLEScanningMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Cached"
        },
        {
          "Value": "1",
          "Name": "Uncached"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.BluetoothCacheMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Disconnected"
        },
        {
          "Value": "1",
          "Name": "Connected"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.BluetoothConnectionStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "RadioNotAvailable"
        },
        {
          "Value": "2",
          "Name": "ResourceInUse"
        },
        {
          "Value": "3",
          "Name": "DeviceNotConnected"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.BluetoothError"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Miscellaneous"
        },
        {
          "Value": "1",
          "Name": "Computer"
        },
        {
          "Value": "2",
          "Name": "Phone"
        },
        {
          "Value": "3",
          "Name": "NetworkAccessPoint"
        },
        {
          "Value": "4",
          "Name": "AudioVideo"
        },
        {
          "Value": "5",
          "Name": "Peripheral"
        },
        {
          "Value": "6",
          "Name": "Imaging"
        },
        {
          "Value": "7",
          "Name": "Wearable"
        },
        {
          "Value": "8",
          "Name": "Toy"
        },
        {
          "Value": "9",
          "Name": "Health"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.BluetoothMajorClass"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Uncategorized"
        },
        {
          "Value": "0",
          "Name": "NetworkFullyAvailable"
        },
        {
          "Value": "1",
          "Name": "ComputerDesktop"
        },
        {
          "Value": "1",
          "Name": "PhoneCellular"
        },
        {
          "Value": "1",
          "Name": "AudioVideoWearableHeadset"
        },
        {
          "Value": "1",
          "Name": "PeripheralJoystick"
        },
        {
          "Value": "1",
          "Name": "WearableWristwatch"
        },
        {
          "Value": "1",
          "Name": "ToyRobot"
        },
        {
          "Value": "1",
          "Name": "HealthBloodPressureMonitor"
        },
        {
          "Value": "2",
          "Name": "ComputerServer"
        },
        {
          "Value": "2",
          "Name": "PhoneCordless"
        },
        {
          "Value": "2",
          "Name": "AudioVideoHandsFree"
        },
        {
          "Value": "2",
          "Name": "PeripheralGamepad"
        },
        {
          "Value": "2",
          "Name": "WearablePager"
        },
        {
          "Value": "2",
          "Name": "ToyVehicle"
        },
        {
          "Value": "2",
          "Name": "HealthThermometer"
        },
        {
          "Value": "3",
          "Name": "ComputerLaptop"
        },
        {
          "Value": "3",
          "Name": "PhoneSmartPhone"
        },
        {
          "Value": "3",
          "Name": "PeripheralRemoteControl"
        },
        {
          "Value": "3",
          "Name": "WearableJacket"
        },
        {
          "Value": "3",
          "Name": "ToyDoll"
        },
        {
          "Value": "3",
          "Name": "HealthWeighingScale"
        },
        {
          "Value": "4",
          "Name": "ComputerHandheld"
        },
        {
          "Value": "4",
          "Name": "PhoneWired"
        },
        {
          "Value": "4",
          "Name": "AudioVideoMicrophone"
        },
        {
          "Value": "4",
          "Name": "PeripheralSensing"
        },
        {
          "Value": "4",
          "Name": "WearableHelmet"
        },
        {
          "Value": "4",
          "Name": "ToyController"
        },
        {
          "Value": "4",
          "Name": "HealthGlucoseMeter"
        },
        {
          "Value": "5",
          "Name": "ComputerPalmSize"
        },
        {
          "Value": "5",
          "Name": "PhoneIsdn"
        },
        {
          "Value": "5",
          "Name": "AudioVideoLoudspeaker"
        },
        {
          "Value": "5",
          "Name": "PeripheralDigitizerTablet"
        },
        {
          "Value": "5",
          "Name": "WearableGlasses"
        },
        {
          "Value": "5",
          "Name": "ToyGame"
        },
        {
          "Value": "5",
          "Name": "HealthPulseOximeter"
        },
        {
          "Value": "6",
          "Name": "ComputerWearable"
        },
        {
          "Value": "6",
          "Name": "AudioVideoHeadphones"
        },
        {
          "Value": "6",
          "Name": "PeripheralCardReader"
        },
        {
          "Value": "6",
          "Name": "HealthHeartRateMonitor"
        },
        {
          "Value": "7",
          "Name": "ComputerTablet"
        },
        {
          "Value": "7",
          "Name": "AudioVideoPortableAudio"
        },
        {
          "Value": "7",
          "Name": "PeripheralDigitalPen"
        },
        {
          "Value": "7",
          "Name": "HealthHealthDataDisplay"
        },
        {
          "Value": "8",
          "Name": "NetworkUsed01To17Percent"
        },
        {
          "Value": "8",
          "Name": "AudioVideoCarAudio"
        },
        {
          "Value": "8",
          "Name": "PeripheralHandheldScanner"
        },
        {
          "Value": "8",
          "Name": "HealthStepCounter"
        },
        {
          "Value": "9",
          "Name": "AudioVideoSetTopBox"
        },
        {
          "Value": "9",
          "Name": "PeripheralHandheldGesture"
        },
        {
          "Value": "9",
          "Name": "HealthBodyCompositionAnalyzer"
        },
        {
          "Value": "10",
          "Name": "AudioVideoHifiAudioDevice"
        },
        {
          "Value": "10",
          "Name": "HealthPeakFlowMonitor"
        },
        {
          "Value": "11",
          "Name": "AudioVideoVcr"
        },
        {
          "Value": "11",
          "Name": "HealthMedicationMonitor"
        },
        {
          "Value": "12",
          "Name": "AudioVideoVideoCamera"
        },
        {
          "Value": "12",
          "Name": "HealthKneeProsthesis"
        },
        {
          "Value": "13",
          "Name": "AudioVideoCamcorder"
        },
        {
          "Value": "13",
          "Name": "HealthAnkleProsthesis"
        },
        {
          "Value": "14",
          "Name": "AudioVideoVideoMonitor"
        },
        {
          "Value": "14",
          "Name": "HealthGenericHealthManager"
        },
        {
          "Value": "15",
          "Name": "AudioVideoVideoDisplayAndLoudspeaker"
        },
        {
          "Value": "15",
          "Name": "HealthPersonalMobilityDevice"
        },
        {
          "Value": "16",
          "Name": "NetworkUsed17To33Percent"
        },
        {
          "Value": "16",
          "Name": "AudioVideoVideoConferencing"
        },
        {
          "Value": "18",
          "Name": "AudioVideoGamingOrToy"
        },
        {
          "Value": "24",
          "Name": "NetworkUsed33To50Percent"
        },
        {
          "Value": "32",
          "Name": "NetworkUsed50To67Percent"
        },
        {
          "Value": "40",
          "Name": "NetworkUsed67To83Percent"
        },
        {
          "Value": "48",
          "Name": "NetworkUsed83To99Percent"
        },
        {
          "Value": "56",
          "Name": "NetworkNoServiceAvailable"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.BluetoothMinorClass"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "LimitedDiscoverableMode"
        },
        {
          "Value": "8",
          "Name": "PositioningService"
        },
        {
          "Value": "16",
          "Name": "NetworkingService"
        },
        {
          "Value": "32",
          "Name": "RenderingService"
        },
        {
          "Value": "64",
          "Name": "CapturingService"
        },
        {
          "Value": "128",
          "Name": "ObjectTransferService"
        },
        {
          "Value": "256",
          "Name": "AudioService"
        },
        {
          "Value": "512",
          "Name": "TelephoneService"
        },
        {
          "Value": "1024",
          "Name": "InformationService"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.BluetoothServiceCapabilities"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Notify"
        },
        {
          "Value": "2",
          "Name": "Indicate"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientCharacteristicConfigurationDescriptorValue"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "Unreachable"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Broadcast"
        },
        {
          "Value": "2",
          "Name": "Read"
        },
        {
          "Value": "4",
          "Name": "WriteWithoutResponse"
        },
        {
          "Value": "8",
          "Name": "Write"
        },
        {
          "Value": "16",
          "Name": "Notify"
        },
        {
          "Value": "32",
          "Name": "Indicate"
        },
        {
          "Value": "64",
          "Name": "AuthenticatedSignedWrites"
        },
        {
          "Value": "128",
          "Name": "ExtendedProperties"
        },
        {
          "Value": "256",
          "Name": "ReliableWrites"
        },
        {
          "Value": "512",
          "Name": "WritableAuxiliaries"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicProperties"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Plain"
        },
        {
          "Value": "1",
          "Name": "AuthenticationRequired"
        },
        {
          "Value": "2",
          "Name": "EncryptionRequired"
        },
        {
          "Value": "3",
          "Name": "EncryptionAndAuthenticationRequired"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "WriteWithResponse"
        },
        {
          "Value": "1",
          "Name": "WriteWithoutResponse"
        }
      ],
      "Name": "Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteOption"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unspecified"
        },
        {
          "Value": "1",
          "Name": "Allowed"
        },
        {
          "Value": "2",
          "Name": "DeniedByUser"
        },
        {
          "Value": "3",
          "Name": "DeniedBySystem"
        }
      ],
      "Name": "Windows.Devices.Enumeration.DeviceAccessStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "All"
        },
        {
          "Value": "1",
          "Name": "AudioCapture"
        },
        {
          "Value": "2",
          "Name": "AudioRender"
        },
        {
          "Value": "3",
          "Name": "PortableStorageDevice"
        },
        {
          "Value": "4",
          "Name": "VideoCapture"
        },
        {
          "Value": "5",
          "Name": "ImageScanner"
        },
        {
          "Value": "6",
          "Name": "Location"
        }
      ],
      "Name": "Windows.Devices.Enumeration.DeviceClass"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Created"
        },
        {
          "Value": "1",
          "Name": "Started"
        },
        {
          "Value": "2",
          "Name": "EnumerationCompleted"
        },
        {
          "Value": "3",
          "Name": "Stopping"
        },
        {
          "Value": "4",
          "Name": "Stopped"
        },
        {
          "Value": "5",
          "Name": "Aborted"
        }
      ],
      "Name": "Windows.Devices.Enumeration.DeviceWatcherStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "Front"
        },
        {
          "Value": "2",
          "Name": "Back"
        },
        {
          "Value": "3",
          "Name": "Top"
        },
        {
          "Value": "4",
          "Name": "Bottom"
        },
        {
          "Value": "5",
          "Name": "Left"
        },
        {
          "Value": "6",
          "Name": "Right"
        }
      ],
      "Name": "Windows.Devices.Enumeration.Panel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "DeviceInterface"
        },
        {
          "Value": "2",
          "Name": "DeviceContainer"
        },
        {
          "Value": "3",
          "Name": "Device"
        },
        {
          "Value": "4",
          "Name": "DeviceInterfaceClass"
        },
        {
          "Value": "5",
          "Name": "AssociationEndpoint"
        },
        {
          "Value": "6",
          "Name": "AssociationEndpointContainer"
        },
        {
          "Value": "7",
          "Name": "AssociationEndpointService"
        }
      ],
      "Name": "Windows.Devices.Enumeration.Pnp.PnpObjectType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unspecified"
        },
        {
          "Value": "1",
          "Name": "Terrain"
        },
        {
          "Value": "2",
          "Name": "Ellipsoid"
        },
        {
          "Value": "3",
          "Name": "Geoid"
        },
        {
          "Value": "4",
          "Name": "Surface"
        }
      ],
      "Name": "Windows.Devices.Geolocation.AltitudeReferenceSystem"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Ready"
        },
        {
          "Value": "1",
          "Name": "Initializing"
        },
        {
          "Value": "2",
          "Name": "NoData"
        },
        {
          "Value": "3",
          "Name": "Disabled"
        },
        {
          "Value": "4",
          "Name": "NotInitialized"
        },
        {
          "Value": "5",
          "Name": "NotAvailable"
        }
      ],
      "Name": "Windows.Devices.Geolocation.Geofencing.GeofenceMonitorStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Used"
        },
        {
          "Value": "1",
          "Name": "Expired"
        }
      ],
      "Name": "Windows.Devices.Geolocation.Geofencing.GeofenceRemovalReason"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Entered"
        },
        {
          "Value": "2",
          "Name": "Exited"
        },
        {
          "Value": "4",
          "Name": "Removed"
        }
      ],
      "Name": "Windows.Devices.Geolocation.Geofencing.GeofenceState"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Entered"
        },
        {
          "Value": "2",
          "Name": "Exited"
        },
        {
          "Value": "4",
          "Name": "Removed"
        }
      ],
      "Name": "Windows.Devices.Geolocation.Geofencing.MonitoredGeofenceStates"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unspecified"
        },
        {
          "Value": "1",
          "Name": "Allowed"
        },
        {
          "Value": "2",
          "Name": "Denied"
        }
      ],
      "Name": "Windows.Devices.Geolocation.GeolocationAccessStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Geopoint"
        },
        {
          "Value": "1",
          "Name": "Geocircle"
        },
        {
          "Value": "2",
          "Name": "Geopath"
        },
        {
          "Value": "3",
          "Name": "GeoboundingBox"
        }
      ],
      "Name": "Windows.Devices.Geolocation.GeoshapeType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "High"
        }
      ],
      "Name": "Windows.Devices.Geolocation.PositionAccuracy"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Cellular"
        },
        {
          "Value": "1",
          "Name": "Satellite"
        },
        {
          "Value": "2",
          "Name": "WiFi"
        },
        {
          "Value": "3",
          "Name": "IPAddress"
        },
        {
          "Value": "4",
          "Name": "Unknown"
        }
      ],
      "Name": "Windows.Devices.Geolocation.PositionSource"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Ready"
        },
        {
          "Value": "1",
          "Name": "Initializing"
        },
        {
          "Value": "2",
          "Name": "NoData"
        },
        {
          "Value": "3",
          "Name": "Disabled"
        },
        {
          "Value": "4",
          "Name": "NotInitialized"
        },
        {
          "Value": "5",
          "Name": "NotAvailable"
        }
      ],
      "Name": "Windows.Devices.Geolocation.PositionStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Physical"
        },
        {
          "Value": "1",
          "Name": "Application"
        },
        {
          "Value": "2",
          "Name": "Logical"
        },
        {
          "Value": "3",
          "Name": "Report"
        },
        {
          "Value": "4",
          "Name": "NamedArray"
        },
        {
          "Value": "5",
          "Name": "UsageSwitch"
        },
        {
          "Value": "6",
          "Name": "UsageModifier"
        },
        {
          "Value": "7",
          "Name": "Other"
        }
      ],
      "Name": "Windows.Devices.HumanInterfaceDevice.HidCollectionType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Input"
        },
        {
          "Value": "1",
          "Name": "Output"
        },
        {
          "Value": "2",
          "Name": "Feature"
        }
      ],
      "Name": "Windows.Devices.HumanInterfaceDevice.HidReportType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Touch"
        },
        {
          "Value": "1",
          "Name": "Pen"
        },
        {
          "Value": "2",
          "Name": "Mouse"
        }
      ],
      "Name": "Windows.Devices.Input.PointerDeviceType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "High"
        },
        {
          "Value": "1",
          "Name": "Low"
        }
      ],
      "Name": "Windows.Devices.Sensors.ActivitySensorReadingConfidence"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Disabled"
        },
        {
          "Value": "1",
          "Name": "Enabled"
        },
        {
          "Value": "2",
          "Name": "Error"
        }
      ],
      "Name": "Windows.Devices.Sensors.ActivitySensorStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "Stationary"
        },
        {
          "Value": "2",
          "Name": "Fidgeting"
        },
        {
          "Value": "3",
          "Name": "Walking"
        },
        {
          "Value": "4",
          "Name": "Running"
        },
        {
          "Value": "5",
          "Name": "InVehicle"
        },
        {
          "Value": "6",
          "Name": "Biking"
        }
      ],
      "Name": "Windows.Devices.Sensors.ActivityType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "Unreliable"
        },
        {
          "Value": "2",
          "Name": "Approximate"
        },
        {
          "Value": "3",
          "Name": "High"
        }
      ],
      "Name": "Windows.Devices.Sensors.MagnetometerAccuracy"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Disabled"
        },
        {
          "Value": "1",
          "Name": "Idle"
        },
        {
          "Value": "2",
          "Name": "Active"
        },
        {
          "Value": "3",
          "Name": "Error"
        }
      ],
      "Name": "Windows.Devices.Sensors.PedometerStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "Walking"
        },
        {
          "Value": "2",
          "Name": "Running"
        }
      ],
      "Name": "Windows.Devices.Sensors.PedometerStepKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Absolute"
        },
        {
          "Value": "1",
          "Name": "Relative"
        }
      ],
      "Name": "Windows.Devices.Sensors.SensorReadingType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Accelerometer"
        },
        {
          "Value": "1",
          "Name": "ActivitySensor"
        },
        {
          "Value": "2",
          "Name": "Barometer"
        },
        {
          "Value": "3",
          "Name": "Compass"
        },
        {
          "Value": "4",
          "Name": "CustomSensor"
        },
        {
          "Value": "5",
          "Name": "Gyroscope"
        },
        {
          "Value": "6",
          "Name": "ProximitySensor"
        },
        {
          "Value": "7",
          "Name": "Inclinometer"
        },
        {
          "Value": "8",
          "Name": "LightSensor"
        },
        {
          "Value": "9",
          "Name": "OrientationSensor"
        },
        {
          "Value": "10",
          "Name": "Pedometer"
        },
        {
          "Value": "11",
          "Name": "RelativeInclinometer"
        },
        {
          "Value": "12",
          "Name": "RelativeOrientationSensor"
        },
        {
          "Value": "13",
          "Name": "SimpleOrientationSensor"
        }
      ],
      "Name": "Windows.Devices.Sensors.SensorType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "NotRotated"
        },
        {
          "Value": "1",
          "Name": "Rotated90DegreesCounterclockwise"
        },
        {
          "Value": "2",
          "Name": "Rotated180DegreesCounterclockwise"
        },
        {
          "Value": "3",
          "Name": "Rotated270DegreesCounterclockwise"
        },
        {
          "Value": "4",
          "Name": "Faceup"
        },
        {
          "Value": "5",
          "Name": "Facedown"
        }
      ],
      "Name": "Windows.Devices.Sensors.SimpleOrientation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Denied"
        },
        {
          "Value": "1",
          "Name": "Allowed"
        }
      ],
      "Name": "Windows.Devices.SmartCards.SmartCardActivationPolicyChangeResult"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Disabled"
        },
        {
          "Value": "1",
          "Name": "ForegroundOverride"
        },
        {
          "Value": "2",
          "Name": "Enabled"
        }
      ],
      "Name": "Windows.Devices.SmartCards.SmartCardAppletIdGroupActivationPolicy"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Other"
        },
        {
          "Value": "1",
          "Name": "Payment"
        }
      ],
      "Name": "Windows.Devices.SmartCards.SmartCardEmulationCategory"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Host"
        },
        {
          "Value": "1",
          "Name": "Uicc"
        }
      ],
      "Name": "Windows.Devices.SmartCards.SmartCardEmulationType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "ConnectionLost"
        },
        {
          "Value": "1",
          "Name": "ConnectionRedirected"
        }
      ],
      "Name": "Windows.Devices.SmartCards.SmartCardEmulatorConnectionDeactivatedReason"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "NfcReader"
        }
      ],
      "Name": "Windows.Devices.SmartCards.SmartCardEmulatorConnectionSource"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Never"
        },
        {
          "Value": "1",
          "Name": "Always"
        },
        {
          "Value": "2",
          "Name": "ScreenOn"
        },
        {
          "Value": "3",
          "Name": "ScreenUnlocked"
        }
      ],
      "Name": "Windows.Devices.SmartCards.SmartCardEmulatorEnablementPolicy"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Allow"
        },
        {
          "Value": "1",
          "Name": "RequireAtLeastOne"
        },
        {
          "Value": "2",
          "Name": "Disallow"
        }
      ],
      "Name": "Windows.Devices.SmartCards.SmartCardPinCharacterPolicyOption"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Any"
        },
        {
          "Value": "1",
          "Name": "Generic"
        },
        {
          "Value": "2",
          "Name": "Tpm"
        },
        {
          "Value": "3",
          "Name": "Nfc"
        },
        {
          "Value": "4",
          "Name": "Uicc"
        }
      ],
      "Name": "Windows.Devices.SmartCards.SmartCardReaderKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Disconnected"
        },
        {
          "Value": "1",
          "Name": "Ready"
        },
        {
          "Value": "2",
          "Name": "Exclusive"
        }
      ],
      "Name": "Windows.Devices.SmartCards.SmartCardReaderStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Disconnected"
        },
        {
          "Value": "1",
          "Name": "Ready"
        },
        {
          "Value": "2",
          "Name": "Shared"
        },
        {
          "Value": "3",
          "Name": "Exclusive"
        },
        {
          "Value": "4",
          "Name": "Unresponsive"
        }
      ],
      "Name": "Windows.Devices.SmartCards.SmartCardStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "EmulatorTransaction"
        },
        {
          "Value": "1",
          "Name": "EmulatorNearFieldEntry"
        },
        {
          "Value": "2",
          "Name": "EmulatorNearFieldExit"
        },
        {
          "Value": "3",
          "Name": "EmulatorHostApplicationActivated"
        }
      ],
      "Name": "Windows.Devices.SmartCards.SmartCardTriggerType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Created"
        },
        {
          "Value": "1",
          "Name": "Started"
        },
        {
          "Value": "2",
          "Name": "Stopped"
        },
        {
          "Value": "3",
          "Name": "Aborted"
        }
      ],
      "Name": "Windows.Devices.WiFiDirect.Services.WiFiDirectServiceAdvertisementStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "PinDisplay"
        },
        {
          "Value": "2",
          "Name": "PinEntry"
        }
      ],
      "Name": "Windows.Devices.WiFiDirect.Services.WiFiDirectServiceConfigurationMethod"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "RadioNotAvailable"
        },
        {
          "Value": "2",
          "Name": "ResourceInUse"
        },
        {
          "Value": "3",
          "Name": "UnsupportedHardware"
        },
        {
          "Value": "4",
          "Name": "NoHardware"
        }
      ],
      "Name": "Windows.Devices.WiFiDirect.Services.WiFiDirectServiceError"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "6",
          "Name": "Tcp"
        },
        {
          "Value": "17",
          "Name": "Udp"
        }
      ],
      "Name": "Windows.Devices.WiFiDirect.Services.WiFiDirectServiceIPProtocol"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Ok"
        },
        {
          "Value": "1",
          "Name": "Disassociated"
        },
        {
          "Value": "2",
          "Name": "LocalClose"
        },
        {
          "Value": "3",
          "Name": "RemoteClose"
        },
        {
          "Value": "4",
          "Name": "SystemFailure"
        },
        {
          "Value": "5",
          "Name": "NoResponseFromRemote"
        }
      ],
      "Name": "Windows.Devices.WiFiDirect.Services.WiFiDirectServiceSessionErrorStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Closed"
        },
        {
          "Value": "1",
          "Name": "Initiated"
        },
        {
          "Value": "2",
          "Name": "Requested"
        },
        {
          "Value": "3",
          "Name": "Open"
        }
      ],
      "Name": "Windows.Devices.WiFiDirect.Services.WiFiDirectServiceSessionStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Available"
        },
        {
          "Value": "1",
          "Name": "Busy"
        },
        {
          "Value": "2",
          "Name": "Custom"
        }
      ],
      "Name": "Windows.Devices.WiFiDirect.Services.WiFiDirectServiceStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Normal"
        },
        {
          "Value": "2",
          "Name": "Intensive"
        }
      ],
      "Name": "Windows.Devices.WiFiDirect.WiFiDirectAdvertisementListenStateDiscoverability"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Created"
        },
        {
          "Value": "1",
          "Name": "Started"
        },
        {
          "Value": "2",
          "Name": "Stopped"
        },
        {
          "Value": "3",
          "Name": "Aborted"
        }
      ],
      "Name": "Windows.Devices.WiFiDirect.WiFiDirectAdvertisementPublisherStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Disconnected"
        },
        {
          "Value": "1",
          "Name": "Connected"
        }
      ],
      "Name": "Windows.Devices.WiFiDirect.WiFiDirectConnectionStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "DeviceInterface"
        },
        {
          "Value": "1",
          "Name": "AssociationEndpoint"
        }
      ],
      "Name": "Windows.Devices.WiFiDirect.WiFiDirectDeviceSelectorType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "RadioNotAvailable"
        },
        {
          "Value": "2",
          "Name": "ResourceInUse"
        }
      ],
      "Name": "Windows.Devices.WiFiDirect.WiFiDirectError"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Started"
        },
        {
          "Value": "1",
          "Name": "Completed"
        },
        {
          "Value": "2",
          "Name": "Canceled"
        },
        {
          "Value": "3",
          "Name": "Error"
        }
      ],
      "Name": "Windows.Foundation.AsyncStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Reset"
        },
        {
          "Value": "1",
          "Name": "ItemInserted"
        },
        {
          "Value": "2",
          "Name": "ItemRemoved"
        },
        {
          "Value": "3",
          "Name": "ItemChanged"
        }
      ],
      "Name": "Windows.Foundation.Collections.CollectionChange"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "AssignDelegate"
        },
        {
          "Value": "1",
          "Name": "Join"
        },
        {
          "Value": "2",
          "Name": "Choice"
        },
        {
          "Value": "3",
          "Name": "Cancel"
        },
        {
          "Value": "4",
          "Name": "Error"
        }
      ],
      "Name": "Windows.Foundation.Diagnostics.CausalityRelation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Application"
        },
        {
          "Value": "1",
          "Name": "Library"
        },
        {
          "Value": "2",
          "Name": "System"
        }
      ],
      "Name": "Windows.Foundation.Diagnostics.CausalitySource"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "CompletionNotification"
        },
        {
          "Value": "1",
          "Name": "ProgressNotification"
        },
        {
          "Value": "2",
          "Name": "Execution"
        }
      ],
      "Name": "Windows.Foundation.Diagnostics.CausalitySynchronousWork"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Required"
        },
        {
          "Value": "1",
          "Name": "Important"
        },
        {
          "Value": "2",
          "Name": "Verbose"
        }
      ],
      "Name": "Windows.Foundation.Diagnostics.CausalityTraceLevel"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "SuppressExceptions"
        },
        {
          "Value": "2",
          "Name": "ForceExceptions"
        },
        {
          "Value": "4",
          "Name": "UseSetErrorInfo"
        },
        {
          "Value": "8",
          "Name": "SuppressSetErrorInfo"
        }
      ],
      "Name": "Windows.Foundation.Diagnostics.ErrorOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "Hidden"
        },
        {
          "Value": "2",
          "Name": "String"
        },
        {
          "Value": "3",
          "Name": "Boolean"
        },
        {
          "Value": "4",
          "Name": "Hexadecimal"
        },
        {
          "Value": "5",
          "Name": "ProcessId"
        },
        {
          "Value": "6",
          "Name": "ThreadId"
        },
        {
          "Value": "7",
          "Name": "Port"
        },
        {
          "Value": "8",
          "Name": "Ipv4Address"
        },
        {
          "Value": "9",
          "Name": "Ipv6Address"
        },
        {
          "Value": "10",
          "Name": "SocketAddress"
        },
        {
          "Value": "11",
          "Name": "Xml"
        },
        {
          "Value": "12",
          "Name": "Json"
        },
        {
          "Value": "13",
          "Name": "Win32Error"
        },
        {
          "Value": "14",
          "Name": "NTStatus"
        },
        {
          "Value": "15",
          "Name": "HResult"
        },
        {
          "Value": "16",
          "Name": "FileTime"
        },
        {
          "Value": "17",
          "Name": "Signed"
        },
        {
          "Value": "18",
          "Name": "Unsigned"
        }
      ],
      "Name": "Windows.Foundation.Diagnostics.LoggingFieldFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Verbose"
        },
        {
          "Value": "1",
          "Name": "Information"
        },
        {
          "Value": "2",
          "Name": "Warning"
        },
        {
          "Value": "3",
          "Name": "Error"
        },
        {
          "Value": "4",
          "Name": "Critical"
        }
      ],
      "Name": "Windows.Foundation.Diagnostics.LoggingLevel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Info"
        },
        {
          "Value": "1",
          "Name": "Start"
        },
        {
          "Value": "2",
          "Name": "Stop"
        },
        {
          "Value": "6",
          "Name": "Reply"
        },
        {
          "Value": "7",
          "Name": "Resume"
        },
        {
          "Value": "8",
          "Name": "Suspend"
        },
        {
          "Value": "9",
          "Name": "Send"
        }
      ],
      "Name": "Windows.Foundation.Diagnostics.LoggingOpcode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "1",
          "Name": "Protected"
        },
        {
          "Value": "2",
          "Name": "Public"
        }
      ],
      "Name": "Windows.Foundation.Metadata.CompositionType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Deprecate"
        },
        {
          "Value": "1",
          "Name": "Remove"
        }
      ],
      "Name": "Windows.Foundation.Metadata.DeprecationType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "InvalidMarshaling"
        },
        {
          "Value": "1",
          "Name": "None"
        },
        {
          "Value": "2",
          "Name": "Agile"
        },
        {
          "Value": "3",
          "Name": "Standard"
        }
      ],
      "Name": "Windows.Foundation.Metadata.MarshalingType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Windows"
        },
        {
          "Value": "1",
          "Name": "WindowsPhone"
        }
      ],
      "Name": "Windows.Foundation.Metadata.Platform"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "InvalidThreading"
        },
        {
          "Value": "1",
          "Name": "STA"
        },
        {
          "Value": "2",
          "Name": "MTA"
        },
        {
          "Value": "3",
          "Name": "Both"
        }
      ],
      "Name": "Windows.Foundation.Metadata.ThreadingModel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Empty"
        },
        {
          "Value": "1",
          "Name": "UInt8"
        },
        {
          "Value": "2",
          "Name": "Int16"
        },
        {
          "Value": "3",
          "Name": "UInt16"
        },
        {
          "Value": "4",
          "Name": "Int32"
        },
        {
          "Value": "5",
          "Name": "UInt32"
        },
        {
          "Value": "6",
          "Name": "Int64"
        },
        {
          "Value": "7",
          "Name": "UInt64"
        },
        {
          "Value": "8",
          "Name": "Single"
        },
        {
          "Value": "9",
          "Name": "Double"
        },
        {
          "Value": "10",
          "Name": "Char16"
        },
        {
          "Value": "11",
          "Name": "Boolean"
        },
        {
          "Value": "12",
          "Name": "String"
        },
        {
          "Value": "13",
          "Name": "Inspectable"
        },
        {
          "Value": "14",
          "Name": "DateTime"
        },
        {
          "Value": "15",
          "Name": "TimeSpan"
        },
        {
          "Value": "16",
          "Name": "Guid"
        },
        {
          "Value": "17",
          "Name": "Point"
        },
        {
          "Value": "18",
          "Name": "Size"
        },
        {
          "Value": "19",
          "Name": "Rect"
        },
        {
          "Value": "20",
          "Name": "OtherType"
        },
        {
          "Value": "1025",
          "Name": "UInt8Array"
        },
        {
          "Value": "1026",
          "Name": "Int16Array"
        },
        {
          "Value": "1027",
          "Name": "UInt16Array"
        },
        {
          "Value": "1028",
          "Name": "Int32Array"
        },
        {
          "Value": "1029",
          "Name": "UInt32Array"
        },
        {
          "Value": "1030",
          "Name": "Int64Array"
        },
        {
          "Value": "1031",
          "Name": "UInt64Array"
        },
        {
          "Value": "1032",
          "Name": "SingleArray"
        },
        {
          "Value": "1033",
          "Name": "DoubleArray"
        },
        {
          "Value": "1034",
          "Name": "Char16Array"
        },
        {
          "Value": "1035",
          "Name": "BooleanArray"
        },
        {
          "Value": "1036",
          "Name": "StringArray"
        },
        {
          "Value": "1037",
          "Name": "InspectableArray"
        },
        {
          "Value": "1038",
          "Name": "DateTimeArray"
        },
        {
          "Value": "1039",
          "Name": "TimeSpanArray"
        },
        {
          "Value": "1040",
          "Name": "GuidArray"
        },
        {
          "Value": "1041",
          "Name": "PointArray"
        },
        {
          "Value": "1042",
          "Name": "SizeArray"
        },
        {
          "Value": "1043",
          "Name": "RectArray"
        },
        {
          "Value": "1044",
          "Name": "OtherTypeArray"
        }
      ],
      "Name": "Windows.Foundation.PropertyType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Default"
        }
      ],
      "Name": "Windows.Globalization.DateTimeFormatting.DayFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Default"
        },
        {
          "Value": "2",
          "Name": "Abbreviated"
        },
        {
          "Value": "3",
          "Name": "Full"
        }
      ],
      "Name": "Windows.Globalization.DateTimeFormatting.DayOfWeekFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Default"
        }
      ],
      "Name": "Windows.Globalization.DateTimeFormatting.HourFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Default"
        }
      ],
      "Name": "Windows.Globalization.DateTimeFormatting.MinuteFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Default"
        },
        {
          "Value": "2",
          "Name": "Abbreviated"
        },
        {
          "Value": "3",
          "Name": "Full"
        },
        {
          "Value": "4",
          "Name": "Numeric"
        }
      ],
      "Name": "Windows.Globalization.DateTimeFormatting.MonthFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Default"
        }
      ],
      "Name": "Windows.Globalization.DateTimeFormatting.SecondFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Default"
        },
        {
          "Value": "2",
          "Name": "Abbreviated"
        },
        {
          "Value": "3",
          "Name": "Full"
        }
      ],
      "Name": "Windows.Globalization.DateTimeFormatting.YearFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Sunday"
        },
        {
          "Value": "1",
          "Name": "Monday"
        },
        {
          "Value": "2",
          "Name": "Tuesday"
        },
        {
          "Value": "3",
          "Name": "Wednesday"
        },
        {
          "Value": "4",
          "Name": "Thursday"
        },
        {
          "Value": "5",
          "Name": "Friday"
        },
        {
          "Value": "6",
          "Name": "Saturday"
        }
      ],
      "Name": "Windows.Globalization.DayOfWeek"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "UseSymbol"
        },
        {
          "Value": "1",
          "Name": "UseCurrencyCode"
        }
      ],
      "Name": "Windows.Globalization.NumberFormatting.CurrencyFormatterMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "RoundDown"
        },
        {
          "Value": "2",
          "Name": "RoundUp"
        },
        {
          "Value": "3",
          "Name": "RoundTowardsZero"
        },
        {
          "Value": "4",
          "Name": "RoundAwayFromZero"
        },
        {
          "Value": "5",
          "Name": "RoundHalfDown"
        },
        {
          "Value": "6",
          "Name": "RoundHalfUp"
        },
        {
          "Value": "7",
          "Name": "RoundHalfTowardsZero"
        },
        {
          "Value": "8",
          "Name": "RoundHalfAwayFromZero"
        },
        {
          "Value": "9",
          "Name": "RoundHalfToEven"
        },
        {
          "Value": "10",
          "Name": "RoundHalfToOdd"
        }
      ],
      "Name": "Windows.Globalization.NumberFormatting.RoundingAlgorithm"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "1",
          "Name": "VertexBuffer"
        },
        {
          "Value": "2",
          "Name": "IndexBuffer"
        },
        {
          "Value": "4",
          "Name": "ConstantBuffer"
        },
        {
          "Value": "8",
          "Name": "ShaderResource"
        },
        {
          "Value": "16",
          "Name": "StreamOutput"
        },
        {
          "Value": "32",
          "Name": "RenderTarget"
        },
        {
          "Value": "64",
          "Name": "DepthStencil"
        },
        {
          "Value": "128",
          "Name": "UnorderedAccess"
        },
        {
          "Value": "512",
          "Name": "Decoder"
        },
        {
          "Value": "1024",
          "Name": "VideoEncoder"
        }
      ],
      "Name": "Windows.Graphics.DirectX.Direct3D11.Direct3DBindings"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "Immutable"
        },
        {
          "Value": "2",
          "Name": "Dynamic"
        },
        {
          "Value": "3",
          "Name": "Staging"
        }
      ],
      "Name": "Windows.Graphics.DirectX.Direct3D11.Direct3DUsage"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "R32G32B32A32Typeless"
        },
        {
          "Value": "2",
          "Name": "R32G32B32A32Float"
        },
        {
          "Value": "3",
          "Name": "R32G32B32A32UInt"
        },
        {
          "Value": "4",
          "Name": "R32G32B32A32Int"
        },
        {
          "Value": "5",
          "Name": "R32G32B32Typeless"
        },
        {
          "Value": "6",
          "Name": "R32G32B32Float"
        },
        {
          "Value": "7",
          "Name": "R32G32B32UInt"
        },
        {
          "Value": "8",
          "Name": "R32G32B32Int"
        },
        {
          "Value": "9",
          "Name": "R16G16B16A16Typeless"
        },
        {
          "Value": "10",
          "Name": "R16G16B16A16Float"
        },
        {
          "Value": "11",
          "Name": "R16G16B16A16UIntNormalized"
        },
        {
          "Value": "12",
          "Name": "R16G16B16A16UInt"
        },
        {
          "Value": "13",
          "Name": "R16G16B16A16IntNormalized"
        },
        {
          "Value": "14",
          "Name": "R16G16B16A16Int"
        },
        {
          "Value": "15",
          "Name": "R32G32Typeless"
        },
        {
          "Value": "16",
          "Name": "R32G32Float"
        },
        {
          "Value": "17",
          "Name": "R32G32UInt"
        },
        {
          "Value": "18",
          "Name": "R32G32Int"
        },
        {
          "Value": "19",
          "Name": "R32G8X24Typeless"
        },
        {
          "Value": "20",
          "Name": "D32FloatS8X24UInt"
        },
        {
          "Value": "21",
          "Name": "R32FloatX8X24Typeless"
        },
        {
          "Value": "22",
          "Name": "X32TypelessG8X24UInt"
        },
        {
          "Value": "23",
          "Name": "R10G10B10A2Typeless"
        },
        {
          "Value": "24",
          "Name": "R10G10B10A2UIntNormalized"
        },
        {
          "Value": "25",
          "Name": "R10G10B10A2UInt"
        },
        {
          "Value": "26",
          "Name": "R11G11B10Float"
        },
        {
          "Value": "27",
          "Name": "R8G8B8A8Typeless"
        },
        {
          "Value": "28",
          "Name": "R8G8B8A8UIntNormalized"
        },
        {
          "Value": "29",
          "Name": "R8G8B8A8UIntNormalizedSrgb"
        },
        {
          "Value": "30",
          "Name": "R8G8B8A8UInt"
        },
        {
          "Value": "31",
          "Name": "R8G8B8A8IntNormalized"
        },
        {
          "Value": "32",
          "Name": "R8G8B8A8Int"
        },
        {
          "Value": "33",
          "Name": "R16G16Typeless"
        },
        {
          "Value": "34",
          "Name": "R16G16Float"
        },
        {
          "Value": "35",
          "Name": "R16G16UIntNormalized"
        },
        {
          "Value": "36",
          "Name": "R16G16UInt"
        },
        {
          "Value": "37",
          "Name": "R16G16IntNormalized"
        },
        {
          "Value": "38",
          "Name": "R16G16Int"
        },
        {
          "Value": "39",
          "Name": "R32Typeless"
        },
        {
          "Value": "40",
          "Name": "D32Float"
        },
        {
          "Value": "41",
          "Name": "R32Float"
        },
        {
          "Value": "42",
          "Name": "R32UInt"
        },
        {
          "Value": "43",
          "Name": "R32Int"
        },
        {
          "Value": "44",
          "Name": "R24G8Typeless"
        },
        {
          "Value": "45",
          "Name": "D24UIntNormalizedS8UInt"
        },
        {
          "Value": "46",
          "Name": "R24UIntNormalizedX8Typeless"
        },
        {
          "Value": "47",
          "Name": "X24TypelessG8UInt"
        },
        {
          "Value": "48",
          "Name": "R8G8Typeless"
        },
        {
          "Value": "49",
          "Name": "R8G8UIntNormalized"
        },
        {
          "Value": "50",
          "Name": "R8G8UInt"
        },
        {
          "Value": "51",
          "Name": "R8G8IntNormalized"
        },
        {
          "Value": "52",
          "Name": "R8G8Int"
        },
        {
          "Value": "53",
          "Name": "R16Typeless"
        },
        {
          "Value": "54",
          "Name": "R16Float"
        },
        {
          "Value": "55",
          "Name": "D16UIntNormalized"
        },
        {
          "Value": "56",
          "Name": "R16UIntNormalized"
        },
        {
          "Value": "57",
          "Name": "R16UInt"
        },
        {
          "Value": "58",
          "Name": "R16IntNormalized"
        },
        {
          "Value": "59",
          "Name": "R16Int"
        },
        {
          "Value": "60",
          "Name": "R8Typeless"
        },
        {
          "Value": "61",
          "Name": "R8UIntNormalized"
        },
        {
          "Value": "62",
          "Name": "R8UInt"
        },
        {
          "Value": "63",
          "Name": "R8IntNormalized"
        },
        {
          "Value": "64",
          "Name": "R8Int"
        },
        {
          "Value": "65",
          "Name": "A8UIntNormalized"
        },
        {
          "Value": "66",
          "Name": "R1UIntNormalized"
        },
        {
          "Value": "67",
          "Name": "R9G9B9E5SharedExponent"
        },
        {
          "Value": "68",
          "Name": "R8G8B8G8UIntNormalized"
        },
        {
          "Value": "69",
          "Name": "G8R8G8B8UIntNormalized"
        },
        {
          "Value": "70",
          "Name": "BC1Typeless"
        },
        {
          "Value": "71",
          "Name": "BC1UIntNormalized"
        },
        {
          "Value": "72",
          "Name": "BC1UIntNormalizedSrgb"
        },
        {
          "Value": "73",
          "Name": "BC2Typeless"
        },
        {
          "Value": "74",
          "Name": "BC2UIntNormalized"
        },
        {
          "Value": "75",
          "Name": "BC2UIntNormalizedSrgb"
        },
        {
          "Value": "76",
          "Name": "BC3Typeless"
        },
        {
          "Value": "77",
          "Name": "BC3UIntNormalized"
        },
        {
          "Value": "78",
          "Name": "BC3UIntNormalizedSrgb"
        },
        {
          "Value": "79",
          "Name": "BC4Typeless"
        },
        {
          "Value": "80",
          "Name": "BC4UIntNormalized"
        },
        {
          "Value": "81",
          "Name": "BC4IntNormalized"
        },
        {
          "Value": "82",
          "Name": "BC5Typeless"
        },
        {
          "Value": "83",
          "Name": "BC5UIntNormalized"
        },
        {
          "Value": "84",
          "Name": "BC5IntNormalized"
        },
        {
          "Value": "85",
          "Name": "B5G6R5UIntNormalized"
        },
        {
          "Value": "86",
          "Name": "B5G5R5A1UIntNormalized"
        },
        {
          "Value": "87",
          "Name": "B8G8R8A8UIntNormalized"
        },
        {
          "Value": "88",
          "Name": "B8G8R8X8UIntNormalized"
        },
        {
          "Value": "89",
          "Name": "R10G10B10XRBiasA2UIntNormalized"
        },
        {
          "Value": "90",
          "Name": "B8G8R8A8Typeless"
        },
        {
          "Value": "91",
          "Name": "B8G8R8A8UIntNormalizedSrgb"
        },
        {
          "Value": "92",
          "Name": "B8G8R8X8Typeless"
        },
        {
          "Value": "93",
          "Name": "B8G8R8X8UIntNormalizedSrgb"
        },
        {
          "Value": "94",
          "Name": "BC6HTypeless"
        },
        {
          "Value": "95",
          "Name": "BC6H16UnsignedFloat"
        },
        {
          "Value": "96",
          "Name": "BC6H16Float"
        },
        {
          "Value": "97",
          "Name": "BC7Typeless"
        },
        {
          "Value": "98",
          "Name": "BC7UIntNormalized"
        },
        {
          "Value": "99",
          "Name": "BC7UIntNormalizedSrgb"
        },
        {
          "Value": "100",
          "Name": "Ayuv"
        },
        {
          "Value": "101",
          "Name": "Y410"
        },
        {
          "Value": "102",
          "Name": "Y416"
        },
        {
          "Value": "103",
          "Name": "NV12"
        },
        {
          "Value": "104",
          "Name": "P010"
        },
        {
          "Value": "105",
          "Name": "P016"
        },
        {
          "Value": "106",
          "Name": "Opaque420"
        },
        {
          "Value": "107",
          "Name": "Yuy2"
        },
        {
          "Value": "108",
          "Name": "Y210"
        },
        {
          "Value": "109",
          "Name": "Y216"
        },
        {
          "Value": "110",
          "Name": "NV11"
        },
        {
          "Value": "111",
          "Name": "AI44"
        },
        {
          "Value": "112",
          "Name": "IA44"
        },
        {
          "Value": "113",
          "Name": "P8"
        },
        {
          "Value": "114",
          "Name": "A8P8"
        },
        {
          "Value": "115",
          "Name": "B4G4R4A4UIntNormalized"
        },
        {
          "Value": "130",
          "Name": "P208"
        },
        {
          "Value": "131",
          "Name": "V208"
        },
        {
          "Value": "132",
          "Name": "V408"
        },
        {
          "Value": "133",
          "Name": "Astc4x4Typeless"
        },
        {
          "Value": "134",
          "Name": "Astc4x4Normalized"
        },
        {
          "Value": "135",
          "Name": "Astc4x4NormalizedSrgb"
        },
        {
          "Value": "137",
          "Name": "Astc5x4Typeless"
        },
        {
          "Value": "138",
          "Name": "Astc5x4Normalized"
        },
        {
          "Value": "139",
          "Name": "Astc5x4NormalizedSrgb"
        },
        {
          "Value": "141",
          "Name": "Astc5x5Typeless"
        },
        {
          "Value": "142",
          "Name": "Astc5x5Normalized"
        },
        {
          "Value": "143",
          "Name": "Astc5x5NormalizedSrgb"
        },
        {
          "Value": "145",
          "Name": "Astc6x5Typeless"
        },
        {
          "Value": "146",
          "Name": "Astc6x5Normalized"
        },
        {
          "Value": "147",
          "Name": "Astc6x5NormalizedSrgb"
        },
        {
          "Value": "149",
          "Name": "Astc6x6Typeless"
        },
        {
          "Value": "150",
          "Name": "Astc6x6Normalized"
        },
        {
          "Value": "151",
          "Name": "Astc6x6NormalizedSrgb"
        },
        {
          "Value": "153",
          "Name": "Astc8x5Typeless"
        },
        {
          "Value": "154",
          "Name": "Astc8x5Normalized"
        },
        {
          "Value": "155",
          "Name": "Astc8x5NormalizedSrgb"
        },
        {
          "Value": "157",
          "Name": "Astc8x6Typeless"
        },
        {
          "Value": "158",
          "Name": "Astc8x6Normalized"
        },
        {
          "Value": "159",
          "Name": "Astc8x6NormalizedSrgb"
        },
        {
          "Value": "161",
          "Name": "Astc8x8Typeless"
        },
        {
          "Value": "162",
          "Name": "Astc8x8Normalized"
        },
        {
          "Value": "163",
          "Name": "Astc8x8NormalizedSrgb"
        },
        {
          "Value": "165",
          "Name": "Astc10x5Typeless"
        },
        {
          "Value": "166",
          "Name": "Astc10x5Normalized"
        },
        {
          "Value": "167",
          "Name": "Astc10x5NormalizedSrgb"
        },
        {
          "Value": "169",
          "Name": "Astc10x6Typeless"
        },
        {
          "Value": "170",
          "Name": "Astc10x6Normalized"
        },
        {
          "Value": "171",
          "Name": "Astc10x6NormalizedSrgb"
        },
        {
          "Value": "173",
          "Name": "Astc10x8Typeless"
        },
        {
          "Value": "174",
          "Name": "Astc10x8Normalized"
        },
        {
          "Value": "175",
          "Name": "Astc10x8NormalizedSrgb"
        },
        {
          "Value": "177",
          "Name": "Astc10x10Typeless"
        },
        {
          "Value": "178",
          "Name": "Astc10x10Normalized"
        },
        {
          "Value": "179",
          "Name": "Astc10x10NormalizedSrgb"
        },
        {
          "Value": "181",
          "Name": "Astc12x10Typeless"
        },
        {
          "Value": "182",
          "Name": "Astc12x10Normalized"
        },
        {
          "Value": "183",
          "Name": "Astc12x10NormalizedSrgb"
        },
        {
          "Value": "185",
          "Name": "Astc12x12Typeless"
        },
        {
          "Value": "186",
          "Name": "Astc12x12Normalized"
        },
        {
          "Value": "187",
          "Name": "Astc12x12NormalizedSrgb"
        }
      ],
      "Name": "Windows.Graphics.DirectX.DirectXPixelFormat"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Landscape"
        },
        {
          "Value": "2",
          "Name": "Portrait"
        },
        {
          "Value": "4",
          "Name": "LandscapeFlipped"
        },
        {
          "Value": "8",
          "Name": "PortraitFlipped"
        }
      ],
      "Name": "Windows.Graphics.Display.DisplayOrientations"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Invalid"
        },
        {
          "Value": "100",
          "Name": "Scale100Percent"
        },
        {
          "Value": "120",
          "Name": "Scale120Percent"
        },
        {
          "Value": "140",
          "Name": "Scale140Percent"
        },
        {
          "Value": "150",
          "Name": "Scale150Percent"
        },
        {
          "Value": "160",
          "Name": "Scale160Percent"
        },
        {
          "Value": "180",
          "Name": "Scale180Percent"
        },
        {
          "Value": "225",
          "Name": "Scale225Percent"
        }
      ],
      "Name": "Windows.Graphics.Display.ResolutionScale"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Premultiplied"
        },
        {
          "Value": "1",
          "Name": "Straight"
        },
        {
          "Value": "2",
          "Name": "Ignore"
        }
      ],
      "Name": "Windows.Graphics.Imaging.BitmapAlphaMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Read"
        },
        {
          "Value": "1",
          "Name": "ReadWrite"
        },
        {
          "Value": "2",
          "Name": "Write"
        }
      ],
      "Name": "Windows.Graphics.Imaging.BitmapBufferAccessMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Horizontal"
        },
        {
          "Value": "2",
          "Name": "Vertical"
        }
      ],
      "Name": "Windows.Graphics.Imaging.BitmapFlip"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "NearestNeighbor"
        },
        {
          "Value": "1",
          "Name": "Linear"
        },
        {
          "Value": "2",
          "Name": "Cubic"
        },
        {
          "Value": "3",
          "Name": "Fant"
        }
      ],
      "Name": "Windows.Graphics.Imaging.BitmapInterpolationMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "12",
          "Name": "Rgba16"
        },
        {
          "Value": "30",
          "Name": "Rgba8"
        },
        {
          "Value": "57",
          "Name": "Gray16"
        },
        {
          "Value": "62",
          "Name": "Gray8"
        },
        {
          "Value": "87",
          "Name": "Bgra8"
        },
        {
          "Value": "103",
          "Name": "Nv12"
        },
        {
          "Value": "107",
          "Name": "Yuy2"
        }
      ],
      "Name": "Windows.Graphics.Imaging.BitmapPixelFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Clockwise90Degrees"
        },
        {
          "Value": "2",
          "Name": "Clockwise180Degrees"
        },
        {
          "Value": "3",
          "Name": "Clockwise270Degrees"
        }
      ],
      "Name": "Windows.Graphics.Imaging.BitmapRotation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "DoNotColorManage"
        },
        {
          "Value": "1",
          "Name": "ColorManageToSRgb"
        }
      ],
      "Name": "Windows.Graphics.Imaging.ColorManagementMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "IgnoreExifOrientation"
        },
        {
          "Value": "1",
          "Name": "RespectExifOrientation"
        }
      ],
      "Name": "Windows.Graphics.Imaging.ExifOrientationMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "Y4Cb2Cr0"
        },
        {
          "Value": "2",
          "Name": "Y4Cb2Cr2"
        },
        {
          "Value": "3",
          "Name": "Y4Cb4Cr4"
        }
      ],
      "Name": "Windows.Graphics.Imaging.JpegSubsamplingMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Automatic"
        },
        {
          "Value": "1",
          "Name": "None"
        },
        {
          "Value": "2",
          "Name": "Sub"
        },
        {
          "Value": "3",
          "Name": "Up"
        },
        {
          "Value": "4",
          "Name": "Average"
        },
        {
          "Value": "5",
          "Name": "Paeth"
        },
        {
          "Value": "6",
          "Name": "Adaptive"
        }
      ],
      "Name": "Windows.Graphics.Imaging.PngFilterMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Automatic"
        },
        {
          "Value": "1",
          "Name": "None"
        },
        {
          "Value": "2",
          "Name": "Ccitt3"
        },
        {
          "Value": "3",
          "Name": "Ccitt4"
        },
        {
          "Value": "4",
          "Name": "Lzw"
        },
        {
          "Value": "5",
          "Name": "Rle"
        },
        {
          "Value": "6",
          "Name": "Zip"
        },
        {
          "Value": "7",
          "Name": "LzwhDifferencing"
        }
      ],
      "Name": "Windows.Graphics.Imaging.TiffCompressionMode"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Enabled"
        },
        {
          "Value": "2",
          "Name": "Constrained"
        }
      ],
      "Name": "Windows.Graphics.Printing.OptionDetails.PrintOptionStates"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "Number"
        },
        {
          "Value": "2",
          "Name": "Text"
        },
        {
          "Value": "3",
          "Name": "ItemList"
        }
      ],
      "Name": "Windows.Graphics.Printing.OptionDetails.PrintOptionType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "NotAvailable"
        },
        {
          "Value": "2",
          "Name": "PrinterCustom"
        },
        {
          "Value": "3",
          "Name": "None"
        },
        {
          "Value": "4",
          "Name": "Bale"
        },
        {
          "Value": "5",
          "Name": "BindBottom"
        },
        {
          "Value": "6",
          "Name": "BindLeft"
        },
        {
          "Value": "7",
          "Name": "BindRight"
        },
        {
          "Value": "8",
          "Name": "BindTop"
        },
        {
          "Value": "9",
          "Name": "Booklet"
        },
        {
          "Value": "10",
          "Name": "EdgeStitchBottom"
        },
        {
          "Value": "11",
          "Name": "EdgeStitchLeft"
        },
        {
          "Value": "12",
          "Name": "EdgeStitchRight"
        },
        {
          "Value": "13",
          "Name": "EdgeStitchTop"
        },
        {
          "Value": "14",
          "Name": "Fold"
        },
        {
          "Value": "15",
          "Name": "JogOffset"
        },
        {
          "Value": "16",
          "Name": "Trim"
        }
      ],
      "Name": "Windows.Graphics.Printing.PrintBinding"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "NotAvailable"
        },
        {
          "Value": "2",
          "Name": "PrinterCustom"
        },
        {
          "Value": "3",
          "Name": "Collated"
        },
        {
          "Value": "4",
          "Name": "Uncollated"
        }
      ],
      "Name": "Windows.Graphics.Printing.PrintCollation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "NotAvailable"
        },
        {
          "Value": "2",
          "Name": "PrinterCustom"
        },
        {
          "Value": "3",
          "Name": "Color"
        },
        {
          "Value": "4",
          "Name": "Grayscale"
        },
        {
          "Value": "5",
          "Name": "Monochrome"
        }
      ],
      "Name": "Windows.Graphics.Printing.PrintColorMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "NotAvailable"
        },
        {
          "Value": "2",
          "Name": "PrinterCustom"
        },
        {
          "Value": "3",
          "Name": "OneSided"
        },
        {
          "Value": "4",
          "Name": "TwoSidedShortEdge"
        },
        {
          "Value": "5",
          "Name": "TwoSidedLongEdge"
        }
      ],
      "Name": "Windows.Graphics.Printing.PrintDuplex"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "NotAvailable"
        },
        {
          "Value": "2",
          "Name": "PrinterCustom"
        },
        {
          "Value": "3",
          "Name": "None"
        },
        {
          "Value": "4",
          "Name": "LeftEdge"
        },
        {
          "Value": "5",
          "Name": "RightEdge"
        },
        {
          "Value": "6",
          "Name": "TopEdge"
        },
        {
          "Value": "7",
          "Name": "BottomEdge"
        }
      ],
      "Name": "Windows.Graphics.Printing.PrintHolePunch"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "NotAvailable"
        },
        {
          "Value": "2",
          "Name": "PrinterCustom"
        },
        {
          "Value": "3",
          "Name": "BusinessCard"
        },
        {
          "Value": "4",
          "Name": "CreditCard"
        },
        {
          "Value": "5",
          "Name": "IsoA0"
        },
        {
          "Value": "6",
          "Name": "IsoA1"
        },
        {
          "Value": "7",
          "Name": "IsoA10"
        },
        {
          "Value": "8",
          "Name": "IsoA2"
        },
        {
          "Value": "9",
          "Name": "IsoA3"
        },
        {
          "Value": "10",
          "Name": "IsoA3Extra"
        },
        {
          "Value": "11",
          "Name": "IsoA3Rotated"
        },
        {
          "Value": "12",
          "Name": "IsoA4"
        },
        {
          "Value": "13",
          "Name": "IsoA4Extra"
        },
        {
          "Value": "14",
          "Name": "IsoA4Rotated"
        },
        {
          "Value": "15",
          "Name": "IsoA5"
        },
        {
          "Value": "16",
          "Name": "IsoA5Extra"
        },
        {
          "Value": "17",
          "Name": "IsoA5Rotated"
        },
        {
          "Value": "18",
          "Name": "IsoA6"
        },
        {
          "Value": "19",
          "Name": "IsoA6Rotated"
        },
        {
          "Value": "20",
          "Name": "IsoA7"
        },
        {
          "Value": "21",
          "Name": "IsoA8"
        },
        {
          "Value": "22",
          "Name": "IsoA9"
        },
        {
          "Value": "23",
          "Name": "IsoB0"
        },
        {
          "Value": "24",
          "Name": "IsoB1"
        },
        {
          "Value": "25",
          "Name": "IsoB10"
        },
        {
          "Value": "26",
          "Name": "IsoB2"
        },
        {
          "Value": "27",
          "Name": "IsoB3"
        },
        {
          "Value": "28",
          "Name": "IsoB4"
        },
        {
          "Value": "29",
          "Name": "IsoB4Envelope"
        },
        {
          "Value": "30",
          "Name": "IsoB5Envelope"
        },
        {
          "Value": "31",
          "Name": "IsoB5Extra"
        },
        {
          "Value": "32",
          "Name": "IsoB7"
        },
        {
          "Value": "33",
          "Name": "IsoB8"
        },
        {
          "Value": "34",
          "Name": "IsoB9"
        },
        {
          "Value": "35",
          "Name": "IsoC0"
        },
        {
          "Value": "36",
          "Name": "IsoC1"
        },
        {
          "Value": "37",
          "Name": "IsoC10"
        },
        {
          "Value": "38",
          "Name": "IsoC2"
        },
        {
          "Value": "39",
          "Name": "IsoC3"
        },
        {
          "Value": "40",
          "Name": "IsoC3Envelope"
        },
        {
          "Value": "41",
          "Name": "IsoC4"
        },
        {
          "Value": "42",
          "Name": "IsoC4Envelope"
        },
        {
          "Value": "43",
          "Name": "IsoC5"
        },
        {
          "Value": "44",
          "Name": "IsoC5Envelope"
        },
        {
          "Value": "45",
          "Name": "IsoC6"
        },
        {
          "Value": "46",
          "Name": "IsoC6C5Envelope"
        },
        {
          "Value": "47",
          "Name": "IsoC6Envelope"
        },
        {
          "Value": "48",
          "Name": "IsoC7"
        },
        {
          "Value": "49",
          "Name": "IsoC8"
        },
        {
          "Value": "50",
          "Name": "IsoC9"
        },
        {
          "Value": "51",
          "Name": "IsoDLEnvelope"
        },
        {
          "Value": "52",
          "Name": "IsoDLEnvelopeRotated"
        },
        {
          "Value": "53",
          "Name": "IsoSRA3"
        },
        {
          "Value": "54",
          "Name": "Japan2LPhoto"
        },
        {
          "Value": "55",
          "Name": "JapanChou3Envelope"
        },
        {
          "Value": "56",
          "Name": "JapanChou3EnvelopeRotated"
        },
        {
          "Value": "57",
          "Name": "JapanChou4Envelope"
        },
        {
          "Value": "58",
          "Name": "JapanChou4EnvelopeRotated"
        },
        {
          "Value": "59",
          "Name": "JapanDoubleHagakiPostcard"
        },
        {
          "Value": "60",
          "Name": "JapanDoubleHagakiPostcardRotated"
        },
        {
          "Value": "61",
          "Name": "JapanHagakiPostcard"
        },
        {
          "Value": "62",
          "Name": "JapanHagakiPostcardRotated"
        },
        {
          "Value": "63",
          "Name": "JapanKaku2Envelope"
        },
        {
          "Value": "64",
          "Name": "JapanKaku2EnvelopeRotated"
        },
        {
          "Value": "65",
          "Name": "JapanKaku3Envelope"
        },
        {
          "Value": "66",
          "Name": "JapanKaku3EnvelopeRotated"
        },
        {
          "Value": "67",
          "Name": "JapanLPhoto"
        },
        {
          "Value": "68",
          "Name": "JapanQuadrupleHagakiPostcard"
        },
        {
          "Value": "69",
          "Name": "JapanYou1Envelope"
        },
        {
          "Value": "70",
          "Name": "JapanYou2Envelope"
        },
        {
          "Value": "71",
          "Name": "JapanYou3Envelope"
        },
        {
          "Value": "72",
          "Name": "JapanYou4Envelope"
        },
        {
          "Value": "73",
          "Name": "JapanYou4EnvelopeRotated"
        },
        {
          "Value": "74",
          "Name": "JapanYou6Envelope"
        },
        {
          "Value": "75",
          "Name": "JapanYou6EnvelopeRotated"
        },
        {
          "Value": "76",
          "Name": "JisB0"
        },
        {
          "Value": "77",
          "Name": "JisB1"
        },
        {
          "Value": "78",
          "Name": "JisB10"
        },
        {
          "Value": "79",
          "Name": "JisB2"
        },
        {
          "Value": "80",
          "Name": "JisB3"
        },
        {
          "Value": "81",
          "Name": "JisB4"
        },
        {
          "Value": "82",
          "Name": "JisB4Rotated"
        },
        {
          "Value": "83",
          "Name": "JisB5"
        },
        {
          "Value": "84",
          "Name": "JisB5Rotated"
        },
        {
          "Value": "85",
          "Name": "JisB6"
        },
        {
          "Value": "86",
          "Name": "JisB6Rotated"
        },
        {
          "Value": "87",
          "Name": "JisB7"
        },
        {
          "Value": "88",
          "Name": "JisB8"
        },
        {
          "Value": "89",
          "Name": "JisB9"
        },
        {
          "Value": "90",
          "Name": "NorthAmerica10x11"
        },
        {
          "Value": "91",
          "Name": "NorthAmerica10x12"
        },
        {
          "Value": "92",
          "Name": "NorthAmerica10x14"
        },
        {
          "Value": "93",
          "Name": "NorthAmerica11x17"
        },
        {
          "Value": "94",
          "Name": "NorthAmerica14x17"
        },
        {
          "Value": "95",
          "Name": "NorthAmerica4x6"
        },
        {
          "Value": "96",
          "Name": "NorthAmerica4x8"
        },
        {
          "Value": "97",
          "Name": "NorthAmerica5x7"
        },
        {
          "Value": "98",
          "Name": "NorthAmerica8x10"
        },
        {
          "Value": "99",
          "Name": "NorthAmerica9x11"
        },
        {
          "Value": "100",
          "Name": "NorthAmericaArchitectureASheet"
        },
        {
          "Value": "101",
          "Name": "NorthAmericaArchitectureBSheet"
        },
        {
          "Value": "102",
          "Name": "NorthAmericaArchitectureCSheet"
        },
        {
          "Value": "103",
          "Name": "NorthAmericaArchitectureDSheet"
        },
        {
          "Value": "104",
          "Name": "NorthAmericaArchitectureESheet"
        },
        {
          "Value": "105",
          "Name": "NorthAmericaCSheet"
        },
        {
          "Value": "106",
          "Name": "NorthAmericaDSheet"
        },
        {
          "Value": "107",
          "Name": "NorthAmericaESheet"
        },
        {
          "Value": "108",
          "Name": "NorthAmericaExecutive"
        },
        {
          "Value": "109",
          "Name": "NorthAmericaGermanLegalFanfold"
        },
        {
          "Value": "110",
          "Name": "NorthAmericaGermanStandardFanfold"
        },
        {
          "Value": "111",
          "Name": "NorthAmericaLegal"
        },
        {
          "Value": "112",
          "Name": "NorthAmericaLegalExtra"
        },
        {
          "Value": "113",
          "Name": "NorthAmericaLetter"
        },
        {
          "Value": "114",
          "Name": "NorthAmericaLetterExtra"
        },
        {
          "Value": "115",
          "Name": "NorthAmericaLetterPlus"
        },
        {
          "Value": "116",
          "Name": "NorthAmericaLetterRotated"
        },
        {
          "Value": "117",
          "Name": "NorthAmericaMonarchEnvelope"
        },
        {
          "Value": "118",
          "Name": "NorthAmericaNote"
        },
        {
          "Value": "119",
          "Name": "NorthAmericaNumber10Envelope"
        },
        {
          "Value": "120",
          "Name": "NorthAmericaNumber10EnvelopeRotated"
        },
        {
          "Value": "121",
          "Name": "NorthAmericaNumber11Envelope"
        },
        {
          "Value": "122",
          "Name": "NorthAmericaNumber12Envelope"
        },
        {
          "Value": "123",
          "Name": "NorthAmericaNumber14Envelope"
        },
        {
          "Value": "124",
          "Name": "NorthAmericaNumber9Envelope"
        },
        {
          "Value": "125",
          "Name": "NorthAmericaPersonalEnvelope"
        },
        {
          "Value": "126",
          "Name": "NorthAmericaQuarto"
        },
        {
          "Value": "127",
          "Name": "NorthAmericaStatement"
        },
        {
          "Value": "128",
          "Name": "NorthAmericaSuperA"
        },
        {
          "Value": "129",
          "Name": "NorthAmericaSuperB"
        },
        {
          "Value": "130",
          "Name": "NorthAmericaTabloid"
        },
        {
          "Value": "131",
          "Name": "NorthAmericaTabloidExtra"
        },
        {
          "Value": "132",
          "Name": "OtherMetricA3Plus"
        },
        {
          "Value": "133",
          "Name": "OtherMetricA4Plus"
        },
        {
          "Value": "134",
          "Name": "OtherMetricFolio"
        },
        {
          "Value": "135",
          "Name": "OtherMetricInviteEnvelope"
        },
        {
          "Value": "136",
          "Name": "OtherMetricItalianEnvelope"
        },
        {
          "Value": "137",
          "Name": "Prc10Envelope"
        },
        {
          "Value": "138",
          "Name": "Prc10EnvelopeRotated"
        },
        {
          "Value": "139",
          "Name": "Prc16K"
        },
        {
          "Value": "140",
          "Name": "Prc16KRotated"
        },
        {
          "Value": "141",
          "Name": "Prc1Envelope"
        },
        {
          "Value": "142",
          "Name": "Prc1EnvelopeRotated"
        },
        {
          "Value": "143",
          "Name": "Prc2Envelope"
        },
        {
          "Value": "144",
          "Name": "Prc2EnvelopeRotated"
        },
        {
          "Value": "145",
          "Name": "Prc32K"
        },
        {
          "Value": "146",
          "Name": "Prc32KBig"
        },
        {
          "Value": "147",
          "Name": "Prc32KRotated"
        },
        {
          "Value": "148",
          "Name": "Prc3Envelope"
        },
        {
          "Value": "149",
          "Name": "Prc3EnvelopeRotated"
        },
        {
          "Value": "150",
          "Name": "Prc4Envelope"
        },
        {
          "Value": "151",
          "Name": "Prc4EnvelopeRotated"
        },
        {
          "Value": "152",
          "Name": "Prc5Envelope"
        },
        {
          "Value": "153",
          "Name": "Prc5EnvelopeRotated"
        },
        {
          "Value": "154",
          "Name": "Prc6Envelope"
        },
        {
          "Value": "155",
          "Name": "Prc6EnvelopeRotated"
        },
        {
          "Value": "156",
          "Name": "Prc7Envelope"
        },
        {
          "Value": "157",
          "Name": "Prc7EnvelopeRotated"
        },
        {
          "Value": "158",
          "Name": "Prc8Envelope"
        },
        {
          "Value": "159",
          "Name": "Prc8EnvelopeRotated"
        },
        {
          "Value": "160",
          "Name": "Prc9Envelope"
        },
        {
          "Value": "161",
          "Name": "Prc9EnvelopeRotated"
        },
        {
          "Value": "162",
          "Name": "Roll04Inch"
        },
        {
          "Value": "163",
          "Name": "Roll06Inch"
        },
        {
          "Value": "164",
          "Name": "Roll08Inch"
        },
        {
          "Value": "165",
          "Name": "Roll12Inch"
        },
        {
          "Value": "166",
          "Name": "Roll15Inch"
        },
        {
          "Value": "167",
          "Name": "Roll18Inch"
        },
        {
          "Value": "168",
          "Name": "Roll22Inch"
        },
        {
          "Value": "169",
          "Name": "Roll24Inch"
        },
        {
          "Value": "170",
          "Name": "Roll30Inch"
        },
        {
          "Value": "171",
          "Name": "Roll36Inch"
        },
        {
          "Value": "172",
          "Name": "Roll54Inch"
        }
      ],
      "Name": "Windows.Graphics.Printing.PrintMediaSize"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "NotAvailable"
        },
        {
          "Value": "2",
          "Name": "PrinterCustom"
        },
        {
          "Value": "3",
          "Name": "AutoSelect"
        },
        {
          "Value": "4",
          "Name": "Archival"
        },
        {
          "Value": "5",
          "Name": "BackPrintFilm"
        },
        {
          "Value": "6",
          "Name": "Bond"
        },
        {
          "Value": "7",
          "Name": "CardStock"
        },
        {
          "Value": "8",
          "Name": "Continuous"
        },
        {
          "Value": "9",
          "Name": "EnvelopePlain"
        },
        {
          "Value": "10",
          "Name": "EnvelopeWindow"
        },
        {
          "Value": "11",
          "Name": "Fabric"
        },
        {
          "Value": "12",
          "Name": "HighResolution"
        },
        {
          "Value": "13",
          "Name": "Label"
        },
        {
          "Value": "14",
          "Name": "MultiLayerForm"
        },
        {
          "Value": "15",
          "Name": "MultiPartForm"
        },
        {
          "Value": "16",
          "Name": "Photographic"
        },
        {
          "Value": "17",
          "Name": "PhotographicFilm"
        },
        {
          "Value": "18",
          "Name": "PhotographicGlossy"
        },
        {
          "Value": "19",
          "Name": "PhotographicHighGloss"
        },
        {
          "Value": "20",
          "Name": "PhotographicMatte"
        },
        {
          "Value": "21",
          "Name": "PhotographicSatin"
        },
        {
          "Value": "22",
          "Name": "PhotographicSemiGloss"
        },
        {
          "Value": "23",
          "Name": "Plain"
        },
        {
          "Value": "24",
          "Name": "Screen"
        },
        {
          "Value": "25",
          "Name": "ScreenPaged"
        },
        {
          "Value": "26",
          "Name": "Stationery"
        },
        {
          "Value": "27",
          "Name": "TabStockFull"
        },
        {
          "Value": "28",
          "Name": "TabStockPreCut"
        },
        {
          "Value": "29",
          "Name": "Transparency"
        },
        {
          "Value": "30",
          "Name": "TShirtTransfer"
        },
        {
          "Value": "31",
          "Name": "None"
        }
      ],
      "Name": "Windows.Graphics.Printing.PrintMediaType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "NotAvailable"
        },
        {
          "Value": "2",
          "Name": "PrinterCustom"
        },
        {
          "Value": "3",
          "Name": "Portrait"
        },
        {
          "Value": "4",
          "Name": "PortraitFlipped"
        },
        {
          "Value": "5",
          "Name": "Landscape"
        },
        {
          "Value": "6",
          "Name": "LandscapeFlipped"
        }
      ],
      "Name": "Windows.Graphics.Printing.PrintOrientation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "NotAvailable"
        },
        {
          "Value": "2",
          "Name": "PrinterCustom"
        },
        {
          "Value": "3",
          "Name": "Automatic"
        },
        {
          "Value": "4",
          "Name": "Draft"
        },
        {
          "Value": "5",
          "Name": "Fax"
        },
        {
          "Value": "6",
          "Name": "High"
        },
        {
          "Value": "7",
          "Name": "Normal"
        },
        {
          "Value": "8",
          "Name": "Photographic"
        },
        {
          "Value": "9",
          "Name": "Text"
        }
      ],
      "Name": "Windows.Graphics.Printing.PrintQuality"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "NotAvailable"
        },
        {
          "Value": "2",
          "Name": "PrinterCustom"
        },
        {
          "Value": "3",
          "Name": "None"
        },
        {
          "Value": "4",
          "Name": "StapleTopLeft"
        },
        {
          "Value": "5",
          "Name": "StapleTopRight"
        },
        {
          "Value": "6",
          "Name": "StapleBottomLeft"
        },
        {
          "Value": "7",
          "Name": "StapleBottomRight"
        },
        {
          "Value": "8",
          "Name": "StapleDualLeft"
        },
        {
          "Value": "9",
          "Name": "StapleDualRight"
        },
        {
          "Value": "10",
          "Name": "StapleDualTop"
        },
        {
          "Value": "11",
          "Name": "StapleDualBottom"
        },
        {
          "Value": "12",
          "Name": "SaddleStitch"
        }
      ],
      "Name": "Windows.Graphics.Printing.PrintStaple"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Abandoned"
        },
        {
          "Value": "1",
          "Name": "Canceled"
        },
        {
          "Value": "2",
          "Name": "Failed"
        },
        {
          "Value": "3",
          "Name": "Submitted"
        }
      ],
      "Name": "Windows.Graphics.Printing.PrintTaskCompletion"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "LegacyLiveTileIntervalKind_Hour"
        },
        {
          "Value": "1",
          "Name": "LegacyLiveTileIntervalKind_Day"
        },
        {
          "Value": "2",
          "Name": "LegacyLiveTileIntervalKind_Week"
        },
        {
          "Value": "3",
          "Name": "LegacyLiveTileIntervalKind_Month"
        }
      ],
      "Name": "Windows.Internal.LegacyLiveTile.LegacyLiveTileIntervalKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "LegacyLiveTileRecurrenceType_Instant"
        },
        {
          "Value": "1",
          "Name": "LegacyLiveTileRecurrenceType_Onetime"
        },
        {
          "Value": "2",
          "Name": "LegacyLiveTileRecurrenceType_Interval"
        }
      ],
      "Name": "Windows.Internal.LegacyLiveTile.LegacyLiveTileRecurrenceType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "ForceApplicationShutdown"
        },
        {
          "Value": "2",
          "Name": "DevelopmentMode"
        }
      ],
      "Name": "Windows.Management.Deployment.DeploymentOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Queued"
        },
        {
          "Value": "1",
          "Name": "Processing"
        }
      ],
      "Name": "Windows.Management.Deployment.DeploymentProgressState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "NotInstalled"
        },
        {
          "Value": "1",
          "Name": "Staged"
        },
        {
          "Value": "2",
          "Name": "Installed"
        }
      ],
      "Name": "Windows.Management.Deployment.PackageInstallState"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "4096",
          "Name": "PreserveApplicationData"
        }
      ],
      "Name": "Windows.Management.Deployment.RemovalOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Read"
        },
        {
          "Value": "1",
          "Name": "ReadWrite"
        },
        {
          "Value": "2",
          "Name": "Write"
        }
      ],
      "Name": "Windows.Media.AudioBufferAccessMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "Raw"
        }
      ],
      "Name": "Windows.Media.AudioProcessing"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Other"
        },
        {
          "Value": "1",
          "Name": "Communications"
        },
        {
          "Value": "2",
          "Name": "Media"
        },
        {
          "Value": "3",
          "Name": "GameChat"
        },
        {
          "Value": "4",
          "Name": "Speech"
        }
      ],
      "Name": "Windows.Media.Capture.MediaCategory"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "VideoPreview"
        },
        {
          "Value": "1",
          "Name": "VideoRecord"
        },
        {
          "Value": "2",
          "Name": "Audio"
        },
        {
          "Value": "3",
          "Name": "Photo"
        }
      ],
      "Name": "Windows.Media.Capture.MediaStreamType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Auto"
        },
        {
          "Value": "1",
          "Name": "VideoPreview"
        },
        {
          "Value": "2",
          "Name": "Photo"
        }
      ],
      "Name": "Windows.Media.Capture.PhotoCaptureSource"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Disabled"
        },
        {
          "Value": "1",
          "Name": "FiftyHertz"
        },
        {
          "Value": "2",
          "Name": "SixtyHertz"
        }
      ],
      "Name": "Windows.Media.Capture.PowerlineFrequency"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "AudioAndVideo"
        },
        {
          "Value": "1",
          "Name": "Audio"
        },
        {
          "Value": "2",
          "Name": "Video"
        }
      ],
      "Name": "Windows.Media.Capture.StreamingCaptureMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "AllStreamsIndependent"
        },
        {
          "Value": "1",
          "Name": "PreviewRecordStreamsIdentical"
        },
        {
          "Value": "2",
          "Name": "PreviewPhotoStreamsIdentical"
        },
        {
          "Value": "3",
          "Name": "RecordPhotoStreamsIdentical"
        },
        {
          "Value": "4",
          "Name": "AllStreamsIdentical"
        }
      ],
      "Name": "Windows.Media.Capture.VideoDeviceCharacteristic"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Clockwise90Degrees"
        },
        {
          "Value": "2",
          "Name": "Clockwise180Degrees"
        },
        {
          "Value": "3",
          "Name": "Clockwise270Degrees"
        }
      ],
      "Name": "Windows.Media.Capture.VideoRotation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Succeeded"
        },
        {
          "Value": "1",
          "Name": "DeviceDidNotRespond"
        },
        {
          "Value": "2",
          "Name": "DeviceError"
        },
        {
          "Value": "3",
          "Name": "DeviceLocked"
        },
        {
          "Value": "4",
          "Name": "ProtectedPlaybackFailed"
        },
        {
          "Value": "5",
          "Name": "InvalidCastingSource"
        },
        {
          "Value": "6",
          "Name": "Unknown"
        }
      ],
      "Name": "Windows.Media.Casting.CastingConnectionErrorStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Disconnected"
        },
        {
          "Value": "1",
          "Name": "Connected"
        },
        {
          "Value": "2",
          "Name": "Rendering"
        },
        {
          "Value": "3",
          "Name": "Disconnecting"
        },
        {
          "Value": "4",
          "Name": "Connecting"
        }
      ],
      "Name": "Windows.Media.Casting.CastingConnectionState"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Audio"
        },
        {
          "Value": "2",
          "Name": "Video"
        },
        {
          "Value": "4",
          "Name": "Picture"
        }
      ],
      "Name": "Windows.Media.Casting.CastingPlaybackTypes"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "HighPerformance"
        },
        {
          "Value": "1",
          "Name": "Balanced"
        },
        {
          "Value": "2",
          "Name": "HighQuality"
        }
      ],
      "Name": "Windows.Media.Core.FaceDetectionQualityMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Done"
        },
        {
          "Value": "1",
          "Name": "UnknownError"
        },
        {
          "Value": "2",
          "Name": "AppReportedError"
        },
        {
          "Value": "3",
          "Name": "UnsupportedProtectionSystem"
        },
        {
          "Value": "4",
          "Name": "ProtectionSystemFailure"
        },
        {
          "Value": "5",
          "Name": "UnsupportedEncodingFormat"
        },
        {
          "Value": "6",
          "Name": "MissingSampleRequestedEventHandler"
        }
      ],
      "Name": "Windows.Media.Core.MediaStreamSourceClosedReason"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Other"
        },
        {
          "Value": "1",
          "Name": "OutOfMemory"
        },
        {
          "Value": "2",
          "Name": "FailedToOpenFile"
        },
        {
          "Value": "3",
          "Name": "FailedToConnectToServer"
        },
        {
          "Value": "4",
          "Name": "ConnectionToServerLost"
        },
        {
          "Value": "5",
          "Name": "UnspecifiedNetworkError"
        },
        {
          "Value": "6",
          "Name": "DecodeError"
        },
        {
          "Value": "7",
          "Name": "UnsupportedMediaFormat"
        }
      ],
      "Name": "Windows.Media.Core.MediaStreamSourceErrorStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "HighPerformance"
        },
        {
          "Value": "1",
          "Name": "Balanced"
        },
        {
          "Value": "2",
          "Name": "HighQuality"
        }
      ],
      "Name": "Windows.Media.Core.VideoStabilizationQualityMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "Communications"
        }
      ],
      "Name": "Windows.Media.Devices.AudioDeviceRole"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "FullRange"
        },
        {
          "Value": "1",
          "Name": "Macro"
        },
        {
          "Value": "2",
          "Name": "Normal"
        }
      ],
      "Name": "Windows.Media.Devices.AutoFocusRange"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "NotStreaming"
        },
        {
          "Value": "1",
          "Name": "Streaming"
        },
        {
          "Value": "2",
          "Name": "BlockedForPrivacy"
        },
        {
          "Value": "3",
          "Name": "Shutdown"
        }
      ],
      "Name": "Windows.Media.Devices.CameraStreamState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Auto"
        },
        {
          "Value": "1",
          "Name": "Manual"
        },
        {
          "Value": "2",
          "Name": "Macro"
        },
        {
          "Value": "3",
          "Name": "Portrait"
        },
        {
          "Value": "4",
          "Name": "Sport"
        },
        {
          "Value": "5",
          "Name": "Snow"
        },
        {
          "Value": "6",
          "Name": "Night"
        },
        {
          "Value": "7",
          "Name": "Beach"
        },
        {
          "Value": "8",
          "Name": "Sunset"
        },
        {
          "Value": "9",
          "Name": "Candlelight"
        },
        {
          "Value": "10",
          "Name": "Landscape"
        },
        {
          "Value": "11",
          "Name": "NightPortrait"
        },
        {
          "Value": "12",
          "Name": "Backlit"
        }
      ],
      "Name": "Windows.Media.Devices.CaptureSceneMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Photo"
        },
        {
          "Value": "2",
          "Name": "Video"
        }
      ],
      "Name": "Windows.Media.Devices.CaptureUse"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Auto"
        },
        {
          "Value": "1",
          "Name": "Manual"
        },
        {
          "Value": "2",
          "Name": "Cloudy"
        },
        {
          "Value": "3",
          "Name": "Daylight"
        },
        {
          "Value": "4",
          "Name": "Flash"
        },
        {
          "Value": "5",
          "Name": "Fluorescent"
        },
        {
          "Value": "6",
          "Name": "Tungsten"
        },
        {
          "Value": "7",
          "Name": "Candlelight"
        }
      ],
      "Name": "Windows.Media.Devices.ColorTemperaturePreset"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Disable"
        },
        {
          "Value": "1",
          "Name": "Enable"
        },
        {
          "Value": "2",
          "Name": "Global"
        }
      ],
      "Name": "Windows.Media.Devices.Core.FrameFlashMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Auto"
        },
        {
          "Value": "1",
          "Name": "Single"
        },
        {
          "Value": "2",
          "Name": "Continuous"
        },
        {
          "Value": "3",
          "Name": "Manual"
        }
      ],
      "Name": "Windows.Media.Devices.FocusMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Auto"
        },
        {
          "Value": "1",
          "Name": "Manual"
        },
        {
          "Value": "2",
          "Name": "AutoMacro"
        },
        {
          "Value": "3",
          "Name": "AutoNormal"
        },
        {
          "Value": "4",
          "Name": "AutoInfinity"
        },
        {
          "Value": "5",
          "Name": "AutoHyperfocal"
        }
      ],
      "Name": "Windows.Media.Devices.FocusPreset"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Off"
        },
        {
          "Value": "1",
          "Name": "On"
        },
        {
          "Value": "2",
          "Name": "Auto"
        }
      ],
      "Name": "Windows.Media.Devices.HdrVideoMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Auto"
        },
        {
          "Value": "1",
          "Name": "Iso50"
        },
        {
          "Value": "2",
          "Name": "Iso80"
        },
        {
          "Value": "3",
          "Name": "Iso100"
        },
        {
          "Value": "4",
          "Name": "Iso200"
        },
        {
          "Value": "5",
          "Name": "Iso400"
        },
        {
          "Value": "6",
          "Name": "Iso800"
        },
        {
          "Value": "7",
          "Name": "Iso1600"
        },
        {
          "Value": "8",
          "Name": "Iso3200"
        },
        {
          "Value": "9",
          "Name": "Iso6400"
        },
        {
          "Value": "10",
          "Name": "Iso12800"
        },
        {
          "Value": "11",
          "Name": "Iso25600"
        }
      ],
      "Name": "Windows.Media.Devices.IsoSpeedPreset"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Infinity"
        },
        {
          "Value": "1",
          "Name": "Hyperfocal"
        },
        {
          "Value": "2",
          "Name": "Nearest"
        }
      ],
      "Name": "Windows.Media.Devices.ManualFocusDistance"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Uninitialized"
        },
        {
          "Value": "1",
          "Name": "Lost"
        },
        {
          "Value": "2",
          "Name": "Searching"
        },
        {
          "Value": "3",
          "Name": "Focused"
        },
        {
          "Value": "4",
          "Name": "Failed"
        }
      ],
      "Name": "Windows.Media.Devices.MediaCaptureFocusState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "Quality"
        },
        {
          "Value": "2",
          "Name": "Latency"
        },
        {
          "Value": "3",
          "Name": "Power"
        },
        {
          "Value": "4",
          "Name": "LatencyThenQuality"
        },
        {
          "Value": "5",
          "Name": "LatencyThenPower"
        },
        {
          "Value": "6",
          "Name": "PowerAndQuality"
        }
      ],
      "Name": "Windows.Media.Devices.MediaCaptureOptimization"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "RetainHardwareResources"
        },
        {
          "Value": "1",
          "Name": "ReleaseHardwareResources"
        }
      ],
      "Name": "Windows.Media.Devices.MediaCapturePauseBehavior"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Off"
        },
        {
          "Value": "1",
          "Name": "On"
        },
        {
          "Value": "2",
          "Name": "Auto"
        }
      ],
      "Name": "Windows.Media.Devices.OpticalImageStabilizationMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "Face"
        }
      ],
      "Name": "Windows.Media.Devices.RegionOfInterestType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Auto"
        },
        {
          "Value": "1",
          "Name": "Direct"
        },
        {
          "Value": "2",
          "Name": "Smooth"
        }
      ],
      "Name": "Windows.Media.Devices.ZoomTransitionMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Fast"
        },
        {
          "Value": "1",
          "Name": "Precise"
        }
      ],
      "Name": "Windows.Media.Editing.MediaTrimmingPreference"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "NearestFrame"
        },
        {
          "Value": "1",
          "Name": "NearestKeyFrame"
        }
      ],
      "Name": "Windows.Media.Editing.VideoFramePrecision"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Other"
        },
        {
          "Value": "1",
          "Name": "AcousticEchoCancellation"
        },
        {
          "Value": "2",
          "Name": "NoiseSuppression"
        },
        {
          "Value": "3",
          "Name": "AutomaticGainControl"
        },
        {
          "Value": "4",
          "Name": "BeamForming"
        },
        {
          "Value": "5",
          "Name": "ConstantToneRemoval"
        },
        {
          "Value": "6",
          "Name": "Equalizer"
        },
        {
          "Value": "7",
          "Name": "LoudnessEqualizer"
        },
        {
          "Value": "8",
          "Name": "BassBoost"
        },
        {
          "Value": "9",
          "Name": "VirtualSurround"
        },
        {
          "Value": "10",
          "Name": "VirtualHeadphones"
        },
        {
          "Value": "11",
          "Name": "SpeakerFill"
        },
        {
          "Value": "12",
          "Name": "RoomCorrection"
        },
        {
          "Value": "13",
          "Name": "BassManagement"
        },
        {
          "Value": "14",
          "Name": "EnvironmentalEffects"
        },
        {
          "Value": "15",
          "Name": "SpeakerProtection"
        },
        {
          "Value": "16",
          "Name": "SpeakerCompensation"
        },
        {
          "Value": "17",
          "Name": "DynamicRangeCompression"
        }
      ],
      "Name": "Windows.Media.Effects.AudioEffectType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Done"
        },
        {
          "Value": "1",
          "Name": "UnknownError"
        },
        {
          "Value": "2",
          "Name": "UnsupportedEncodingFormat"
        },
        {
          "Value": "3",
          "Name": "EffectCurrentlyUnloaded"
        }
      ],
      "Name": "Windows.Media.Effects.MediaEffectClosedReason"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Gpu"
        },
        {
          "Value": "1",
          "Name": "Cpu"
        },
        {
          "Value": "2",
          "Name": "GpuAndCpu"
        }
      ],
      "Name": "Windows.Media.Effects.MediaMemoryTypes"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Closed"
        },
        {
          "Value": "1",
          "Name": "Changing"
        },
        {
          "Value": "2",
          "Name": "Stopped"
        },
        {
          "Value": "3",
          "Name": "Playing"
        },
        {
          "Value": "4",
          "Name": "Paused"
        }
      ],
      "Name": "Windows.Media.MediaPlaybackStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "Music"
        },
        {
          "Value": "2",
          "Name": "Video"
        },
        {
          "Value": "3",
          "Name": "Image"
        }
      ],
      "Name": "Windows.Media.MediaPlaybackType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Auto"
        },
        {
          "Value": "1",
          "Name": "High"
        },
        {
          "Value": "2",
          "Name": "Medium"
        },
        {
          "Value": "3",
          "Name": "Low"
        }
      ],
      "Name": "Windows.Media.MediaProperties.AudioEncodingQuality"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Horizontal"
        },
        {
          "Value": "2",
          "Name": "Vertical"
        }
      ],
      "Name": "Windows.Media.MediaProperties.MediaMirroringOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Nv12"
        },
        {
          "Value": "1",
          "Name": "Bgra8"
        }
      ],
      "Name": "Windows.Media.MediaProperties.MediaPixelFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Clockwise90Degrees"
        },
        {
          "Value": "2",
          "Name": "Clockwise180Degrees"
        },
        {
          "Value": "3",
          "Name": "Clockwise270Degrees"
        }
      ],
      "Name": "Windows.Media.MediaProperties.MediaRotation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Bmp"
        },
        {
          "Value": "1",
          "Name": "Bgra8"
        }
      ],
      "Name": "Windows.Media.MediaProperties.MediaThumbnailFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Auto"
        },
        {
          "Value": "1",
          "Name": "HD1080p"
        },
        {
          "Value": "2",
          "Name": "HD720p"
        },
        {
          "Value": "3",
          "Name": "Wvga"
        },
        {
          "Value": "4",
          "Name": "Ntsc"
        },
        {
          "Value": "5",
          "Name": "Pal"
        },
        {
          "Value": "6",
          "Name": "Vga"
        },
        {
          "Value": "7",
          "Name": "Qvga"
        }
      ],
      "Name": "Windows.Media.MediaProperties.VideoEncodingQuality"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "Audio"
        },
        {
          "Value": "2",
          "Name": "Video"
        }
      ],
      "Name": "Windows.Media.Playback.FailedMediaStreamKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "Aborted"
        },
        {
          "Value": "2",
          "Name": "NetworkError"
        },
        {
          "Value": "3",
          "Name": "DecodingError"
        },
        {
          "Value": "4",
          "Name": "SourceNotSupported"
        }
      ],
      "Name": "Windows.Media.Playback.MediaPlayerError"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Closed"
        },
        {
          "Value": "1",
          "Name": "Opening"
        },
        {
          "Value": "2",
          "Name": "Buffering"
        },
        {
          "Value": "3",
          "Name": "Playing"
        },
        {
          "Value": "4",
          "Name": "Paused"
        },
        {
          "Value": "5",
          "Name": "Stopped"
        }
      ],
      "Name": "Windows.Media.Playback.MediaPlayerState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "DeviceNotResponding"
        },
        {
          "Value": "2",
          "Name": "DeviceError"
        },
        {
          "Value": "3",
          "Name": "DeviceLocked"
        },
        {
          "Value": "4",
          "Name": "ProtectedPlaybackFailed"
        }
      ],
      "Name": "Windows.Media.PlayTo.PlayToConnectionError"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Disconnected"
        },
        {
          "Value": "1",
          "Name": "Connected"
        },
        {
          "Value": "2",
          "Name": "Rendering"
        }
      ],
      "Name": "Windows.Media.PlayTo.PlayToConnectionState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "TrustNotRequired"
        },
        {
          "Value": "1",
          "Name": "TrustEstablished"
        },
        {
          "Value": "2",
          "Name": "EnvironmentNotSupported"
        },
        {
          "Value": "3",
          "Name": "DriverNotSupported"
        },
        {
          "Value": "4",
          "Name": "DriverSigningFailure"
        },
        {
          "Value": "5",
          "Name": "UnknownFailure"
        }
      ],
      "Name": "Windows.Media.Protection.GraphicsTrustStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "NotStarted"
        },
        {
          "Value": "1",
          "Name": "UpdatesInProgress"
        },
        {
          "Value": "2",
          "Name": "UserCancelled"
        },
        {
          "Value": "3",
          "Name": "AppComponentsMayNeedUpdating"
        },
        {
          "Value": "4",
          "Name": "NoComponentsFound"
        }
      ],
      "Name": "Windows.Media.Protection.RenewalStatus"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "1",
          "Name": "UserModeComponentLoad"
        },
        {
          "Value": "2",
          "Name": "KernelModeComponentLoad"
        },
        {
          "Value": "4",
          "Name": "AppComponent"
        },
        {
          "Value": "16",
          "Name": "GlobalRevocationListLoadFailed"
        },
        {
          "Value": "32",
          "Name": "InvalidGlobalRevocationListSignature"
        },
        {
          "Value": "4096",
          "Name": "GlobalRevocationListAbsent"
        },
        {
          "Value": "8192",
          "Name": "ComponentRevoked"
        },
        {
          "Value": "16384",
          "Name": "InvalidComponentCertificateExtendedKeyUse"
        },
        {
          "Value": "32768",
          "Name": "ComponentCertificateRevoked"
        },
        {
          "Value": "65536",
          "Name": "InvalidComponentCertificateRoot"
        },
        {
          "Value": "131072",
          "Name": "ComponentHighSecurityCertificateRevoked"
        },
        {
          "Value": "262144",
          "Name": "ComponentLowSecurityCertificateRevoked"
        },
        {
          "Value": "1048576",
          "Name": "BootDriverVerificationFailed"
        },
        {
          "Value": "16777216",
          "Name": "ComponentSignedWithTestCertificate"
        },
        {
          "Value": "268435456",
          "Name": "EncryptionFailure"
        }
      ],
      "Name": "Windows.Media.Protection.RevocationAndRenewalReasons"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Other"
        },
        {
          "Value": "1",
          "Name": "Movie"
        },
        {
          "Value": "1",
          "Name": "ForegroundOnlyMedia"
        },
        {
          "Value": "2",
          "Name": "Media"
        },
        {
          "Value": "2",
          "Name": "BackgroundCapableMedia"
        },
        {
          "Value": "3",
          "Name": "Communications"
        },
        {
          "Value": "4",
          "Name": "Alerts"
        },
        {
          "Value": "5",
          "Name": "SoundEffects"
        },
        {
          "Value": "6",
          "Name": "GameEffects"
        },
        {
          "Value": "7",
          "Name": "GameMedia"
        },
        {
          "Value": "8",
          "Name": "GameChat"
        },
        {
          "Value": "9",
          "Name": "Speech"
        }
      ],
      "Name": "Windows.Media.Render.AudioRenderCategory"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Muted"
        },
        {
          "Value": "1",
          "Name": "Low"
        },
        {
          "Value": "2",
          "Name": "Full"
        }
      ],
      "Name": "Windows.Media.SoundLevel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "TooNoisy"
        },
        {
          "Value": "2",
          "Name": "NoSignal"
        },
        {
          "Value": "3",
          "Name": "TooLoud"
        },
        {
          "Value": "4",
          "Name": "TooQuiet"
        },
        {
          "Value": "5",
          "Name": "TooFast"
        },
        {
          "Value": "6",
          "Name": "TooSlow"
        }
      ],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionAudioProblem"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "High"
        },
        {
          "Value": "1",
          "Name": "Medium"
        },
        {
          "Value": "2",
          "Name": "Low"
        },
        {
          "Value": "3",
          "Name": "Rejected"
        }
      ],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionConfidence"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "Min"
        },
        {
          "Value": "2",
          "Name": "Max"
        }
      ],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionConstraintProbability"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Topic"
        },
        {
          "Value": "1",
          "Name": "List"
        },
        {
          "Value": "2",
          "Name": "Grammar"
        },
        {
          "Value": "3",
          "Name": "VoiceCommandDefinition"
        }
      ],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionConstraintType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "TopicLanguageNotSupported"
        },
        {
          "Value": "2",
          "Name": "GrammarLanguageMismatch"
        },
        {
          "Value": "3",
          "Name": "GrammarCompilationFailure"
        },
        {
          "Value": "4",
          "Name": "AudioQualityFailure"
        },
        {
          "Value": "5",
          "Name": "UserCanceled"
        },
        {
          "Value": "6",
          "Name": "Unknown"
        }
      ],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionResultStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "WebSearch"
        },
        {
          "Value": "1",
          "Name": "Dictation"
        }
      ],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognitionScenario"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Idle"
        },
        {
          "Value": "1",
          "Name": "Capturing"
        },
        {
          "Value": "2",
          "Name": "Processing"
        },
        {
          "Value": "3",
          "Name": "SoundStarted"
        },
        {
          "Value": "4",
          "Name": "SoundEnded"
        }
      ],
      "Name": "Windows.Media.SpeechRecognition.SpeechRecognizerState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Male"
        },
        {
          "Value": "1",
          "Name": "Female"
        }
      ],
      "Name": "Windows.Media.SpeechSynthesis.VoiceGender"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Play"
        },
        {
          "Value": "1",
          "Name": "Pause"
        },
        {
          "Value": "2",
          "Name": "Stop"
        },
        {
          "Value": "3",
          "Name": "Record"
        },
        {
          "Value": "4",
          "Name": "FastForward"
        },
        {
          "Value": "5",
          "Name": "Rewind"
        },
        {
          "Value": "6",
          "Name": "Next"
        },
        {
          "Value": "7",
          "Name": "Previous"
        },
        {
          "Value": "8",
          "Name": "ChannelUp"
        },
        {
          "Value": "9",
          "Name": "ChannelDown"
        }
      ],
      "Name": "Windows.Media.SystemMediaTransportControlsButton"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "SoundLevel"
        }
      ],
      "Name": "Windows.Media.SystemMediaTransportControlsProperty"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "MrfCrf444"
        }
      ],
      "Name": "Windows.Media.Transcoding.MediaVideoProcessingAlgorithm"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Unknown"
        },
        {
          "Value": "2",
          "Name": "InvalidProfile"
        },
        {
          "Value": "3",
          "Name": "CodecNotFound"
        }
      ],
      "Name": "Windows.Media.Transcoding.TranscodeFailureReason"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Parallel"
        },
        {
          "Value": "1",
          "Name": "Serialized"
        }
      ],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferBehavior"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "UnrestrictedOnly"
        },
        {
          "Value": "2",
          "Name": "Always"
        }
      ],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferCostPolicy"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "High"
        }
      ],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferPriority"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Idle"
        },
        {
          "Value": "1",
          "Name": "Running"
        },
        {
          "Value": "2",
          "Name": "PausedByApplication"
        },
        {
          "Value": "3",
          "Name": "PausedCostedNetwork"
        },
        {
          "Value": "4",
          "Name": "PausedNoNetwork"
        },
        {
          "Value": "5",
          "Name": "Completed"
        },
        {
          "Value": "6",
          "Name": "Canceled"
        },
        {
          "Value": "7",
          "Name": "Error"
        },
        {
          "Value": "32",
          "Name": "PausedSystemPolicy"
        }
      ],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Pap"
        },
        {
          "Value": "2",
          "Name": "Chap"
        },
        {
          "Value": "3",
          "Name": "Mschapv2"
        }
      ],
      "Name": "Windows.Networking.Connectivity.CellularApnAuthenticationType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "PerMinute"
        },
        {
          "Value": "1",
          "Name": "PerHour"
        },
        {
          "Value": "2",
          "Name": "PerDay"
        },
        {
          "Value": "3",
          "Name": "Total"
        }
      ],
      "Name": "Windows.Networking.Connectivity.DataUsageGranularity"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Unauthenticated"
        },
        {
          "Value": "2",
          "Name": "Authenticated"
        }
      ],
      "Name": "Windows.Networking.Connectivity.DomainConnectivityLevel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Unknown"
        },
        {
          "Value": "2",
          "Name": "Open80211"
        },
        {
          "Value": "3",
          "Name": "SharedKey80211"
        },
        {
          "Value": "4",
          "Name": "Wpa"
        },
        {
          "Value": "5",
          "Name": "WpaPsk"
        },
        {
          "Value": "6",
          "Name": "WpaNone"
        },
        {
          "Value": "7",
          "Name": "Rsna"
        },
        {
          "Value": "8",
          "Name": "RsnaPsk"
        },
        {
          "Value": "9",
          "Name": "Ihv"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkAuthenticationType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "LocalAccess"
        },
        {
          "Value": "2",
          "Name": "ConstrainedInternetAccess"
        },
        {
          "Value": "3",
          "Name": "InternetAccess"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkConnectivityLevel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "Unrestricted"
        },
        {
          "Value": "2",
          "Name": "Fixed"
        },
        {
          "Value": "3",
          "Name": "Variable"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkCostType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Unknown"
        },
        {
          "Value": "2",
          "Name": "Wep"
        },
        {
          "Value": "3",
          "Name": "Wep40"
        },
        {
          "Value": "4",
          "Name": "Wep104"
        },
        {
          "Value": "5",
          "Name": "Tkip"
        },
        {
          "Value": "6",
          "Name": "Ccmp"
        },
        {
          "Value": "7",
          "Name": "WpaUseGroup"
        },
        {
          "Value": "8",
          "Name": "RsnUseGroup"
        },
        {
          "Value": "9",
          "Name": "Ihv"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkEncryptionType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Internet"
        },
        {
          "Value": "2",
          "Name": "PrivateNetwork"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkTypes"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "NotRoaming"
        },
        {
          "Value": "2",
          "Name": "Roaming"
        }
      ],
      "Name": "Windows.Networking.Connectivity.RoamingStates"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "DoNotCare"
        },
        {
          "Value": "1",
          "Name": "No"
        },
        {
          "Value": "2",
          "Name": "Yes"
        }
      ],
      "Name": "Windows.Networking.Connectivity.TriStates"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Gprs"
        },
        {
          "Value": "2",
          "Name": "Edge"
        },
        {
          "Value": "4",
          "Name": "Umts"
        },
        {
          "Value": "8",
          "Name": "Hsdpa"
        },
        {
          "Value": "16",
          "Name": "Hsupa"
        },
        {
          "Value": "32",
          "Name": "LteAdvanced"
        },
        {
          "Value": "65536",
          "Name": "Cdma1xRtt"
        },
        {
          "Value": "131072",
          "Name": "Cdma1xEvdo"
        },
        {
          "Value": "262144",
          "Name": "Cdma1xEvdoRevA"
        },
        {
          "Value": "524288",
          "Name": "Cdma1xEvdv"
        },
        {
          "Value": "1048576",
          "Name": "Cdma3xRtt"
        },
        {
          "Value": "2097152",
          "Name": "Cdma1xEvdoRevB"
        },
        {
          "Value": "4194304",
          "Name": "CdmaUmb"
        },
        {
          "Value": "2147483648",
          "Name": "Custom"
        }
      ],
      "Name": "Windows.Networking.Connectivity.WwanDataClass"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Deregistered"
        },
        {
          "Value": "2",
          "Name": "Searching"
        },
        {
          "Value": "3",
          "Name": "Home"
        },
        {
          "Value": "4",
          "Name": "Roaming"
        },
        {
          "Value": "5",
          "Name": "Partner"
        },
        {
          "Value": "6",
          "Name": "Denied"
        }
      ],
      "Name": "Windows.Networking.Connectivity.WwanNetworkRegistrationState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Suffix"
        },
        {
          "Value": "1",
          "Name": "FullyQualified"
        }
      ],
      "Name": "Windows.Networking.DomainNameType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "2",
          "Name": "OptimizeForLongConnections"
        }
      ],
      "Name": "Windows.Networking.HostNameSortOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "DomainName"
        },
        {
          "Value": "1",
          "Name": "Ipv4"
        },
        {
          "Value": "2",
          "Name": "Ipv6"
        },
        {
          "Value": "3",
          "Name": "Bluetooth"
        }
      ],
      "Name": "Windows.Networking.HostNameType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "NoError"
        },
        {
          "Value": "50",
          "Name": "LoginSucceeded"
        },
        {
          "Value": "100",
          "Name": "LoginFailed"
        },
        {
          "Value": "102",
          "Name": "RadiusServerError"
        },
        {
          "Value": "105",
          "Name": "NetworkAdministratorError"
        },
        {
          "Value": "151",
          "Name": "LoginAborted"
        },
        {
          "Value": "255",
          "Name": "AccessGatewayInternalError"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.HotspotAuthenticationResponseCode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Wlan"
        },
        {
          "Value": "1",
          "Name": "Wwan"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.ProfileMediaType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Browse"
        },
        {
          "Value": "2",
          "Name": "Triggered"
        }
      ],
      "Name": "Windows.Networking.Proximity.PeerDiscoveryTypes"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Peer"
        },
        {
          "Value": "1",
          "Name": "Host"
        },
        {
          "Value": "2",
          "Name": "Client"
        }
      ],
      "Name": "Windows.Networking.Proximity.PeerRole"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Created"
        },
        {
          "Value": "1",
          "Name": "Started"
        },
        {
          "Value": "2",
          "Name": "EnumerationCompleted"
        },
        {
          "Value": "3",
          "Name": "Stopping"
        },
        {
          "Value": "4",
          "Name": "Stopped"
        },
        {
          "Value": "5",
          "Name": "Aborted"
        }
      ],
      "Name": "Windows.Networking.Proximity.PeerWatcherStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "PeerFound"
        },
        {
          "Value": "1",
          "Name": "Listening"
        },
        {
          "Value": "2",
          "Name": "Connecting"
        },
        {
          "Value": "3",
          "Name": "Completed"
        },
        {
          "Value": "4",
          "Name": "Canceled"
        },
        {
          "Value": "5",
          "Name": "Failed"
        }
      ],
      "Name": "Windows.Networking.Proximity.TriggeredConnectState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Toast"
        },
        {
          "Value": "1",
          "Name": "Tile"
        },
        {
          "Value": "2",
          "Name": "Badge"
        },
        {
          "Value": "3",
          "Name": "Raw"
        },
        {
          "Value": "4",
          "Name": "TileFlyout"
        }
      ],
      "Name": "Windows.Networking.PushNotifications.PushNotificationType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "FastUserSwitched"
        },
        {
          "Value": "1",
          "Name": "LowPowerExit"
        },
        {
          "Value": "2",
          "Name": "QuietHoursExit"
        },
        {
          "Value": "3",
          "Name": "ApplicationRestart"
        }
      ],
      "Name": "Windows.Networking.Sockets.ControlChannelTriggerResetReason"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "RequestSoftwareSlot"
        },
        {
          "Value": "1",
          "Name": "RequestHardwareSlot"
        }
      ],
      "Name": "Windows.Networking.Sockets.ControlChannelTriggerResourceType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "HardwareSlotRequested"
        },
        {
          "Value": "1",
          "Name": "SoftwareSlotAllocated"
        },
        {
          "Value": "2",
          "Name": "HardwareSlotAllocated"
        },
        {
          "Value": "3",
          "Name": "PolicyError"
        },
        {
          "Value": "4",
          "Name": "SystemError"
        },
        {
          "Value": "5",
          "Name": "TransportDisconnected"
        },
        {
          "Value": "6",
          "Name": "ServiceUnavailable"
        }
      ],
      "Name": "Windows.Networking.Sockets.ControlChannelTriggerStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "DoNotWake"
        },
        {
          "Value": "1",
          "Name": "Wake"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketActivityConnectedStandbyAction"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "StreamSocketListener"
        },
        {
          "Value": "2",
          "Name": "DatagramSocket"
        },
        {
          "Value": "3",
          "Name": "StreamSocket"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketActivityKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "SocketActivity"
        },
        {
          "Value": "2",
          "Name": "ConnectionAccepted"
        },
        {
          "Value": "3",
          "Name": "KeepAliveTimerExpired"
        },
        {
          "Value": "4",
          "Name": "SocketClosed"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketActivityTriggerReason"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "OperationAborted"
        },
        {
          "Value": "2",
          "Name": "HttpInvalidServerResponse"
        },
        {
          "Value": "3",
          "Name": "ConnectionTimedOut"
        },
        {
          "Value": "4",
          "Name": "AddressFamilyNotSupported"
        },
        {
          "Value": "5",
          "Name": "SocketTypeNotSupported"
        },
        {
          "Value": "6",
          "Name": "HostNotFound"
        },
        {
          "Value": "7",
          "Name": "NoDataRecordOfRequestedType"
        },
        {
          "Value": "8",
          "Name": "NonAuthoritativeHostNotFound"
        },
        {
          "Value": "9",
          "Name": "ClassTypeNotFound"
        },
        {
          "Value": "10",
          "Name": "AddressAlreadyInUse"
        },
        {
          "Value": "11",
          "Name": "CannotAssignRequestedAddress"
        },
        {
          "Value": "12",
          "Name": "ConnectionRefused"
        },
        {
          "Value": "13",
          "Name": "NetworkIsUnreachable"
        },
        {
          "Value": "14",
          "Name": "UnreachableHost"
        },
        {
          "Value": "15",
          "Name": "NetworkIsDown"
        },
        {
          "Value": "16",
          "Name": "NetworkDroppedConnectionOnReset"
        },
        {
          "Value": "17",
          "Name": "SoftwareCausedConnectionAbort"
        },
        {
          "Value": "18",
          "Name": "ConnectionResetByPeer"
        },
        {
          "Value": "19",
          "Name": "HostIsDown"
        },
        {
          "Value": "20",
          "Name": "NoAddressesFound"
        },
        {
          "Value": "21",
          "Name": "TooManyOpenFiles"
        },
        {
          "Value": "22",
          "Name": "MessageTooLong"
        },
        {
          "Value": "23",
          "Name": "CertificateExpired"
        },
        {
          "Value": "24",
          "Name": "CertificateUntrustedRoot"
        },
        {
          "Value": "25",
          "Name": "CertificateCommonNameIsIncorrect"
        },
        {
          "Value": "26",
          "Name": "CertificateWrongUsage"
        },
        {
          "Value": "27",
          "Name": "CertificateRevoked"
        },
        {
          "Value": "28",
          "Name": "CertificateNoRevocationCheck"
        },
        {
          "Value": "29",
          "Name": "CertificateRevocationServerOffline"
        },
        {
          "Value": "30",
          "Name": "CertificateIsInvalid"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketErrorStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Binary"
        },
        {
          "Value": "1",
          "Name": "Utf8"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketMessageType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "PlainSocket"
        },
        {
          "Value": "1",
          "Name": "Ssl"
        },
        {
          "Value": "2",
          "Name": "SslAllowNullEncryption"
        },
        {
          "Value": "3",
          "Name": "BluetoothEncryptionAllowNullAuthentication"
        },
        {
          "Value": "4",
          "Name": "BluetoothEncryptionWithAuthentication"
        },
        {
          "Value": "5",
          "Name": "Ssl3AllowWeakEncryption"
        },
        {
          "Value": "6",
          "Name": "Tls10"
        },
        {
          "Value": "7",
          "Name": "Tls11"
        },
        {
          "Value": "8",
          "Name": "Tls12"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketProtectionLevel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Normal"
        },
        {
          "Value": "1",
          "Name": "LowLatency"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketQualityOfService"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Ignorable"
        },
        {
          "Value": "2",
          "Name": "Fatal"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketSslErrorSeverity"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "PackageFamilyName"
        },
        {
          "Value": "1",
          "Name": "FullyQualifiedBinaryName"
        },
        {
          "Value": "2",
          "Name": "FilePath"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnAppIdType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Mschapv2"
        },
        {
          "Value": "1",
          "Name": "Eap"
        },
        {
          "Value": "2",
          "Name": "Certificate"
        },
        {
          "Value": "3",
          "Name": "PresharedKey"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnAuthenticationMethod"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "UsernamePassword"
        },
        {
          "Value": "1",
          "Name": "UsernameOtpPin"
        },
        {
          "Value": "2",
          "Name": "UsernamePasswordAndPin"
        },
        {
          "Value": "3",
          "Name": "UsernamePasswordChange"
        },
        {
          "Value": "4",
          "Name": "SmartCard"
        },
        {
          "Value": "5",
          "Name": "ProtectedCertificate"
        },
        {
          "Value": "6",
          "Name": "UnProtectedCertificate"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnCredentialType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Send"
        },
        {
          "Value": "1",
          "Name": "Receive"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnDataPathType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Suffix"
        },
        {
          "Value": "1",
          "Name": "FullyQualified"
        },
        {
          "Value": "65535",
          "Name": "Reserved"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnDomainNameType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Idle"
        },
        {
          "Value": "1",
          "Name": "Active"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnChannelActivityEventType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Retrying"
        },
        {
          "Value": "2",
          "Name": "UseForSingleSignIn"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnChannelRequestCredentialsOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "6",
          "Name": "Tcp"
        },
        {
          "Value": "17",
          "Name": "Udp"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnIPProtocol"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Ok"
        },
        {
          "Value": "1",
          "Name": "Other"
        },
        {
          "Value": "2",
          "Name": "InvalidXmlSyntax"
        },
        {
          "Value": "3",
          "Name": "ProfileNameTooLong"
        },
        {
          "Value": "4",
          "Name": "ProfileInvalidAppId"
        },
        {
          "Value": "5",
          "Name": "AccessDenied"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnManagementErrorStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Pptp"
        },
        {
          "Value": "1",
          "Name": "L2tp"
        },
        {
          "Value": "2",
          "Name": "IpsecIkev2"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnNativeProtocolType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Ok"
        },
        {
          "Value": "1",
          "Name": "InvalidBufferSize"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnPacketBufferStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "SplitRouting"
        },
        {
          "Value": "1",
          "Name": "ForceAllTrafficOverVpn"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnRoutingPolicyType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "Alternate"
        }
      ],
      "Name": "Windows.Phone.ApplicationModel.ApplicationProfileModes"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "CancelledByUser"
        },
        {
          "Value": "2",
          "Name": "UnknownFailure"
        }
      ],
      "Name": "Windows.Phone.Management.Deployment.EnterpriseEnrollmentStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Enrolled"
        },
        {
          "Value": "1",
          "Name": "Disabled"
        },
        {
          "Value": "2",
          "Name": "Revoked"
        },
        {
          "Value": "3",
          "Name": "Expired"
        }
      ],
      "Name": "Windows.Phone.Management.Deployment.EnterpriseStatus"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Focus"
        },
        {
          "Value": "2",
          "Name": "Exposure"
        },
        {
          "Value": "4",
          "Name": "WhiteBalance"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.AutoFocusParameters"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "1",
          "Name": "Macro"
        },
        {
          "Value": "2",
          "Name": "Normal"
        },
        {
          "Value": "3",
          "Name": "Full"
        },
        {
          "Value": "4",
          "Name": "Hyperfocal"
        },
        {
          "Value": "5",
          "Name": "Infinity"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.AutoFocusRange"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Aac"
        },
        {
          "Value": "2",
          "Name": "Pcm"
        },
        {
          "Value": "3",
          "Name": "Amr"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.CameraCaptureAudioFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "H264"
        },
        {
          "Value": "2",
          "Name": "Nv12"
        },
        {
          "Value": "3",
          "Name": "Argb"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.CameraCaptureVideoFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Locked"
        },
        {
          "Value": "1",
          "Name": "NotLocked"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.CameraFocusStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "1",
          "Name": "Auto"
        },
        {
          "Value": "2",
          "Name": "Macro"
        },
        {
          "Value": "3",
          "Name": "Portrait"
        },
        {
          "Value": "4",
          "Name": "Sport"
        },
        {
          "Value": "5",
          "Name": "Snow"
        },
        {
          "Value": "6",
          "Name": "Night"
        },
        {
          "Value": "7",
          "Name": "Beach"
        },
        {
          "Value": "8",
          "Name": "Sunset"
        },
        {
          "Value": "9",
          "Name": "Candlelight"
        },
        {
          "Value": "10",
          "Name": "Landscape"
        },
        {
          "Value": "11",
          "Name": "NightPortrait"
        },
        {
          "Value": "12",
          "Name": "Backlit"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.CameraSceneMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Back"
        },
        {
          "Value": "1",
          "Name": "Front"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.CameraSensorLocation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Off"
        },
        {
          "Value": "1",
          "Name": "Auto"
        },
        {
          "Value": "3",
          "Name": "On"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.FlashState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Off"
        },
        {
          "Value": "1",
          "Name": "Auto"
        },
        {
          "Value": "2",
          "Name": "On"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.FocusIlluminationMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "10",
          "Name": "Level1"
        },
        {
          "Value": "11",
          "Name": "Level1_b"
        },
        {
          "Value": "11",
          "Name": "Level1_1"
        },
        {
          "Value": "12",
          "Name": "Level1_2"
        },
        {
          "Value": "13",
          "Name": "Level1_3"
        },
        {
          "Value": "20",
          "Name": "Level2"
        },
        {
          "Value": "21",
          "Name": "Level2_1"
        },
        {
          "Value": "22",
          "Name": "Level2_2"
        },
        {
          "Value": "30",
          "Name": "Level3"
        },
        {
          "Value": "31",
          "Name": "Level3_1"
        },
        {
          "Value": "32",
          "Name": "Level3_2"
        },
        {
          "Value": "40",
          "Name": "Level4"
        },
        {
          "Value": "41",
          "Name": "Level4_1"
        },
        {
          "Value": "42",
          "Name": "Level4_2"
        },
        {
          "Value": "50",
          "Name": "Level5"
        },
        {
          "Value": "51",
          "Name": "Level5_1"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.H264EncoderLevel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "66",
          "Name": "Baseline"
        },
        {
          "Value": "77",
          "Name": "Main"
        },
        {
          "Value": "88",
          "Name": "Extended"
        },
        {
          "Value": "100",
          "Name": "High"
        },
        {
          "Value": "110",
          "Name": "High10"
        },
        {
          "Value": "256",
          "Name": "ConstrainedBaseline"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.H264EncoderProfile"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Off"
        },
        {
          "Value": "1",
          "Name": "Auto"
        },
        {
          "Value": "2",
          "Name": "On"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.VideoTorchMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "1",
          "Name": "Cloudy"
        },
        {
          "Value": "2",
          "Name": "Daylight"
        },
        {
          "Value": "3",
          "Name": "Flash"
        },
        {
          "Value": "4",
          "Name": "Fluorescent"
        },
        {
          "Value": "5",
          "Name": "Tungsten"
        },
        {
          "Value": "6",
          "Name": "Candlelight"
        }
      ],
      "Name": "Windows.Phone.Media.Capture.WhiteBalancePreset"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "Earpiece"
        },
        {
          "Value": "2",
          "Name": "Speakerphone"
        },
        {
          "Value": "3",
          "Name": "Bluetooth"
        },
        {
          "Value": "4",
          "Name": "WiredHeadset"
        },
        {
          "Value": "5",
          "Name": "WiredHeadsetSpeakerOnly"
        },
        {
          "Value": "6",
          "Name": "BluetoothWithNoiseAndEchoCancellation"
        },
        {
          "Value": "7",
          "Name": "BluetoothPreferred"
        }
      ],
      "Name": "Windows.Phone.Media.Devices.AudioRoutingEndpoint"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Earpiece"
        },
        {
          "Value": "2",
          "Name": "Speakerphone"
        },
        {
          "Value": "4",
          "Name": "Bluetooth"
        }
      ],
      "Name": "Windows.Phone.Media.Devices.AvailableAudioRoutingEndpoints"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "PrivateNumber"
        },
        {
          "Value": "1",
          "Name": "UnknownNumber"
        },
        {
          "Value": "2",
          "Name": "BlockedNumber"
        }
      ],
      "Name": "Windows.Phone.Networking.NetworkOperators.PhoneCallBlockedReason"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Started"
        },
        {
          "Value": "1",
          "Name": "Stopped"
        }
      ],
      "Name": "Windows.Phone.Networking.NetworkOperators.PhoneCallFilterStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Allow"
        },
        {
          "Value": "1",
          "Name": "Block"
        }
      ],
      "Name": "Windows.Phone.Networking.NetworkOperators.SmsFilterAction"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Started"
        },
        {
          "Value": "1",
          "Name": "Stopped"
        }
      ],
      "Name": "Windows.Phone.Networking.NetworkOperators.SmsFilterStatus"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Private"
        },
        {
          "Value": "2",
          "Name": "Unknown"
        }
      ],
      "Name": "Windows.Phone.Networking.NetworkOperators.TelephoneNumberCategories"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "NotSupported"
        },
        {
          "Value": "2",
          "Name": "Supported"
        }
      ],
      "Name": "Windows.Phone.Networking.Voip.SeamlessCallUpgradeSupport"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Audio"
        },
        {
          "Value": "2",
          "Name": "Video"
        }
      ],
      "Name": "Windows.Phone.Networking.Voip.VoipCallMedia"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "UserIgnored"
        },
        {
          "Value": "1",
          "Name": "TimedOut"
        },
        {
          "Value": "2",
          "Name": "OtherIncomingCall"
        },
        {
          "Value": "3",
          "Name": "EmergencyCallExists"
        },
        {
          "Value": "4",
          "Name": "InvalidCallState"
        }
      ],
      "Name": "Windows.Phone.Networking.Voip.VoipCallRejectReason"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Ended"
        },
        {
          "Value": "1",
          "Name": "Held"
        },
        {
          "Value": "2",
          "Name": "Active"
        },
        {
          "Value": "3",
          "Name": "Incoming"
        },
        {
          "Value": "4",
          "Name": "Outgoing"
        }
      ],
      "Name": "Windows.Phone.Networking.Voip.VoipCallState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "QueryRemotePartySeamless"
        }
      ],
      "Name": "Windows.Phone.Networking.Voip.VoipOperationType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Phone"
        },
        {
          "Value": "2",
          "Name": "Email"
        },
        {
          "Value": "4",
          "Name": "Reminder"
        },
        {
          "Value": "8",
          "Name": "Alarm"
        },
        {
          "Value": "16",
          "Name": "Toast"
        },
        {
          "Value": "32",
          "Name": "AppUninstalled"
        },
        {
          "Value": "64",
          "Name": "Dnd"
        },
        {
          "Value": "128",
          "Name": "DrivingMode"
        },
        {
          "Value": "256",
          "Name": "BatterySaver"
        },
        {
          "Value": "512",
          "Name": "Media"
        },
        {
          "Value": "1024",
          "Name": "CortanaTile"
        }
      ],
      "Name": "Windows.Phone.Notification.Management.AccessoryNotificationType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "Speaker"
        },
        {
          "Value": "2",
          "Name": "Handsfree"
        }
      ],
      "Name": "Windows.Phone.Notification.Management.PhoneCallAudioEndpoint"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Incoming"
        },
        {
          "Value": "1",
          "Name": "Outgoing"
        }
      ],
      "Name": "Windows.Phone.Notification.Management.PhoneCallDirection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "Ringing"
        },
        {
          "Value": "2",
          "Name": "Talking"
        },
        {
          "Value": "3",
          "Name": "Held"
        },
        {
          "Value": "4",
          "Name": "Ended"
        }
      ],
      "Name": "Windows.Phone.Notification.Management.PhoneCallState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Cellular"
        },
        {
          "Value": "1",
          "Name": "Voip"
        }
      ],
      "Name": "Windows.Phone.Notification.Management.PhoneCallTransport"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Disconnected"
        },
        {
          "Value": "1",
          "Name": "Home"
        },
        {
          "Value": "2",
          "Name": "Roaming"
        }
      ],
      "Name": "Windows.Phone.Notification.Management.PhoneLineRegistrationState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "AudioOnly"
        },
        {
          "Value": "1",
          "Name": "AudioVideo"
        }
      ],
      "Name": "Windows.Phone.Notification.Management.PhoneMediaType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "NewCall"
        },
        {
          "Value": "1",
          "Name": "CallChanged"
        },
        {
          "Value": "2",
          "Name": "LineChanged"
        },
        {
          "Value": "3",
          "Name": "PhoneCallAudioEndpointChanged"
        },
        {
          "Value": "4",
          "Name": "PhoneMuteChanged"
        }
      ],
      "Name": "Windows.Phone.Notification.Management.PhoneNotificationType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Play"
        },
        {
          "Value": "2",
          "Name": "Pause"
        },
        {
          "Value": "4",
          "Name": "Stop"
        },
        {
          "Value": "8",
          "Name": "Record"
        },
        {
          "Value": "16",
          "Name": "FastForward"
        },
        {
          "Value": "32",
          "Name": "Rewind"
        },
        {
          "Value": "64",
          "Name": "Next"
        },
        {
          "Value": "128",
          "Name": "Previous"
        },
        {
          "Value": "256",
          "Name": "ChannelUp"
        },
        {
          "Value": "512",
          "Name": "ChannelDown"
        }
      ],
      "Name": "Windows.Phone.Notification.Management.PlaybackCapability"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Play"
        },
        {
          "Value": "1",
          "Name": "Pause"
        },
        {
          "Value": "2",
          "Name": "Stop"
        },
        {
          "Value": "3",
          "Name": "Record"
        },
        {
          "Value": "4",
          "Name": "FastForward"
        },
        {
          "Value": "5",
          "Name": "Rewind"
        },
        {
          "Value": "6",
          "Name": "Next"
        },
        {
          "Value": "7",
          "Name": "Previous"
        },
        {
          "Value": "8",
          "Name": "ChannelUp"
        },
        {
          "Value": "9",
          "Name": "ChannelDown"
        }
      ],
      "Name": "Windows.Phone.Notification.Management.PlaybackCommand"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "TrackChanged"
        },
        {
          "Value": "2",
          "Name": "Stopped"
        },
        {
          "Value": "3",
          "Name": "Playing"
        },
        {
          "Value": "4",
          "Name": "Paused"
        }
      ],
      "Name": "Windows.Phone.Notification.Management.PlaybackStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Active"
        },
        {
          "Value": "1",
          "Name": "Snoozed"
        },
        {
          "Value": "2",
          "Name": "Dismissed"
        }
      ],
      "Name": "Windows.Phone.Notification.Management.ReminderState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Created"
        },
        {
          "Value": "1",
          "Name": "Modified"
        },
        {
          "Value": "2",
          "Name": "Deleted"
        }
      ],
      "Name": "Windows.Phone.PersonalInformation.ContactChangeType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "SystemDefault"
        },
        {
          "Value": "1",
          "Name": "GivenNameFamilyName"
        },
        {
          "Value": "2",
          "Name": "FamilyNameGivenName"
        }
      ],
      "Name": "Windows.Phone.PersonalInformation.ContactQueryResultOrdering"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "LimitedReadOnly"
        },
        {
          "Value": "1",
          "Name": "ReadOnly"
        }
      ],
      "Name": "Windows.Phone.PersonalInformation.ContactStoreApplicationAccessMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "ReadOnly"
        },
        {
          "Value": "1",
          "Name": "ReadWrite"
        }
      ],
      "Name": "Windows.Phone.PersonalInformation.ContactStoreSystemAccessMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Version2_1"
        },
        {
          "Value": "1",
          "Name": "Version3"
        }
      ],
      "Name": "Windows.Phone.PersonalInformation.VCardFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Normal"
        },
        {
          "Value": "1",
          "Name": "Photo"
        }
      ],
      "Name": "Windows.Phone.SocialInformation.FeedItemStyle"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Since"
        },
        {
          "Value": "1",
          "Name": "Until"
        }
      ],
      "Name": "Windows.Phone.SocialInformation.FeedRequestDirection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Home"
        },
        {
          "Value": "1",
          "Name": "Contact"
        },
        {
          "Value": "2",
          "Name": "Dashboard"
        }
      ],
      "Name": "Windows.Phone.SocialInformation.FeedType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "SmallThumbnail"
        },
        {
          "Value": "1",
          "Name": "LargeThumbnail"
        },
        {
          "Value": "2",
          "Name": "FullSize"
        }
      ],
      "Name": "Windows.Phone.SocialInformation.ImageType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Generic"
        },
        {
          "Value": "2",
          "Name": "Count"
        }
      ],
      "Name": "Windows.Phone.SocialInformation.ReactionDisplayKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "DownloadHomeFeed"
        },
        {
          "Value": "1",
          "Name": "DownloadContactFeed"
        },
        {
          "Value": "2",
          "Name": "DownloadDashboard"
        },
        {
          "Value": "3",
          "Name": "DownloadAlbumItems"
        },
        {
          "Value": "4",
          "Name": "DownloadAlbumCover"
        },
        {
          "Value": "5",
          "Name": "DownloadImage"
        },
        {
          "Value": "6",
          "Name": "DownloadRichConnectData"
        }
      ],
      "Name": "Windows.Phone.SocialInformation.SocialOperationType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Low"
        },
        {
          "Value": "1",
          "Name": "Medium"
        },
        {
          "Value": "2",
          "Name": "High"
        }
      ],
      "Name": "Windows.Phone.Speech.Recognition.SpeechGrammarProbability"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "1",
          "Name": "Dictation"
        },
        {
          "Value": "2",
          "Name": "WebSearch"
        }
      ],
      "Name": "Windows.Phone.Speech.Recognition.SpeechPredefinedGrammar"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "TooNoisy"
        },
        {
          "Value": "2",
          "Name": "NoSignal"
        },
        {
          "Value": "3",
          "Name": "TooLoud"
        },
        {
          "Value": "4",
          "Name": "TooQuiet"
        },
        {
          "Value": "5",
          "Name": "TooFast"
        },
        {
          "Value": "6",
          "Name": "TooSlow"
        }
      ],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognitionAudioProblem"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Rejected"
        },
        {
          "Value": "1",
          "Name": "Low"
        },
        {
          "Value": "2",
          "Name": "Medium"
        },
        {
          "Value": "3",
          "Name": "High"
        }
      ],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognitionConfidence"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Succeeded"
        },
        {
          "Value": "1",
          "Name": "Busy"
        },
        {
          "Value": "2",
          "Name": "Cancelled"
        },
        {
          "Value": "3",
          "Name": "Preempted"
        },
        {
          "Value": "4",
          "Name": "PrivacyPolicyDeclined"
        }
      ],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognitionUIStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Inactive"
        },
        {
          "Value": "1",
          "Name": "Capturing"
        }
      ],
      "Name": "Windows.Phone.Speech.Recognition.SpeechRecognizerAudioCaptureState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Male"
        },
        {
          "Value": "1",
          "Name": "Female"
        }
      ],
      "Name": "Windows.Phone.Speech.Synthesis.VoiceGender"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Off"
        },
        {
          "Value": "1",
          "Name": "On"
        }
      ],
      "Name": "Windows.Phone.System.Power.PowerSavingMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Win"
        },
        {
          "Value": "2",
          "Name": "Loss"
        },
        {
          "Value": "3",
          "Name": "Tie"
        }
      ],
      "Name": "Windows.Phone.System.UserProfile.GameServices.Core.GameServiceGameOutcome"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Number"
        },
        {
          "Value": "1",
          "Name": "Time"
        }
      ],
      "Name": "Windows.Phone.System.UserProfile.GameServices.Core.GameServiceScoreKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Denied"
        },
        {
          "Value": "1",
          "Name": "Granted"
        }
      ],
      "Name": "Windows.Phone.System.UserProfile.LockScreenRequestResult"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "Url"
        },
        {
          "Value": "5",
          "Name": "EmailSmtpAddress"
        },
        {
          "Value": "29",
          "Name": "Number"
        },
        {
          "Value": "32",
          "Name": "TelephoneNumber"
        },
        {
          "Value": "49",
          "Name": "Text"
        },
        {
          "Value": "51",
          "Name": "Search"
        }
      ],
      "Name": "Windows.Phone.UI.Core.CoreInputScope"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "PromptIfNeeded"
        },
        {
          "Value": "1",
          "Name": "RetypeCredentials"
        },
        {
          "Value": "2",
          "Name": "DoNotPrompt"
        }
      ],
      "Name": "Windows.Security.Authentication.OnlineId.CredentialPromptType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "ForceAuthentication"
        }
      ],
      "Name": "Windows.Security.Authentication.Web.Core.WebTokenRequestPromptType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "UserCancel"
        },
        {
          "Value": "2",
          "Name": "AccountSwitch"
        },
        {
          "Value": "3",
          "Name": "UserInteractionRequired"
        },
        {
          "Value": "4",
          "Name": "AccountProviderNotAvailable"
        },
        {
          "Value": "5",
          "Name": "ProviderError"
        }
      ],
      "Name": "Windows.Security.Authentication.Web.Core.WebTokenRequestStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "IdOnly"
        },
        {
          "Value": "1",
          "Name": "IdAndProperties"
        }
      ],
      "Name": "Windows.Security.Authentication.Web.Provider.WebAccountClientViewType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "RequestToken"
        },
        {
          "Value": "1",
          "Name": "GetTokenSilently"
        },
        {
          "Value": "2",
          "Name": "AddAccount"
        },
        {
          "Value": "3",
          "Name": "ManageAccount"
        },
        {
          "Value": "4",
          "Name": "DeleteAccount"
        },
        {
          "Value": "5",
          "Name": "RetrieveCookies"
        }
      ],
      "Name": "Windows.Security.Authentication.Web.Provider.WebAccountProviderOperationKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "AddNew"
        }
      ],
      "Name": "Windows.Security.Authentication.Web.Provider.WebAccountSelectionOptions"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "SilentMode"
        },
        {
          "Value": "2",
          "Name": "UseTitle"
        },
        {
          "Value": "4",
          "Name": "UseHttpPost"
        },
        {
          "Value": "8",
          "Name": "UseCorporateNetwork"
        }
      ],
      "Name": "Windows.Security.Authentication.Web.WebAuthenticationOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "UserCancel"
        },
        {
          "Value": "2",
          "Name": "ErrorHttp"
        }
      ],
      "Name": "Windows.Security.Authentication.Web.WebAuthenticationStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Connected"
        },
        {
          "Value": "2",
          "Name": "Error"
        }
      ],
      "Name": "Windows.Security.Credentials.WebAccountState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Utf8"
        },
        {
          "Value": "1",
          "Name": "Utf16LE"
        },
        {
          "Value": "2",
          "Name": "Utf16BE"
        }
      ],
      "Name": "Windows.Security.Cryptography.BinaryStringEncoding"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Base"
        },
        {
          "Value": "1",
          "Name": "Ssl"
        },
        {
          "Value": "2",
          "Name": "NTAuthentication"
        },
        {
          "Value": "3",
          "Name": "MicrosoftRoot"
        }
      ],
      "Name": "Windows.Security.Cryptography.Certificates.CertificateChainPolicy"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Decryption"
        },
        {
          "Value": "2",
          "Name": "Signing"
        },
        {
          "Value": "4",
          "Name": "KeyAgreement"
        },
        {
          "Value": "16777215",
          "Name": "All"
        }
      ],
      "Name": "Windows.Security.Cryptography.Certificates.EnrollKeyUsages"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "NotExportable"
        },
        {
          "Value": "1",
          "Name": "Exportable"
        }
      ],
      "Name": "Windows.Security.Cryptography.Certificates.ExportOption"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "Untrusted"
        },
        {
          "Value": "2",
          "Name": "Revoked"
        },
        {
          "Value": "3",
          "Name": "Expired"
        },
        {
          "Value": "4",
          "Name": "IncompleteChain"
        },
        {
          "Value": "5",
          "Name": "InvalidSignature"
        },
        {
          "Value": "6",
          "Name": "WrongUsage"
        },
        {
          "Value": "7",
          "Name": "InvalidName"
        },
        {
          "Value": "8",
          "Name": "InvalidCertificateAuthorityPolicy"
        },
        {
          "Value": "9",
          "Name": "BasicConstraintsError"
        },
        {
          "Value": "10",
          "Name": "UnknownCriticalExtension"
        },
        {
          "Value": "11",
          "Name": "RevocationInformationMissing"
        },
        {
          "Value": "12",
          "Name": "RevocationFailure"
        },
        {
          "Value": "13",
          "Name": "OtherErrors"
        }
      ],
      "Name": "Windows.Security.Cryptography.Certificates.ChainValidationResult"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "DeleteExpired"
        }
      ],
      "Name": "Windows.Security.Cryptography.Certificates.InstallOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "NoConsent"
        },
        {
          "Value": "1",
          "Name": "ConsentOnly"
        },
        {
          "Value": "2",
          "Name": "ConsentWithPassword"
        },
        {
          "Value": "3",
          "Name": "ConsentWithFingerprint"
        }
      ],
      "Name": "Windows.Security.Cryptography.Certificates.KeyProtectionLevel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Invalid"
        },
        {
          "Value": "2048",
          "Name": "Rsa2048"
        },
        {
          "Value": "4096",
          "Name": "Rsa4096"
        }
      ],
      "Name": "Windows.Security.Cryptography.Certificates.KeySize"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "InvalidParameter"
        },
        {
          "Value": "2",
          "Name": "BadMessage"
        },
        {
          "Value": "3",
          "Name": "InvalidSignature"
        },
        {
          "Value": "4",
          "Name": "OtherErrors"
        }
      ],
      "Name": "Windows.Security.Cryptography.Certificates.SignatureValidationResult"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "RsaOaep"
        },
        {
          "Value": "2",
          "Name": "RsaPkcs1V15"
        },
        {
          "Value": "3",
          "Name": "RsaPss"
        }
      ],
      "Name": "Windows.Security.Cryptography.Core.CryptographicPadding"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Pkcs8RawPrivateKeyInfo"
        },
        {
          "Value": "1",
          "Name": "Pkcs1RsaPrivateKey"
        },
        {
          "Value": "2",
          "Name": "BCryptPrivateKey"
        },
        {
          "Value": "3",
          "Name": "Capi1PrivateKey"
        },
        {
          "Value": "4",
          "Name": "BCryptEccFullPrivateKey"
        }
      ],
      "Name": "Windows.Security.Cryptography.Core.CryptographicPrivateKeyBlobType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "X509SubjectPublicKeyInfo"
        },
        {
          "Value": "1",
          "Name": "Pkcs1RsaPublicKey"
        },
        {
          "Value": "2",
          "Name": "BCryptPublicKey"
        },
        {
          "Value": "3",
          "Name": "Capi1PublicKey"
        },
        {
          "Value": "4",
          "Name": "BCryptEccFullPublicKey"
        }
      ],
      "Name": "Windows.Security.Cryptography.Core.CryptographicPublicKeyBlobType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "UnknownError"
        },
        {
          "Value": "2",
          "Name": "InvalidCredentials"
        },
        {
          "Value": "3",
          "Name": "BadLocation"
        },
        {
          "Value": "4",
          "Name": "IndexFailure"
        },
        {
          "Value": "5",
          "Name": "NetworkFailure"
        },
        {
          "Value": "6",
          "Name": "NotSupported"
        }
      ],
      "Name": "Windows.Services.Maps.MapLocationFinderStatus"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Toll"
        },
        {
          "Value": "2",
          "Name": "Unpaved"
        }
      ],
      "Name": "Windows.Services.Maps.MapManeuverNotices"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "UnknownError"
        },
        {
          "Value": "2",
          "Name": "InvalidCredentials"
        },
        {
          "Value": "3",
          "Name": "NoRouteFound"
        },
        {
          "Value": "4",
          "Name": "NoRouteFoundWithGivenOptions"
        },
        {
          "Value": "5",
          "Name": "StartPointNotFound"
        },
        {
          "Value": "6",
          "Name": "EndPointNotFound"
        },
        {
          "Value": "7",
          "Name": "NoPedestrianRouteFound"
        },
        {
          "Value": "8",
          "Name": "NetworkFailure"
        },
        {
          "Value": "9",
          "Name": "NotSupported"
        }
      ],
      "Name": "Windows.Services.Maps.MapRouteFinderStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Start"
        },
        {
          "Value": "2",
          "Name": "Stopover"
        },
        {
          "Value": "3",
          "Name": "StopoverResume"
        },
        {
          "Value": "4",
          "Name": "End"
        },
        {
          "Value": "5",
          "Name": "GoStraight"
        },
        {
          "Value": "6",
          "Name": "UTurnLeft"
        },
        {
          "Value": "7",
          "Name": "UTurnRight"
        },
        {
          "Value": "8",
          "Name": "TurnKeepLeft"
        },
        {
          "Value": "9",
          "Name": "TurnKeepRight"
        },
        {
          "Value": "10",
          "Name": "TurnLightLeft"
        },
        {
          "Value": "11",
          "Name": "TurnLightRight"
        },
        {
          "Value": "12",
          "Name": "TurnLeft"
        },
        {
          "Value": "13",
          "Name": "TurnRight"
        },
        {
          "Value": "14",
          "Name": "TurnHardLeft"
        },
        {
          "Value": "15",
          "Name": "TurnHardRight"
        },
        {
          "Value": "16",
          "Name": "FreewayEnterLeft"
        },
        {
          "Value": "17",
          "Name": "FreewayEnterRight"
        },
        {
          "Value": "18",
          "Name": "FreewayLeaveLeft"
        },
        {
          "Value": "19",
          "Name": "FreewayLeaveRight"
        },
        {
          "Value": "20",
          "Name": "FreewayContinueLeft"
        },
        {
          "Value": "21",
          "Name": "FreewayContinueRight"
        },
        {
          "Value": "22",
          "Name": "TrafficCircleLeft"
        },
        {
          "Value": "23",
          "Name": "TrafficCircleRight"
        },
        {
          "Value": "24",
          "Name": "TakeFerry"
        }
      ],
      "Name": "Windows.Services.Maps.MapRouteManeuverKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Time"
        },
        {
          "Value": "1",
          "Name": "Distance"
        },
        {
          "Value": "2",
          "Name": "TimeWithTraffic"
        }
      ],
      "Name": "Windows.Services.Maps.MapRouteOptimization"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Highways"
        },
        {
          "Value": "2",
          "Name": "TollRoads"
        },
        {
          "Value": "4",
          "Name": "Ferries"
        },
        {
          "Value": "8",
          "Name": "Tunnels"
        },
        {
          "Value": "16",
          "Name": "DirtRoads"
        }
      ],
      "Name": "Windows.Services.Maps.MapRouteRestrictions"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "DisallowUserInput"
        },
        {
          "Value": "2",
          "Name": "FastLocationsOnly"
        },
        {
          "Value": "4",
          "Name": "UseReadOnlyCachedCopy"
        },
        {
          "Value": "8",
          "Name": "SuppressAccessTimeUpdate"
        }
      ],
      "Name": "Windows.Storage.AccessCache.AccessCacheOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Always"
        },
        {
          "Value": "1",
          "Name": "Existing"
        }
      ],
      "Name": "Windows.Storage.ApplicationDataCreateDisposition"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Local"
        },
        {
          "Value": "1",
          "Name": "Roaming"
        },
        {
          "Value": "2",
          "Name": "Temporary"
        },
        {
          "Value": "3",
          "Name": "LocalCache"
        }
      ],
      "Name": "Windows.Storage.ApplicationDataLocality"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "InvalidAlgorithm"
        },
        {
          "Value": "1",
          "Name": "NullAlgorithm"
        },
        {
          "Value": "2",
          "Name": "Mszip"
        },
        {
          "Value": "3",
          "Name": "Xpress"
        },
        {
          "Value": "4",
          "Name": "XpressHuff"
        },
        {
          "Value": "5",
          "Name": "Lzms"
        }
      ],
      "Name": "Windows.Storage.Compression.CompressAlgorithm"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "GenerateUniqueName"
        },
        {
          "Value": "1",
          "Name": "ReplaceExisting"
        },
        {
          "Value": "2",
          "Name": "FailIfExists"
        },
        {
          "Value": "3",
          "Name": "OpenIfExists"
        }
      ],
      "Name": "Windows.Storage.CreationCollisionOption"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Read"
        },
        {
          "Value": "1",
          "Name": "ReadWrite"
        }
      ],
      "Name": "Windows.Storage.FileAccessMode"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "Normal"
        },
        {
          "Value": "1",
          "Name": "ReadOnly"
        },
        {
          "Value": "16",
          "Name": "Directory"
        },
        {
          "Value": "32",
          "Name": "Archive"
        },
        {
          "Value": "256",
          "Name": "Temporary"
        }
      ],
      "Name": "Windows.Storage.FileAttributes"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unspecified"
        },
        {
          "Value": "1",
          "Name": "Normal"
        },
        {
          "Value": "2",
          "Name": "FlipHorizontal"
        },
        {
          "Value": "3",
          "Name": "Rotate180"
        },
        {
          "Value": "4",
          "Name": "FlipVertical"
        },
        {
          "Value": "5",
          "Name": "Transpose"
        },
        {
          "Value": "6",
          "Name": "Rotate270"
        },
        {
          "Value": "7",
          "Name": "Transverse"
        },
        {
          "Value": "8",
          "Name": "Rotate90"
        }
      ],
      "Name": "Windows.Storage.FileProperties.PhotoOrientation"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "MusicProperties"
        },
        {
          "Value": "2",
          "Name": "VideoProperties"
        },
        {
          "Value": "4",
          "Name": "ImageProperties"
        },
        {
          "Value": "8",
          "Name": "DocumentProperties"
        },
        {
          "Value": "16",
          "Name": "BasicProperties"
        }
      ],
      "Name": "Windows.Storage.FileProperties.PropertyPrefetchOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "PicturesView"
        },
        {
          "Value": "1",
          "Name": "VideosView"
        },
        {
          "Value": "2",
          "Name": "MusicView"
        },
        {
          "Value": "3",
          "Name": "DocumentsView"
        },
        {
          "Value": "4",
          "Name": "ListView"
        },
        {
          "Value": "5",
          "Name": "SingleItem"
        }
      ],
      "Name": "Windows.Storage.FileProperties.ThumbnailMode"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "ReturnOnlyIfCached"
        },
        {
          "Value": "2",
          "Name": "ResizeThumbnail"
        },
        {
          "Value": "4",
          "Name": "UseCurrentScale"
        }
      ],
      "Name": "Windows.Storage.FileProperties.ThumbnailOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Image"
        },
        {
          "Value": "1",
          "Name": "Icon"
        }
      ],
      "Name": "Windows.Storage.FileProperties.ThumbnailType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Normal"
        },
        {
          "Value": "90",
          "Name": "Rotate90"
        },
        {
          "Value": "180",
          "Name": "Rotate180"
        },
        {
          "Value": "270",
          "Name": "Rotate270"
        }
      ],
      "Name": "Windows.Storage.FileProperties.VideoOrientation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "GenerateUniqueName"
        },
        {
          "Value": "1",
          "Name": "ReplaceExisting"
        },
        {
          "Value": "2",
          "Name": "FailIfExists"
        }
      ],
      "Name": "Windows.Storage.NameCollisionOption"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "DocumentsLibrary"
        },
        {
          "Value": "1",
          "Name": "ComputerFolder"
        },
        {
          "Value": "2",
          "Name": "Desktop"
        },
        {
          "Value": "3",
          "Name": "Downloads"
        },
        {
          "Value": "4",
          "Name": "HomeGroup"
        },
        {
          "Value": "5",
          "Name": "MusicLibrary"
        },
        {
          "Value": "6",
          "Name": "PicturesLibrary"
        },
        {
          "Value": "7",
          "Name": "VideosLibrary"
        }
      ],
      "Name": "Windows.Storage.Pickers.PickerLocationId"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "List"
        },
        {
          "Value": "1",
          "Name": "Thumbnail"
        }
      ],
      "Name": "Windows.Storage.Pickers.PickerViewMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Added"
        },
        {
          "Value": "1",
          "Name": "AlreadyAdded"
        },
        {
          "Value": "2",
          "Name": "NotAllowed"
        },
        {
          "Value": "3",
          "Name": "Unavailable"
        }
      ],
      "Name": "Windows.Storage.Pickers.Provider.AddFileResult"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Single"
        },
        {
          "Value": "1",
          "Name": "Multiple"
        }
      ],
      "Name": "Windows.Storage.Pickers.Provider.FileSelectionMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Succeeded"
        },
        {
          "Value": "1",
          "Name": "NotAllowed"
        },
        {
          "Value": "2",
          "Name": "Unavailable"
        }
      ],
      "Name": "Windows.Storage.Pickers.Provider.SetFileNameResult"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "RequireUpdateOnAccess"
        },
        {
          "Value": "2",
          "Name": "UseCachedFileWhenOffline"
        },
        {
          "Value": "4",
          "Name": "DenyAccessWhenOffline"
        }
      ],
      "Name": "Windows.Storage.Provider.CachedFileOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Local"
        },
        {
          "Value": "1",
          "Name": "Remote"
        }
      ],
      "Name": "Windows.Storage.Provider.CachedFileTarget"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Incomplete"
        },
        {
          "Value": "1",
          "Name": "Complete"
        },
        {
          "Value": "2",
          "Name": "UserInputNeeded"
        },
        {
          "Value": "3",
          "Name": "CurrentlyUnavailable"
        },
        {
          "Value": "4",
          "Name": "Failed"
        },
        {
          "Value": "5",
          "Name": "CompleteAndRenamed"
        }
      ],
      "Name": "Windows.Storage.Provider.FileUpdateStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "NotNeeded"
        },
        {
          "Value": "1",
          "Name": "BeforeAccess"
        }
      ],
      "Name": "Windows.Storage.Provider.ReadActivationMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unavailable"
        },
        {
          "Value": "1",
          "Name": "Hidden"
        },
        {
          "Value": "2",
          "Name": "Visible"
        },
        {
          "Value": "3",
          "Name": "Complete"
        }
      ],
      "Name": "Windows.Storage.Provider.UIStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "ReadOnly"
        },
        {
          "Value": "1",
          "Name": "NotNeeded"
        },
        {
          "Value": "2",
          "Name": "AfterWrite"
        }
      ],
      "Name": "Windows.Storage.Provider.WriteActivationMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "DefaultQuery"
        },
        {
          "Value": "1",
          "Name": "OrderByName"
        },
        {
          "Value": "2",
          "Name": "OrderByTitle"
        },
        {
          "Value": "3",
          "Name": "OrderByMusicProperties"
        },
        {
          "Value": "4",
          "Name": "OrderBySearchRank"
        },
        {
          "Value": "5",
          "Name": "OrderByDate"
        }
      ],
      "Name": "Windows.Storage.Search.CommonFileQuery"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "DefaultQuery"
        },
        {
          "Value": "100",
          "Name": "GroupByYear"
        },
        {
          "Value": "101",
          "Name": "GroupByMonth"
        },
        {
          "Value": "102",
          "Name": "GroupByArtist"
        },
        {
          "Value": "103",
          "Name": "GroupByAlbum"
        },
        {
          "Value": "104",
          "Name": "GroupByAlbumArtist"
        },
        {
          "Value": "105",
          "Name": "GroupByComposer"
        },
        {
          "Value": "106",
          "Name": "GroupByGenre"
        },
        {
          "Value": "107",
          "Name": "GroupByPublishedYear"
        },
        {
          "Value": "108",
          "Name": "GroupByRating"
        },
        {
          "Value": "109",
          "Name": "GroupByTag"
        },
        {
          "Value": "110",
          "Name": "GroupByAuthor"
        },
        {
          "Value": "111",
          "Name": "GroupByType"
        }
      ],
      "Name": "Windows.Storage.Search.CommonFolderQuery"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Year"
        },
        {
          "Value": "2",
          "Name": "Month"
        }
      ],
      "Name": "Windows.Storage.Search.DateStackOption"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Shallow"
        },
        {
          "Value": "1",
          "Name": "Deep"
        }
      ],
      "Name": "Windows.Storage.Search.FolderDepth"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "NotIndexed"
        },
        {
          "Value": "2",
          "Name": "PartiallyIndexed"
        },
        {
          "Value": "3",
          "Name": "FullyIndexed"
        }
      ],
      "Name": "Windows.Storage.Search.IndexedState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "UseIndexerWhenAvailable"
        },
        {
          "Value": "1",
          "Name": "OnlyUseIndexer"
        },
        {
          "Value": "2",
          "Name": "DoNotUseIndexer"
        }
      ],
      "Name": "Windows.Storage.Search.IndexerOption"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "PermanentDelete"
        }
      ],
      "Name": "Windows.Storage.StorageDeleteOption"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "File"
        },
        {
          "Value": "2",
          "Name": "Folder"
        }
      ],
      "Name": "Windows.Storage.StorageItemTypes"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "AllowOnlyReaders"
        }
      ],
      "Name": "Windows.Storage.StorageOpenOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Failed"
        },
        {
          "Value": "1",
          "Name": "CurrentlyUnavailable"
        },
        {
          "Value": "2",
          "Name": "Incomplete"
        }
      ],
      "Name": "Windows.Storage.StreamedFileFailureMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "LittleEndian"
        },
        {
          "Value": "1",
          "Name": "BigEndian"
        }
      ],
      "Name": "Windows.Storage.Streams.ByteOrder"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Partial"
        },
        {
          "Value": "2",
          "Name": "ReadAhead"
        }
      ],
      "Name": "Windows.Storage.Streams.InputStreamOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Utf8"
        },
        {
          "Value": "1",
          "Name": "Utf16LE"
        },
        {
          "Value": "2",
          "Name": "Utf16BE"
        }
      ],
      "Name": "Windows.Storage.Streams.UnicodeEncoding"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Low"
        },
        {
          "Value": "1",
          "Name": "Medium"
        },
        {
          "Value": "2",
          "Name": "High"
        }
      ],
      "Name": "Windows.System.AppMemoryUsageLevel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "NotPresent"
        },
        {
          "Value": "1",
          "Name": "Discharging"
        },
        {
          "Value": "2",
          "Name": "Idle"
        },
        {
          "Value": "3",
          "Name": "Charging"
        }
      ],
      "Name": "Windows.System.BatteryStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "AppUnavailable"
        },
        {
          "Value": "2",
          "Name": "ProtocolUnavailable"
        },
        {
          "Value": "3",
          "Name": "Unknown"
        }
      ],
      "Name": "Windows.System.LaunchUriStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "LaunchUri"
        },
        {
          "Value": "1",
          "Name": "LaunchUriForResults"
        }
      ],
      "Name": "Windows.System.LaunchUriType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Disabled"
        },
        {
          "Value": "1",
          "Name": "Off"
        },
        {
          "Value": "2",
          "Name": "On"
        }
      ],
      "Name": "Windows.System.PowerSavingStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "NotPresent"
        },
        {
          "Value": "1",
          "Name": "Inadequate"
        },
        {
          "Value": "2",
          "Name": "Adequate"
        }
      ],
      "Name": "Windows.System.PowerSupplyStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "X86"
        },
        {
          "Value": "5",
          "Name": "Arm"
        },
        {
          "Value": "9",
          "Name": "X64"
        },
        {
          "Value": "11",
          "Name": "Neutral"
        },
        {
          "Value": "65535",
          "Name": "Unknown"
        }
      ],
      "Name": "Windows.System.ProcessorArchitecture"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "AppNotInstalled"
        },
        {
          "Value": "2",
          "Name": "AppUnavailable"
        },
        {
          "Value": "3",
          "Name": "ProtocolUnavailable"
        },
        {
          "Value": "4",
          "Name": "Unknown"
        }
      ],
      "Name": "Windows.System.QueryUriSupportStatus"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "TimeSliced"
        }
      ],
      "Name": "Windows.System.Threading.WorkItemOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "-1",
          "Name": "Low"
        },
        {
          "Value": "0",
          "Name": "Normal"
        },
        {
          "Value": "1",
          "Name": "High"
        }
      ],
      "Name": "Windows.System.Threading.WorkItemPriority"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unauthenticated"
        },
        {
          "Value": "1",
          "Name": "LocallyAuthenticated"
        },
        {
          "Value": "2",
          "Name": "RemotelyAuthenticated"
        }
      ],
      "Name": "Windows.System.UserAuthenticationStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Size64x64"
        },
        {
          "Value": "1",
          "Name": "Size208x208"
        },
        {
          "Value": "2",
          "Name": "Size424x424"
        },
        {
          "Value": "3",
          "Name": "Size1080x1080"
        }
      ],
      "Name": "Windows.System.UserPictureSize"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "SmallImage"
        },
        {
          "Value": "1",
          "Name": "LargeImage"
        },
        {
          "Value": "2",
          "Name": "Video"
        }
      ],
      "Name": "Windows.System.UserProfile.AccountPictureKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "ChangeDisabled"
        },
        {
          "Value": "2",
          "Name": "LargeOrDynamicError"
        },
        {
          "Value": "3",
          "Name": "VideoFrameSizeError"
        },
        {
          "Value": "4",
          "Name": "FileSizeError"
        },
        {
          "Value": "5",
          "Name": "Failure"
        }
      ],
      "Name": "Windows.System.UserProfile.SetAccountPictureResult"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "ChangeDisabled"
        },
        {
          "Value": "2",
          "Name": "UserCanceled"
        }
      ],
      "Name": "Windows.System.UserProfile.SetImageFeedResult"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "LocalUser"
        },
        {
          "Value": "1",
          "Name": "RemoteUser"
        },
        {
          "Value": "2",
          "Name": "LocalGuest"
        },
        {
          "Value": "3",
          "Name": "RemoteGuest"
        }
      ],
      "Name": "Windows.System.UserType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Created"
        },
        {
          "Value": "1",
          "Name": "Started"
        },
        {
          "Value": "2",
          "Name": "EnumerationCompleted"
        },
        {
          "Value": "3",
          "Name": "Stopping"
        },
        {
          "Value": "4",
          "Name": "Stopped"
        },
        {
          "Value": "5",
          "Name": "Aborted"
        }
      ],
      "Name": "Windows.System.UserWatcherStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "LeftButton"
        },
        {
          "Value": "2",
          "Name": "RightButton"
        },
        {
          "Value": "3",
          "Name": "Cancel"
        },
        {
          "Value": "4",
          "Name": "MiddleButton"
        },
        {
          "Value": "5",
          "Name": "XButton1"
        },
        {
          "Value": "6",
          "Name": "XButton2"
        },
        {
          "Value": "8",
          "Name": "Back"
        },
        {
          "Value": "9",
          "Name": "Tab"
        },
        {
          "Value": "12",
          "Name": "Clear"
        },
        {
          "Value": "13",
          "Name": "Enter"
        },
        {
          "Value": "16",
          "Name": "Shift"
        },
        {
          "Value": "17",
          "Name": "Control"
        },
        {
          "Value": "18",
          "Name": "Menu"
        },
        {
          "Value": "19",
          "Name": "Pause"
        },
        {
          "Value": "20",
          "Name": "CapitalLock"
        },
        {
          "Value": "21",
          "Name": "Kana"
        },
        {
          "Value": "21",
          "Name": "Hangul"
        },
        {
          "Value": "23",
          "Name": "Junja"
        },
        {
          "Value": "24",
          "Name": "Final"
        },
        {
          "Value": "25",
          "Name": "Hanja"
        },
        {
          "Value": "25",
          "Name": "Kanji"
        },
        {
          "Value": "27",
          "Name": "Escape"
        },
        {
          "Value": "28",
          "Name": "Convert"
        },
        {
          "Value": "29",
          "Name": "NonConvert"
        },
        {
          "Value": "30",
          "Name": "Accept"
        },
        {
          "Value": "31",
          "Name": "ModeChange"
        },
        {
          "Value": "32",
          "Name": "Space"
        },
        {
          "Value": "33",
          "Name": "PageUp"
        },
        {
          "Value": "34",
          "Name": "PageDown"
        },
        {
          "Value": "35",
          "Name": "End"
        },
        {
          "Value": "36",
          "Name": "Home"
        },
        {
          "Value": "37",
          "Name": "Left"
        },
        {
          "Value": "38",
          "Name": "Up"
        },
        {
          "Value": "39",
          "Name": "Right"
        },
        {
          "Value": "40",
          "Name": "Down"
        },
        {
          "Value": "41",
          "Name": "Select"
        },
        {
          "Value": "42",
          "Name": "Print"
        },
        {
          "Value": "43",
          "Name": "Execute"
        },
        {
          "Value": "44",
          "Name": "Snapshot"
        },
        {
          "Value": "45",
          "Name": "Insert"
        },
        {
          "Value": "46",
          "Name": "Delete"
        },
        {
          "Value": "47",
          "Name": "Help"
        },
        {
          "Value": "48",
          "Name": "Number0"
        },
        {
          "Value": "49",
          "Name": "Number1"
        },
        {
          "Value": "50",
          "Name": "Number2"
        },
        {
          "Value": "51",
          "Name": "Number3"
        },
        {
          "Value": "52",
          "Name": "Number4"
        },
        {
          "Value": "53",
          "Name": "Number5"
        },
        {
          "Value": "54",
          "Name": "Number6"
        },
        {
          "Value": "55",
          "Name": "Number7"
        },
        {
          "Value": "56",
          "Name": "Number8"
        },
        {
          "Value": "57",
          "Name": "Number9"
        },
        {
          "Value": "65",
          "Name": "A"
        },
        {
          "Value": "66",
          "Name": "B"
        },
        {
          "Value": "67",
          "Name": "C"
        },
        {
          "Value": "68",
          "Name": "D"
        },
        {
          "Value": "69",
          "Name": "E"
        },
        {
          "Value": "70",
          "Name": "F"
        },
        {
          "Value": "71",
          "Name": "G"
        },
        {
          "Value": "72",
          "Name": "H"
        },
        {
          "Value": "73",
          "Name": "I"
        },
        {
          "Value": "74",
          "Name": "J"
        },
        {
          "Value": "75",
          "Name": "K"
        },
        {
          "Value": "76",
          "Name": "L"
        },
        {
          "Value": "77",
          "Name": "M"
        },
        {
          "Value": "78",
          "Name": "N"
        },
        {
          "Value": "79",
          "Name": "O"
        },
        {
          "Value": "80",
          "Name": "P"
        },
        {
          "Value": "81",
          "Name": "Q"
        },
        {
          "Value": "82",
          "Name": "R"
        },
        {
          "Value": "83",
          "Name": "S"
        },
        {
          "Value": "84",
          "Name": "T"
        },
        {
          "Value": "85",
          "Name": "U"
        },
        {
          "Value": "86",
          "Name": "V"
        },
        {
          "Value": "87",
          "Name": "W"
        },
        {
          "Value": "88",
          "Name": "X"
        },
        {
          "Value": "89",
          "Name": "Y"
        },
        {
          "Value": "90",
          "Name": "Z"
        },
        {
          "Value": "91",
          "Name": "LeftWindows"
        },
        {
          "Value": "92",
          "Name": "RightWindows"
        },
        {
          "Value": "93",
          "Name": "Application"
        },
        {
          "Value": "95",
          "Name": "Sleep"
        },
        {
          "Value": "96",
          "Name": "NumberPad0"
        },
        {
          "Value": "97",
          "Name": "NumberPad1"
        },
        {
          "Value": "98",
          "Name": "NumberPad2"
        },
        {
          "Value": "99",
          "Name": "NumberPad3"
        },
        {
          "Value": "100",
          "Name": "NumberPad4"
        },
        {
          "Value": "101",
          "Name": "NumberPad5"
        },
        {
          "Value": "102",
          "Name": "NumberPad6"
        },
        {
          "Value": "103",
          "Name": "NumberPad7"
        },
        {
          "Value": "104",
          "Name": "NumberPad8"
        },
        {
          "Value": "105",
          "Name": "NumberPad9"
        },
        {
          "Value": "106",
          "Name": "Multiply"
        },
        {
          "Value": "107",
          "Name": "Add"
        },
        {
          "Value": "108",
          "Name": "Separator"
        },
        {
          "Value": "109",
          "Name": "Subtract"
        },
        {
          "Value": "110",
          "Name": "Decimal"
        },
        {
          "Value": "111",
          "Name": "Divide"
        },
        {
          "Value": "112",
          "Name": "F1"
        },
        {
          "Value": "113",
          "Name": "F2"
        },
        {
          "Value": "114",
          "Name": "F3"
        },
        {
          "Value": "115",
          "Name": "F4"
        },
        {
          "Value": "116",
          "Name": "F5"
        },
        {
          "Value": "117",
          "Name": "F6"
        },
        {
          "Value": "118",
          "Name": "F7"
        },
        {
          "Value": "119",
          "Name": "F8"
        },
        {
          "Value": "120",
          "Name": "F9"
        },
        {
          "Value": "121",
          "Name": "F10"
        },
        {
          "Value": "122",
          "Name": "F11"
        },
        {
          "Value": "123",
          "Name": "F12"
        },
        {
          "Value": "124",
          "Name": "F13"
        },
        {
          "Value": "125",
          "Name": "F14"
        },
        {
          "Value": "126",
          "Name": "F15"
        },
        {
          "Value": "127",
          "Name": "F16"
        },
        {
          "Value": "128",
          "Name": "F17"
        },
        {
          "Value": "129",
          "Name": "F18"
        },
        {
          "Value": "130",
          "Name": "F19"
        },
        {
          "Value": "131",
          "Name": "F20"
        },
        {
          "Value": "132",
          "Name": "F21"
        },
        {
          "Value": "133",
          "Name": "F22"
        },
        {
          "Value": "134",
          "Name": "F23"
        },
        {
          "Value": "135",
          "Name": "F24"
        },
        {
          "Value": "144",
          "Name": "NumberKeyLock"
        },
        {
          "Value": "145",
          "Name": "Scroll"
        },
        {
          "Value": "160",
          "Name": "LeftShift"
        },
        {
          "Value": "161",
          "Name": "RightShift"
        },
        {
          "Value": "162",
          "Name": "LeftControl"
        },
        {
          "Value": "163",
          "Name": "RightControl"
        },
        {
          "Value": "164",
          "Name": "LeftMenu"
        },
        {
          "Value": "165",
          "Name": "RightMenu"
        },
        {
          "Value": "166",
          "Name": "GoBack"
        },
        {
          "Value": "167",
          "Name": "GoForward"
        },
        {
          "Value": "168",
          "Name": "Refresh"
        },
        {
          "Value": "169",
          "Name": "Stop"
        },
        {
          "Value": "170",
          "Name": "Search"
        },
        {
          "Value": "171",
          "Name": "Favorites"
        },
        {
          "Value": "172",
          "Name": "GoHome"
        },
        {
          "Value": "193",
          "Name": "NavigationA"
        },
        {
          "Value": "194",
          "Name": "NavigationB"
        },
        {
          "Value": "195",
          "Name": "NavigationX"
        },
        {
          "Value": "196",
          "Name": "NavigationY"
        },
        {
          "Value": "197",
          "Name": "NavigationUp"
        },
        {
          "Value": "198",
          "Name": "NavigationDown"
        },
        {
          "Value": "199",
          "Name": "NavigationLeft"
        },
        {
          "Value": "200",
          "Name": "NavigationRight"
        },
        {
          "Value": "201",
          "Name": "NavigationMenu"
        },
        {
          "Value": "202",
          "Name": "NavigationView"
        },
        {
          "Value": "203",
          "Name": "NavigationViewUp"
        },
        {
          "Value": "204",
          "Name": "NavigationViewDown"
        },
        {
          "Value": "205",
          "Name": "NavigationViewPrevious"
        },
        {
          "Value": "206",
          "Name": "NavigationViewNext"
        }
      ],
      "Name": "Windows.System.VirtualKey"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Control"
        },
        {
          "Value": "2",
          "Name": "Menu"
        },
        {
          "Value": "4",
          "Name": "Shift"
        },
        {
          "Value": "8",
          "Name": "Windows"
        }
      ],
      "Name": "Windows.System.VirtualKeyModifiers"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "KeyDown"
        },
        {
          "Value": "1",
          "Name": "KeyUp"
        },
        {
          "Value": "2",
          "Name": "Character"
        },
        {
          "Value": "3",
          "Name": "DeadCharacter"
        },
        {
          "Value": "4",
          "Name": "SystemKeyDown"
        },
        {
          "Value": "5",
          "Name": "SystemKeyUp"
        },
        {
          "Value": "6",
          "Name": "SystemCharacter"
        },
        {
          "Value": "7",
          "Name": "SystemDeadCharacter"
        },
        {
          "Value": "8",
          "Name": "UnicodeCharacter"
        }
      ],
      "Name": "Windows.UI.Core.CoreAcceleratorKeyEventType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Arrow"
        },
        {
          "Value": "1",
          "Name": "Cross"
        },
        {
          "Value": "2",
          "Name": "Custom"
        },
        {
          "Value": "3",
          "Name": "Hand"
        },
        {
          "Value": "4",
          "Name": "Help"
        },
        {
          "Value": "5",
          "Name": "IBeam"
        },
        {
          "Value": "6",
          "Name": "SizeAll"
        },
        {
          "Value": "7",
          "Name": "SizeNortheastSouthwest"
        },
        {
          "Value": "8",
          "Name": "SizeNorthSouth"
        },
        {
          "Value": "9",
          "Name": "SizeNorthwestSoutheast"
        },
        {
          "Value": "10",
          "Name": "SizeWestEast"
        },
        {
          "Value": "11",
          "Name": "UniversalNo"
        },
        {
          "Value": "12",
          "Name": "UpArrow"
        },
        {
          "Value": "13",
          "Name": "Wait"
        }
      ],
      "Name": "Windows.UI.Core.CoreCursorType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "-2",
          "Name": "Idle"
        },
        {
          "Value": "-1",
          "Name": "Low"
        },
        {
          "Value": "0",
          "Name": "Normal"
        },
        {
          "Value": "1",
          "Name": "High"
        }
      ],
      "Name": "Windows.UI.Core.CoreDispatcherPriority"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Touch"
        },
        {
          "Value": "2",
          "Name": "Pen"
        },
        {
          "Value": "4",
          "Name": "Mouse"
        }
      ],
      "Name": "Windows.UI.Core.CoreInputDeviceTypes"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "ProcessOneAndAllPending"
        },
        {
          "Value": "1",
          "Name": "ProcessOneIfPresent"
        },
        {
          "Value": "2",
          "Name": "ProcessUntilQuit"
        },
        {
          "Value": "3",
          "Name": "ProcessAllIfPresent"
        }
      ],
      "Name": "Windows.UI.Core.CoreProcessEventsOption"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Closest"
        },
        {
          "Value": "2147483647",
          "Name": "Farthest"
        }
      ],
      "Name": "Windows.UI.Core.CoreProximityEvaluationScore"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Down"
        },
        {
          "Value": "2",
          "Name": "Locked"
        }
      ],
      "Name": "Windows.UI.Core.CoreVirtualKeyStates"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "CodeActivated"
        },
        {
          "Value": "1",
          "Name": "Deactivated"
        },
        {
          "Value": "2",
          "Name": "PointerActivated"
        }
      ],
      "Name": "Windows.UI.Core.CoreWindowActivationState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "LeftToRight"
        },
        {
          "Value": "1",
          "Name": "RightToLeft"
        }
      ],
      "Name": "Windows.UI.Core.CoreWindowFlowDirection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "CompositionUnconverted"
        },
        {
          "Value": "2",
          "Name": "CompositionConverted"
        },
        {
          "Value": "3",
          "Name": "CompositionTargetUnconverted"
        },
        {
          "Value": "4",
          "Name": "CompositionTargetConverted"
        }
      ],
      "Name": "Windows.UI.Core.Text.CoreTextFormatUpdatingReason"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Succeeded"
        },
        {
          "Value": "1",
          "Name": "Failed"
        }
      ],
      "Name": "Windows.UI.Core.Text.CoreTextFormatUpdatingResult"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Automatic"
        },
        {
          "Value": "1",
          "Name": "Manual"
        }
      ],
      "Name": "Windows.UI.Core.Text.CoreTextInputPaneDisplayPolicy"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "Url"
        },
        {
          "Value": "2",
          "Name": "FilePath"
        },
        {
          "Value": "3",
          "Name": "FileName"
        },
        {
          "Value": "4",
          "Name": "EmailUserName"
        },
        {
          "Value": "5",
          "Name": "EmailAddress"
        },
        {
          "Value": "6",
          "Name": "UserName"
        },
        {
          "Value": "7",
          "Name": "PersonalFullName"
        },
        {
          "Value": "8",
          "Name": "PersonalNamePrefix"
        },
        {
          "Value": "9",
          "Name": "PersonalGivenName"
        },
        {
          "Value": "10",
          "Name": "PersonalMiddleName"
        },
        {
          "Value": "11",
          "Name": "PersonalSurname"
        },
        {
          "Value": "12",
          "Name": "PersonalNameSuffix"
        },
        {
          "Value": "13",
          "Name": "Address"
        },
        {
          "Value": "14",
          "Name": "AddressPostalCode"
        },
        {
          "Value": "15",
          "Name": "AddressStreet"
        },
        {
          "Value": "16",
          "Name": "AddressStateOrProvince"
        },
        {
          "Value": "17",
          "Name": "AddressCity"
        },
        {
          "Value": "18",
          "Name": "AddressCountryName"
        },
        {
          "Value": "19",
          "Name": "AddressCountryShortName"
        },
        {
          "Value": "20",
          "Name": "CurrencyAmountAndSymbol"
        },
        {
          "Value": "21",
          "Name": "CurrencyAmount"
        },
        {
          "Value": "22",
          "Name": "Date"
        },
        {
          "Value": "23",
          "Name": "DateMonth"
        },
        {
          "Value": "24",
          "Name": "DateDay"
        },
        {
          "Value": "25",
          "Name": "DateYear"
        },
        {
          "Value": "26",
          "Name": "DateMonthName"
        },
        {
          "Value": "27",
          "Name": "DateDayName"
        },
        {
          "Value": "29",
          "Name": "Number"
        },
        {
          "Value": "30",
          "Name": "SingleCharacter"
        },
        {
          "Value": "31",
          "Name": "Password"
        },
        {
          "Value": "32",
          "Name": "TelephoneNumber"
        },
        {
          "Value": "33",
          "Name": "TelephoneCountryCode"
        },
        {
          "Value": "34",
          "Name": "TelephoneAreaCode"
        },
        {
          "Value": "35",
          "Name": "TelephoneLocalNumber"
        },
        {
          "Value": "36",
          "Name": "Time"
        },
        {
          "Value": "37",
          "Name": "TimeHour"
        },
        {
          "Value": "38",
          "Name": "TimeMinuteOrSecond"
        },
        {
          "Value": "39",
          "Name": "NumberFullWidth"
        },
        {
          "Value": "40",
          "Name": "AlphanumericHalfWidth"
        },
        {
          "Value": "41",
          "Name": "AlphanumericFullWidth"
        },
        {
          "Value": "42",
          "Name": "CurrencyChinese"
        },
        {
          "Value": "43",
          "Name": "Bopomofo"
        },
        {
          "Value": "44",
          "Name": "Hiragana"
        },
        {
          "Value": "45",
          "Name": "KatakanaHalfWidth"
        },
        {
          "Value": "46",
          "Name": "KatakanaFullWidth"
        },
        {
          "Value": "47",
          "Name": "Hanja"
        },
        {
          "Value": "48",
          "Name": "HangulHalfWidth"
        },
        {
          "Value": "49",
          "Name": "HangulFullWidth"
        },
        {
          "Value": "50",
          "Name": "Search"
        },
        {
          "Value": "51",
          "Name": "Formula"
        },
        {
          "Value": "52",
          "Name": "SearchIncremental"
        },
        {
          "Value": "53",
          "Name": "ChineseHalfWidth"
        },
        {
          "Value": "54",
          "Name": "ChineseFullWidth"
        },
        {
          "Value": "55",
          "Name": "NativeScript"
        },
        {
          "Value": "57",
          "Name": "Text"
        },
        {
          "Value": "58",
          "Name": "Chat"
        },
        {
          "Value": "59",
          "Name": "NameOrPhoneNumber"
        },
        {
          "Value": "60",
          "Name": "EmailUserNameOrAddress"
        },
        {
          "Value": "61",
          "Name": "Private"
        },
        {
          "Value": "62",
          "Name": "Maps"
        },
        {
          "Value": "63",
          "Name": "PasswordNumeric"
        },
        {
          "Value": "67",
          "Name": "FormulaNumber"
        }
      ],
      "Name": "Windows.UI.Core.Text.CoreTextInputScope"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Succeeded"
        },
        {
          "Value": "1",
          "Name": "Failed"
        }
      ],
      "Name": "Windows.UI.Core.Text.CoreTextSelectionUpdatingResult"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Succeeded"
        },
        {
          "Value": "1",
          "Name": "Failed"
        }
      ],
      "Name": "Windows.UI.Core.Text.CoreTextTextUpdatingResult"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Started"
        },
        {
          "Value": "1",
          "Name": "Dragging"
        },
        {
          "Value": "2",
          "Name": "Selecting"
        },
        {
          "Value": "3",
          "Name": "SelectSpeedBumping"
        },
        {
          "Value": "4",
          "Name": "SpeedBumping"
        },
        {
          "Value": "5",
          "Name": "Rearranging"
        },
        {
          "Value": "6",
          "Name": "Completed"
        }
      ],
      "Name": "Windows.UI.Input.CrossSlidingState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Started"
        },
        {
          "Value": "1",
          "Name": "Continuing"
        },
        {
          "Value": "2",
          "Name": "Completed"
        }
      ],
      "Name": "Windows.UI.Input.DraggingState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Touch"
        },
        {
          "Value": "1",
          "Name": "Keyboard"
        },
        {
          "Value": "2",
          "Name": "Mouse"
        }
      ],
      "Name": "Windows.UI.Input.EdgeGestureKind"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Tap"
        },
        {
          "Value": "2",
          "Name": "DoubleTap"
        },
        {
          "Value": "4",
          "Name": "Hold"
        },
        {
          "Value": "8",
          "Name": "HoldWithMouse"
        },
        {
          "Value": "16",
          "Name": "RightTap"
        },
        {
          "Value": "32",
          "Name": "Drag"
        },
        {
          "Value": "64",
          "Name": "ManipulationTranslateX"
        },
        {
          "Value": "128",
          "Name": "ManipulationTranslateY"
        },
        {
          "Value": "256",
          "Name": "ManipulationTranslateRailsX"
        },
        {
          "Value": "512",
          "Name": "ManipulationTranslateRailsY"
        },
        {
          "Value": "1024",
          "Name": "ManipulationRotate"
        },
        {
          "Value": "2048",
          "Name": "ManipulationScale"
        },
        {
          "Value": "4096",
          "Name": "ManipulationTranslateInertia"
        },
        {
          "Value": "8192",
          "Name": "ManipulationRotateInertia"
        },
        {
          "Value": "16384",
          "Name": "ManipulationScaleInertia"
        },
        {
          "Value": "32768",
          "Name": "CrossSlide"
        },
        {
          "Value": "65536",
          "Name": "ManipulationMultipleFingerPanning"
        }
      ],
      "Name": "Windows.UI.Input.GestureSettings"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Started"
        },
        {
          "Value": "1",
          "Name": "Completed"
        },
        {
          "Value": "2",
          "Name": "Canceled"
        }
      ],
      "Name": "Windows.UI.Input.HoldingState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Other"
        },
        {
          "Value": "1",
          "Name": "LeftButtonPressed"
        },
        {
          "Value": "2",
          "Name": "LeftButtonReleased"
        },
        {
          "Value": "3",
          "Name": "RightButtonPressed"
        },
        {
          "Value": "4",
          "Name": "RightButtonReleased"
        },
        {
          "Value": "5",
          "Name": "MiddleButtonPressed"
        },
        {
          "Value": "6",
          "Name": "MiddleButtonReleased"
        },
        {
          "Value": "7",
          "Name": "XButton1Pressed"
        },
        {
          "Value": "8",
          "Name": "XButton1Released"
        },
        {
          "Value": "9",
          "Name": "XButton2Pressed"
        },
        {
          "Value": "10",
          "Name": "XButton2Released"
        }
      ],
      "Name": "Windows.UI.Input.PointerUpdateKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "BadgeGlyph"
        },
        {
          "Value": "1",
          "Name": "BadgeNumber"
        }
      ],
      "Name": "Windows.UI.Notifications.BadgeTemplateType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Enabled"
        },
        {
          "Value": "1",
          "Name": "DisabledForApplication"
        },
        {
          "Value": "2",
          "Name": "DisabledForUser"
        },
        {
          "Value": "3",
          "Name": "DisabledByGroupPolicy"
        },
        {
          "Value": "4",
          "Name": "DisabledByManifest"
        }
      ],
      "Name": "Windows.UI.Notifications.NotificationSetting"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "HalfHour"
        },
        {
          "Value": "1",
          "Name": "Hour"
        },
        {
          "Value": "2",
          "Name": "SixHours"
        },
        {
          "Value": "3",
          "Name": "TwelveHours"
        },
        {
          "Value": "4",
          "Name": "Daily"
        }
      ],
      "Name": "Windows.UI.Notifications.PeriodicUpdateRecurrence"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "TileFlyoutTemplate01"
        }
      ],
      "Name": "Windows.UI.Notifications.TileFlyoutTemplateType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "TileSquareImage"
        },
        {
          "Value": "0",
          "Name": "TileSquare150x150Image"
        },
        {
          "Value": "1",
          "Name": "TileSquareBlock"
        },
        {
          "Value": "1",
          "Name": "TileSquare150x150Block"
        },
        {
          "Value": "2",
          "Name": "TileSquareText01"
        },
        {
          "Value": "2",
          "Name": "TileSquare150x150Text01"
        },
        {
          "Value": "3",
          "Name": "TileSquareText02"
        },
        {
          "Value": "3",
          "Name": "TileSquare150x150Text02"
        },
        {
          "Value": "4",
          "Name": "TileSquareText03"
        },
        {
          "Value": "4",
          "Name": "TileSquare150x150Text03"
        },
        {
          "Value": "5",
          "Name": "TileSquareText04"
        },
        {
          "Value": "5",
          "Name": "TileSquare150x150Text04"
        },
        {
          "Value": "6",
          "Name": "TileSquarePeekImageAndText01"
        },
        {
          "Value": "6",
          "Name": "TileSquare150x150PeekImageAndText01"
        },
        {
          "Value": "7",
          "Name": "TileSquarePeekImageAndText02"
        },
        {
          "Value": "7",
          "Name": "TileSquare150x150PeekImageAndText02"
        },
        {
          "Value": "8",
          "Name": "TileSquarePeekImageAndText03"
        },
        {
          "Value": "8",
          "Name": "TileSquare150x150PeekImageAndText03"
        },
        {
          "Value": "9",
          "Name": "TileSquarePeekImageAndText04"
        },
        {
          "Value": "9",
          "Name": "TileSquare150x150PeekImageAndText04"
        },
        {
          "Value": "10",
          "Name": "TileWideImage"
        },
        {
          "Value": "10",
          "Name": "TileWide310x150Image"
        },
        {
          "Value": "11",
          "Name": "TileWideImageCollection"
        },
        {
          "Value": "11",
          "Name": "TileWide310x150ImageCollection"
        },
        {
          "Value": "12",
          "Name": "TileWideImageAndText01"
        },
        {
          "Value": "12",
          "Name": "TileWide310x150ImageAndText01"
        },
        {
          "Value": "13",
          "Name": "TileWideImageAndText02"
        },
        {
          "Value": "13",
          "Name": "TileWide310x150ImageAndText02"
        },
        {
          "Value": "14",
          "Name": "TileWideBlockAndText01"
        },
        {
          "Value": "14",
          "Name": "TileWide310x150BlockAndText01"
        },
        {
          "Value": "15",
          "Name": "TileWideBlockAndText02"
        },
        {
          "Value": "15",
          "Name": "TileWide310x150BlockAndText02"
        },
        {
          "Value": "16",
          "Name": "TileWidePeekImageCollection01"
        },
        {
          "Value": "16",
          "Name": "TileWide310x150PeekImageCollection01"
        },
        {
          "Value": "17",
          "Name": "TileWidePeekImageCollection02"
        },
        {
          "Value": "17",
          "Name": "TileWide310x150PeekImageCollection02"
        },
        {
          "Value": "18",
          "Name": "TileWidePeekImageCollection03"
        },
        {
          "Value": "18",
          "Name": "TileWide310x150PeekImageCollection03"
        },
        {
          "Value": "19",
          "Name": "TileWidePeekImageCollection04"
        },
        {
          "Value": "19",
          "Name": "TileWide310x150PeekImageCollection04"
        },
        {
          "Value": "20",
          "Name": "TileWidePeekImageCollection05"
        },
        {
          "Value": "20",
          "Name": "TileWide310x150PeekImageCollection05"
        },
        {
          "Value": "21",
          "Name": "TileWidePeekImageCollection06"
        },
        {
          "Value": "21",
          "Name": "TileWide310x150PeekImageCollection06"
        },
        {
          "Value": "22",
          "Name": "TileWidePeekImageAndText01"
        },
        {
          "Value": "22",
          "Name": "TileWide310x150PeekImageAndText01"
        },
        {
          "Value": "23",
          "Name": "TileWidePeekImageAndText02"
        },
        {
          "Value": "23",
          "Name": "TileWide310x150PeekImageAndText02"
        },
        {
          "Value": "24",
          "Name": "TileWidePeekImage01"
        },
        {
          "Value": "24",
          "Name": "TileWide310x150PeekImage01"
        },
        {
          "Value": "25",
          "Name": "TileWidePeekImage02"
        },
        {
          "Value": "25",
          "Name": "TileWide310x150PeekImage02"
        },
        {
          "Value": "26",
          "Name": "TileWidePeekImage03"
        },
        {
          "Value": "26",
          "Name": "TileWide310x150PeekImage03"
        },
        {
          "Value": "27",
          "Name": "TileWidePeekImage04"
        },
        {
          "Value": "27",
          "Name": "TileWide310x150PeekImage04"
        },
        {
          "Value": "28",
          "Name": "TileWidePeekImage05"
        },
        {
          "Value": "28",
          "Name": "TileWide310x150PeekImage05"
        },
        {
          "Value": "29",
          "Name": "TileWidePeekImage06"
        },
        {
          "Value": "29",
          "Name": "TileWide310x150PeekImage06"
        },
        {
          "Value": "30",
          "Name": "TileWideSmallImageAndText01"
        },
        {
          "Value": "30",
          "Name": "TileWide310x150SmallImageAndText01"
        },
        {
          "Value": "31",
          "Name": "TileWideSmallImageAndText02"
        },
        {
          "Value": "31",
          "Name": "TileWide310x150SmallImageAndText02"
        },
        {
          "Value": "32",
          "Name": "TileWideSmallImageAndText03"
        },
        {
          "Value": "32",
          "Name": "TileWide310x150SmallImageAndText03"
        },
        {
          "Value": "33",
          "Name": "TileWideSmallImageAndText04"
        },
        {
          "Value": "33",
          "Name": "TileWide310x150SmallImageAndText04"
        },
        {
          "Value": "34",
          "Name": "TileWideSmallImageAndText05"
        },
        {
          "Value": "34",
          "Name": "TileWide310x150SmallImageAndText05"
        },
        {
          "Value": "35",
          "Name": "TileWideText01"
        },
        {
          "Value": "35",
          "Name": "TileWide310x150Text01"
        },
        {
          "Value": "36",
          "Name": "TileWideText02"
        },
        {
          "Value": "36",
          "Name": "TileWide310x150Text02"
        },
        {
          "Value": "37",
          "Name": "TileWideText03"
        },
        {
          "Value": "37",
          "Name": "TileWide310x150Text03"
        },
        {
          "Value": "38",
          "Name": "TileWideText04"
        },
        {
          "Value": "38",
          "Name": "TileWide310x150Text04"
        },
        {
          "Value": "39",
          "Name": "TileWideText05"
        },
        {
          "Value": "39",
          "Name": "TileWide310x150Text05"
        },
        {
          "Value": "40",
          "Name": "TileWideText06"
        },
        {
          "Value": "40",
          "Name": "TileWide310x150Text06"
        },
        {
          "Value": "41",
          "Name": "TileWideText07"
        },
        {
          "Value": "41",
          "Name": "TileWide310x150Text07"
        },
        {
          "Value": "42",
          "Name": "TileWideText08"
        },
        {
          "Value": "42",
          "Name": "TileWide310x150Text08"
        },
        {
          "Value": "43",
          "Name": "TileWideText09"
        },
        {
          "Value": "43",
          "Name": "TileWide310x150Text09"
        },
        {
          "Value": "44",
          "Name": "TileWideText10"
        },
        {
          "Value": "44",
          "Name": "TileWide310x150Text10"
        },
        {
          "Value": "45",
          "Name": "TileWideText11"
        },
        {
          "Value": "45",
          "Name": "TileWide310x150Text11"
        },
        {
          "Value": "46",
          "Name": "TileSquare310x310BlockAndText01"
        },
        {
          "Value": "47",
          "Name": "TileSquare310x310BlockAndText02"
        },
        {
          "Value": "48",
          "Name": "TileSquare310x310Image"
        },
        {
          "Value": "49",
          "Name": "TileSquare310x310ImageAndText01"
        },
        {
          "Value": "50",
          "Name": "TileSquare310x310ImageAndText02"
        },
        {
          "Value": "51",
          "Name": "TileSquare310x310ImageAndTextOverlay01"
        },
        {
          "Value": "52",
          "Name": "TileSquare310x310ImageAndTextOverlay02"
        },
        {
          "Value": "53",
          "Name": "TileSquare310x310ImageAndTextOverlay03"
        },
        {
          "Value": "54",
          "Name": "TileSquare310x310ImageCollectionAndText01"
        },
        {
          "Value": "55",
          "Name": "TileSquare310x310ImageCollectionAndText02"
        },
        {
          "Value": "56",
          "Name": "TileSquare310x310ImageCollection"
        },
        {
          "Value": "57",
          "Name": "TileSquare310x310SmallImagesAndTextList01"
        },
        {
          "Value": "58",
          "Name": "TileSquare310x310SmallImagesAndTextList02"
        },
        {
          "Value": "59",
          "Name": "TileSquare310x310SmallImagesAndTextList03"
        },
        {
          "Value": "60",
          "Name": "TileSquare310x310SmallImagesAndTextList04"
        },
        {
          "Value": "61",
          "Name": "TileSquare310x310Text01"
        },
        {
          "Value": "62",
          "Name": "TileSquare310x310Text02"
        },
        {
          "Value": "63",
          "Name": "TileSquare310x310Text03"
        },
        {
          "Value": "64",
          "Name": "TileSquare310x310Text04"
        },
        {
          "Value": "65",
          "Name": "TileSquare310x310Text05"
        },
        {
          "Value": "66",
          "Name": "TileSquare310x310Text06"
        },
        {
          "Value": "67",
          "Name": "TileSquare310x310Text07"
        },
        {
          "Value": "68",
          "Name": "TileSquare310x310Text08"
        },
        {
          "Value": "69",
          "Name": "TileSquare310x310TextList01"
        },
        {
          "Value": "70",
          "Name": "TileSquare310x310TextList02"
        },
        {
          "Value": "71",
          "Name": "TileSquare310x310TextList03"
        },
        {
          "Value": "72",
          "Name": "TileSquare310x310SmallImageAndText01"
        },
        {
          "Value": "73",
          "Name": "TileSquare310x310SmallImagesAndTextList05"
        },
        {
          "Value": "74",
          "Name": "TileSquare310x310Text09"
        },
        {
          "Value": "75",
          "Name": "TileSquare71x71IconWithBadge"
        },
        {
          "Value": "76",
          "Name": "TileSquare150x150IconWithBadge"
        },
        {
          "Value": "77",
          "Name": "TileWide310x150IconWithBadgeAndText"
        },
        {
          "Value": "78",
          "Name": "TileSquare71x71Image"
        },
        {
          "Value": "79",
          "Name": "TileTall150x310Image"
        }
      ],
      "Name": "Windows.UI.Notifications.TileTemplateType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "UserCanceled"
        },
        {
          "Value": "1",
          "Name": "ApplicationHidden"
        },
        {
          "Value": "2",
          "Name": "TimedOut"
        }
      ],
      "Name": "Windows.UI.Notifications.ToastDismissalReason"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Cleared"
        },
        {
          "Value": "1",
          "Name": "Removed"
        },
        {
          "Value": "2",
          "Name": "Expired"
        },
        {
          "Value": "3",
          "Name": "Added"
        }
      ],
      "Name": "Windows.UI.Notifications.ToastHistoryChangedType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "ToastImageAndText01"
        },
        {
          "Value": "1",
          "Name": "ToastImageAndText02"
        },
        {
          "Value": "2",
          "Name": "ToastImageAndText03"
        },
        {
          "Value": "3",
          "Name": "ToastImageAndText04"
        },
        {
          "Value": "4",
          "Name": "ToastText01"
        },
        {
          "Value": "5",
          "Name": "ToastText02"
        },
        {
          "Value": "6",
          "Name": "ToastText03"
        },
        {
          "Value": "7",
          "Name": "ToastText04"
        }
      ],
      "Name": "Windows.UI.Notifications.ToastTemplateType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "AcceptUserInputAfterDelay"
        }
      ],
      "Name": "Windows.UI.Popups.MessageDialogOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "Above"
        },
        {
          "Value": "2",
          "Name": "Below"
        },
        {
          "Value": "3",
          "Name": "Left"
        },
        {
          "Value": "4",
          "Name": "Right"
        }
      ],
      "Name": "Windows.UI.Popups.Placement"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Dark"
        },
        {
          "Value": "1",
          "Name": "Light"
        }
      ],
      "Name": "Windows.UI.StartScreen.ForegroundText"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "ShowNameOnLogo"
        },
        {
          "Value": "2",
          "Name": "ShowNameOnWideLogo"
        },
        {
          "Value": "4",
          "Name": "CopyOnDeployment"
        }
      ],
      "Name": "Windows.UI.StartScreen.TileOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "Square30x30"
        },
        {
          "Value": "2",
          "Name": "Square70x70"
        },
        {
          "Value": "3",
          "Name": "Square150x150"
        },
        {
          "Value": "4",
          "Name": "Wide310x150"
        },
        {
          "Value": "5",
          "Name": "Square310x310"
        },
        {
          "Value": "6",
          "Name": "Square71x71"
        }
      ],
      "Name": "Windows.UI.StartScreen.TileSize"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Normal"
        },
        {
          "Value": "1",
          "Name": "Null"
        }
      ],
      "Name": "Windows.UI.Text.CaretType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "2",
          "Name": "Word"
        },
        {
          "Value": "4",
          "Name": "Case"
        }
      ],
      "Name": "Windows.UI.Text.FindOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Undefined"
        },
        {
          "Value": "1",
          "Name": "UltraCondensed"
        },
        {
          "Value": "2",
          "Name": "ExtraCondensed"
        },
        {
          "Value": "3",
          "Name": "Condensed"
        },
        {
          "Value": "4",
          "Name": "SemiCondensed"
        },
        {
          "Value": "5",
          "Name": "Normal"
        },
        {
          "Value": "6",
          "Name": "SemiExpanded"
        },
        {
          "Value": "7",
          "Name": "Expanded"
        },
        {
          "Value": "8",
          "Name": "ExtraExpanded"
        },
        {
          "Value": "9",
          "Name": "UltraExpanded"
        }
      ],
      "Name": "Windows.UI.Text.FontStretch"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Normal"
        },
        {
          "Value": "1",
          "Name": "Oblique"
        },
        {
          "Value": "2",
          "Name": "Italic"
        }
      ],
      "Name": "Windows.UI.Text.FontStyle"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Off"
        },
        {
          "Value": "1",
          "Name": "On"
        },
        {
          "Value": "2",
          "Name": "Toggle"
        },
        {
          "Value": "3",
          "Name": "Undefined"
        }
      ],
      "Name": "Windows.UI.Text.FormatEffect"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Left"
        },
        {
          "Value": "1",
          "Name": "Right"
        },
        {
          "Value": "2",
          "Name": "Center"
        }
      ],
      "Name": "Windows.UI.Text.HorizontalCharacterAlignment"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Lower"
        },
        {
          "Value": "1",
          "Name": "Upper"
        }
      ],
      "Name": "Windows.UI.Text.LetterCase"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Undefined"
        },
        {
          "Value": "1",
          "Name": "Single"
        },
        {
          "Value": "2",
          "Name": "OneAndHalf"
        },
        {
          "Value": "3",
          "Name": "Double"
        },
        {
          "Value": "4",
          "Name": "AtLeast"
        },
        {
          "Value": "5",
          "Name": "Exactly"
        },
        {
          "Value": "6",
          "Name": "Multiple"
        },
        {
          "Value": "7",
          "Name": "Percent"
        }
      ],
      "Name": "Windows.UI.Text.LineSpacingRule"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Undefined"
        },
        {
          "Value": "1",
          "Name": "NotALink"
        },
        {
          "Value": "2",
          "Name": "ClientLink"
        },
        {
          "Value": "3",
          "Name": "FriendlyLinkName"
        },
        {
          "Value": "4",
          "Name": "FriendlyLinkAddress"
        },
        {
          "Value": "5",
          "Name": "AutoLink"
        },
        {
          "Value": "6",
          "Name": "AutoLinkEmail"
        },
        {
          "Value": "7",
          "Name": "AutoLinkPhone"
        },
        {
          "Value": "8",
          "Name": "AutoLinkPath"
        }
      ],
      "Name": "Windows.UI.Text.LinkType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Undefined"
        },
        {
          "Value": "1",
          "Name": "Left"
        },
        {
          "Value": "2",
          "Name": "Center"
        },
        {
          "Value": "3",
          "Name": "Right"
        }
      ],
      "Name": "Windows.UI.Text.MarkerAlignment"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Undefined"
        },
        {
          "Value": "1",
          "Name": "Parenthesis"
        },
        {
          "Value": "2",
          "Name": "Parentheses"
        },
        {
          "Value": "3",
          "Name": "Period"
        },
        {
          "Value": "4",
          "Name": "Plain"
        },
        {
          "Value": "5",
          "Name": "Minus"
        },
        {
          "Value": "6",
          "Name": "NoNumber"
        }
      ],
      "Name": "Windows.UI.Text.MarkerStyle"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Undefined"
        },
        {
          "Value": "1",
          "Name": "None"
        },
        {
          "Value": "2",
          "Name": "Bullet"
        },
        {
          "Value": "3",
          "Name": "Arabic"
        },
        {
          "Value": "4",
          "Name": "LowercaseEnglishLetter"
        },
        {
          "Value": "5",
          "Name": "UppercaseEnglishLetter"
        },
        {
          "Value": "6",
          "Name": "LowercaseRoman"
        },
        {
          "Value": "7",
          "Name": "UppercaseRoman"
        },
        {
          "Value": "8",
          "Name": "UnicodeSequence"
        },
        {
          "Value": "9",
          "Name": "CircledNumber"
        },
        {
          "Value": "10",
          "Name": "BlackCircleWingding"
        },
        {
          "Value": "11",
          "Name": "WhiteCircleWingding"
        },
        {
          "Value": "12",
          "Name": "ArabicWide"
        },
        {
          "Value": "13",
          "Name": "SimplifiedChinese"
        },
        {
          "Value": "14",
          "Name": "TraditionalChinese"
        },
        {
          "Value": "15",
          "Name": "JapanSimplifiedChinese"
        },
        {
          "Value": "16",
          "Name": "JapanKorea"
        },
        {
          "Value": "17",
          "Name": "ArabicDictionary"
        },
        {
          "Value": "18",
          "Name": "ArabicAbjad"
        },
        {
          "Value": "19",
          "Name": "Hebrew"
        },
        {
          "Value": "20",
          "Name": "ThaiAlphabetic"
        },
        {
          "Value": "21",
          "Name": "ThaiNumeric"
        },
        {
          "Value": "22",
          "Name": "DevanagariVowel"
        },
        {
          "Value": "23",
          "Name": "DevanagariConsonant"
        },
        {
          "Value": "24",
          "Name": "DevanagariNumeric"
        }
      ],
      "Name": "Windows.UI.Text.MarkerType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Undefined"
        },
        {
          "Value": "1",
          "Name": "Left"
        },
        {
          "Value": "2",
          "Name": "Center"
        },
        {
          "Value": "3",
          "Name": "Right"
        },
        {
          "Value": "4",
          "Name": "Justify"
        }
      ],
      "Name": "Windows.UI.Text.ParagraphAlignment"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Undefined"
        },
        {
          "Value": "1",
          "Name": "None"
        },
        {
          "Value": "2",
          "Name": "Normal"
        },
        {
          "Value": "3",
          "Name": "Heading1"
        },
        {
          "Value": "4",
          "Name": "Heading2"
        },
        {
          "Value": "5",
          "Name": "Heading3"
        },
        {
          "Value": "6",
          "Name": "Heading4"
        },
        {
          "Value": "7",
          "Name": "Heading5"
        },
        {
          "Value": "8",
          "Name": "Heading6"
        },
        {
          "Value": "9",
          "Name": "Heading7"
        },
        {
          "Value": "10",
          "Name": "Heading8"
        },
        {
          "Value": "11",
          "Name": "Heading9"
        }
      ],
      "Name": "Windows.UI.Text.ParagraphStyle"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "IncludeInset"
        },
        {
          "Value": "32",
          "Name": "Start"
        },
        {
          "Value": "256",
          "Name": "ClientCoordinates"
        },
        {
          "Value": "512",
          "Name": "AllowOffClient"
        },
        {
          "Value": "1024",
          "Name": "Transform"
        },
        {
          "Value": "65536",
          "Name": "NoHorizontalScroll"
        },
        {
          "Value": "262144",
          "Name": "NoVerticalScroll"
        }
      ],
      "Name": "Windows.UI.Text.PointOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "UIBehavior"
        },
        {
          "Value": "1",
          "Name": "Backward"
        },
        {
          "Value": "2",
          "Name": "Forward"
        },
        {
          "Value": "3",
          "Name": "Inward"
        },
        {
          "Value": "4",
          "Name": "Outward"
        }
      ],
      "Name": "Windows.UI.Text.RangeGravity"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "1",
          "Name": "StartActive"
        },
        {
          "Value": "2",
          "Name": "AtEndOfLine"
        },
        {
          "Value": "4",
          "Name": "Overtype"
        },
        {
          "Value": "8",
          "Name": "Active"
        },
        {
          "Value": "16",
          "Name": "Replace"
        }
      ],
      "Name": "Windows.UI.Text.SelectionOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "InsertionPoint"
        },
        {
          "Value": "2",
          "Name": "Normal"
        },
        {
          "Value": "7",
          "Name": "InlineShape"
        },
        {
          "Value": "8",
          "Name": "Shape"
        }
      ],
      "Name": "Windows.UI.Text.SelectionType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Left"
        },
        {
          "Value": "1",
          "Name": "Center"
        },
        {
          "Value": "2",
          "Name": "Right"
        },
        {
          "Value": "3",
          "Name": "Decimal"
        },
        {
          "Value": "4",
          "Name": "Bar"
        }
      ],
      "Name": "Windows.UI.Text.TabAlignment"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Spaces"
        },
        {
          "Value": "1",
          "Name": "Dots"
        },
        {
          "Value": "2",
          "Name": "Dashes"
        },
        {
          "Value": "3",
          "Name": "Lines"
        },
        {
          "Value": "4",
          "Name": "ThickLines"
        },
        {
          "Value": "5",
          "Name": "Equals"
        }
      ],
      "Name": "Windows.UI.Text.TabLeader"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "AdjustCrlf"
        },
        {
          "Value": "2",
          "Name": "UseCrlf"
        },
        {
          "Value": "4",
          "Name": "UseObjectText"
        },
        {
          "Value": "8",
          "Name": "AllowFinalEop"
        },
        {
          "Value": "32",
          "Name": "NoHidden"
        },
        {
          "Value": "64",
          "Name": "IncludeNumbering"
        },
        {
          "Value": "8192",
          "Name": "FormatRtf"
        }
      ],
      "Name": "Windows.UI.Text.TextGetOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Character"
        },
        {
          "Value": "1",
          "Name": "Word"
        },
        {
          "Value": "2",
          "Name": "Sentence"
        },
        {
          "Value": "3",
          "Name": "Paragraph"
        },
        {
          "Value": "4",
          "Name": "Line"
        },
        {
          "Value": "5",
          "Name": "Story"
        },
        {
          "Value": "6",
          "Name": "Screen"
        },
        {
          "Value": "7",
          "Name": "Section"
        },
        {
          "Value": "8",
          "Name": "Window"
        },
        {
          "Value": "9",
          "Name": "CharacterFormat"
        },
        {
          "Value": "10",
          "Name": "ParagraphFormat"
        },
        {
          "Value": "11",
          "Name": "Object"
        },
        {
          "Value": "12",
          "Name": "HardParagraph"
        },
        {
          "Value": "13",
          "Name": "Cluster"
        },
        {
          "Value": "14",
          "Name": "Bold"
        },
        {
          "Value": "15",
          "Name": "Italic"
        },
        {
          "Value": "16",
          "Name": "Underline"
        },
        {
          "Value": "17",
          "Name": "Strikethrough"
        },
        {
          "Value": "18",
          "Name": "ProtectedText"
        },
        {
          "Value": "19",
          "Name": "Link"
        },
        {
          "Value": "20",
          "Name": "SmallCaps"
        },
        {
          "Value": "21",
          "Name": "AllCaps"
        },
        {
          "Value": "22",
          "Name": "Hidden"
        },
        {
          "Value": "23",
          "Name": "Outline"
        },
        {
          "Value": "24",
          "Name": "Shadow"
        },
        {
          "Value": "25",
          "Name": "Imprint"
        },
        {
          "Value": "26",
          "Name": "Disabled"
        },
        {
          "Value": "27",
          "Name": "Revised"
        },
        {
          "Value": "28",
          "Name": "Subscript"
        },
        {
          "Value": "29",
          "Name": "Superscript"
        },
        {
          "Value": "30",
          "Name": "FontBound"
        },
        {
          "Value": "31",
          "Name": "LinkProtected"
        }
      ],
      "Name": "Windows.UI.Text.TextRangeUnit"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Undefined"
        },
        {
          "Value": "1",
          "Name": "Ansi"
        },
        {
          "Value": "2",
          "Name": "EastEurope"
        },
        {
          "Value": "3",
          "Name": "Cyrillic"
        },
        {
          "Value": "4",
          "Name": "Greek"
        },
        {
          "Value": "5",
          "Name": "Turkish"
        },
        {
          "Value": "6",
          "Name": "Hebrew"
        },
        {
          "Value": "7",
          "Name": "Arabic"
        },
        {
          "Value": "8",
          "Name": "Baltic"
        },
        {
          "Value": "9",
          "Name": "Vietnamese"
        },
        {
          "Value": "10",
          "Name": "Default"
        },
        {
          "Value": "11",
          "Name": "Symbol"
        },
        {
          "Value": "12",
          "Name": "Thai"
        },
        {
          "Value": "13",
          "Name": "ShiftJis"
        },
        {
          "Value": "14",
          "Name": "GB2312"
        },
        {
          "Value": "15",
          "Name": "Hangul"
        },
        {
          "Value": "16",
          "Name": "Big5"
        },
        {
          "Value": "17",
          "Name": "PC437"
        },
        {
          "Value": "18",
          "Name": "Oem"
        },
        {
          "Value": "19",
          "Name": "Mac"
        },
        {
          "Value": "20",
          "Name": "Armenian"
        },
        {
          "Value": "21",
          "Name": "Syriac"
        },
        {
          "Value": "22",
          "Name": "Thaana"
        },
        {
          "Value": "23",
          "Name": "Devanagari"
        },
        {
          "Value": "24",
          "Name": "Bengali"
        },
        {
          "Value": "25",
          "Name": "Gurmukhi"
        },
        {
          "Value": "26",
          "Name": "Gujarati"
        },
        {
          "Value": "27",
          "Name": "Oriya"
        },
        {
          "Value": "28",
          "Name": "Tamil"
        },
        {
          "Value": "29",
          "Name": "Telugu"
        },
        {
          "Value": "30",
          "Name": "Kannada"
        },
        {
          "Value": "31",
          "Name": "Malayalam"
        },
        {
          "Value": "32",
          "Name": "Sinhala"
        },
        {
          "Value": "33",
          "Name": "Lao"
        },
        {
          "Value": "34",
          "Name": "Tibetan"
        },
        {
          "Value": "35",
          "Name": "Myanmar"
        },
        {
          "Value": "36",
          "Name": "Georgian"
        },
        {
          "Value": "37",
          "Name": "Jamo"
        },
        {
          "Value": "38",
          "Name": "Ethiopic"
        },
        {
          "Value": "39",
          "Name": "Cherokee"
        },
        {
          "Value": "40",
          "Name": "Aboriginal"
        },
        {
          "Value": "41",
          "Name": "Ogham"
        },
        {
          "Value": "42",
          "Name": "Runic"
        },
        {
          "Value": "43",
          "Name": "Khmer"
        },
        {
          "Value": "44",
          "Name": "Mongolian"
        },
        {
          "Value": "45",
          "Name": "Braille"
        },
        {
          "Value": "46",
          "Name": "Yi"
        },
        {
          "Value": "47",
          "Name": "Limbu"
        },
        {
          "Value": "48",
          "Name": "TaiLe"
        },
        {
          "Value": "49",
          "Name": "NewTaiLue"
        },
        {
          "Value": "50",
          "Name": "SylotiNagri"
        },
        {
          "Value": "51",
          "Name": "Kharoshthi"
        },
        {
          "Value": "52",
          "Name": "Kayahli"
        },
        {
          "Value": "53",
          "Name": "UnicodeSymbol"
        },
        {
          "Value": "54",
          "Name": "Emoji"
        },
        {
          "Value": "55",
          "Name": "Glagolitic"
        },
        {
          "Value": "56",
          "Name": "Lisu"
        },
        {
          "Value": "57",
          "Name": "Vai"
        },
        {
          "Value": "58",
          "Name": "NKo"
        },
        {
          "Value": "59",
          "Name": "Osmanya"
        },
        {
          "Value": "60",
          "Name": "PhagsPa"
        },
        {
          "Value": "61",
          "Name": "Gothic"
        },
        {
          "Value": "62",
          "Name": "Deseret"
        },
        {
          "Value": "63",
          "Name": "Tifinagh"
        }
      ],
      "Name": "Windows.UI.Text.TextScript"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "UnicodeBidi"
        },
        {
          "Value": "8",
          "Name": "Unlink"
        },
        {
          "Value": "16",
          "Name": "Unhide"
        },
        {
          "Value": "32",
          "Name": "CheckTextLimit"
        },
        {
          "Value": "8192",
          "Name": "FormatRtf"
        },
        {
          "Value": "16384",
          "Name": "ApplyRtfDocumentDefaults"
        }
      ],
      "Name": "Windows.UI.Text.TextSetOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Undefined"
        },
        {
          "Value": "1",
          "Name": "None"
        },
        {
          "Value": "2",
          "Name": "Single"
        },
        {
          "Value": "3",
          "Name": "Words"
        },
        {
          "Value": "4",
          "Name": "Double"
        },
        {
          "Value": "5",
          "Name": "Dotted"
        },
        {
          "Value": "6",
          "Name": "Dash"
        },
        {
          "Value": "7",
          "Name": "DashDot"
        },
        {
          "Value": "8",
          "Name": "DashDotDot"
        },
        {
          "Value": "9",
          "Name": "Wave"
        },
        {
          "Value": "10",
          "Name": "Thick"
        },
        {
          "Value": "11",
          "Name": "Thin"
        },
        {
          "Value": "12",
          "Name": "DoubleWave"
        },
        {
          "Value": "13",
          "Name": "HeavyWave"
        },
        {
          "Value": "14",
          "Name": "LongDash"
        },
        {
          "Value": "15",
          "Name": "ThickDash"
        },
        {
          "Value": "16",
          "Name": "ThickDashDot"
        },
        {
          "Value": "17",
          "Name": "ThickDashDotDot"
        },
        {
          "Value": "18",
          "Name": "ThickDotted"
        },
        {
          "Value": "19",
          "Name": "ThickLongDash"
        }
      ],
      "Name": "Windows.UI.Text.UnderlineType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Top"
        },
        {
          "Value": "1",
          "Name": "Baseline"
        },
        {
          "Value": "2",
          "Name": "Bottom"
        }
      ],
      "Name": "Windows.UI.Text.VerticalCharacterAlignment"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "UseVisible"
        },
        {
          "Value": "1",
          "Name": "UseCoreWindow"
        }
      ],
      "Name": "Windows.UI.ViewManagement.ApplicationViewBoundsMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Landscape"
        },
        {
          "Value": "1",
          "Name": "Portrait"
        }
      ],
      "Name": "Windows.UI.ViewManagement.ApplicationViewOrientation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Standard"
        },
        {
          "Value": "1",
          "Name": "Minimal"
        }
      ],
      "Name": "Windows.UI.ViewManagement.FullScreenSystemOverlayMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "LeftHanded"
        },
        {
          "Value": "1",
          "Name": "RightHanded"
        }
      ],
      "Name": "Windows.UI.ViewManagement.HandPreference"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "ActiveCaption"
        },
        {
          "Value": "1",
          "Name": "Background"
        },
        {
          "Value": "2",
          "Name": "ButtonFace"
        },
        {
          "Value": "3",
          "Name": "ButtonText"
        },
        {
          "Value": "4",
          "Name": "CaptionText"
        },
        {
          "Value": "5",
          "Name": "GrayText"
        },
        {
          "Value": "6",
          "Name": "Highlight"
        },
        {
          "Value": "7",
          "Name": "HighlightText"
        },
        {
          "Value": "8",
          "Name": "Hotlight"
        },
        {
          "Value": "9",
          "Name": "InactiveCaption"
        },
        {
          "Value": "10",
          "Name": "InactiveCaptionText"
        },
        {
          "Value": "11",
          "Name": "Window"
        },
        {
          "Value": "12",
          "Name": "WindowText"
        },
        {
          "Value": "1000",
          "Name": "AccentColor"
        },
        {
          "Value": "1001",
          "Name": "TextHigh"
        },
        {
          "Value": "1002",
          "Name": "TextMedium"
        },
        {
          "Value": "1003",
          "Name": "TextLow"
        },
        {
          "Value": "1004",
          "Name": "TextContrastWithHigh"
        },
        {
          "Value": "1005",
          "Name": "NonTextHigh"
        },
        {
          "Value": "1006",
          "Name": "NonTextMediumHigh"
        },
        {
          "Value": "1007",
          "Name": "NonTextMedium"
        },
        {
          "Value": "1008",
          "Name": "NonTextMediumLow"
        },
        {
          "Value": "1009",
          "Name": "NonTextLow"
        },
        {
          "Value": "1010",
          "Name": "PageBackground"
        },
        {
          "Value": "1011",
          "Name": "PopupBackground"
        },
        {
          "Value": "1012",
          "Name": "OverlayOutsidePopup"
        }
      ],
      "Name": "Windows.UI.ViewManagement.UIElementType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "UseLess"
        },
        {
          "Value": "2",
          "Name": "UseHalf"
        },
        {
          "Value": "3",
          "Name": "UseMore"
        },
        {
          "Value": "4",
          "Name": "UseMinimum"
        },
        {
          "Value": "5",
          "Name": "UseNone"
        }
      ],
      "Name": "Windows.UI.ViewManagement.ViewSizePreference"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "Minimal"
        },
        {
          "Value": "2",
          "Name": "Compact"
        }
      ],
      "Name": "Windows.UI.WebUI.Core.WebUICommandBarClosedDisplayMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Light"
        },
        {
          "Value": "1",
          "Name": "Dark"
        }
      ],
      "Name": "Windows.UI.Xaml.ApplicationTheme"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "60000",
          "Name": "Unknown"
        },
        {
          "Value": "60001",
          "Name": "SpellingError"
        },
        {
          "Value": "60002",
          "Name": "GrammarError"
        },
        {
          "Value": "60003",
          "Name": "Comment"
        },
        {
          "Value": "60004",
          "Name": "FormulaError"
        },
        {
          "Value": "60005",
          "Name": "TrackChanges"
        },
        {
          "Value": "60006",
          "Name": "Header"
        },
        {
          "Value": "60007",
          "Name": "Footer"
        },
        {
          "Value": "60008",
          "Name": "Highlighted"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.AnnotationType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Start"
        },
        {
          "Value": "2",
          "Name": "End"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.AutomationActiveEnd"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "LasVegasLights"
        },
        {
          "Value": "2",
          "Name": "BlinkingBackground"
        },
        {
          "Value": "3",
          "Name": "SparkleText"
        },
        {
          "Value": "4",
          "Name": "MarchingBlackAnts"
        },
        {
          "Value": "5",
          "Name": "MarchingRedAnts"
        },
        {
          "Value": "6",
          "Name": "Shimmer"
        },
        {
          "Value": "7",
          "Name": "Other"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.AutomationAnimationStyle"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "HollowRoundBullet"
        },
        {
          "Value": "2",
          "Name": "FilledRoundBullet"
        },
        {
          "Value": "3",
          "Name": "HollowSquareBullet"
        },
        {
          "Value": "4",
          "Name": "FilledSquareBullet"
        },
        {
          "Value": "5",
          "Name": "DashBullet"
        },
        {
          "Value": "6",
          "Name": "Other"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.AutomationBulletStyle"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "LTR"
        },
        {
          "Value": "1",
          "Name": "RTL"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.AutomationCaretBidiMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "EndOfLine"
        },
        {
          "Value": "2",
          "Name": "BeginningOfLine"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.AutomationCaretPosition"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "RightToLeft"
        },
        {
          "Value": "2",
          "Name": "BottomToTop"
        },
        {
          "Value": "3",
          "Name": "Vertical"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.AutomationFlowDirections"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Outline"
        },
        {
          "Value": "2",
          "Name": "Shadow"
        },
        {
          "Value": "3",
          "Name": "Engraved"
        },
        {
          "Value": "4",
          "Name": "Embossed"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.AutomationOutlineStyles"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "70001",
          "Name": "Heading1"
        },
        {
          "Value": "70002",
          "Name": "Heading2"
        },
        {
          "Value": "70003",
          "Name": "Heading3"
        },
        {
          "Value": "70004",
          "Name": "Heading4"
        },
        {
          "Value": "70005",
          "Name": "Heading5"
        },
        {
          "Value": "70006",
          "Name": "Heading6"
        },
        {
          "Value": "70007",
          "Name": "Heading7"
        },
        {
          "Value": "70008",
          "Name": "Heading8"
        },
        {
          "Value": "70009",
          "Name": "Heading9"
        },
        {
          "Value": "70010",
          "Name": "Title"
        },
        {
          "Value": "70011",
          "Name": "Subtitle"
        },
        {
          "Value": "70012",
          "Name": "Normal"
        },
        {
          "Value": "70013",
          "Name": "Emphasis"
        },
        {
          "Value": "70014",
          "Name": "Quote"
        },
        {
          "Value": "70015",
          "Name": "BulletedList"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.AutomationStyleId"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Single"
        },
        {
          "Value": "2",
          "Name": "WordsOnly"
        },
        {
          "Value": "3",
          "Name": "Double"
        },
        {
          "Value": "4",
          "Name": "Dot"
        },
        {
          "Value": "5",
          "Name": "Dash"
        },
        {
          "Value": "6",
          "Name": "DashDot"
        },
        {
          "Value": "7",
          "Name": "DashDotDot"
        },
        {
          "Value": "8",
          "Name": "Wavy"
        },
        {
          "Value": "9",
          "Name": "ThickSingle"
        },
        {
          "Value": "10",
          "Name": "DoubleWavy"
        },
        {
          "Value": "11",
          "Name": "ThickWavy"
        },
        {
          "Value": "12",
          "Name": "LongDash"
        },
        {
          "Value": "13",
          "Name": "ThickDash"
        },
        {
          "Value": "14",
          "Name": "ThickDashDot"
        },
        {
          "Value": "15",
          "Name": "ThickDashDotDot"
        },
        {
          "Value": "16",
          "Name": "ThickDot"
        },
        {
          "Value": "17",
          "Name": "ThickLongDash"
        },
        {
          "Value": "18",
          "Name": "Other"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.AutomationTextDecorationLineStyle"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "AutoCorrect"
        },
        {
          "Value": "2",
          "Name": "Composition"
        },
        {
          "Value": "3",
          "Name": "CompositionFinalized"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.AutomationTextEditChangeType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Top"
        },
        {
          "Value": "1",
          "Name": "Left"
        },
        {
          "Value": "2",
          "Name": "Bottom"
        },
        {
          "Value": "3",
          "Name": "Right"
        },
        {
          "Value": "4",
          "Name": "Fill"
        },
        {
          "Value": "5",
          "Name": "None"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.DockPosition"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Collapsed"
        },
        {
          "Value": "1",
          "Name": "Expanded"
        },
        {
          "Value": "2",
          "Name": "PartiallyExpanded"
        },
        {
          "Value": "3",
          "Name": "LeafNode"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.ExpandCollapseState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Raw"
        },
        {
          "Value": "1",
          "Name": "Control"
        },
        {
          "Value": "2",
          "Name": "Content"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.Peers.AccessibilityView"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Button"
        },
        {
          "Value": "1",
          "Name": "Calendar"
        },
        {
          "Value": "2",
          "Name": "CheckBox"
        },
        {
          "Value": "3",
          "Name": "ComboBox"
        },
        {
          "Value": "4",
          "Name": "Edit"
        },
        {
          "Value": "5",
          "Name": "Hyperlink"
        },
        {
          "Value": "6",
          "Name": "Image"
        },
        {
          "Value": "7",
          "Name": "ListItem"
        },
        {
          "Value": "8",
          "Name": "List"
        },
        {
          "Value": "9",
          "Name": "Menu"
        },
        {
          "Value": "10",
          "Name": "MenuBar"
        },
        {
          "Value": "11",
          "Name": "MenuItem"
        },
        {
          "Value": "12",
          "Name": "ProgressBar"
        },
        {
          "Value": "13",
          "Name": "RadioButton"
        },
        {
          "Value": "14",
          "Name": "ScrollBar"
        },
        {
          "Value": "15",
          "Name": "Slider"
        },
        {
          "Value": "16",
          "Name": "Spinner"
        },
        {
          "Value": "17",
          "Name": "StatusBar"
        },
        {
          "Value": "18",
          "Name": "Tab"
        },
        {
          "Value": "19",
          "Name": "TabItem"
        },
        {
          "Value": "20",
          "Name": "Text"
        },
        {
          "Value": "21",
          "Name": "ToolBar"
        },
        {
          "Value": "22",
          "Name": "ToolTip"
        },
        {
          "Value": "23",
          "Name": "Tree"
        },
        {
          "Value": "24",
          "Name": "TreeItem"
        },
        {
          "Value": "25",
          "Name": "Custom"
        },
        {
          "Value": "26",
          "Name": "Group"
        },
        {
          "Value": "27",
          "Name": "Thumb"
        },
        {
          "Value": "28",
          "Name": "DataGrid"
        },
        {
          "Value": "29",
          "Name": "DataItem"
        },
        {
          "Value": "30",
          "Name": "Document"
        },
        {
          "Value": "31",
          "Name": "SplitButton"
        },
        {
          "Value": "32",
          "Name": "Window"
        },
        {
          "Value": "33",
          "Name": "Pane"
        },
        {
          "Value": "34",
          "Name": "Header"
        },
        {
          "Value": "35",
          "Name": "HeaderItem"
        },
        {
          "Value": "36",
          "Name": "Table"
        },
        {
          "Value": "37",
          "Name": "TitleBar"
        },
        {
          "Value": "38",
          "Name": "Separator"
        },
        {
          "Value": "39",
          "Name": "SemanticZoom"
        },
        {
          "Value": "40",
          "Name": "AppBar"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.Peers.AutomationControlType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "ToolTipOpened"
        },
        {
          "Value": "1",
          "Name": "ToolTipClosed"
        },
        {
          "Value": "2",
          "Name": "MenuOpened"
        },
        {
          "Value": "3",
          "Name": "MenuClosed"
        },
        {
          "Value": "4",
          "Name": "AutomationFocusChanged"
        },
        {
          "Value": "5",
          "Name": "InvokePatternOnInvoked"
        },
        {
          "Value": "6",
          "Name": "SelectionItemPatternOnElementAddedToSelection"
        },
        {
          "Value": "7",
          "Name": "SelectionItemPatternOnElementRemovedFromSelection"
        },
        {
          "Value": "8",
          "Name": "SelectionItemPatternOnElementSelected"
        },
        {
          "Value": "9",
          "Name": "SelectionPatternOnInvalidated"
        },
        {
          "Value": "10",
          "Name": "TextPatternOnTextSelectionChanged"
        },
        {
          "Value": "11",
          "Name": "TextPatternOnTextChanged"
        },
        {
          "Value": "12",
          "Name": "AsyncContentLoaded"
        },
        {
          "Value": "13",
          "Name": "PropertyChanged"
        },
        {
          "Value": "14",
          "Name": "StructureChanged"
        },
        {
          "Value": "15",
          "Name": "DragStart"
        },
        {
          "Value": "16",
          "Name": "DragCancel"
        },
        {
          "Value": "17",
          "Name": "DragComplete"
        },
        {
          "Value": "18",
          "Name": "DragEnter"
        },
        {
          "Value": "19",
          "Name": "DragLeave"
        },
        {
          "Value": "20",
          "Name": "Dropped"
        },
        {
          "Value": "21",
          "Name": "LiveRegionChanged"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.Peers.AutomationEvents"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Off"
        },
        {
          "Value": "1",
          "Name": "Polite"
        },
        {
          "Value": "2",
          "Name": "Assertive"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Parent"
        },
        {
          "Value": "1",
          "Name": "NextSibling"
        },
        {
          "Value": "2",
          "Name": "PreviousSibling"
        },
        {
          "Value": "3",
          "Name": "FirstChild"
        },
        {
          "Value": "4",
          "Name": "LastChild"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.Peers.AutomationNavigationDirection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Horizontal"
        },
        {
          "Value": "2",
          "Name": "Vertical"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.Peers.AutomationOrientation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "ChildAdded"
        },
        {
          "Value": "1",
          "Name": "ChildRemoved"
        },
        {
          "Value": "2",
          "Name": "ChildrenInvalidated"
        },
        {
          "Value": "3",
          "Name": "ChildrenBulkAdded"
        },
        {
          "Value": "4",
          "Name": "ChildrenBulkRemoved"
        },
        {
          "Value": "5",
          "Name": "ChildrenReordered"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.Peers.AutomationStructureChangeType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Invoke"
        },
        {
          "Value": "1",
          "Name": "Selection"
        },
        {
          "Value": "2",
          "Name": "Value"
        },
        {
          "Value": "3",
          "Name": "RangeValue"
        },
        {
          "Value": "4",
          "Name": "Scroll"
        },
        {
          "Value": "5",
          "Name": "ScrollItem"
        },
        {
          "Value": "6",
          "Name": "ExpandCollapse"
        },
        {
          "Value": "7",
          "Name": "Grid"
        },
        {
          "Value": "8",
          "Name": "GridItem"
        },
        {
          "Value": "9",
          "Name": "MultipleView"
        },
        {
          "Value": "10",
          "Name": "Window"
        },
        {
          "Value": "11",
          "Name": "SelectionItem"
        },
        {
          "Value": "12",
          "Name": "Dock"
        },
        {
          "Value": "13",
          "Name": "Table"
        },
        {
          "Value": "14",
          "Name": "TableItem"
        },
        {
          "Value": "15",
          "Name": "Toggle"
        },
        {
          "Value": "16",
          "Name": "Transform"
        },
        {
          "Value": "17",
          "Name": "Text"
        },
        {
          "Value": "18",
          "Name": "ItemContainer"
        },
        {
          "Value": "19",
          "Name": "VirtualizedItem"
        },
        {
          "Value": "20",
          "Name": "Text2"
        },
        {
          "Value": "21",
          "Name": "TextChild"
        },
        {
          "Value": "22",
          "Name": "TextRange"
        },
        {
          "Value": "23",
          "Name": "Annotation"
        },
        {
          "Value": "24",
          "Name": "Drag"
        },
        {
          "Value": "25",
          "Name": "DropTarget"
        },
        {
          "Value": "26",
          "Name": "ObjectModel"
        },
        {
          "Value": "27",
          "Name": "Spreadsheet"
        },
        {
          "Value": "28",
          "Name": "SpreadsheetItem"
        },
        {
          "Value": "29",
          "Name": "Styles"
        },
        {
          "Value": "30",
          "Name": "Transform2"
        },
        {
          "Value": "31",
          "Name": "SynchronizedInput"
        },
        {
          "Value": "32",
          "Name": "TextEdit"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.Peers.PatternInterface"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "RowMajor"
        },
        {
          "Value": "1",
          "Name": "ColumnMajor"
        },
        {
          "Value": "2",
          "Name": "Indeterminate"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.RowOrColumnMajor"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "LargeDecrement"
        },
        {
          "Value": "1",
          "Name": "SmallDecrement"
        },
        {
          "Value": "2",
          "Name": "NoAmount"
        },
        {
          "Value": "3",
          "Name": "LargeIncrement"
        },
        {
          "Value": "4",
          "Name": "SmallIncrement"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.ScrollAmount"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Single"
        },
        {
          "Value": "2",
          "Name": "Multiple"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.SupportedTextSelection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "1",
          "Name": "KeyUp"
        },
        {
          "Value": "2",
          "Name": "KeyDown"
        },
        {
          "Value": "4",
          "Name": "LeftMouseUp"
        },
        {
          "Value": "8",
          "Name": "LeftMouseDown"
        },
        {
          "Value": "16",
          "Name": "RightMouseUp"
        },
        {
          "Value": "32",
          "Name": "RightMouseDown"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.SynchronizedInputType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Start"
        },
        {
          "Value": "1",
          "Name": "End"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.Text.TextPatternRangeEndpoint"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Character"
        },
        {
          "Value": "1",
          "Name": "Format"
        },
        {
          "Value": "2",
          "Name": "Word"
        },
        {
          "Value": "3",
          "Name": "Line"
        },
        {
          "Value": "4",
          "Name": "Paragraph"
        },
        {
          "Value": "5",
          "Name": "Page"
        },
        {
          "Value": "6",
          "Name": "Document"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.Text.TextUnit"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Off"
        },
        {
          "Value": "1",
          "Name": "On"
        },
        {
          "Value": "2",
          "Name": "Indeterminate"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.ToggleState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Running"
        },
        {
          "Value": "1",
          "Name": "Closing"
        },
        {
          "Value": "2",
          "Name": "ReadyForUserInteraction"
        },
        {
          "Value": "3",
          "Name": "BlockedByModalWindow"
        },
        {
          "Value": "4",
          "Name": "NotResponding"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.WindowInteractionState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Normal"
        },
        {
          "Value": "1",
          "Name": "Maximized"
        },
        {
          "Value": "2",
          "Name": "Minimized"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.WindowVisualState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "NoAmount"
        },
        {
          "Value": "1",
          "Name": "LargeDecrement"
        },
        {
          "Value": "2",
          "Name": "SmallDecrement"
        },
        {
          "Value": "3",
          "Name": "LargeIncrement"
        },
        {
          "Value": "4",
          "Name": "SmallIncrement"
        }
      ],
      "Name": "Windows.UI.Xaml.Automation.ZoomUnit"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "40000",
          "Name": "AnimationStyleAttribute"
        },
        {
          "Value": "40001",
          "Name": "BackgroundColorAttribute"
        },
        {
          "Value": "40002",
          "Name": "BulletStyleAttribute"
        },
        {
          "Value": "40003",
          "Name": "CapStyleAttribute"
        },
        {
          "Value": "40004",
          "Name": "CultureAttribute"
        },
        {
          "Value": "40005",
          "Name": "FontNameAttribute"
        },
        {
          "Value": "40006",
          "Name": "FontSizeAttribute"
        },
        {
          "Value": "40007",
          "Name": "FontWeightAttribute"
        },
        {
          "Value": "40008",
          "Name": "ForegroundColorAttribute"
        },
        {
          "Value": "40009",
          "Name": "HorizontalTextAlignmentAttribute"
        },
        {
          "Value": "40010",
          "Name": "IndentationFirstLineAttribute"
        },
        {
          "Value": "40011",
          "Name": "IndentationLeadingAttribute"
        },
        {
          "Value": "40012",
          "Name": "IndentationTrailingAttribute"
        },
        {
          "Value": "40013",
          "Name": "IsHiddenAttribute"
        },
        {
          "Value": "40014",
          "Name": "IsItalicAttribute"
        },
        {
          "Value": "40015",
          "Name": "IsReadOnlyAttribute"
        },
        {
          "Value": "40016",
          "Name": "IsSubscriptAttribute"
        },
        {
          "Value": "40017",
          "Name": "IsSuperscriptAttribute"
        },
        {
          "Value": "40018",
          "Name": "MarginBottomAttribute"
        },
        {
          "Value": "40019",
          "Name": "MarginLeadingAttribute"
        },
        {
          "Value": "40020",
          "Name": "MarginTopAttribute"
        },
        {
          "Value": "40021",
          "Name": "MarginTrailingAttribute"
        },
        {
          "Value": "40022",
          "Name": "OutlineStylesAttribute"
        },
        {
          "Value": "40023",
          "Name": "OverlineColorAttribute"
        },
        {
          "Value": "40024",
          "Name": "OverlineStyleAttribute"
        },
        {
          "Value": "40025",
          "Name": "StrikethroughColorAttribute"
        },
        {
          "Value": "40026",
          "Name": "StrikethroughStyleAttribute"
        },
        {
          "Value": "40027",
          "Name": "TabsAttribute"
        },
        {
          "Value": "40028",
          "Name": "TextFlowDirectionsAttribute"
        },
        {
          "Value": "40029",
          "Name": "UnderlineColorAttribute"
        },
        {
          "Value": "40030",
          "Name": "UnderlineStyleAttribute"
        },
        {
          "Value": "40031",
          "Name": "AnnotationTypesAttribute"
        },
        {
          "Value": "40032",
          "Name": "AnnotationObjectsAttribute"
        },
        {
          "Value": "40033",
          "Name": "StyleNameAttribute"
        },
        {
          "Value": "40034",
          "Name": "StyleIdAttribute"
        },
        {
          "Value": "40035",
          "Name": "LinkAttribute"
        },
        {
          "Value": "40036",
          "Name": "IsActiveAttribute"
        },
        {
          "Value": "40037",
          "Name": "SelectionActiveEndAttribute"
        },
        {
          "Value": "40038",
          "Name": "CaretPositionAttribute"
        },
        {
          "Value": "40039",
          "Name": "CaretBidiModeAttribute"
        }
      ],
      "Name": "Windows.UI.Xaml.AutomationTextAttributesEnum"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Compact"
        },
        {
          "Value": "1",
          "Name": "Minimal"
        },
        {
          "Value": "2",
          "Name": "Hidden"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.AppBarClosedDisplayMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "UserInput"
        },
        {
          "Value": "1",
          "Name": "ProgrammaticChange"
        },
        {
          "Value": "2",
          "Name": "SuggestionChosen"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.AutoSuggestionBoxTextChangeReason"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Month"
        },
        {
          "Value": "1",
          "Name": "Year"
        },
        {
          "Value": "2",
          "Name": "Decade"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.CalendarViewDisplayMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Single"
        },
        {
          "Value": "2",
          "Name": "Multiple"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.CalendarViewSelectionMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Release"
        },
        {
          "Value": "1",
          "Name": "Press"
        },
        {
          "Value": "2",
          "Name": "Hover"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ClickMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Primary"
        },
        {
          "Value": "2",
          "Name": "Secondary"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ContentDialogResult"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "Valid"
        },
        {
          "Value": "2",
          "Name": "Invalid"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ControlValidationState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Edge"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.IncrementalLoadingTrigger"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "KeepItemsInView"
        },
        {
          "Value": "1",
          "Name": "KeepScrollOffset"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ItemsUpdatingScrollMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Single"
        },
        {
          "Value": "1",
          "Name": "Multiple"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ListPickerFlyoutSelectionMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Disabled"
        },
        {
          "Value": "1",
          "Name": "Enabled"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ListViewReorderMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Single"
        },
        {
          "Value": "2",
          "Name": "Multiple"
        },
        {
          "Value": "3",
          "Name": "Extended"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ListViewSelectionMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "None"
        },
        {
          "Value": "2",
          "Name": "Linear"
        },
        {
          "Value": "3",
          "Name": "Bow"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapAnimationKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Light"
        },
        {
          "Value": "1",
          "Name": "Dark"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapColorScheme"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Loading"
        },
        {
          "Value": "1",
          "Name": "Loaded"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapLoadingStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Road"
        },
        {
          "Value": "2",
          "Name": "Aerial"
        },
        {
          "Value": "3",
          "Name": "AerialWithRoads"
        },
        {
          "Value": "4",
          "Name": "Terrain"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapStyle"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "LabelOverlay"
        },
        {
          "Value": "1",
          "Name": "RoadOverlay"
        },
        {
          "Value": "2",
          "Name": "AreaOverlay"
        },
        {
          "Value": "3",
          "Name": "BackgroundOverlay"
        },
        {
          "Value": "4",
          "Name": "BackgroundReplacement"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapTileLayer"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Automatic"
        },
        {
          "Value": "1",
          "Name": "On"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Maps.MapWatermarkMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Vertical"
        },
        {
          "Value": "1",
          "Name": "Horizontal"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Orientation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Forward"
        },
        {
          "Value": "2",
          "Name": "Backward"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.PanelScrollingDirection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Peek"
        },
        {
          "Value": "1",
          "Name": "Hidden"
        },
        {
          "Value": "2",
          "Name": "Visible"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.PasswordRevealMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "GroupOne"
        },
        {
          "Value": "2",
          "Name": "GroupTwo"
        },
        {
          "Value": "3",
          "Name": "GroupThree"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.PivotSlideInAnimationGroup"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Left"
        },
        {
          "Value": "1",
          "Name": "Top"
        },
        {
          "Value": "2",
          "Name": "Right"
        },
        {
          "Value": "3",
          "Name": "Bottom"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.AnimationDirection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Application"
        },
        {
          "Value": "1",
          "Name": "Nested"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ComponentResourceLocation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Left"
        },
        {
          "Value": "1",
          "Name": "Top"
        },
        {
          "Value": "2",
          "Name": "Right"
        },
        {
          "Value": "3",
          "Name": "Bottom"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.EdgeTransitionLocation"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Top"
        },
        {
          "Value": "1",
          "Name": "Bottom"
        },
        {
          "Value": "2",
          "Name": "Left"
        },
        {
          "Value": "3",
          "Name": "Right"
        },
        {
          "Value": "4",
          "Name": "Full"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.FlyoutPlacementMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Forward"
        },
        {
          "Value": "1",
          "Name": "Backward"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.GeneratorDirection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Top"
        },
        {
          "Value": "1",
          "Name": "Left"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.GroupHeaderPlacement"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "2",
          "Name": "Bottom"
        },
        {
          "Value": "4",
          "Name": "Right"
        },
        {
          "Value": "7",
          "Name": "Mouse"
        },
        {
          "Value": "9",
          "Name": "Left"
        },
        {
          "Value": "10",
          "Name": "Top"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.PlacementMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "SmallDecrement"
        },
        {
          "Value": "1",
          "Name": "SmallIncrement"
        },
        {
          "Value": "2",
          "Name": "LargeDecrement"
        },
        {
          "Value": "3",
          "Name": "LargeIncrement"
        },
        {
          "Value": "4",
          "Name": "ThumbPosition"
        },
        {
          "Value": "5",
          "Name": "ThumbTrack"
        },
        {
          "Value": "6",
          "Name": "First"
        },
        {
          "Value": "7",
          "Name": "Last"
        },
        {
          "Value": "8",
          "Name": "EndScroll"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ScrollEventType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "TouchIndicator"
        },
        {
          "Value": "2",
          "Name": "MouseIndicator"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ScrollingIndicatorMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "StepValues"
        },
        {
          "Value": "1",
          "Name": "Ticks"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.SliderSnapsTo"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Near"
        },
        {
          "Value": "1",
          "Name": "Center"
        },
        {
          "Value": "2",
          "Name": "Far"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.SnapPointsAlignment"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "TopLeft"
        },
        {
          "Value": "2",
          "Name": "BottomRight"
        },
        {
          "Value": "3",
          "Name": "Outside"
        },
        {
          "Value": "4",
          "Name": "Inline"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.TickPlacement"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Disabled"
        },
        {
          "Value": "1",
          "Name": "Auto"
        },
        {
          "Value": "2",
          "Name": "Hidden"
        },
        {
          "Value": "3",
          "Name": "Visible"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ScrollBarVisibility"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "Leading"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ScrollIntoViewAlignment"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Disabled"
        },
        {
          "Value": "1",
          "Name": "Enabled"
        },
        {
          "Value": "2",
          "Name": "Auto"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ScrollMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Single"
        },
        {
          "Value": "1",
          "Name": "Multiple"
        },
        {
          "Value": "2",
          "Name": "Extended"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.SelectionMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Optional"
        },
        {
          "Value": "2",
          "Name": "Mandatory"
        },
        {
          "Value": "3",
          "Name": "OptionalSingle"
        },
        {
          "Value": "4",
          "Name": "MandatorySingle"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.SnapPointsType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Overlay"
        },
        {
          "Value": "1",
          "Name": "Inline"
        },
        {
          "Value": "2",
          "Name": "CompactOverlay"
        },
        {
          "Value": "3",
          "Name": "CompactInline"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.SplitViewDisplayMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Left"
        },
        {
          "Value": "1",
          "Name": "Right"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.SplitViewPanePlacement"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "UpOnly"
        },
        {
          "Value": "1",
          "Name": "DownOnly"
        },
        {
          "Value": "2",
          "Name": "Both"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.StretchDirection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "57600",
          "Name": "Previous"
        },
        {
          "Value": "57601",
          "Name": "Next"
        },
        {
          "Value": "57602",
          "Name": "Play"
        },
        {
          "Value": "57603",
          "Name": "Pause"
        },
        {
          "Value": "57604",
          "Name": "Edit"
        },
        {
          "Value": "57605",
          "Name": "Save"
        },
        {
          "Value": "57606",
          "Name": "Clear"
        },
        {
          "Value": "57607",
          "Name": "Delete"
        },
        {
          "Value": "57608",
          "Name": "Remove"
        },
        {
          "Value": "57609",
          "Name": "Add"
        },
        {
          "Value": "57610",
          "Name": "Cancel"
        },
        {
          "Value": "57611",
          "Name": "Accept"
        },
        {
          "Value": "57612",
          "Name": "More"
        },
        {
          "Value": "57613",
          "Name": "Redo"
        },
        {
          "Value": "57614",
          "Name": "Undo"
        },
        {
          "Value": "57615",
          "Name": "Home"
        },
        {
          "Value": "57616",
          "Name": "Up"
        },
        {
          "Value": "57617",
          "Name": "Forward"
        },
        {
          "Value": "57618",
          "Name": "Back"
        },
        {
          "Value": "57619",
          "Name": "Favorite"
        },
        {
          "Value": "57620",
          "Name": "Camera"
        },
        {
          "Value": "57621",
          "Name": "Setting"
        },
        {
          "Value": "57622",
          "Name": "Video"
        },
        {
          "Value": "57623",
          "Name": "Sync"
        },
        {
          "Value": "57624",
          "Name": "Download"
        },
        {
          "Value": "57625",
          "Name": "Mail"
        },
        {
          "Value": "57626",
          "Name": "Find"
        },
        {
          "Value": "57627",
          "Name": "Help"
        },
        {
          "Value": "57628",
          "Name": "Upload"
        },
        {
          "Value": "57629",
          "Name": "Emoji"
        },
        {
          "Value": "57630",
          "Name": "TwoPage"
        },
        {
          "Value": "57631",
          "Name": "LeaveChat"
        },
        {
          "Value": "57632",
          "Name": "MailForward"
        },
        {
          "Value": "57633",
          "Name": "Clock"
        },
        {
          "Value": "57634",
          "Name": "Send"
        },
        {
          "Value": "57635",
          "Name": "Crop"
        },
        {
          "Value": "57636",
          "Name": "RotateCamera"
        },
        {
          "Value": "57637",
          "Name": "People"
        },
        {
          "Value": "57638",
          "Name": "OpenPane"
        },
        {
          "Value": "57639",
          "Name": "ClosePane"
        },
        {
          "Value": "57640",
          "Name": "World"
        },
        {
          "Value": "57641",
          "Name": "Flag"
        },
        {
          "Value": "57642",
          "Name": "PreviewLink"
        },
        {
          "Value": "57643",
          "Name": "Globe"
        },
        {
          "Value": "57644",
          "Name": "Trim"
        },
        {
          "Value": "57645",
          "Name": "AttachCamera"
        },
        {
          "Value": "57646",
          "Name": "ZoomIn"
        },
        {
          "Value": "57647",
          "Name": "Bookmarks"
        },
        {
          "Value": "57648",
          "Name": "Document"
        },
        {
          "Value": "57649",
          "Name": "ProtectedDocument"
        },
        {
          "Value": "57650",
          "Name": "Page"
        },
        {
          "Value": "57651",
          "Name": "Bullets"
        },
        {
          "Value": "57652",
          "Name": "Comment"
        },
        {
          "Value": "57653",
          "Name": "MailFilled"
        },
        {
          "Value": "57654",
          "Name": "ContactInfo"
        },
        {
          "Value": "57655",
          "Name": "HangUp"
        },
        {
          "Value": "57656",
          "Name": "ViewAll"
        },
        {
          "Value": "57657",
          "Name": "MapPin"
        },
        {
          "Value": "57658",
          "Name": "Phone"
        },
        {
          "Value": "57659",
          "Name": "VideoChat"
        },
        {
          "Value": "57660",
          "Name": "Switch"
        },
        {
          "Value": "57661",
          "Name": "Contact"
        },
        {
          "Value": "57662",
          "Name": "Rename"
        },
        {
          "Value": "57665",
          "Name": "Pin"
        },
        {
          "Value": "57666",
          "Name": "MusicInfo"
        },
        {
          "Value": "57667",
          "Name": "Go"
        },
        {
          "Value": "57668",
          "Name": "Keyboard"
        },
        {
          "Value": "57669",
          "Name": "DockLeft"
        },
        {
          "Value": "57670",
          "Name": "DockRight"
        },
        {
          "Value": "57671",
          "Name": "DockBottom"
        },
        {
          "Value": "57672",
          "Name": "Remote"
        },
        {
          "Value": "57673",
          "Name": "Refresh"
        },
        {
          "Value": "57674",
          "Name": "Rotate"
        },
        {
          "Value": "57675",
          "Name": "Shuffle"
        },
        {
          "Value": "57676",
          "Name": "List"
        },
        {
          "Value": "57677",
          "Name": "Shop"
        },
        {
          "Value": "57678",
          "Name": "SelectAll"
        },
        {
          "Value": "57679",
          "Name": "Orientation"
        },
        {
          "Value": "57680",
          "Name": "Import"
        },
        {
          "Value": "57681",
          "Name": "ImportAll"
        },
        {
          "Value": "57685",
          "Name": "BrowsePhotos"
        },
        {
          "Value": "57686",
          "Name": "WebCam"
        },
        {
          "Value": "57688",
          "Name": "Pictures"
        },
        {
          "Value": "57689",
          "Name": "SaveLocal"
        },
        {
          "Value": "57690",
          "Name": "Caption"
        },
        {
          "Value": "57691",
          "Name": "Stop"
        },
        {
          "Value": "57692",
          "Name": "ShowResults"
        },
        {
          "Value": "57693",
          "Name": "Volume"
        },
        {
          "Value": "57694",
          "Name": "Repair"
        },
        {
          "Value": "57695",
          "Name": "Message"
        },
        {
          "Value": "57696",
          "Name": "Page2"
        },
        {
          "Value": "57697",
          "Name": "CalendarDay"
        },
        {
          "Value": "57698",
          "Name": "CalendarWeek"
        },
        {
          "Value": "57699",
          "Name": "Calendar"
        },
        {
          "Value": "57700",
          "Name": "Character"
        },
        {
          "Value": "57701",
          "Name": "MailReplyAll"
        },
        {
          "Value": "57702",
          "Name": "Read"
        },
        {
          "Value": "57703",
          "Name": "Link"
        },
        {
          "Value": "57704",
          "Name": "Account"
        },
        {
          "Value": "57705",
          "Name": "ShowBcc"
        },
        {
          "Value": "57706",
          "Name": "HideBcc"
        },
        {
          "Value": "57707",
          "Name": "Cut"
        },
        {
          "Value": "57708",
          "Name": "Attach"
        },
        {
          "Value": "57709",
          "Name": "Paste"
        },
        {
          "Value": "57710",
          "Name": "Filter"
        },
        {
          "Value": "57711",
          "Name": "Copy"
        },
        {
          "Value": "57712",
          "Name": "Emoji2"
        },
        {
          "Value": "57713",
          "Name": "Important"
        },
        {
          "Value": "57714",
          "Name": "MailReply"
        },
        {
          "Value": "57715",
          "Name": "SlideShow"
        },
        {
          "Value": "57716",
          "Name": "Sort"
        },
        {
          "Value": "57720",
          "Name": "Manage"
        },
        {
          "Value": "57721",
          "Name": "AllApps"
        },
        {
          "Value": "57722",
          "Name": "DisconnectDrive"
        },
        {
          "Value": "57723",
          "Name": "MapDrive"
        },
        {
          "Value": "57724",
          "Name": "NewWindow"
        },
        {
          "Value": "57725",
          "Name": "OpenWith"
        },
        {
          "Value": "57729",
          "Name": "ContactPresence"
        },
        {
          "Value": "57730",
          "Name": "Priority"
        },
        {
          "Value": "57732",
          "Name": "GoToToday"
        },
        {
          "Value": "57733",
          "Name": "Font"
        },
        {
          "Value": "57734",
          "Name": "FontColor"
        },
        {
          "Value": "57735",
          "Name": "Contact2"
        },
        {
          "Value": "57736",
          "Name": "Folder"
        },
        {
          "Value": "57737",
          "Name": "Audio"
        },
        {
          "Value": "57738",
          "Name": "Placeholder"
        },
        {
          "Value": "57739",
          "Name": "View"
        },
        {
          "Value": "57740",
          "Name": "SetLockScreen"
        },
        {
          "Value": "57741",
          "Name": "SetTile"
        },
        {
          "Value": "57744",
          "Name": "ClosedCaption"
        },
        {
          "Value": "57745",
          "Name": "StopSlideShow"
        },
        {
          "Value": "57746",
          "Name": "Permissions"
        },
        {
          "Value": "57747",
          "Name": "Highlight"
        },
        {
          "Value": "57748",
          "Name": "DisableUpdates"
        },
        {
          "Value": "57749",
          "Name": "UnFavorite"
        },
        {
          "Value": "57750",
          "Name": "UnPin"
        },
        {
          "Value": "57751",
          "Name": "OpenLocal"
        },
        {
          "Value": "57752",
          "Name": "Mute"
        },
        {
          "Value": "57753",
          "Name": "Italic"
        },
        {
          "Value": "57754",
          "Name": "Underline"
        },
        {
          "Value": "57755",
          "Name": "Bold"
        },
        {
          "Value": "57756",
          "Name": "MoveToFolder"
        },
        {
          "Value": "57757",
          "Name": "LikeDislike"
        },
        {
          "Value": "57758",
          "Name": "Dislike"
        },
        {
          "Value": "57759",
          "Name": "Like"
        },
        {
          "Value": "57760",
          "Name": "AlignRight"
        },
        {
          "Value": "57761",
          "Name": "AlignCenter"
        },
        {
          "Value": "57762",
          "Name": "AlignLeft"
        },
        {
          "Value": "57763",
          "Name": "Zoom"
        },
        {
          "Value": "57764",
          "Name": "ZoomOut"
        },
        {
          "Value": "57765",
          "Name": "OpenFile"
        },
        {
          "Value": "57766",
          "Name": "OtherUser"
        },
        {
          "Value": "57767",
          "Name": "Admin"
        },
        {
          "Value": "57795",
          "Name": "Street"
        },
        {
          "Value": "57796",
          "Name": "Map"
        },
        {
          "Value": "57797",
          "Name": "ClearSelection"
        },
        {
          "Value": "57798",
          "Name": "FontDecrease"
        },
        {
          "Value": "57799",
          "Name": "FontIncrease"
        },
        {
          "Value": "57800",
          "Name": "FontSize"
        },
        {
          "Value": "57801",
          "Name": "CellPhone"
        },
        {
          "Value": "57802",
          "Name": "ReShare"
        },
        {
          "Value": "57803",
          "Name": "Tag"
        },
        {
          "Value": "57804",
          "Name": "RepeatOne"
        },
        {
          "Value": "57805",
          "Name": "RepeatAll"
        },
        {
          "Value": "57806",
          "Name": "OutlineStar"
        },
        {
          "Value": "57807",
          "Name": "SolidStar"
        },
        {
          "Value": "57808",
          "Name": "Calculator"
        },
        {
          "Value": "57809",
          "Name": "Directions"
        },
        {
          "Value": "57810",
          "Name": "Target"
        },
        {
          "Value": "57811",
          "Name": "Library"
        },
        {
          "Value": "57812",
          "Name": "PhoneBook"
        },
        {
          "Value": "57813",
          "Name": "Memo"
        },
        {
          "Value": "57814",
          "Name": "Microphone"
        },
        {
          "Value": "57815",
          "Name": "PostUpdate"
        },
        {
          "Value": "57816",
          "Name": "BackToWindow"
        },
        {
          "Value": "57817",
          "Name": "FullScreen"
        },
        {
          "Value": "57818",
          "Name": "NewFolder"
        },
        {
          "Value": "57819",
          "Name": "CalendarReply"
        },
        {
          "Value": "57821",
          "Name": "UnSyncFolder"
        },
        {
          "Value": "57822",
          "Name": "ReportHacked"
        },
        {
          "Value": "57823",
          "Name": "SyncFolder"
        },
        {
          "Value": "57824",
          "Name": "BlockContact"
        },
        {
          "Value": "57825",
          "Name": "SwitchApps"
        },
        {
          "Value": "57826",
          "Name": "AddFriend"
        },
        {
          "Value": "57827",
          "Name": "TouchPointer"
        },
        {
          "Value": "57828",
          "Name": "GoToStart"
        },
        {
          "Value": "57829",
          "Name": "ZeroBars"
        },
        {
          "Value": "57830",
          "Name": "OneBar"
        },
        {
          "Value": "57831",
          "Name": "TwoBars"
        },
        {
          "Value": "57832",
          "Name": "ThreeBars"
        },
        {
          "Value": "57833",
          "Name": "FourBars"
        },
        {
          "Value": "58004",
          "Name": "Scan"
        },
        {
          "Value": "58005",
          "Name": "Preview"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Symbol"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Standard"
        },
        {
          "Value": "1",
          "Name": "Recycling"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.VirtualizationMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Disabled"
        },
        {
          "Value": "1",
          "Name": "Enabled"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ZoomMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "1",
          "Name": "OneWay"
        },
        {
          "Value": "2",
          "Name": "OneTime"
        },
        {
          "Value": "3",
          "Name": "TwoWay"
        }
      ],
      "Name": "Windows.UI.Xaml.Data.BindingMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "TemplatedParent"
        },
        {
          "Value": "2",
          "Name": "Self"
        }
      ],
      "Name": "Windows.UI.Xaml.Data.RelativeSourceMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "PropertyChanged"
        },
        {
          "Value": "2",
          "Name": "Explicit"
        }
      ],
      "Name": "Windows.UI.Xaml.Data.UpdateSourceTrigger"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Backward"
        },
        {
          "Value": "1",
          "Name": "Forward"
        }
      ],
      "Name": "Windows.UI.Xaml.Documents.LogicalDirection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Automatic"
        },
        {
          "Value": "1",
          "Name": "DraggedUIElement"
        },
        {
          "Value": "2",
          "Name": "CustomDragVisual"
        },
        {
          "Value": "3",
          "Name": "DataFormat"
        }
      ],
      "Name": "Windows.UI.Xaml.DragVisualKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "Light"
        },
        {
          "Value": "2",
          "Name": "Dark"
        }
      ],
      "Name": "Windows.UI.Xaml.ElementTheme"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "LeftToRight"
        },
        {
          "Value": "1",
          "Name": "RightToLeft"
        }
      ],
      "Name": "Windows.UI.Xaml.FlowDirection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unfocused"
        },
        {
          "Value": "1",
          "Name": "Pointer"
        },
        {
          "Value": "2",
          "Name": "Keyboard"
        },
        {
          "Value": "3",
          "Name": "Programmatic"
        }
      ],
      "Name": "Windows.UI.Xaml.FocusState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Normal"
        },
        {
          "Value": "1",
          "Name": "AllSmallCaps"
        },
        {
          "Value": "2",
          "Name": "SmallCaps"
        },
        {
          "Value": "3",
          "Name": "AllPetiteCaps"
        },
        {
          "Value": "4",
          "Name": "PetiteCaps"
        },
        {
          "Value": "5",
          "Name": "Unicase"
        },
        {
          "Value": "6",
          "Name": "Titling"
        }
      ],
      "Name": "Windows.UI.Xaml.FontCapitals"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Normal"
        },
        {
          "Value": "1",
          "Name": "HojoKanji"
        },
        {
          "Value": "2",
          "Name": "Jis04"
        },
        {
          "Value": "3",
          "Name": "Jis78"
        },
        {
          "Value": "4",
          "Name": "Jis83"
        },
        {
          "Value": "5",
          "Name": "Jis90"
        },
        {
          "Value": "6",
          "Name": "NlcKanji"
        },
        {
          "Value": "7",
          "Name": "Simplified"
        },
        {
          "Value": "8",
          "Name": "Traditional"
        },
        {
          "Value": "9",
          "Name": "TraditionalNames"
        }
      ],
      "Name": "Windows.UI.Xaml.FontEastAsianLanguage"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Normal"
        },
        {
          "Value": "1",
          "Name": "Full"
        },
        {
          "Value": "2",
          "Name": "Half"
        },
        {
          "Value": "3",
          "Name": "Proportional"
        },
        {
          "Value": "4",
          "Name": "Quarter"
        },
        {
          "Value": "5",
          "Name": "Third"
        }
      ],
      "Name": "Windows.UI.Xaml.FontEastAsianWidths"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Normal"
        },
        {
          "Value": "1",
          "Name": "Stacked"
        },
        {
          "Value": "2",
          "Name": "Slashed"
        }
      ],
      "Name": "Windows.UI.Xaml.FontFraction"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Normal"
        },
        {
          "Value": "1",
          "Name": "Proportional"
        },
        {
          "Value": "2",
          "Name": "Tabular"
        }
      ],
      "Name": "Windows.UI.Xaml.FontNumeralAlignment"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Normal"
        },
        {
          "Value": "1",
          "Name": "Lining"
        },
        {
          "Value": "2",
          "Name": "OldStyle"
        }
      ],
      "Name": "Windows.UI.Xaml.FontNumeralStyle"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Normal"
        },
        {
          "Value": "1",
          "Name": "Superscript"
        },
        {
          "Value": "2",
          "Name": "Subscript"
        },
        {
          "Value": "3",
          "Name": "Ordinal"
        },
        {
          "Value": "4",
          "Name": "Inferior"
        },
        {
          "Value": "5",
          "Name": "Ruby"
        }
      ],
      "Name": "Windows.UI.Xaml.FontVariants"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Left"
        },
        {
          "Value": "1",
          "Name": "Center"
        },
        {
          "Value": "2",
          "Name": "Right"
        },
        {
          "Value": "3",
          "Name": "Stretch"
        }
      ],
      "Name": "Windows.UI.Xaml.HorizontalAlignment"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Next"
        },
        {
          "Value": "1",
          "Name": "Previous"
        },
        {
          "Value": "2",
          "Name": "Up"
        },
        {
          "Value": "3",
          "Name": "Down"
        },
        {
          "Value": "4",
          "Name": "Left"
        },
        {
          "Value": "5",
          "Name": "Right"
        },
        {
          "Value": "6",
          "Name": "None"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.FocusNavigationDirection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "Url"
        },
        {
          "Value": "5",
          "Name": "EmailSmtpAddress"
        },
        {
          "Value": "20",
          "Name": "CurrencyAmountAndSymbol"
        },
        {
          "Value": "21",
          "Name": "CurrencyAmount"
        },
        {
          "Value": "23",
          "Name": "DateMonthNumber"
        },
        {
          "Value": "24",
          "Name": "DateDayNumber"
        },
        {
          "Value": "25",
          "Name": "DateYear"
        },
        {
          "Value": "28",
          "Name": "Digits"
        },
        {
          "Value": "29",
          "Name": "Number"
        },
        {
          "Value": "31",
          "Name": "Password"
        },
        {
          "Value": "32",
          "Name": "TelephoneNumber"
        },
        {
          "Value": "33",
          "Name": "TelephoneCountryCode"
        },
        {
          "Value": "34",
          "Name": "TelephoneAreaCode"
        },
        {
          "Value": "35",
          "Name": "TelephoneLocalNumber"
        },
        {
          "Value": "37",
          "Name": "TimeHour"
        },
        {
          "Value": "38",
          "Name": "TimeMinutesOrSeconds"
        },
        {
          "Value": "39",
          "Name": "NumberFullWidth"
        },
        {
          "Value": "40",
          "Name": "AlphanumericHalfWidth"
        },
        {
          "Value": "41",
          "Name": "AlphanumericFullWidth"
        },
        {
          "Value": "44",
          "Name": "Hiragana"
        },
        {
          "Value": "45",
          "Name": "KatakanaHalfWidth"
        },
        {
          "Value": "46",
          "Name": "KatakanaFullWidth"
        },
        {
          "Value": "47",
          "Name": "Hanja"
        },
        {
          "Value": "48",
          "Name": "HangulHalfWidth"
        },
        {
          "Value": "49",
          "Name": "HangulFullWidth"
        },
        {
          "Value": "50",
          "Name": "Search"
        },
        {
          "Value": "51",
          "Name": "Formula"
        },
        {
          "Value": "52",
          "Name": "SearchIncremental"
        },
        {
          "Value": "53",
          "Name": "ChineseHalfWidth"
        },
        {
          "Value": "54",
          "Name": "ChineseFullWidth"
        },
        {
          "Value": "55",
          "Name": "NativeScript"
        },
        {
          "Value": "57",
          "Name": "Text"
        },
        {
          "Value": "58",
          "Name": "Chat"
        },
        {
          "Value": "59",
          "Name": "NameOrPhoneNumber"
        },
        {
          "Value": "60",
          "Name": "EmailNameOrAddress"
        },
        {
          "Value": "62",
          "Name": "Maps"
        },
        {
          "Value": "63",
          "Name": "NumericPassword"
        },
        {
          "Value": "64",
          "Name": "NumericPin"
        },
        {
          "Value": "65",
          "Name": "AlphanumericPin"
        },
        {
          "Value": "67",
          "Name": "FormulaNumber"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.InputScopeNameValue"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Local"
        },
        {
          "Value": "1",
          "Name": "Cycle"
        },
        {
          "Value": "2",
          "Name": "Once"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.KeyboardNavigationMode"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "TranslateX"
        },
        {
          "Value": "2",
          "Name": "TranslateY"
        },
        {
          "Value": "4",
          "Name": "TranslateRailsX"
        },
        {
          "Value": "8",
          "Name": "TranslateRailsY"
        },
        {
          "Value": "16",
          "Name": "Rotate"
        },
        {
          "Value": "32",
          "Name": "Scale"
        },
        {
          "Value": "64",
          "Name": "TranslateInertia"
        },
        {
          "Value": "128",
          "Name": "RotateInertia"
        },
        {
          "Value": "256",
          "Name": "ScaleInertia"
        },
        {
          "Value": "65535",
          "Name": "All"
        },
        {
          "Value": "65536",
          "Name": "System"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.ManipulationModes"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Primitive"
        },
        {
          "Value": "1",
          "Name": "Metadata"
        },
        {
          "Value": "2",
          "Name": "Custom"
        }
      ],
      "Name": "Windows.UI.Xaml.Interop.TypeKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "MaxHeight"
        },
        {
          "Value": "1",
          "Name": "BlockLineHeight"
        },
        {
          "Value": "2",
          "Name": "BaselineToBaseline"
        }
      ],
      "Name": "Windows.UI.Xaml.LineStackingStrategy"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Left"
        },
        {
          "Value": "1",
          "Name": "Center"
        },
        {
          "Value": "2",
          "Name": "Right"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.AlignmentX"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Top"
        },
        {
          "Value": "1",
          "Name": "Center"
        },
        {
          "Value": "2",
          "Name": "Bottom"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.AlignmentY"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Active"
        },
        {
          "Value": "1",
          "Name": "Filling"
        },
        {
          "Value": "2",
          "Name": "Stopped"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.Animation.ClockState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "EaseOut"
        },
        {
          "Value": "1",
          "Name": "EaseIn"
        },
        {
          "Value": "2",
          "Name": "EaseInOut"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.Animation.EasingMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "HoldEnd"
        },
        {
          "Value": "1",
          "Name": "Stop"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.Animation.FillBehavior"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Other"
        },
        {
          "Value": "1",
          "Name": "ForegroundOnlyMedia"
        },
        {
          "Value": "2",
          "Name": "BackgroundCapableMedia"
        },
        {
          "Value": "3",
          "Name": "Communications"
        },
        {
          "Value": "4",
          "Name": "Alerts"
        },
        {
          "Value": "5",
          "Name": "SoundEffects"
        },
        {
          "Value": "6",
          "Name": "GameEffects"
        },
        {
          "Value": "7",
          "Name": "GameMedia"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.AudioCategory"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Console"
        },
        {
          "Value": "1",
          "Name": "Multimedia"
        },
        {
          "Value": "2",
          "Name": "Communications"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.AudioDeviceType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Absolute"
        },
        {
          "Value": "1",
          "Name": "RelativeToBoundingBox"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.BrushMappingMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "ScRgbLinearInterpolation"
        },
        {
          "Value": "1",
          "Name": "SRgbLinearInterpolation"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.ColorInterpolationMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Inherit"
        },
        {
          "Value": "1",
          "Name": "SourceOver"
        },
        {
          "Value": "2",
          "Name": "MinBlend"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.ElementCompositeMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "EvenOdd"
        },
        {
          "Value": "1",
          "Name": "Nonzero"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.FillRule"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Pad"
        },
        {
          "Value": "1",
          "Name": "Reflect"
        },
        {
          "Value": "2",
          "Name": "Repeat"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.GradientSpreadMethod"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "8",
          "Name": "IgnoreImageCache"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.Imaging.BitmapCreateOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Physical"
        },
        {
          "Value": "1",
          "Name": "Logical"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.Imaging.DecodePixelType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "NotSupported"
        },
        {
          "Value": "1",
          "Name": "Maybe"
        },
        {
          "Value": "2",
          "Name": "Probably"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.MediaCanPlayResponse"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Closed"
        },
        {
          "Value": "1",
          "Name": "Opening"
        },
        {
          "Value": "2",
          "Name": "Buffering"
        },
        {
          "Value": "3",
          "Name": "Playing"
        },
        {
          "Value": "4",
          "Name": "Paused"
        },
        {
          "Value": "5",
          "Name": "Stopped"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.MediaElementState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Flat"
        },
        {
          "Value": "1",
          "Name": "Square"
        },
        {
          "Value": "2",
          "Name": "Round"
        },
        {
          "Value": "3",
          "Name": "Triangle"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.PenLineCap"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Miter"
        },
        {
          "Value": "1",
          "Name": "Bevel"
        },
        {
          "Value": "2",
          "Name": "Round"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.PenLineJoin"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "SideBySide"
        },
        {
          "Value": "2",
          "Name": "TopBottom"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.Stereo3DVideoPackingMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Mono"
        },
        {
          "Value": "1",
          "Name": "Stereo"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.Stereo3DVideoRenderMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Fill"
        },
        {
          "Value": "2",
          "Name": "Uniform"
        },
        {
          "Value": "3",
          "Name": "UniformToFill"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.Stretch"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "BoldSimulation"
        },
        {
          "Value": "2",
          "Name": "ItalicSimulation"
        },
        {
          "Value": "3",
          "Name": "BoldItalicSimulation"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.StyleSimulations"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Counterclockwise"
        },
        {
          "Value": "1",
          "Name": "Clockwise"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.SweepDirection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "PopOn"
        },
        {
          "Value": "1",
          "Name": "RollUp"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.TimedTextScrollMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Caption"
        },
        {
          "Value": "1",
          "Name": "Subtitle"
        },
        {
          "Value": "2",
          "Name": "Metadata"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.TimedTextTrackKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Pixels"
        },
        {
          "Value": "1",
          "Name": "Percentage"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.TimedTextUnit"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "LeftRightTopBottom"
        },
        {
          "Value": "1",
          "Name": "RightLeftTopBottom"
        },
        {
          "Value": "2",
          "Name": "TopBottomRightLeft"
        },
        {
          "Value": "3",
          "Name": "TopBottomLeftRight"
        },
        {
          "Value": "4",
          "Name": "LeftRight"
        },
        {
          "Value": "5",
          "Name": "RightLeft"
        },
        {
          "Value": "6",
          "Name": "TopBottom"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.TimedTextWritingMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Disabled"
        },
        {
          "Value": "1",
          "Name": "Required"
        },
        {
          "Value": "2",
          "Name": "Enabled"
        }
      ],
      "Name": "Windows.UI.Xaml.Navigation.NavigationCacheMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "New"
        },
        {
          "Value": "1",
          "Name": "Back"
        },
        {
          "Value": "2",
          "Name": "Forward"
        },
        {
          "Value": "3",
          "Name": "Refresh"
        }
      ],
      "Name": "Windows.UI.Xaml.Navigation.NavigationMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "TrimSideBearings"
        }
      ],
      "Name": "Windows.UI.Xaml.OpticalMarginAlignment"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Final"
        },
        {
          "Value": "1",
          "Name": "Intermediate"
        }
      ],
      "Name": "Windows.UI.Xaml.Printing.PreviewPageCountType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Center"
        },
        {
          "Value": "1",
          "Name": "Left"
        },
        {
          "Value": "2",
          "Name": "Right"
        },
        {
          "Value": "3",
          "Name": "Justify"
        }
      ],
      "Name": "Windows.UI.Xaml.TextAlignment"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Full"
        },
        {
          "Value": "1",
          "Name": "TrimToCapHeight"
        },
        {
          "Value": "2",
          "Name": "TrimToBaseline"
        },
        {
          "Value": "3",
          "Name": "Tight"
        }
      ],
      "Name": "Windows.UI.Xaml.TextLineBounds"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "DetectFromContent"
        }
      ],
      "Name": "Windows.UI.Xaml.TextReadingOrder"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "CharacterEllipsis"
        },
        {
          "Value": "2",
          "Name": "WordEllipsis"
        },
        {
          "Value": "3",
          "Name": "Clip"
        }
      ],
      "Name": "Windows.UI.Xaml.TextTrimming"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "1",
          "Name": "NoWrap"
        },
        {
          "Value": "2",
          "Name": "Wrap"
        },
        {
          "Value": "3",
          "Name": "WrapWholeWords"
        }
      ],
      "Name": "Windows.UI.Xaml.TextWrapping"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Top"
        },
        {
          "Value": "1",
          "Name": "Center"
        },
        {
          "Value": "2",
          "Name": "Bottom"
        },
        {
          "Value": "3",
          "Name": "Stretch"
        }
      ],
      "Name": "Windows.UI.Xaml.VerticalAlignment"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Visible"
        },
        {
          "Value": "1",
          "Name": "Collapsed"
        }
      ],
      "Name": "Windows.UI.Xaml.Visibility"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "MostRecent"
        },
        {
          "Value": "2",
          "Name": "OnlyFromCache"
        }
      ],
      "Name": "Windows.Web.Http.Filters.HttpCacheReadBehavior"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Default"
        },
        {
          "Value": "1",
          "Name": "NoCache"
        }
      ],
      "Name": "Windows.Web.Http.Filters.HttpCacheWriteBehavior"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "ResponseContentRead"
        },
        {
          "Value": "1",
          "Name": "ResponseHeadersRead"
        }
      ],
      "Name": "Windows.Web.Http.HttpCompletionOption"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "10",
          "Name": "DetectingProxy"
        },
        {
          "Value": "20",
          "Name": "ResolvingName"
        },
        {
          "Value": "30",
          "Name": "ConnectingToServer"
        },
        {
          "Value": "40",
          "Name": "NegotiatingSsl"
        },
        {
          "Value": "50",
          "Name": "SendingHeaders"
        },
        {
          "Value": "60",
          "Name": "SendingContent"
        },
        {
          "Value": "70",
          "Name": "WaitingForResponse"
        },
        {
          "Value": "80",
          "Name": "ReceivingHeaders"
        },
        {
          "Value": "90",
          "Name": "ReceivingContent"
        }
      ],
      "Name": "Windows.Web.Http.HttpProgressStage"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Cache"
        },
        {
          "Value": "2",
          "Name": "Network"
        }
      ],
      "Name": "Windows.Web.Http.HttpResponseMessageSource"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "100",
          "Name": "Continue"
        },
        {
          "Value": "101",
          "Name": "SwitchingProtocols"
        },
        {
          "Value": "102",
          "Name": "Processing"
        },
        {
          "Value": "200",
          "Name": "Ok"
        },
        {
          "Value": "201",
          "Name": "Created"
        },
        {
          "Value": "202",
          "Name": "Accepted"
        },
        {
          "Value": "203",
          "Name": "NonAuthoritativeInformation"
        },
        {
          "Value": "204",
          "Name": "NoContent"
        },
        {
          "Value": "205",
          "Name": "ResetContent"
        },
        {
          "Value": "206",
          "Name": "PartialContent"
        },
        {
          "Value": "207",
          "Name": "MultiStatus"
        },
        {
          "Value": "208",
          "Name": "AlreadyReported"
        },
        {
          "Value": "226",
          "Name": "IMUsed"
        },
        {
          "Value": "300",
          "Name": "MultipleChoices"
        },
        {
          "Value": "301",
          "Name": "MovedPermanently"
        },
        {
          "Value": "302",
          "Name": "Found"
        },
        {
          "Value": "303",
          "Name": "SeeOther"
        },
        {
          "Value": "304",
          "Name": "NotModified"
        },
        {
          "Value": "305",
          "Name": "UseProxy"
        },
        {
          "Value": "307",
          "Name": "TemporaryRedirect"
        },
        {
          "Value": "308",
          "Name": "PermanentRedirect"
        },
        {
          "Value": "400",
          "Name": "BadRequest"
        },
        {
          "Value": "401",
          "Name": "Unauthorized"
        },
        {
          "Value": "402",
          "Name": "PaymentRequired"
        },
        {
          "Value": "403",
          "Name": "Forbidden"
        },
        {
          "Value": "404",
          "Name": "NotFound"
        },
        {
          "Value": "405",
          "Name": "MethodNotAllowed"
        },
        {
          "Value": "406",
          "Name": "NotAcceptable"
        },
        {
          "Value": "407",
          "Name": "ProxyAuthenticationRequired"
        },
        {
          "Value": "408",
          "Name": "RequestTimeout"
        },
        {
          "Value": "409",
          "Name": "Conflict"
        },
        {
          "Value": "410",
          "Name": "Gone"
        },
        {
          "Value": "411",
          "Name": "LengthRequired"
        },
        {
          "Value": "412",
          "Name": "PreconditionFailed"
        },
        {
          "Value": "413",
          "Name": "RequestEntityTooLarge"
        },
        {
          "Value": "414",
          "Name": "RequestUriTooLong"
        },
        {
          "Value": "415",
          "Name": "UnsupportedMediaType"
        },
        {
          "Value": "416",
          "Name": "RequestedRangeNotSatisfiable"
        },
        {
          "Value": "417",
          "Name": "ExpectationFailed"
        },
        {
          "Value": "422",
          "Name": "UnprocessableEntity"
        },
        {
          "Value": "423",
          "Name": "Locked"
        },
        {
          "Value": "424",
          "Name": "FailedDependency"
        },
        {
          "Value": "426",
          "Name": "UpgradeRequired"
        },
        {
          "Value": "428",
          "Name": "PreconditionRequired"
        },
        {
          "Value": "429",
          "Name": "TooManyRequests"
        },
        {
          "Value": "431",
          "Name": "RequestHeaderFieldsTooLarge"
        },
        {
          "Value": "500",
          "Name": "InternalServerError"
        },
        {
          "Value": "501",
          "Name": "NotImplemented"
        },
        {
          "Value": "502",
          "Name": "BadGateway"
        },
        {
          "Value": "503",
          "Name": "ServiceUnavailable"
        },
        {
          "Value": "504",
          "Name": "GatewayTimeout"
        },
        {
          "Value": "505",
          "Name": "HttpVersionNotSupported"
        },
        {
          "Value": "506",
          "Name": "VariantAlsoNegotiates"
        },
        {
          "Value": "507",
          "Name": "InsufficientStorage"
        },
        {
          "Value": "508",
          "Name": "LoopDetected"
        },
        {
          "Value": "510",
          "Name": "NotExtended"
        },
        {
          "Value": "511",
          "Name": "NetworkAuthenticationRequired"
        }
      ],
      "Name": "Windows.Web.Http.HttpStatusCode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Http10"
        },
        {
          "Value": "2",
          "Name": "Http11"
        },
        {
          "Value": "3",
          "Name": "Http20"
        }
      ],
      "Name": "Windows.Web.Http.HttpVersion"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "MissingRequiredElement"
        },
        {
          "Value": "2",
          "Name": "MissingRequiredAttribute"
        },
        {
          "Value": "3",
          "Name": "InvalidXml"
        },
        {
          "Value": "4",
          "Name": "UnexpectedContent"
        },
        {
          "Value": "5",
          "Name": "UnsupportedFormat"
        }
      ],
      "Name": "Windows.Web.Syndication.SyndicationErrorStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Atom10"
        },
        {
          "Value": "1",
          "Name": "Rss20"
        },
        {
          "Value": "2",
          "Name": "Rss10"
        },
        {
          "Value": "3",
          "Name": "Rss092"
        },
        {
          "Value": "4",
          "Name": "Rss091"
        },
        {
          "Value": "5",
          "Name": "Atom03"
        }
      ],
      "Name": "Windows.Web.Syndication.SyndicationFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Text"
        },
        {
          "Value": "1",
          "Name": "Html"
        },
        {
          "Value": "2",
          "Name": "Xhtml"
        }
      ],
      "Name": "Windows.Web.Syndication.SyndicationTextType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Unknown"
        },
        {
          "Value": "1",
          "Name": "CertificateCommonNameIsIncorrect"
        },
        {
          "Value": "2",
          "Name": "CertificateExpired"
        },
        {
          "Value": "3",
          "Name": "CertificateContainsErrors"
        },
        {
          "Value": "4",
          "Name": "CertificateRevoked"
        },
        {
          "Value": "5",
          "Name": "CertificateIsInvalid"
        },
        {
          "Value": "6",
          "Name": "ServerUnreachable"
        },
        {
          "Value": "7",
          "Name": "Timeout"
        },
        {
          "Value": "8",
          "Name": "ErrorHttpInvalidServerResponse"
        },
        {
          "Value": "9",
          "Name": "ConnectionAborted"
        },
        {
          "Value": "10",
          "Name": "ConnectionReset"
        },
        {
          "Value": "11",
          "Name": "Disconnected"
        },
        {
          "Value": "12",
          "Name": "HttpToHttpsOnRedirection"
        },
        {
          "Value": "13",
          "Name": "HttpsToHttpOnRedirection"
        },
        {
          "Value": "14",
          "Name": "CannotConnect"
        },
        {
          "Value": "15",
          "Name": "HostNameNotResolved"
        },
        {
          "Value": "16",
          "Name": "OperationCanceled"
        },
        {
          "Value": "17",
          "Name": "RedirectFailed"
        },
        {
          "Value": "18",
          "Name": "UnexpectedStatusCode"
        },
        {
          "Value": "19",
          "Name": "UnexpectedRedirection"
        },
        {
          "Value": "20",
          "Name": "UnexpectedClientError"
        },
        {
          "Value": "21",
          "Name": "UnexpectedServerError"
        },
        {
          "Value": "300",
          "Name": "MultipleChoices"
        },
        {
          "Value": "301",
          "Name": "MovedPermanently"
        },
        {
          "Value": "302",
          "Name": "Found"
        },
        {
          "Value": "303",
          "Name": "SeeOther"
        },
        {
          "Value": "304",
          "Name": "NotModified"
        },
        {
          "Value": "305",
          "Name": "UseProxy"
        },
        {
          "Value": "307",
          "Name": "TemporaryRedirect"
        },
        {
          "Value": "400",
          "Name": "BadRequest"
        },
        {
          "Value": "401",
          "Name": "Unauthorized"
        },
        {
          "Value": "402",
          "Name": "PaymentRequired"
        },
        {
          "Value": "403",
          "Name": "Forbidden"
        },
        {
          "Value": "404",
          "Name": "NotFound"
        },
        {
          "Value": "405",
          "Name": "MethodNotAllowed"
        },
        {
          "Value": "406",
          "Name": "NotAcceptable"
        },
        {
          "Value": "407",
          "Name": "ProxyAuthenticationRequired"
        },
        {
          "Value": "408",
          "Name": "RequestTimeout"
        },
        {
          "Value": "409",
          "Name": "Conflict"
        },
        {
          "Value": "410",
          "Name": "Gone"
        },
        {
          "Value": "411",
          "Name": "LengthRequired"
        },
        {
          "Value": "412",
          "Name": "PreconditionFailed"
        },
        {
          "Value": "413",
          "Name": "RequestEntityTooLarge"
        },
        {
          "Value": "414",
          "Name": "RequestUriTooLong"
        },
        {
          "Value": "415",
          "Name": "UnsupportedMediaType"
        },
        {
          "Value": "416",
          "Name": "RequestedRangeNotSatisfiable"
        },
        {
          "Value": "417",
          "Name": "ExpectationFailed"
        },
        {
          "Value": "500",
          "Name": "InternalServerError"
        },
        {
          "Value": "501",
          "Name": "NotImplemented"
        },
        {
          "Value": "502",
          "Name": "BadGateway"
        },
        {
          "Value": "503",
          "Name": "ServiceUnavailable"
        },
        {
          "Value": "504",
          "Name": "GatewayTimeout"
        },
        {
          "Value": "505",
          "Name": "HttpVersionNotSupported"
        }
      ],
      "Name": "Windows.Web.WebErrorStatus"
    }
  ],
  "Delegates": [
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "IBackgroundTaskInstance"
        },
        {
          "Name": "reason",
          "Type": "BackgroundTaskCancellationReason"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.BackgroundTaskCanceledEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "BackgroundTaskRegistration"
        },
        {
          "Name": "args",
          "Type": "BackgroundTaskProgressEventArgs"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.BackgroundTaskProgressEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "BackgroundTaskRegistration"
        },
        {
          "Name": "args",
          "Type": "BackgroundTaskCompletedEventArgs"
        }
      ],
      "Name": "Windows.ApplicationModel.Background.BackgroundTaskCompletedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "request",
          "Type": "DataProviderRequest"
        }
      ],
      "Name": "Windows.ApplicationModel.DataTransfer.DataProviderHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        }
      ],
      "Name": "Windows.Graphics.Display.DisplayPropertiesEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "command",
          "Type": "IUICommand"
        }
      ],
      "Name": "Windows.UI.Popups.UICommandInvokedHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "stream",
          "Type": "StreamedFileDataRequest"
        }
      ],
      "Name": "Windows.Storage.StreamedFileDataRequestedHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "timer",
          "Type": "ThreadPoolTimer"
        }
      ],
      "Name": "Windows.System.Threading.TimerElapsedHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "timer",
          "Type": "ThreadPoolTimer"
        }
      ],
      "Name": "Windows.System.Threading.TimerDestroyedHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "operation",
          "Type": "IAsyncAction"
        }
      ],
      "Name": "Windows.System.Threading.WorkItemHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "signalNotifier",
          "Type": "SignalNotifier"
        },
        {
          "Name": "timedOut",
          "Type": "Boolean"
        }
      ],
      "Name": "Windows.System.Threading.Core.SignalHandler"
    },
    {
      "ReturnType": "Void",
      "Name": "Windows.ApplicationModel.Store.LicenseChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "SmartCardProvisioning"
        },
        {
          "Name": "request",
          "Type": "SmartCardPinResetRequest"
        }
      ],
      "Name": "Windows.Devices.SmartCards.SmartCardPinResetHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "asyncInfo",
          "Type": "IAsyncAction"
        },
        {
          "Name": "asyncStatus",
          "Type": "AsyncStatus"
        }
      ],
      "Name": "Windows.Foundation.AsyncActionCompletedHandler"
    },
    {
      "ReturnType": "Void",
      "Name": "Windows.Foundation.DeferralCompletedHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "IObservableVector<T>"
        },
        {
          "Name": "event",
          "Type": "IVectorChangedEventArgs"
        }
      ],
      "Name": "Windows.Foundation.Collections.VectorChangedEventHandler<T>"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "IObservableMap<K,V>"
        },
        {
          "Name": "event",
          "Type": "IMapChangedEventArgs<K>"
        }
      ],
      "Name": "Windows.Foundation.Collections.MapChangedEventHandler<K,V>"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "asyncInfo",
          "Type": "IAsyncOperationWithProgress<TResult,TProgress>"
        },
        {
          "Name": "asyncStatus",
          "Type": "AsyncStatus"
        }
      ],
      "Name": "Windows.Foundation.AsyncOperationWithProgressCompletedHandler<TResult,TProgress>"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "asyncInfo",
          "Type": "IAsyncOperation<TResult>"
        },
        {
          "Name": "asyncStatus",
          "Type": "AsyncStatus"
        }
      ],
      "Name": "Windows.Foundation.AsyncOperationCompletedHandler<TResult>"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "asyncInfo",
          "Type": "IAsyncActionWithProgress<TProgress>"
        },
        {
          "Name": "asyncStatus",
          "Type": "AsyncStatus"
        }
      ],
      "Name": "Windows.Foundation.AsyncActionWithProgressCompletedHandler<TProgress>"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "asyncInfo",
          "Type": "IAsyncOperationWithProgress<TResult,TProgress>"
        },
        {
          "Name": "progressInfo",
          "Type": "TProgress"
        }
      ],
      "Name": "Windows.Foundation.AsyncOperationProgressHandler<TResult,TProgress>"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "asyncInfo",
          "Type": "IAsyncActionWithProgress<TProgress>"
        },
        {
          "Name": "progressInfo",
          "Type": "TProgress"
        }
      ],
      "Name": "Windows.Foundation.AsyncActionProgressHandler<TProgress>"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "TSender"
        },
        {
          "Name": "args",
          "Type": "TResult"
        }
      ],
      "Name": "Windows.Foundation.TypedEventHandler<TSender,TResult>"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "precedingWords",
          "Type": "IEnumerable<WordSegment>"
        },
        {
          "Name": "words",
          "Type": "IEnumerable<WordSegment>"
        }
      ],
      "Name": "Windows.Data.Text.WordSegmentsTokenizingHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "precedingWords",
          "Type": "IEnumerable<SelectableWordSegment>"
        },
        {
          "Name": "words",
          "Type": "IEnumerable<SelectableWordSegment>"
        }
      ],
      "Name": "Windows.Data.Text.SelectableWordSegmentsTokenizingHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "args",
          "Type": "PrintTaskSourceRequestedArgs"
        }
      ],
      "Name": "Windows.Graphics.Printing.PrintTaskSourceRequestedHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "MediaCapture"
        },
        {
          "Name": "errorEventArgs",
          "Type": "MediaCaptureFailedEventArgs"
        }
      ],
      "Name": "Windows.Media.Capture.MediaCaptureFailedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "MediaCapture"
        }
      ],
      "Name": "Windows.Media.Capture.RecordLimitationExceededEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "MediaProtectionManager"
        },
        {
          "Name": "e",
          "Type": "ServiceRequestedEventArgs"
        }
      ],
      "Name": "Windows.Media.Protection.ServiceRequestedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "MediaProtectionManager"
        }
      ],
      "Name": "Windows.Media.Protection.RebootNeededEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "MediaProtectionManager"
        },
        {
          "Name": "e",
          "Type": "ComponentLoadFailedEventArgs"
        }
      ],
      "Name": "Windows.Media.Protection.ComponentLoadFailedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "ProximityDevice"
        },
        {
          "Name": "message",
          "Type": "ProximityMessage"
        }
      ],
      "Name": "Windows.Networking.Proximity.MessageReceivedHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "ProximityDevice"
        },
        {
          "Name": "messageId",
          "Type": "Int64"
        }
      ],
      "Name": "Windows.Networking.Proximity.MessageTransmittedHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "ProximityDevice"
        }
      ],
      "Name": "Windows.Networking.Proximity.DeviceArrivedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "ProximityDevice"
        }
      ],
      "Name": "Windows.Networking.Proximity.DeviceDepartedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkStatusChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "setVersionRequest",
          "Type": "SetVersionRequest"
        }
      ],
      "Name": "Windows.Storage.ApplicationDataSetVersionHandler"
    },
    {
      "ReturnType": "Void",
      "Name": "Windows.UI.Core.DispatchedHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "e",
          "Type": "IdleDispatchedHandlerArgs"
        }
      ],
      "Name": "Windows.UI.Core.IdleDispatchedHandler"
    },
    {
      "ReturnType": "Void",
      "Name": "Windows.UI.WebUI.Core.MenuOpenedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Name": "Windows.UI.WebUI.Core.MenuClosedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "eventArgs",
          "Type": "WebUICommandBarSizeChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.WebUI.Core.SizeChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "eventArgs",
          "Type": "IActivatedEventArgs"
        }
      ],
      "Name": "Windows.UI.WebUI.ActivatedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        }
      ],
      "Name": "Windows.UI.WebUI.ResumingEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "ISuspendingEventArgs"
        }
      ],
      "Name": "Windows.UI.WebUI.SuspendingEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "IWebUINavigatedEventArgs"
        }
      ],
      "Name": "Windows.UI.WebUI.NavigatedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "BackClickEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.BackClickEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "CleanUpVirtualizedItemEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.CleanUpVirtualizedItemEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "ContextMenuEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "DragItemsStartingEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.DragItemsStartingEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "ItemClickEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ItemClickEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "NotifyEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.NotifyEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "SelectionChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.SelectionChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "SemanticZoomViewChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.SemanticZoomViewChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "TextChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.TextChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "TextControlPasteEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.TextControlPasteEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "DragCompletedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.DragCompletedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "DragDeltaEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.DragDeltaEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "DragStartedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.DragStartedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "ItemsChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ItemsChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "RangeBaseValueChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "ScrollEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.Primitives.ScrollEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "AddPagesEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Printing.AddPagesEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "GetPreviewPageEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Printing.GetPreviewPageEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "PaginateEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Printing.PaginateEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "NavigationEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Navigation.LoadCompletedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "NavigationEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Navigation.NavigatedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "NavigatingCancelEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "NavigationFailedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Navigation.NavigationFailedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "NavigationEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "vector",
          "Type": "IBindableObservableVector"
        },
        {
          "Name": "e",
          "Type": "Object"
        }
      ],
      "Name": "Windows.UI.Xaml.Interop.BindableVectorChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "CalendarView"
        },
        {
          "Name": "e",
          "Type": "CalendarViewDayItemChangingEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.CalendarViewDayItemChangingEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "HubSectionHeaderClickEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.HubSectionHeaderClickEventHandler"
    },
    {
      "ReturnType": "String",
      "Parameters": [
        {
          "Name": "item",
          "Type": "Object"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ListViewItemToKeyHandler"
    },
    {
      "ReturnType": "IAsyncOperation<Object>",
      "Parameters": [
        {
          "Name": "key",
          "Type": "String"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.ListViewKeyToItemHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "SectionsInViewChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.SectionsInViewChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "WebViewNavigationFailedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Controls.WebViewNavigationFailedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "p",
          "Type": "ApplicationInitializationCallbackParams"
        }
      ],
      "Name": "Windows.UI.Xaml.ApplicationInitializationCallback"
    },
    {
      "ReturnType": "Object",
      "Name": "Windows.UI.Xaml.CreateDefaultValueCallback"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "DependencyObject"
        },
        {
          "Name": "dp",
          "Type": "DependencyProperty"
        }
      ],
      "Name": "Windows.UI.Xaml.DependencyPropertyChangedCallback"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "DependencyPropertyChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.DependencyPropertyChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "DragEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.DragEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "ExceptionRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.ExceptionRoutedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "d",
          "Type": "DependencyObject"
        },
        {
          "Name": "e",
          "Type": "DependencyPropertyChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.PropertyChangedCallback"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "RoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.RoutedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "SizeChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.SizeChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "SuspendingEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.SuspendingEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "UnhandledExceptionEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.UnhandledExceptionEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "VisualStateChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.VisualStateChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "WindowActivatedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.WindowActivatedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "CoreWindowEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.WindowClosedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "WindowSizeChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.WindowSizeChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "VisibilityChangedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.WindowVisibilityChangedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "RateChangedRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.RateChangedRoutedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "TimelineMarkerRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.TimelineMarkerRoutedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "DoubleTappedRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.DoubleTappedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "HoldingRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.HoldingEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "KeyRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.KeyEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "ManipulationCompletedRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.ManipulationCompletedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "ManipulationDeltaRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.ManipulationDeltaEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "ManipulationInertiaStartingRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "ManipulationStartedRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.ManipulationStartedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "ManipulationStartingRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.ManipulationStartingEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "PointerRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.PointerEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "RightTappedRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.RightTappedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "TappedRoutedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Input.TappedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "DownloadProgressEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.Imaging.DownloadProgressEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "CurrentChangingEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Data.CurrentChangingEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "BindingFailedEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.BindingFailedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "TimedTextCueEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.TimedTextCueEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        },
        {
          "Name": "e",
          "Type": "TimedTextErrorEventArgs"
        }
      ],
      "Name": "Windows.UI.Xaml.Media.TimedTextErrorEventHandler"
    }
  ]
}