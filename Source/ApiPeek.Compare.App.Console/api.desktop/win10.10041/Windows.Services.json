{
  "Name": "Windows.Services, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime",
  "Classes": [
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Maneuver",
          "IsGet": true,
          "Name": "AfterNextManeuver"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "AfterNextManeuverDistance"
        },
        {
          "Type": "AudioEvents",
          "IsGet": true,
          "IsSet": true,
          "Name": "AudioOutputEvents"
        },
        {
          "Type": "MapMatchedLocation",
          "IsGet": true,
          "Name": "CurrentLocation"
        },
        {
          "Type": "Geopoint",
          "IsGet": true,
          "Name": "CurrentPosition"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "DestinationDistance"
        },
        {
          "Type": "UnitSystem",
          "IsGet": true,
          "IsSet": true,
          "Name": "DistanceUnit"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "ElapsedDistance"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "ElapsedTime"
        },
        {
          "Type": "GuidanceMode",
          "IsGet": true,
          "Name": "GuidanceMode"
        },
        {
          "Type": "Maneuver",
          "IsGet": true,
          "Name": "NextManeuver"
        },
        {
          "Type": "Int32",
          "IsGet": true,
          "Name": "NextManeuverDistance"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RoadName"
        },
        {
          "Type": "GuidanceRoute",
          "IsGet": true,
          "Name": "Route"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "TimeToArrival"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Clear"
        },
        {
          "IsStatic": true,
          "ReturnType": "Guidance",
          "Name": "Create"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "MapRoute"
            }
          ],
          "Name": "Navigate"
        },
        {
          "ReturnType": "Void",
          "Name": "Pause"
        },
        {
          "ReturnType": "Void",
          "Name": "Repeat"
        },
        {
          "ReturnType": "Void",
          "Name": "Resume"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "skinId",
              "Type": "UInt32"
            },
            {
              "Name": "voicesDirectory",
              "Type": "String"
            }
          ],
          "Name": "SetVoiceSkin"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "MapRoute"
            },
            {
              "Name": "speed",
              "Type": "UInt32"
            }
          ],
          "Name": "Simulate"
        },
        {
          "ReturnType": "Void",
          "Name": "StartTracking"
        },
        {
          "ReturnType": "Void",
          "Name": "Stop"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "userLocation",
              "Type": "Geocoordinate"
            },
            {
              "Name": "positionOverride",
              "Type": "BasicGeoposition"
            }
          ],
          "Name": "UpdateUserLocation"
        },
        {
          "ReturnType": "Void",
          "Name": "UserLocationClear"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "userLocation",
              "Type": "Geocoordinate"
            }
          ],
          "Name": "UserLocationUpdate"
        }
      ],
      "Events": [
        {
          "Type": "EmptyEventHandler",
          "Name": "DestinationReachedEvent"
        },
        {
          "Type": "EmptyEventHandler",
          "Name": "GpsLostEvent"
        },
        {
          "Type": "EmptyEventHandler",
          "Name": "GpsRestoredEvent"
        },
        {
          "Type": "EmptyEventHandler",
          "Name": "GuidanceUpdatedEvent"
        },
        {
          "Type": "TypedEventHandler<Guidance,ManeuverAvailableArgs>",
          "Name": "ManeuverAvailableEvent"
        },
        {
          "Type": "EmptyEventHandler",
          "Name": "RerouteBeginEvent"
        },
        {
          "Type": "EmptyEventHandler",
          "Name": "RerouteEndEvent"
        },
        {
          "Type": "EmptyEventHandler",
          "Name": "RerouteFailedEvent"
        }
      ],
      "Name": "Windows.Services.Maps.Guidance.Guidance"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "GeoboundingBox",
          "IsGet": true,
          "Name": "BoundingBox"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Duration"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "Length"
        },
        {
          "Type": "IList<Maneuver>",
          "IsGet": true,
          "Name": "Maneuvers"
        },
        {
          "Type": "Geopath",
          "IsGet": true,
          "Name": "Path"
        },
        {
          "Type": "IList<RoadElement>",
          "IsGet": true,
          "Name": "RoadElements"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "MapRoute",
          "Name": "ConvertToMapRoute"
        }
      ],
      "Events": [],
      "Name": "Windows.Services.Maps.Guidance.GuidanceRoute"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "DistanceFromPreviousManeuver"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "DistanceFromStart"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "EndAngle"
        },
        {
          "Type": "IconId",
          "IsGet": true,
          "Name": "IconId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "InstructionText"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NextRoadName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "NextRouteName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RoadName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RouteName"
        },
        {
          "Type": "Signpost",
          "IsGet": true,
          "Name": "Signpost"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "StartAngle"
        },
        {
          "Type": "Geopoint",
          "IsGet": true,
          "Name": "StartLocation"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.Guidance.Maneuver"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Maneuver",
          "IsGet": true,
          "Name": "Maneuver"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.Guidance.ManeuverAvailableArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "Heading"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsOnStreet"
        },
        {
          "Type": "Geopoint",
          "IsGet": true,
          "Name": "Location"
        },
        {
          "Type": "RoadElement",
          "IsGet": true,
          "Name": "Road"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "Speed"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.Guidance.MapMatchedLocation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true,
          "Name": "Enabled"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "ClearLocalData"
        },
        {
          "IsStatic": true,
          "ReturnType": "MapSensor",
          "Name": "Create"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "type",
              "Type": "NetworkType"
            }
          ],
          "Name": "SetConnectionType"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "speed",
              "Type": "Double"
            }
          ],
          "Name": "SetSpeedTrigger"
        },
        {
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "uploadFrequency",
              "Type": "UInt16"
            }
          ],
          "Name": "SetUploadFrequency"
        }
      ],
      "Events": [],
      "Name": "Windows.Services.Maps.Guidance.MapSensor"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Id"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsHighway"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsTollroad"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsTunnel"
        },
        {
          "Type": "Geopath",
          "IsGet": true,
          "Name": "Path"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RoadName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RouteName"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "SpeedLimit"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "TravelTime"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.Guidance.RoadElement"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Color",
          "IsGet": true,
          "Name": "BackgroundColor"
        },
        {
          "Type": "IList<String>",
          "IsGet": true,
          "Name": "ExitDirections"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ExitNumber"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ExitText"
        },
        {
          "Type": "Color",
          "IsGet": true,
          "Name": "ForegroundColor"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.Guidance.Signpost"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "RequestState",
          "IsGet": true,
          "Name": "State"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Void",
          "Name": "Clear"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "center",
              "Type": "Geopoint"
            }
          ],
          "Name": "GetAvailability"
        },
        {
          "ReturnType": "Void",
          "Name": "Init"
        },
        {
          "ReturnType": "Void",
          "Name": "Poll"
        },
        {
          "ReturnType": "IList<TrafficEvent>",
          "Parameters": [
            {
              "Name": "roadElement",
              "Type": "RoadElement"
            },
            {
              "Name": "direction",
              "Type": "DrivingDirection"
            }
          ],
          "Name": "RelevantTrafficEvents"
        },
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "vicinities",
              "Type": "IList<Geocircle>"
            }
          ],
          "Name": "RequestTraffic"
        }
      ],
      "Events": [
        {
          "Type": "TrafficEventHandler",
          "Name": "RequestStateEvent"
        }
      ],
      "Name": "Windows.Services.Maps.Guidance.Traffic"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "EstimatedSpeedLimit"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "Name": "SpeedLimit"
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "route",
              "Type": "GuidanceRoute"
            }
          ],
          "Name": "IsOnRoute"
        }
      ],
      "Events": [],
      "Name": "Windows.Services.Maps.Guidance.TrafficEvent"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MapAddress",
          "IsGet": true,
          "Name": "Address"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Description"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "EntityId"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "EntityIdType"
        },
        {
          "Type": "Geopoint",
          "IsGet": true,
          "Name": "Location"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "PhoneNumber"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.Local.LocalLocation"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<LocalLocationFinderResult>",
          "Parameters": [
            {
              "Name": "query",
              "Type": "String"
            },
            {
              "Name": "searchAreaNorthWestCorner",
              "Type": "Geopoint"
            },
            {
              "Name": "searchAreaSouthEastCorner",
              "Type": "Geopoint"
            },
            {
              "Name": "category",
              "Type": "String"
            },
            {
              "Name": "maxResults",
              "Type": "UInt32"
            }
          ],
          "Name": "FindLocalLocationsAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Services.Maps.Local.LocalLocationFinder"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<LocalLocation>",
          "IsGet": true,
          "Name": "LocalLocations"
        },
        {
          "Type": "LocalLocationFinderStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.Local.LocalLocationFinderResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsGet": true,
          "Name": "BuildingFloor"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "BuildingName"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "BuildingRoom"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "BuildingWing"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Continent"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Country"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "CountryCode"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "District"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "FormattedAddress"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Neighborhood"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "PostCode"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Region"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "RegionCode"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Street"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "StreetNumber"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Town"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.MapAddress"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "MapAddress",
          "IsGet": true,
          "Name": "Address"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "Description"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "DisplayName"
        },
        {
          "Type": "Geopoint",
          "IsGet": true,
          "Name": "Point"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.MapLocation"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapLocationFinderResult>",
          "Parameters": [
            {
              "Name": "searchText",
              "Type": "String"
            },
            {
              "Name": "referencePoint",
              "Type": "Geopoint"
            }
          ],
          "Name": "FindLocationsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapLocationFinderResult>",
          "Parameters": [
            {
              "Name": "searchText",
              "Type": "String"
            },
            {
              "Name": "referencePoint",
              "Type": "Geopoint"
            },
            {
              "Name": "maxCount",
              "Type": "UInt32"
            }
          ],
          "Name": "FindLocationsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapLocationFinderResult>",
          "Parameters": [
            {
              "Name": "queryPoint",
              "Type": "Geopoint"
            }
          ],
          "Name": "FindLocationsAtAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Services.Maps.MapLocationFinder"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<MapLocation>",
          "IsGet": true,
          "Name": "Locations"
        },
        {
          "Type": "MapLocationFinderStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.MapLocationFinderResult"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "ShowDownloadedMapsUI"
        },
        {
          "IsStatic": true,
          "ReturnType": "Void",
          "Name": "ShowMapsUpdateUI"
        }
      ],
      "Events": [],
      "Name": "Windows.Services.Maps.MapManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "GeoboundingBox",
          "IsGet": true,
          "Name": "BoundingBox"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "EstimatedDuration"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "HasBlockedRoads"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsGuidanceRoute"
        },
        {
          "Type": "Boolean",
          "IsGet": true,
          "Name": "IsTrafficBased"
        },
        {
          "Type": "IReadOnlyList<MapRouteLeg>",
          "IsGet": true,
          "Name": "Legs"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "LengthInMeters"
        },
        {
          "Type": "Geopath",
          "IsGet": true,
          "Name": "Path"
        },
        {
          "Type": "MapRouteRestrictions",
          "IsGet": true,
          "Name": "ViolatedRestrictions"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.MapRoute"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "IsSet": true,
          "Name": "Heading"
        },
        {
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true,
          "Name": "RequestedAlternateRouteCount"
        },
        {
          "Type": "MapRouteOptimization",
          "IsGet": true,
          "IsSet": true,
          "Name": "RouteOptimization"
        },
        {
          "Type": "MapRouteRestrictions",
          "IsGet": true,
          "IsSet": true,
          "Name": "RouteRestrictions"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.MapRouteDrivingOptions"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "startPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "endPoint",
              "Type": "Geopoint"
            }
          ],
          "Name": "GetDrivingRouteAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "startPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "endPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "optimization",
              "Type": "MapRouteOptimization"
            }
          ],
          "Name": "GetDrivingRouteAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "startPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "endPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "optimization",
              "Type": "MapRouteOptimization"
            },
            {
              "Name": "restrictions",
              "Type": "MapRouteRestrictions"
            }
          ],
          "Name": "GetDrivingRouteAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "startPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "endPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "optimization",
              "Type": "MapRouteOptimization"
            },
            {
              "Name": "restrictions",
              "Type": "MapRouteRestrictions"
            },
            {
              "Name": "headingInDegrees",
              "Type": "Double"
            }
          ],
          "Name": "GetDrivingRouteAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "wayPoints",
              "Type": "IEnumerable<Geopoint>"
            }
          ],
          "Name": "GetDrivingRouteFromWaypointsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "wayPoints",
              "Type": "IEnumerable<Geopoint>"
            },
            {
              "Name": "optimization",
              "Type": "MapRouteOptimization"
            }
          ],
          "Name": "GetDrivingRouteFromWaypointsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "wayPoints",
              "Type": "IEnumerable<Geopoint>"
            },
            {
              "Name": "optimization",
              "Type": "MapRouteOptimization"
            },
            {
              "Name": "restrictions",
              "Type": "MapRouteRestrictions"
            }
          ],
          "Name": "GetDrivingRouteFromWaypointsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "wayPoints",
              "Type": "IEnumerable<Geopoint>"
            },
            {
              "Name": "optimization",
              "Type": "MapRouteOptimization"
            },
            {
              "Name": "restrictions",
              "Type": "MapRouteRestrictions"
            },
            {
              "Name": "headingInDegrees",
              "Type": "Double"
            }
          ],
          "Name": "GetDrivingRouteFromWaypointsAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "startPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "endPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "desiredOptions",
              "Type": "MapRouteDrivingOptions"
            }
          ],
          "Name": "GetDrivingRoutesAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "startPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "endPoint",
              "Type": "Geopoint"
            }
          ],
          "Name": "GetWalkingRouteAsync"
        },
        {
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "wayPoints",
              "Type": "IEnumerable<Geopoint>"
            }
          ],
          "Name": "GetWalkingRouteFromWaypointsAsync"
        }
      ],
      "Events": [],
      "Name": "Windows.Services.Maps.MapRouteFinder"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "IReadOnlyList<MapRoute>",
          "IsGet": true,
          "Name": "AlternateRoutes"
        },
        {
          "Type": "MapRoute",
          "IsGet": true,
          "Name": "Route"
        },
        {
          "Type": "MapRouteFinderStatus",
          "IsGet": true,
          "Name": "Status"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.MapRouteFinderResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "GeoboundingBox",
          "IsGet": true,
          "Name": "BoundingBox"
        },
        {
          "Type": "TimeSpan",
          "IsGet": true,
          "Name": "EstimatedDuration"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "LengthInMeters"
        },
        {
          "Type": "IReadOnlyList<MapRouteManeuver>",
          "IsGet": true,
          "Name": "Maneuvers"
        },
        {
          "Type": "Geopath",
          "IsGet": true,
          "Name": "Path"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.MapRouteLeg"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "EndHeading"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "ExitNumber"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "InstructionText"
        },
        {
          "Type": "MapRouteManeuverKind",
          "IsGet": true,
          "Name": "Kind"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "LengthInMeters"
        },
        {
          "Type": "MapManeuverNotices",
          "IsGet": true,
          "Name": "ManeuverNotices"
        },
        {
          "Type": "Double",
          "IsGet": true,
          "Name": "StartHeading"
        },
        {
          "Type": "Geopoint",
          "IsGet": true,
          "Name": "StartingPoint"
        },
        {
          "Type": "String",
          "IsGet": true,
          "Name": "StreetName"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.MapRouteManeuver"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true,
          "Name": "ServiceToken"
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Services.Maps.MapService"
    }
  ],
  "Structs": [],
  "Interfaces": [],
  "Enums": [
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Maneuver"
        },
        {
          "Value": "2",
          "Name": "Route"
        },
        {
          "Value": "4",
          "Name": "GPS"
        },
        {
          "Value": "8",
          "Name": "SpeedLimit"
        },
        {
          "Value": "16",
          "Name": "Traffic"
        },
        {
          "Value": "32",
          "Name": "SafetySpot"
        }
      ],
      "Name": "Windows.Services.Maps.Guidance.AudioEvents"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Both"
        },
        {
          "Value": "1",
          "Name": "Forward"
        },
        {
          "Value": "2",
          "Name": "Backward"
        }
      ],
      "Name": "Windows.Services.Maps.Guidance.DrivingDirection"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Simulation"
        },
        {
          "Value": "2",
          "Name": "Navigation"
        },
        {
          "Value": "3",
          "Name": "Tracking"
        }
      ],
      "Name": "Windows.Services.Maps.Guidance.GuidanceMode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Undefined"
        },
        {
          "Value": "1",
          "Name": "GoStraight"
        },
        {
          "Value": "2",
          "Name": "UturnRight"
        },
        {
          "Value": "3",
          "Name": "UturnLeft"
        },
        {
          "Value": "4",
          "Name": "KeepRight"
        },
        {
          "Value": "5",
          "Name": "LightRight"
        },
        {
          "Value": "6",
          "Name": "QuiteRight"
        },
        {
          "Value": "7",
          "Name": "HeavyRight"
        },
        {
          "Value": "8",
          "Name": "KeepMiddle"
        },
        {
          "Value": "9",
          "Name": "KeepLeft"
        },
        {
          "Value": "10",
          "Name": "LightLeft"
        },
        {
          "Value": "11",
          "Name": "QuiteLeft"
        },
        {
          "Value": "12",
          "Name": "HeavyLeft"
        },
        {
          "Value": "13",
          "Name": "EnterMotorwayRightLane"
        },
        {
          "Value": "14",
          "Name": "EnterMotorwayLeftLane"
        },
        {
          "Value": "15",
          "Name": "LeaveMotorwayRightLane"
        },
        {
          "Value": "16",
          "Name": "LeaveMotorwayLeftLane"
        },
        {
          "Value": "17",
          "Name": "MotorwayKeepRight"
        },
        {
          "Value": "18",
          "Name": "MotorwayKeepLeft"
        },
        {
          "Value": "19",
          "Name": "RoundaboutRightHand1"
        },
        {
          "Value": "20",
          "Name": "RoundaboutRightHand2"
        },
        {
          "Value": "21",
          "Name": "RoundaboutRightHand3"
        },
        {
          "Value": "22",
          "Name": "RoundaboutRightHand4"
        },
        {
          "Value": "23",
          "Name": "RoundaboutRightHand5"
        },
        {
          "Value": "24",
          "Name": "RoundaboutRightHand6"
        },
        {
          "Value": "25",
          "Name": "RoundaboutRightHand7"
        },
        {
          "Value": "26",
          "Name": "RoundaboutRightHand8"
        },
        {
          "Value": "27",
          "Name": "RoundaboutRightHand9"
        },
        {
          "Value": "28",
          "Name": "RoundaboutRightHand10"
        },
        {
          "Value": "29",
          "Name": "RoundaboutRightHand11"
        },
        {
          "Value": "30",
          "Name": "RoundaboutRightHand12"
        },
        {
          "Value": "31",
          "Name": "RoundaboutLeftHand1"
        },
        {
          "Value": "32",
          "Name": "RoundaboutLeftHand2"
        },
        {
          "Value": "33",
          "Name": "RoundaboutLeftHand3"
        },
        {
          "Value": "34",
          "Name": "RoundaboutLeftHand4"
        },
        {
          "Value": "35",
          "Name": "RoundaboutLeftHand5"
        },
        {
          "Value": "36",
          "Name": "RoundaboutLeftHand6"
        },
        {
          "Value": "37",
          "Name": "RoundaboutLeftHand7"
        },
        {
          "Value": "38",
          "Name": "RoundaboutLeftHand8"
        },
        {
          "Value": "39",
          "Name": "RoundaboutLeftHand9"
        },
        {
          "Value": "40",
          "Name": "RoundaboutLeftHand10"
        },
        {
          "Value": "41",
          "Name": "RoundaboutLeftHand11"
        },
        {
          "Value": "42",
          "Name": "RoundaboutLeftHand12"
        },
        {
          "Value": "43",
          "Name": "Start"
        },
        {
          "Value": "44",
          "Name": "End"
        },
        {
          "Value": "45",
          "Name": "Ferry"
        },
        {
          "Value": "46",
          "Name": "PassStation"
        },
        {
          "Value": "47",
          "Name": "HeadTo"
        },
        {
          "Value": "48",
          "Name": "BearLeftThenBearLeft"
        },
        {
          "Value": "49",
          "Name": "BearLeftThenBearRight"
        },
        {
          "Value": "50",
          "Name": "BearLeftThenTurnLeft"
        },
        {
          "Value": "51",
          "Name": "BearLeftThenTurnRight"
        },
        {
          "Value": "52",
          "Name": "BearRightThenBearLeft"
        },
        {
          "Value": "53",
          "Name": "BearRightThenBearRight"
        },
        {
          "Value": "54",
          "Name": "BearRightThenTurnLeft"
        },
        {
          "Value": "55",
          "Name": "BearRightThenTurnRight"
        },
        {
          "Value": "56",
          "Name": "BearThenKeep"
        },
        {
          "Value": "57",
          "Name": "BearThenMerge"
        },
        {
          "Value": "58",
          "Name": "Continue"
        },
        {
          "Value": "59",
          "Name": "DepartIntermediateStopReturning"
        },
        {
          "Value": "60",
          "Name": "EnterRoundabout"
        },
        {
          "Value": "61",
          "Name": "EnterThenExitRoundabout"
        },
        {
          "Value": "62",
          "Name": "ExitRoundabout"
        },
        {
          "Value": "63",
          "Name": "KeepOnRampLeft"
        },
        {
          "Value": "64",
          "Name": "KeepOnRampRight"
        },
        {
          "Value": "65",
          "Name": "KeepOnRampStraight"
        },
        {
          "Value": "66",
          "Name": "KeepToStayLeft"
        },
        {
          "Value": "67",
          "Name": "KeepToStayRight"
        },
        {
          "Value": "68",
          "Name": "Merge"
        },
        {
          "Value": "69",
          "Name": "RampToHighwayStraight"
        },
        {
          "Value": "70",
          "Name": "RoadNameChange"
        },
        {
          "Value": "71",
          "Name": "Take"
        },
        {
          "Value": "72",
          "Name": "TakeRampStraight"
        },
        {
          "Value": "73",
          "Name": "TakeTransit"
        },
        {
          "Value": "74",
          "Name": "Transfer"
        },
        {
          "Value": "75",
          "Name": "TransitArrive"
        },
        {
          "Value": "76",
          "Name": "TransitDepart"
        },
        {
          "Value": "77",
          "Name": "TurnBack"
        },
        {
          "Value": "78",
          "Name": "TurnLeftThenBearLeft"
        },
        {
          "Value": "79",
          "Name": "TurnLeftThenBearRight"
        },
        {
          "Value": "80",
          "Name": "TurnLeftThenTurnLeft"
        },
        {
          "Value": "81",
          "Name": "TurnLeftThenTurnRight"
        },
        {
          "Value": "82",
          "Name": "TurnRightThenBearLeft"
        },
        {
          "Value": "83",
          "Name": "TurnRightThenBearRight"
        },
        {
          "Value": "84",
          "Name": "TurnRightThenTurnLeft"
        },
        {
          "Value": "85",
          "Name": "TurnRightThenTurnRight"
        },
        {
          "Value": "86",
          "Name": "TurnThenMerge"
        },
        {
          "Value": "87",
          "Name": "TurnToStayLeft"
        },
        {
          "Value": "88",
          "Name": "TurnToStayRight"
        },
        {
          "Value": "89",
          "Name": "Unknown"
        },
        {
          "Value": "90",
          "Name": "Uturn"
        },
        {
          "Value": "91",
          "Name": "Wait"
        },
        {
          "Value": "92",
          "Name": "Walk"
        }
      ],
      "Name": "Windows.Services.Maps.Guidance.IconId"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "WiFi"
        },
        {
          "Value": "1",
          "Name": "Cellular"
        },
        {
          "Value": "2",
          "Name": "Other"
        }
      ],
      "Name": "Windows.Services.Maps.Guidance.NetworkType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Error"
        },
        {
          "Value": "1",
          "Name": "Idle"
        },
        {
          "Value": "2",
          "Name": "Done"
        },
        {
          "Value": "3",
          "Name": "Busy"
        },
        {
          "Value": "4",
          "Name": "Decoding"
        },
        {
          "Value": "5",
          "Name": "Requesting"
        }
      ],
      "Name": "Windows.Services.Maps.Guidance.RequestState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Metric"
        },
        {
          "Value": "1",
          "Name": "Imperial"
        },
        {
          "Value": "2",
          "Name": "ImperialUnitedStates"
        }
      ],
      "Name": "Windows.Services.Maps.Guidance.UnitSystem"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "UnknownError"
        },
        {
          "Value": "2",
          "Name": "InvalidCredentials"
        },
        {
          "Value": "3",
          "Name": "InvalidArgument"
        },
        {
          "Value": "4",
          "Name": "NetworkFailure"
        },
        {
          "Value": "5",
          "Name": "NotSupported"
        },
        {
          "Value": "6",
          "Name": "ProxyAuthenticationFailed"
        }
      ],
      "Name": "Windows.Services.Maps.Local.LocalLocationFinderStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "UnknownError"
        },
        {
          "Value": "2",
          "Name": "InvalidCredentials"
        },
        {
          "Value": "3",
          "Name": "BadLocation"
        },
        {
          "Value": "4",
          "Name": "IndexFailure"
        },
        {
          "Value": "5",
          "Name": "NetworkFailure"
        },
        {
          "Value": "6",
          "Name": "NotSupported"
        }
      ],
      "Name": "Windows.Services.Maps.MapLocationFinderStatus"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Toll"
        },
        {
          "Value": "2",
          "Name": "Unpaved"
        }
      ],
      "Name": "Windows.Services.Maps.MapManeuverNotices"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Success"
        },
        {
          "Value": "1",
          "Name": "UnknownError"
        },
        {
          "Value": "2",
          "Name": "InvalidCredentials"
        },
        {
          "Value": "3",
          "Name": "NoRouteFound"
        },
        {
          "Value": "4",
          "Name": "NoRouteFoundWithGivenOptions"
        },
        {
          "Value": "5",
          "Name": "StartPointNotFound"
        },
        {
          "Value": "6",
          "Name": "EndPointNotFound"
        },
        {
          "Value": "7",
          "Name": "NoPedestrianRouteFound"
        },
        {
          "Value": "8",
          "Name": "NetworkFailure"
        },
        {
          "Value": "9",
          "Name": "NotSupported"
        }
      ],
      "Name": "Windows.Services.Maps.MapRouteFinderStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Start"
        },
        {
          "Value": "2",
          "Name": "Stopover"
        },
        {
          "Value": "3",
          "Name": "StopoverResume"
        },
        {
          "Value": "4",
          "Name": "End"
        },
        {
          "Value": "5",
          "Name": "GoStraight"
        },
        {
          "Value": "6",
          "Name": "UTurnLeft"
        },
        {
          "Value": "7",
          "Name": "UTurnRight"
        },
        {
          "Value": "8",
          "Name": "TurnKeepLeft"
        },
        {
          "Value": "9",
          "Name": "TurnKeepRight"
        },
        {
          "Value": "10",
          "Name": "TurnLightLeft"
        },
        {
          "Value": "11",
          "Name": "TurnLightRight"
        },
        {
          "Value": "12",
          "Name": "TurnLeft"
        },
        {
          "Value": "13",
          "Name": "TurnRight"
        },
        {
          "Value": "14",
          "Name": "TurnHardLeft"
        },
        {
          "Value": "15",
          "Name": "TurnHardRight"
        },
        {
          "Value": "16",
          "Name": "FreewayEnterLeft"
        },
        {
          "Value": "17",
          "Name": "FreewayEnterRight"
        },
        {
          "Value": "18",
          "Name": "FreewayLeaveLeft"
        },
        {
          "Value": "19",
          "Name": "FreewayLeaveRight"
        },
        {
          "Value": "20",
          "Name": "FreewayContinueLeft"
        },
        {
          "Value": "21",
          "Name": "FreewayContinueRight"
        },
        {
          "Value": "22",
          "Name": "TrafficCircleLeft"
        },
        {
          "Value": "23",
          "Name": "TrafficCircleRight"
        },
        {
          "Value": "24",
          "Name": "TakeFerry"
        }
      ],
      "Name": "Windows.Services.Maps.MapRouteManeuverKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Value": "0",
          "Name": "Time"
        },
        {
          "Value": "1",
          "Name": "Distance"
        },
        {
          "Value": "2",
          "Name": "TimeWithTraffic"
        }
      ],
      "Name": "Windows.Services.Maps.MapRouteOptimization"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Value": "0",
          "Name": "None"
        },
        {
          "Value": "1",
          "Name": "Highways"
        },
        {
          "Value": "2",
          "Name": "TollRoads"
        },
        {
          "Value": "4",
          "Name": "Ferries"
        },
        {
          "Value": "8",
          "Name": "Tunnels"
        },
        {
          "Value": "16",
          "Name": "DirtRoads"
        },
        {
          "Value": "32",
          "Name": "Motorail"
        },
        {
          "Value": "64",
          "Name": "Parks"
        }
      ],
      "Name": "Windows.Services.Maps.MapRouteRestrictions"
    }
  ],
  "Delegates": [
    {
      "ReturnType": "Void",
      "Name": "Windows.Services.Maps.Guidance.EmptyEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Traffic"
        }
      ],
      "Name": "Windows.Services.Maps.Guidance.TrafficEventHandler"
    }
  ]
}