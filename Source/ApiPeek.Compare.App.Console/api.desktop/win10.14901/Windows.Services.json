{
  "Name": "Windows.Services, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime",
  "Enums": [
    {
      "Name": "Windows.Services.Store.StorePurchaseStatus",
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Succeeded",
          "Value": "0"
        },
        {
          "Name": "AlreadyPurchased",
          "Value": "1"
        },
        {
          "Name": "NotPurchased",
          "Value": "2"
        },
        {
          "Name": "NetworkError",
          "Value": "3"
        },
        {
          "Name": "ServerError",
          "Value": "4"
        }
      ]
    },
    {
      "Name": "Windows.Services.Store.StoreConsumableStatus",
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Succeeded",
          "Value": "0"
        },
        {
          "Name": "InsufficentQuantity",
          "Value": "1"
        },
        {
          "Name": "NetworkError",
          "Value": "2"
        },
        {
          "Name": "ServerError",
          "Value": "3"
        }
      ]
    },
    {
      "Name": "Windows.Services.Store.StoreDurationUnit",
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Minute",
          "Value": "0"
        },
        {
          "Name": "Hour",
          "Value": "1"
        },
        {
          "Name": "Day",
          "Value": "2"
        },
        {
          "Name": "Week",
          "Value": "3"
        },
        {
          "Name": "Month",
          "Value": "4"
        },
        {
          "Name": "Year",
          "Value": "5"
        }
      ]
    },
    {
      "Name": "Windows.Services.Store.StorePackageUpdateState",
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Pending",
          "Value": "0"
        },
        {
          "Name": "Downloading",
          "Value": "1"
        },
        {
          "Name": "Deploying",
          "Value": "2"
        },
        {
          "Name": "Completed",
          "Value": "3"
        },
        {
          "Name": "Canceled",
          "Value": "4"
        },
        {
          "Name": "OtherError",
          "Value": "5"
        },
        {
          "Name": "ErrorLowBattery",
          "Value": "6"
        },
        {
          "Name": "ErrorWiFiRecommended",
          "Value": "7"
        },
        {
          "Name": "ErrorWiFiRequired",
          "Value": "8"
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.MapRouteOptimization",
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Time",
          "Value": "0"
        },
        {
          "Name": "Distance",
          "Value": "1"
        },
        {
          "Name": "TimeWithTraffic",
          "Value": "2"
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.MapRouteRestrictions",
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Highways",
          "Value": "1"
        },
        {
          "Name": "TollRoads",
          "Value": "2"
        },
        {
          "Name": "Ferries",
          "Value": "4"
        },
        {
          "Name": "Tunnels",
          "Value": "8"
        },
        {
          "Name": "DirtRoads",
          "Value": "16"
        },
        {
          "Name": "Motorail",
          "Value": "32"
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.MapRouteManeuverKind",
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Start",
          "Value": "1"
        },
        {
          "Name": "Stopover",
          "Value": "2"
        },
        {
          "Name": "StopoverResume",
          "Value": "3"
        },
        {
          "Name": "End",
          "Value": "4"
        },
        {
          "Name": "GoStraight",
          "Value": "5"
        },
        {
          "Name": "UTurnLeft",
          "Value": "6"
        },
        {
          "Name": "UTurnRight",
          "Value": "7"
        },
        {
          "Name": "TurnKeepLeft",
          "Value": "8"
        },
        {
          "Name": "TurnKeepRight",
          "Value": "9"
        },
        {
          "Name": "TurnLightLeft",
          "Value": "10"
        },
        {
          "Name": "TurnLightRight",
          "Value": "11"
        },
        {
          "Name": "TurnLeft",
          "Value": "12"
        },
        {
          "Name": "TurnRight",
          "Value": "13"
        },
        {
          "Name": "TurnHardLeft",
          "Value": "14"
        },
        {
          "Name": "TurnHardRight",
          "Value": "15"
        },
        {
          "Name": "FreewayEnterLeft",
          "Value": "16"
        },
        {
          "Name": "FreewayEnterRight",
          "Value": "17"
        },
        {
          "Name": "FreewayLeaveLeft",
          "Value": "18"
        },
        {
          "Name": "FreewayLeaveRight",
          "Value": "19"
        },
        {
          "Name": "FreewayContinueLeft",
          "Value": "20"
        },
        {
          "Name": "FreewayContinueRight",
          "Value": "21"
        },
        {
          "Name": "TrafficCircleLeft",
          "Value": "22"
        },
        {
          "Name": "TrafficCircleRight",
          "Value": "23"
        },
        {
          "Name": "TakeFerry",
          "Value": "24"
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.MapManeuverNotices",
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Toll",
          "Value": "1"
        },
        {
          "Name": "Unpaved",
          "Value": "2"
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.MapLocationFinderStatus",
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Success",
          "Value": "0"
        },
        {
          "Name": "UnknownError",
          "Value": "1"
        },
        {
          "Name": "InvalidCredentials",
          "Value": "2"
        },
        {
          "Name": "BadLocation",
          "Value": "3"
        },
        {
          "Name": "IndexFailure",
          "Value": "4"
        },
        {
          "Name": "NetworkFailure",
          "Value": "5"
        },
        {
          "Name": "NotSupported",
          "Value": "6"
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.MapRouteFinderStatus",
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Success",
          "Value": "0"
        },
        {
          "Name": "UnknownError",
          "Value": "1"
        },
        {
          "Name": "InvalidCredentials",
          "Value": "2"
        },
        {
          "Name": "NoRouteFound",
          "Value": "3"
        },
        {
          "Name": "NoRouteFoundWithGivenOptions",
          "Value": "4"
        },
        {
          "Name": "StartPointNotFound",
          "Value": "5"
        },
        {
          "Name": "EndPointNotFound",
          "Value": "6"
        },
        {
          "Name": "NoPedestrianRouteFound",
          "Value": "7"
        },
        {
          "Name": "NetworkFailure",
          "Value": "8"
        },
        {
          "Name": "NotSupported",
          "Value": "9"
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.MapLocationDesiredAccuracy",
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "High",
          "Value": "0"
        },
        {
          "Name": "Low",
          "Value": "1"
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.LocalSearch.LocalLocationFinderStatus",
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Success",
          "Value": "0"
        },
        {
          "Name": "UnknownError",
          "Value": "1"
        },
        {
          "Name": "InvalidCredentials",
          "Value": "2"
        },
        {
          "Name": "InvalidCategory",
          "Value": "3"
        },
        {
          "Name": "InvalidSearchTerm",
          "Value": "4"
        },
        {
          "Name": "InvalidSearchArea",
          "Value": "5"
        },
        {
          "Name": "NetworkFailure",
          "Value": "6"
        },
        {
          "Name": "NotSupported",
          "Value": "7"
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.Guidance.GuidanceManeuverKind",
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "GoStraight",
          "Value": "1"
        },
        {
          "Name": "UTurnRight",
          "Value": "2"
        },
        {
          "Name": "UTurnLeft",
          "Value": "3"
        },
        {
          "Name": "TurnKeepRight",
          "Value": "4"
        },
        {
          "Name": "TurnLightRight",
          "Value": "5"
        },
        {
          "Name": "TurnRight",
          "Value": "6"
        },
        {
          "Name": "TurnHardRight",
          "Value": "7"
        },
        {
          "Name": "KeepMiddle",
          "Value": "8"
        },
        {
          "Name": "TurnKeepLeft",
          "Value": "9"
        },
        {
          "Name": "TurnLightLeft",
          "Value": "10"
        },
        {
          "Name": "TurnLeft",
          "Value": "11"
        },
        {
          "Name": "TurnHardLeft",
          "Value": "12"
        },
        {
          "Name": "FreewayEnterRight",
          "Value": "13"
        },
        {
          "Name": "FreewayEnterLeft",
          "Value": "14"
        },
        {
          "Name": "FreewayLeaveRight",
          "Value": "15"
        },
        {
          "Name": "FreewayLeaveLeft",
          "Value": "16"
        },
        {
          "Name": "FreewayKeepRight",
          "Value": "17"
        },
        {
          "Name": "FreewayKeepLeft",
          "Value": "18"
        },
        {
          "Name": "TrafficCircleRight1",
          "Value": "19"
        },
        {
          "Name": "TrafficCircleRight2",
          "Value": "20"
        },
        {
          "Name": "TrafficCircleRight3",
          "Value": "21"
        },
        {
          "Name": "TrafficCircleRight4",
          "Value": "22"
        },
        {
          "Name": "TrafficCircleRight5",
          "Value": "23"
        },
        {
          "Name": "TrafficCircleRight6",
          "Value": "24"
        },
        {
          "Name": "TrafficCircleRight7",
          "Value": "25"
        },
        {
          "Name": "TrafficCircleRight8",
          "Value": "26"
        },
        {
          "Name": "TrafficCircleRight9",
          "Value": "27"
        },
        {
          "Name": "TrafficCircleRight10",
          "Value": "28"
        },
        {
          "Name": "TrafficCircleRight11",
          "Value": "29"
        },
        {
          "Name": "TrafficCircleRight12",
          "Value": "30"
        },
        {
          "Name": "TrafficCircleLeft1",
          "Value": "31"
        },
        {
          "Name": "TrafficCircleLeft2",
          "Value": "32"
        },
        {
          "Name": "TrafficCircleLeft3",
          "Value": "33"
        },
        {
          "Name": "TrafficCircleLeft4",
          "Value": "34"
        },
        {
          "Name": "TrafficCircleLeft5",
          "Value": "35"
        },
        {
          "Name": "TrafficCircleLeft6",
          "Value": "36"
        },
        {
          "Name": "TrafficCircleLeft7",
          "Value": "37"
        },
        {
          "Name": "TrafficCircleLeft8",
          "Value": "38"
        },
        {
          "Name": "TrafficCircleLeft9",
          "Value": "39"
        },
        {
          "Name": "TrafficCircleLeft10",
          "Value": "40"
        },
        {
          "Name": "TrafficCircleLeft11",
          "Value": "41"
        },
        {
          "Name": "TrafficCircleLeft12",
          "Value": "42"
        },
        {
          "Name": "Start",
          "Value": "43"
        },
        {
          "Name": "End",
          "Value": "44"
        },
        {
          "Name": "TakeFerry",
          "Value": "45"
        },
        {
          "Name": "PassTransitStation",
          "Value": "46"
        },
        {
          "Name": "LeaveTransitStation",
          "Value": "47"
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.Guidance.GuidanceMode",
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Simulation",
          "Value": "1"
        },
        {
          "Name": "Navigation",
          "Value": "2"
        },
        {
          "Name": "Tracking",
          "Value": "3"
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.Guidance.GuidanceAudioMeasurementSystem",
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Meters",
          "Value": "0"
        },
        {
          "Name": "MilesAndYards",
          "Value": "1"
        },
        {
          "Name": "MilesAndFeet",
          "Value": "2"
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.Guidance.GuidanceAudioNotifications",
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Maneuver",
          "Value": "1"
        },
        {
          "Name": "Route",
          "Value": "2"
        },
        {
          "Name": "Gps",
          "Value": "4"
        },
        {
          "Name": "SpeedLimit",
          "Value": "8"
        },
        {
          "Name": "Traffic",
          "Value": "16"
        },
        {
          "Name": "TrafficCamera",
          "Value": "32"
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.Guidance.GuidanceAudioNotificationKind",
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Maneuver",
          "Value": "0"
        },
        {
          "Name": "Route",
          "Value": "1"
        },
        {
          "Name": "Gps",
          "Value": "2"
        },
        {
          "Name": "SpeedLimit",
          "Value": "3"
        },
        {
          "Name": "Traffic",
          "Value": "4"
        },
        {
          "Name": "TrafficCamera",
          "Value": "5"
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.Guidance.GuidanceLaneMarkers",
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "LightRight",
          "Value": "1"
        },
        {
          "Name": "Right",
          "Value": "2"
        },
        {
          "Name": "HardRight",
          "Value": "4"
        },
        {
          "Name": "Straight",
          "Value": "8"
        },
        {
          "Name": "UTurnLeft",
          "Value": "16"
        },
        {
          "Name": "HardLeft",
          "Value": "32"
        },
        {
          "Name": "Left",
          "Value": "64"
        },
        {
          "Name": "LightLeft",
          "Value": "128"
        },
        {
          "Name": "UTurnRight",
          "Value": "256"
        },
        {
          "Name": "Unknown",
          "Value": "4294967295"
        }
      ]
    }
  ],
  "Structs": [
    {
      "Name": "Windows.Services.Store.StoreContract"
    },
    {
      "Name": "Windows.Services.Store.StorePackageUpdateStatus",
      "Fields": [
        {
          "Name": "PackageFamilyName",
          "Type": "String"
        },
        {
          "Name": "PackageDownloadSizeInBytes",
          "Type": "UInt64"
        },
        {
          "Name": "PackageBytesDownloaded",
          "Type": "UInt64"
        },
        {
          "Name": "PackageDownloadProgress",
          "Type": "Double"
        },
        {
          "Name": "TotalDownloadProgress",
          "Type": "Double"
        },
        {
          "Name": "PackageUpdateState",
          "Type": "StorePackageUpdateState"
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.LocalSearchContract"
    },
    {
      "Name": "Windows.Services.Maps.GuidanceContract"
    }
  ],
  "Classes": [
    {
      "Name": "Windows.Services.Store.StoreProduct",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "Description",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ExtendedJsonData",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "HasDigitalDownload",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Images",
          "Type": "IReadOnlyList<StoreImage>",
          "IsGet": true
        },
        {
          "Name": "InAppOfferToken",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "IsInUserCollection",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Keywords",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "LinkUri",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "Price",
          "Type": "StorePrice",
          "IsGet": true
        },
        {
          "Name": "ProductKind",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Skus",
          "Type": "IReadOnlyList<StoreSku>",
          "IsGet": true
        },
        {
          "Name": "StoreId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Videos",
          "Type": "IReadOnlyList<StoreVideo>",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetIsAnySkuInstalledAsync",
          "ReturnType": "IAsyncOperation<Boolean>"
        },
        {
          "Name": "RequestPurchaseAsync",
          "ReturnType": "IAsyncOperation<StorePurchaseResult>"
        },
        {
          "Name": "RequestPurchaseAsync",
          "ReturnType": "IAsyncOperation<StorePurchaseResult>",
          "Parameters": [
            {
              "Name": "storePurchaseProperties",
              "Type": "StorePurchaseProperties"
            }
          ]
        }
      ]
    },
    {
      "Name": "Windows.Services.Store.StoreProductPagedQueryResult",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "ExtendedError",
          "Type": "Exception",
          "IsGet": true
        },
        {
          "Name": "HasMoreResults",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Products",
          "Type": "IReadOnlyDictionary<String,StoreProduct>",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetNextAsync",
          "ReturnType": "IAsyncOperation<StoreProductPagedQueryResult>"
        }
      ]
    },
    {
      "Name": "Windows.Services.Store.StorePurchaseProperties",
      "IsSealed": true,
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {}
      ],
      "Properties": [
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ExtendedJsonData",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Store.StoreLicense",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "ExpirationDate",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "ExtendedJsonData",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "InAppOfferToken",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "IsActive",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "SkuStoreId",
          "Type": "String",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Store.StoreImage",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "Caption",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Height",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "ImagePurposeTag",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Uri",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "Width",
          "Type": "UInt32",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Store.StoreVideo",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "Caption",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Height",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "PreviewImage",
          "Type": "StoreImage",
          "IsGet": true
        },
        {
          "Name": "Uri",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "VideoPurposeTag",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Width",
          "Type": "UInt32",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Store.StoreSku",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "Availabilities",
          "Type": "IReadOnlyList<StoreAvailability>",
          "IsGet": true
        },
        {
          "Name": "BundledSkus",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        },
        {
          "Name": "CollectionData",
          "Type": "StoreCollectionData",
          "IsGet": true
        },
        {
          "Name": "CustomDeveloperData",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Description",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ExtendedJsonData",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Images",
          "Type": "IReadOnlyList<StoreImage>",
          "IsGet": true
        },
        {
          "Name": "IsInUserCollection",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsSubscription",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsTrial",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Language",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Price",
          "Type": "StorePrice",
          "IsGet": true
        },
        {
          "Name": "StoreId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SubscriptionInfo",
          "Type": "StoreSubscriptionInfo",
          "IsGet": true
        },
        {
          "Name": "Title",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Videos",
          "Type": "IReadOnlyList<StoreVideo>",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetIsInstalledAsync",
          "ReturnType": "IAsyncOperation<Boolean>"
        },
        {
          "Name": "RequestPurchaseAsync",
          "ReturnType": "IAsyncOperation<StorePurchaseResult>"
        },
        {
          "Name": "RequestPurchaseAsync",
          "ReturnType": "IAsyncOperation<StorePurchaseResult>",
          "Parameters": [
            {
              "Name": "storePurchaseProperties",
              "Type": "StorePurchaseProperties"
            }
          ]
        }
      ]
    },
    {
      "Name": "Windows.Services.Store.StorePrice",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "CurrencyCode",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "FormattedBasePrice",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "FormattedPrice",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "FormattedRecurrencePrice",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "IsOnSale",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "SaleEndDate",
          "Type": "DateTimeOffset",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Store.StorePurchaseResult",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "ExtendedError",
          "Type": "Exception",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "StorePurchaseStatus",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Store.StoreAvailability",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "EndDate",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "ExtendedJsonData",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Price",
          "Type": "StorePrice",
          "IsGet": true
        },
        {
          "Name": "StoreId",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "RequestPurchaseAsync",
          "ReturnType": "IAsyncOperation<StorePurchaseResult>"
        },
        {
          "Name": "RequestPurchaseAsync",
          "ReturnType": "IAsyncOperation<StorePurchaseResult>",
          "Parameters": [
            {
              "Name": "storePurchaseProperties",
              "Type": "StorePurchaseProperties"
            }
          ]
        }
      ]
    },
    {
      "Name": "Windows.Services.Store.StoreCollectionData",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "AcquiredDate",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "CampaignId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DeveloperOfferId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "EndDate",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "ExtendedJsonData",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "IsTrial",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "StartDate",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "TrialTimeRemaining",
          "Type": "TimeSpan",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Store.StoreSubscriptionInfo",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "BillingPeriod",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "BillingPeriodUnit",
          "Type": "StoreDurationUnit",
          "IsGet": true
        },
        {
          "Name": "HasTrialPeriod",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "TrialPeriod",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "TrialPeriodUnit",
          "Type": "StoreDurationUnit",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Store.StoreContext",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "User",
          "Type": "User",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetCustomerPurchaseIdAsync",
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "serviceTicket",
              "Type": "String"
            },
            {
              "Name": "publisherUserId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetCustomerCollectionsIdAsync",
          "ReturnType": "IAsyncOperation<String>",
          "Parameters": [
            {
              "Name": "serviceTicket",
              "Type": "String"
            },
            {
              "Name": "publisherUserId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetAppLicenseAsync",
          "ReturnType": "IAsyncOperation<StoreAppLicense>"
        },
        {
          "Name": "GetStoreProductForCurrentAppAsync",
          "ReturnType": "IAsyncOperation<StoreProductResult>"
        },
        {
          "Name": "GetStoreProductsAsync",
          "ReturnType": "IAsyncOperation<StoreProductQueryResult>",
          "Parameters": [
            {
              "Name": "productKinds",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "storeIds",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "GetAssociatedStoreProductsAsync",
          "ReturnType": "IAsyncOperation<StoreProductQueryResult>",
          "Parameters": [
            {
              "Name": "productKinds",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "GetAssociatedStoreProductsWithPagingAsync",
          "ReturnType": "IAsyncOperation<StoreProductPagedQueryResult>",
          "Parameters": [
            {
              "Name": "productKinds",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "maxItemsToRetrievePerPage",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "GetUserCollectionAsync",
          "ReturnType": "IAsyncOperation<StoreProductQueryResult>",
          "Parameters": [
            {
              "Name": "productKinds",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "GetUserCollectionWithPagingAsync",
          "ReturnType": "IAsyncOperation<StoreProductPagedQueryResult>",
          "Parameters": [
            {
              "Name": "productKinds",
              "Type": "IEnumerable<String>"
            },
            {
              "Name": "maxItemsToRetrievePerPage",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "ReportConsumableFulfillmentAsync",
          "ReturnType": "IAsyncOperation<StoreConsumableResult>",
          "Parameters": [
            {
              "Name": "productStoreId",
              "Type": "String"
            },
            {
              "Name": "quantity",
              "Type": "UInt32"
            },
            {
              "Name": "trackingId",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "GetConsumableBalanceRemainingAsync",
          "ReturnType": "IAsyncOperation<StoreConsumableResult>",
          "Parameters": [
            {
              "Name": "productStoreId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "AcquireStoreLicenseForOptionalPackageAsync",
          "ReturnType": "IAsyncOperation<StoreAcquireLicenseResult>",
          "Parameters": [
            {
              "Name": "optionalPackage",
              "Type": "Package"
            }
          ]
        },
        {
          "Name": "RequestPurchaseAsync",
          "ReturnType": "IAsyncOperation<StorePurchaseResult>",
          "Parameters": [
            {
              "Name": "storeId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "RequestPurchaseAsync",
          "ReturnType": "IAsyncOperation<StorePurchaseResult>",
          "Parameters": [
            {
              "Name": "storeId",
              "Type": "String"
            },
            {
              "Name": "storePurchaseProperties",
              "Type": "StorePurchaseProperties"
            }
          ]
        },
        {
          "Name": "GetAppAndOptionalStorePackageUpdatesAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<StorePackageUpdate>>"
        },
        {
          "Name": "RequestDownloadStorePackageUpdatesAsync",
          "ReturnType": "IAsyncOperationWithProgress<StorePackageUpdateResult,StorePackageUpdateStatus>",
          "Parameters": [
            {
              "Name": "storePackageUpdates",
              "Type": "IEnumerable<StorePackageUpdate>"
            }
          ]
        },
        {
          "Name": "RequestDownloadAndInstallStorePackageUpdatesAsync",
          "ReturnType": "IAsyncOperationWithProgress<StorePackageUpdateResult,StorePackageUpdateStatus>",
          "Parameters": [
            {
              "Name": "storePackageUpdates",
              "Type": "IEnumerable<StorePackageUpdate>"
            }
          ]
        },
        {
          "Name": "RequestDownloadAndInstallStorePackagesAsync",
          "ReturnType": "IAsyncOperationWithProgress<StorePackageUpdateResult,StorePackageUpdateStatus>",
          "Parameters": [
            {
              "Name": "storeIds",
              "Type": "IEnumerable<String>"
            }
          ]
        },
        {
          "Name": "GetDefault",
          "IsStatic": true,
          "ReturnType": "StoreContext"
        },
        {
          "Name": "GetForUser",
          "IsStatic": true,
          "ReturnType": "StoreContext",
          "Parameters": [
            {
              "Name": "user",
              "Type": "User"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "OfflineLicensesChanged",
          "Type": "TypedEventHandler<StoreContext,Object>"
        }
      ]
    },
    {
      "Name": "Windows.Services.Store.StoreSendRequestResult",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "ExtendedError",
          "Type": "Exception",
          "IsGet": true
        },
        {
          "Name": "Response",
          "Type": "String",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Store.StoreAppLicense",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "AddOnLicenses",
          "Type": "IReadOnlyDictionary<String,StoreLicense>",
          "IsGet": true
        },
        {
          "Name": "ExpirationDate",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "ExtendedJsonData",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "IsActive",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsTrial",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsTrialOwnedByThisUser",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "SkuStoreId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "TrialTimeRemaining",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "TrialUniqueId",
          "Type": "String",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Store.StoreProductResult",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "ExtendedError",
          "Type": "Exception",
          "IsGet": true
        },
        {
          "Name": "Product",
          "Type": "StoreProduct",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Store.StoreProductQueryResult",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "ExtendedError",
          "Type": "Exception",
          "IsGet": true
        },
        {
          "Name": "Products",
          "Type": "IReadOnlyDictionary<String,StoreProduct>",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Store.StoreConsumableResult",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "BalanceRemaining",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "ExtendedError",
          "Type": "Exception",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "StoreConsumableStatus",
          "IsGet": true
        },
        {
          "Name": "TrackingId",
          "Type": "Guid",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Store.StoreAcquireLicenseResult",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "ExtendedError",
          "Type": "Exception",
          "IsGet": true
        },
        {
          "Name": "StorePackageLicense",
          "Type": "StorePackageLicense",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Store.StorePackageUpdate",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "Mandatory",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Package",
          "Type": "Package",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Store.StorePackageUpdateResult",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "OverallState",
          "Type": "StorePackageUpdateState",
          "IsGet": true
        },
        {
          "Name": "StorePackageUpdateStatuses",
          "Type": "IReadOnlyList<StorePackageUpdateStatus>",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Store.StorePackageLicense",
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [
        {
          "Name": "IsValid",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Package",
          "Type": "Package",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "ReleaseLicense",
          "ReturnType": "Void"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "LicenseLost",
          "Type": "TypedEventHandler<StorePackageLicense,Object>"
        }
      ]
    },
    {
      "Name": "Windows.Services.Store.StoreRequestHelper",
      "IsStatic": true,
      "Methods": [
        {
          "Name": "SendRequestAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<StoreSendRequestResult>",
          "Parameters": [
            {
              "Name": "context",
              "Type": "StoreContext"
            },
            {
              "Name": "requestKind",
              "Type": "UInt32"
            },
            {
              "Name": "parametersAsJson",
              "Type": "String"
            }
          ]
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.MapAddress",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "BuildingFloor",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "BuildingName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "BuildingRoom",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "BuildingWing",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Continent",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Country",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "CountryCode",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "District",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Neighborhood",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "PostCode",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Region",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "RegionCode",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Street",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "StreetNumber",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Town",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "FormattedAddress",
          "Type": "String",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.MapLocation",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "Address",
          "Type": "MapAddress",
          "IsGet": true
        },
        {
          "Name": "Description",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Point",
          "Type": "Geopoint",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.MapRouteManeuver",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "ExitNumber",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "InstructionText",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "MapRouteManeuverKind",
          "IsGet": true
        },
        {
          "Name": "LengthInMeters",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "ManeuverNotices",
          "Type": "MapManeuverNotices",
          "IsGet": true
        },
        {
          "Name": "StartingPoint",
          "Type": "Geopoint",
          "IsGet": true
        },
        {
          "Name": "EndHeading",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "StartHeading",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "StreetName",
          "Type": "String",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.MapRouteLeg",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "BoundingBox",
          "Type": "GeoboundingBox",
          "IsGet": true
        },
        {
          "Name": "EstimatedDuration",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "LengthInMeters",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "Maneuvers",
          "Type": "IReadOnlyList<MapRouteManeuver>",
          "IsGet": true
        },
        {
          "Name": "Path",
          "Type": "Geopath",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.MapRoute",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "BoundingBox",
          "Type": "GeoboundingBox",
          "IsGet": true
        },
        {
          "Name": "EstimatedDuration",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "IsTrafficBased",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Legs",
          "Type": "IReadOnlyList<MapRouteLeg>",
          "IsGet": true
        },
        {
          "Name": "LengthInMeters",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "Path",
          "Type": "Geopath",
          "IsGet": true
        },
        {
          "Name": "HasBlockedRoads",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "ViolatedRestrictions",
          "Type": "MapRouteRestrictions",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.MapLocationFinderResult",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "Locations",
          "Type": "IReadOnlyList<MapLocation>",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "MapLocationFinderStatus",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.MapRouteFinderResult",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "Route",
          "Type": "MapRoute",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "MapRouteFinderStatus",
          "IsGet": true
        },
        {
          "Name": "AlternateRoutes",
          "Type": "IReadOnlyList<MapRoute>",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.MapRouteDrivingOptions",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "RouteRestrictions",
          "Type": "MapRouteRestrictions",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RouteOptimization",
          "Type": "MapRouteOptimization",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MaxAlternateRouteCount",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "InitialHeading",
          "Type": "Nullable<Double>",
          "IsGet": true,
          "IsSet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.MapLocationFinder",
      "IsStatic": true,
      "Methods": [
        {
          "Name": "FindLocationsAtAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapLocationFinderResult>",
          "Parameters": [
            {
              "Name": "queryPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "accuracy",
              "Type": "MapLocationDesiredAccuracy"
            }
          ]
        },
        {
          "Name": "FindLocationsAtAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapLocationFinderResult>",
          "Parameters": [
            {
              "Name": "queryPoint",
              "Type": "Geopoint"
            }
          ]
        },
        {
          "Name": "FindLocationsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapLocationFinderResult>",
          "Parameters": [
            {
              "Name": "searchText",
              "Type": "String"
            },
            {
              "Name": "referencePoint",
              "Type": "Geopoint"
            }
          ]
        },
        {
          "Name": "FindLocationsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapLocationFinderResult>",
          "Parameters": [
            {
              "Name": "searchText",
              "Type": "String"
            },
            {
              "Name": "referencePoint",
              "Type": "Geopoint"
            },
            {
              "Name": "maxCount",
              "Type": "UInt32"
            }
          ]
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.MapRouteFinder",
      "IsStatic": true,
      "Methods": [
        {
          "Name": "GetDrivingRouteAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "startPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "endPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "options",
              "Type": "MapRouteDrivingOptions"
            }
          ]
        },
        {
          "Name": "GetDrivingRouteAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "startPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "endPoint",
              "Type": "Geopoint"
            }
          ]
        },
        {
          "Name": "GetDrivingRouteAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "startPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "endPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "optimization",
              "Type": "MapRouteOptimization"
            }
          ]
        },
        {
          "Name": "GetDrivingRouteAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "startPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "endPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "optimization",
              "Type": "MapRouteOptimization"
            },
            {
              "Name": "restrictions",
              "Type": "MapRouteRestrictions"
            }
          ]
        },
        {
          "Name": "GetDrivingRouteAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "startPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "endPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "optimization",
              "Type": "MapRouteOptimization"
            },
            {
              "Name": "restrictions",
              "Type": "MapRouteRestrictions"
            },
            {
              "Name": "headingInDegrees",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "GetDrivingRouteFromWaypointsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "wayPoints",
              "Type": "IEnumerable<Geopoint>"
            }
          ]
        },
        {
          "Name": "GetDrivingRouteFromWaypointsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "wayPoints",
              "Type": "IEnumerable<Geopoint>"
            },
            {
              "Name": "optimization",
              "Type": "MapRouteOptimization"
            }
          ]
        },
        {
          "Name": "GetDrivingRouteFromWaypointsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "wayPoints",
              "Type": "IEnumerable<Geopoint>"
            },
            {
              "Name": "optimization",
              "Type": "MapRouteOptimization"
            },
            {
              "Name": "restrictions",
              "Type": "MapRouteRestrictions"
            }
          ]
        },
        {
          "Name": "GetDrivingRouteFromWaypointsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "wayPoints",
              "Type": "IEnumerable<Geopoint>"
            },
            {
              "Name": "optimization",
              "Type": "MapRouteOptimization"
            },
            {
              "Name": "restrictions",
              "Type": "MapRouteRestrictions"
            },
            {
              "Name": "headingInDegrees",
              "Type": "Double"
            }
          ]
        },
        {
          "Name": "GetWalkingRouteAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "startPoint",
              "Type": "Geopoint"
            },
            {
              "Name": "endPoint",
              "Type": "Geopoint"
            }
          ]
        },
        {
          "Name": "GetWalkingRouteFromWaypointsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<MapRouteFinderResult>",
          "Parameters": [
            {
              "Name": "wayPoints",
              "Type": "IEnumerable<Geopoint>"
            }
          ]
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.MapService",
      "IsStatic": true,
      "Properties": [
        {
          "Name": "ServiceToken",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "WorldViewRegionCode",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DataAttributions",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.MapManager",
      "IsStatic": true,
      "Methods": [
        {
          "Name": "ShowDownloadedMapsUI",
          "IsStatic": true,
          "ReturnType": "Void"
        },
        {
          "Name": "ShowMapsUpdateUI",
          "IsStatic": true,
          "ReturnType": "Void"
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.LocalSearch.LocalLocation",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "Address",
          "Type": "MapAddress",
          "IsGet": true
        },
        {
          "Name": "DataAttribution",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Description",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Identifier",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "PhoneNumber",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Point",
          "Type": "Geopoint",
          "IsGet": true
        },
        {
          "Name": "Category",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "HoursOfOperation",
          "Type": "IReadOnlyList<LocalLocationHoursOfOperationItem>",
          "IsGet": true
        },
        {
          "Name": "RatingInfo",
          "Type": "LocalLocationRatingInfo",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.LocalSearch.LocalLocationFinderResult",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "LocalLocations",
          "Type": "IReadOnlyList<LocalLocation>",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "LocalLocationFinderStatus",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.LocalSearch.LocalLocationRatingInfo",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "AggregateRating",
          "Type": "Nullable<Double>",
          "IsGet": true
        },
        {
          "Name": "ProviderIdentifier",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "RatingCount",
          "Type": "Nullable<Int32>",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.LocalSearch.LocalLocationHoursOfOperationItem",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "Day",
          "Type": "DayOfWeek",
          "IsGet": true
        },
        {
          "Name": "Span",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "Start",
          "Type": "TimeSpan",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.LocalSearch.LocalLocationFinder",
      "IsStatic": true,
      "Methods": [
        {
          "Name": "FindLocalLocationsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<LocalLocationFinderResult>",
          "Parameters": [
            {
              "Name": "searchTerm",
              "Type": "String"
            },
            {
              "Name": "searchArea",
              "Type": "Geocircle"
            },
            {
              "Name": "localCategory",
              "Type": "String"
            },
            {
              "Name": "maxResults",
              "Type": "UInt32"
            }
          ]
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.LocalSearch.LocalCategories",
      "IsStatic": true,
      "Properties": [
        {
          "Name": "All",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "BankAndCreditUnions",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "EatDrink",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Hospitals",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "HotelsAndMotels",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Parking",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "SeeDo",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Shop",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.Guidance.GuidanceRoadSignpost",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "BackgroundColor",
          "Type": "Color",
          "IsGet": true
        },
        {
          "Name": "Exit",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ExitDirections",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        },
        {
          "Name": "ExitNumber",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ForegroundColor",
          "Type": "Color",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.Guidance.GuidanceManeuver",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "DepartureRoadName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DepartureShortRoadName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DistanceFromPreviousManeuver",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "DistanceFromRouteStart",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "EndAngle",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "InstructionText",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Kind",
          "Type": "GuidanceManeuverKind",
          "IsGet": true
        },
        {
          "Name": "NextRoadName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "NextShortRoadName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "RoadSignpost",
          "Type": "GuidanceRoadSignpost",
          "IsGet": true
        },
        {
          "Name": "StartAngle",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "StartLocation",
          "Type": "Geopoint",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.Guidance.GuidanceRoute",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "BoundingBox",
          "Type": "GeoboundingBox",
          "IsGet": true
        },
        {
          "Name": "Distance",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "Duration",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "Maneuvers",
          "Type": "IReadOnlyList<GuidanceManeuver>",
          "IsGet": true
        },
        {
          "Name": "Path",
          "Type": "Geopath",
          "IsGet": true
        },
        {
          "Name": "RoadSegments",
          "Type": "IReadOnlyList<GuidanceRoadSegment>",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "ConvertToMapRoute",
          "ReturnType": "MapRoute"
        },
        {
          "Name": "CanCreateFromMapRoute",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "mapRoute",
              "Type": "MapRoute"
            }
          ]
        },
        {
          "Name": "TryCreateFromMapRoute",
          "IsStatic": true,
          "ReturnType": "GuidanceRoute",
          "Parameters": [
            {
              "Name": "mapRoute",
              "Type": "MapRoute"
            }
          ]
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.Guidance.GuidanceMapMatchedCoordinate",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "CurrentHeading",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "CurrentSpeed",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "IsOnStreet",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Location",
          "Type": "Geopoint",
          "IsGet": true
        },
        {
          "Name": "Road",
          "Type": "GuidanceRoadSegment",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.Guidance.GuidanceLaneInfo",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "IsOnRoute",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "LaneMarkers",
          "Type": "GuidanceLaneMarkers",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.Guidance.GuidanceUpdatedEventArgs",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "AfterNextManeuver",
          "Type": "GuidanceManeuver",
          "IsGet": true
        },
        {
          "Name": "AfterNextManeuverDistance",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "CurrentLocation",
          "Type": "GuidanceMapMatchedCoordinate",
          "IsGet": true
        },
        {
          "Name": "DistanceToDestination",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "ElapsedDistance",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "ElapsedTime",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "IsNewManeuver",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "LaneInfo",
          "Type": "IReadOnlyList<GuidanceLaneInfo>",
          "IsGet": true
        },
        {
          "Name": "Mode",
          "Type": "GuidanceMode",
          "IsGet": true
        },
        {
          "Name": "NextManeuver",
          "Type": "GuidanceManeuver",
          "IsGet": true
        },
        {
          "Name": "NextManeuverDistance",
          "Type": "Int32",
          "IsGet": true
        },
        {
          "Name": "RoadName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Route",
          "Type": "GuidanceRoute",
          "IsGet": true
        },
        {
          "Name": "TimeToDestination",
          "Type": "TimeSpan",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.Guidance.GuidanceReroutedEventArgs",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "Route",
          "Type": "GuidanceRoute",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.Guidance.GuidanceAudioNotificationRequestedEventArgs",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "AudioFilePaths",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        },
        {
          "Name": "AudioNotification",
          "Type": "GuidanceAudioNotificationKind",
          "IsGet": true
        },
        {
          "Name": "AudioText",
          "Type": "String",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.Guidance.GuidanceNavigator",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "AudioNotifications",
          "Type": "GuidanceAudioNotifications",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AudioMeasurementSystem",
          "Type": "GuidanceAudioMeasurementSystem",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsGuidanceAudioMuted",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UseAppProvidedVoice",
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "StartNavigating",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "route",
              "Type": "GuidanceRoute"
            }
          ]
        },
        {
          "Name": "StartSimulating",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "route",
              "Type": "GuidanceRoute"
            },
            {
              "Name": "speedInMetersPerSecond",
              "Type": "Int32"
            }
          ]
        },
        {
          "Name": "StartTracking",
          "ReturnType": "Void"
        },
        {
          "Name": "Pause",
          "ReturnType": "Void"
        },
        {
          "Name": "Resume",
          "ReturnType": "Void"
        },
        {
          "Name": "Stop",
          "ReturnType": "Void"
        },
        {
          "Name": "RepeatLastAudioNotification",
          "ReturnType": "Void"
        },
        {
          "Name": "SetGuidanceVoice",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "voiceId",
              "Type": "Int32"
            },
            {
              "Name": "voiceFolder",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "UpdateUserLocation",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "userLocation",
              "Type": "Geocoordinate"
            }
          ]
        },
        {
          "Name": "UpdateUserLocation",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "userLocation",
              "Type": "Geocoordinate"
            },
            {
              "Name": "positionOverride",
              "Type": "BasicGeoposition"
            }
          ]
        },
        {
          "Name": "GetCurrent",
          "IsStatic": true,
          "ReturnType": "GuidanceNavigator"
        }
      ],
      "Events": [
        {
          "Name": "DestinationReached",
          "Type": "TypedEventHandler<GuidanceNavigator,Object>"
        },
        {
          "Name": "GuidanceUpdated",
          "Type": "TypedEventHandler<GuidanceNavigator,GuidanceUpdatedEventArgs>"
        },
        {
          "Name": "RerouteFailed",
          "Type": "TypedEventHandler<GuidanceNavigator,Object>"
        },
        {
          "Name": "Rerouted",
          "Type": "TypedEventHandler<GuidanceNavigator,GuidanceReroutedEventArgs>"
        },
        {
          "Name": "Rerouting",
          "Type": "TypedEventHandler<GuidanceNavigator,Object>"
        },
        {
          "Name": "UserLocationLost",
          "Type": "TypedEventHandler<GuidanceNavigator,Object>"
        },
        {
          "Name": "UserLocationRestored",
          "Type": "TypedEventHandler<GuidanceNavigator,Object>"
        },
        {
          "Name": "AudioNotificationRequested",
          "Type": "TypedEventHandler<GuidanceNavigator,GuidanceAudioNotificationRequestedEventArgs>"
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.Guidance.GuidanceRoadSegment",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "IsHighway",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsTollRoad",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsTunnel",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Path",
          "Type": "Geopath",
          "IsGet": true
        },
        {
          "Name": "RoadName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ShortRoadName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SpeedLimit",
          "Type": "Double",
          "IsGet": true
        },
        {
          "Name": "TravelTime",
          "Type": "TimeSpan",
          "IsGet": true
        }
      ]
    },
    {
      "Name": "Windows.Services.Maps.Guidance.GuidanceTelemetryCollector",
      "IsSealed": true,
      "Properties": [
        {
          "Name": "UploadFrequency",
          "Type": "Int32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SpeedTrigger",
          "Type": "Double",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Enabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [
        {
          "Name": "ClearLocalData",
          "ReturnType": "Void"
        },
        {
          "Name": "GetCurrent",
          "IsStatic": true,
          "ReturnType": "GuidanceTelemetryCollector"
        }
      ]
    }
  ]
}