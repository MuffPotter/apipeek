{
  "Name": "Windows.Networking, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime",
  "Classes": [
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTransferBase"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "completionGroup",
              "Type": "BackgroundTransferCompletionGroup"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "CompletionGroup",
          "Type": "BackgroundTransferCompletionGroup",
          "IsGet": true
        },
        {
          "Name": "CostPolicy",
          "Type": "BackgroundTransferCostPolicy",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FailureTileNotification",
          "Type": "TileNotification",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FailureToastNotification",
          "Type": "ToastNotification",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Group",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Method",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProxyCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ServerCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SuccessTileNotification",
          "Type": "TileNotification",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SuccessToastNotification",
          "Type": "ToastNotification",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TransferGroup",
          "Type": "BackgroundTransferGroup",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateDownload",
          "ReturnType": "DownloadOperation",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "resultFile",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "CreateDownload",
          "ReturnType": "DownloadOperation",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "resultFile",
              "Type": "IStorageFile"
            },
            {
              "Name": "requestBodyFile",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "CreateDownloadAsync",
          "ReturnType": "IAsyncOperation<DownloadOperation>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "resultFile",
              "Type": "IStorageFile"
            },
            {
              "Name": "requestBodyStream",
              "Type": "IInputStream"
            }
          ]
        },
        {
          "Name": "GetCurrentDownloadsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<DownloadOperation>>"
        },
        {
          "Name": "GetCurrentDownloadsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<DownloadOperation>>",
          "Parameters": [
            {
              "Name": "group",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetCurrentDownloadsForTransferGroupAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<DownloadOperation>>",
          "Parameters": [
            {
              "Name": "group",
              "Type": "BackgroundTransferGroup"
            }
          ]
        },
        {
          "Name": "RequestUnconstrainedDownloadsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<UnconstrainedTransferRequestResult>",
          "Parameters": [
            {
              "Name": "operations",
              "Type": "IEnumerable<DownloadOperation>"
            }
          ]
        },
        {
          "Name": "SetRequestHeader",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundDownloader"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsEnabled",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Trigger",
          "Type": "IBackgroundTrigger",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Enable",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferCompletionGroup"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Downloads",
          "Type": "IReadOnlyList<DownloadOperation>",
          "IsGet": true
        },
        {
          "Name": "Uploads",
          "Type": "IReadOnlyList<UploadOperation>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferCompletionGroupTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "fileName",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "SetFile",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "SetHeader",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SetText",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferContentPart"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetStatus",
          "IsStatic": true,
          "ReturnType": "WebErrorStatus",
          "Parameters": [
            {
              "Name": "hresult",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferError"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Name",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "TransferBehavior",
          "Type": "BackgroundTransferBehavior",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateGroup",
          "IsStatic": true,
          "ReturnType": "BackgroundTransferGroup",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferGroup"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTransferBase"
      ],
      "Constructors": [
        {},
        {
          "Parameters": [
            {
              "Name": "completionGroup",
              "Type": "BackgroundTransferCompletionGroup"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "CompletionGroup",
          "Type": "BackgroundTransferCompletionGroup",
          "IsGet": true
        },
        {
          "Name": "CostPolicy",
          "Type": "BackgroundTransferCostPolicy",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FailureTileNotification",
          "Type": "TileNotification",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "FailureToastNotification",
          "Type": "ToastNotification",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Group",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Method",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProxyCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ServerCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SuccessTileNotification",
          "Type": "TileNotification",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SuccessToastNotification",
          "Type": "ToastNotification",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TransferGroup",
          "Type": "BackgroundTransferGroup",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateUpload",
          "ReturnType": "UploadOperation",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "sourceFile",
              "Type": "IStorageFile"
            }
          ]
        },
        {
          "Name": "CreateUploadAsync",
          "ReturnType": "IAsyncOperation<UploadOperation>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "parts",
              "Type": "IEnumerable<BackgroundTransferContentPart>"
            }
          ]
        },
        {
          "Name": "CreateUploadAsync",
          "ReturnType": "IAsyncOperation<UploadOperation>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "parts",
              "Type": "IEnumerable<BackgroundTransferContentPart>"
            },
            {
              "Name": "subType",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateUploadAsync",
          "ReturnType": "IAsyncOperation<UploadOperation>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "parts",
              "Type": "IEnumerable<BackgroundTransferContentPart>"
            },
            {
              "Name": "subType",
              "Type": "String"
            },
            {
              "Name": "boundary",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateUploadFromStreamAsync",
          "ReturnType": "IAsyncOperation<UploadOperation>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            },
            {
              "Name": "sourceStream",
              "Type": "IInputStream"
            }
          ]
        },
        {
          "Name": "GetCurrentUploadsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<UploadOperation>>"
        },
        {
          "Name": "GetCurrentUploadsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<UploadOperation>>",
          "Parameters": [
            {
              "Name": "group",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetCurrentUploadsForTransferGroupAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<UploadOperation>>",
          "Parameters": [
            {
              "Name": "group",
              "Type": "BackgroundTransferGroup"
            }
          ]
        },
        {
          "Name": "RequestUnconstrainedUploadsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<UnconstrainedTransferRequestResult>",
          "Parameters": [
            {
              "Name": "operations",
              "Type": "IEnumerable<UploadOperation>"
            }
          ]
        },
        {
          "Name": "SetRequestHeader",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundUploader"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ContentUris",
          "Type": "IList<Uri>",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "IndirectContentUri",
          "Type": "Uri",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LastSuccessfulPrefetchTime",
          "Type": "Nullable<DateTimeOffset>",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.ContentPrefetcher"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTransferOperation",
        "IBackgroundTransferOperationPriority"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CostPolicy",
          "Type": "BackgroundTransferCostPolicy",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Group",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Guid",
          "Type": "Guid",
          "IsGet": true
        },
        {
          "Name": "Method",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Priority",
          "Type": "BackgroundTransferPriority",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Progress",
          "Type": "BackgroundDownloadProgress",
          "IsGet": true
        },
        {
          "Name": "RequestedUri",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "ResultFile",
          "Type": "IStorageFile",
          "IsGet": true
        },
        {
          "Name": "TransferGroup",
          "Type": "BackgroundTransferGroup",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AttachAsync",
          "ReturnType": "IAsyncOperationWithProgress<DownloadOperation,DownloadOperation>"
        },
        {
          "Name": "GetResponseInformation",
          "ReturnType": "ResponseInformation"
        },
        {
          "Name": "GetResultStreamAt",
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "Pause",
          "ReturnType": "Void"
        },
        {
          "Name": "Resume",
          "ReturnType": "Void"
        },
        {
          "Name": "StartAsync",
          "ReturnType": "IAsyncOperationWithProgress<DownloadOperation,DownloadOperation>"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.DownloadOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ActualUri",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "Headers",
          "Type": "IReadOnlyDictionary<String,String>",
          "IsGet": true
        },
        {
          "Name": "IsResumable",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "StatusCode",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.ResponseInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsUnconstrained",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.UnconstrainedTransferRequestResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTransferOperation",
        "IBackgroundTransferOperationPriority"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CostPolicy",
          "Type": "BackgroundTransferCostPolicy",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Group",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Guid",
          "Type": "Guid",
          "IsGet": true
        },
        {
          "Name": "Method",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Priority",
          "Type": "BackgroundTransferPriority",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Progress",
          "Type": "BackgroundUploadProgress",
          "IsGet": true
        },
        {
          "Name": "RequestedUri",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "SourceFile",
          "Type": "IStorageFile",
          "IsGet": true
        },
        {
          "Name": "TransferGroup",
          "Type": "BackgroundTransferGroup",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AttachAsync",
          "ReturnType": "IAsyncOperationWithProgress<UploadOperation,UploadOperation>"
        },
        {
          "Name": "GetResponseInformation",
          "ReturnType": "ResponseInformation"
        },
        {
          "Name": "GetResultStreamAt",
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        },
        {
          "Name": "StartAsync",
          "ReturnType": "IAsyncOperationWithProgress<UploadOperation,UploadOperation>"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.UploadOperation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AccessPointName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AuthenticationType",
          "Type": "CellularApnAuthenticationType",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsCompressionEnabled",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Password",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProviderId",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UserName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.CellularApnContext"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ApproachingDataLimit",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "NetworkCostType",
          "Type": "NetworkCostType",
          "IsGet": true
        },
        {
          "Name": "OverDataLimit",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Roaming",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ConnectionCost"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsWlanConnectionProfile",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsWwanConnectionProfile",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "NetworkAdapter",
          "Type": "NetworkAdapter",
          "IsGet": true
        },
        {
          "Name": "NetworkSecuritySettings",
          "Type": "NetworkSecuritySettings",
          "IsGet": true
        },
        {
          "Name": "ProfileName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ServiceProviderGuid",
          "Type": "Nullable<Guid>",
          "IsGet": true
        },
        {
          "Name": "WlanConnectionProfileDetails",
          "Type": "WlanConnectionProfileDetails",
          "IsGet": true
        },
        {
          "Name": "WwanConnectionProfileDetails",
          "Type": "WwanConnectionProfileDetails",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetConnectionCost",
          "ReturnType": "ConnectionCost"
        },
        {
          "Name": "GetConnectivityIntervalsAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<ConnectivityInterval>>",
          "Parameters": [
            {
              "Name": "startTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "endTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "states",
              "Type": "NetworkUsageStates"
            }
          ]
        },
        {
          "Name": "GetDataPlanStatus",
          "ReturnType": "DataPlanStatus"
        },
        {
          "Name": "GetDomainConnectivityLevel",
          "ReturnType": "DomainConnectivityLevel"
        },
        {
          "Name": "GetLocalUsage",
          "ReturnType": "DataUsage",
          "Parameters": [
            {
              "Name": "StartTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "EndTime",
              "Type": "DateTimeOffset"
            }
          ]
        },
        {
          "Name": "GetLocalUsage",
          "ReturnType": "DataUsage",
          "Parameters": [
            {
              "Name": "StartTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "EndTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "States",
              "Type": "RoamingStates"
            }
          ]
        },
        {
          "Name": "GetNetworkConnectivityLevel",
          "ReturnType": "NetworkConnectivityLevel"
        },
        {
          "Name": "GetNetworkNames",
          "ReturnType": "IReadOnlyList<String>"
        },
        {
          "Name": "GetNetworkUsageAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<NetworkUsage>>",
          "Parameters": [
            {
              "Name": "startTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "endTime",
              "Type": "DateTimeOffset"
            },
            {
              "Name": "granularity",
              "Type": "DataUsageGranularity"
            },
            {
              "Name": "states",
              "Type": "NetworkUsageStates"
            }
          ]
        },
        {
          "Name": "GetSignalBars",
          "ReturnType": "Nullable<Byte>"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ConnectionProfile"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IsConnected",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsWlanConnectionProfile",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsWwanConnectionProfile",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NetworkCostType",
          "Type": "NetworkCostType",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ServiceProviderGuid",
          "Type": "Nullable<Guid>",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ConnectionProfileFilter"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ConnectionProfile",
          "Type": "ConnectionProfile",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ConnectionSession"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ConnectionDuration",
          "Type": "TimeSpan",
          "IsGet": true
        },
        {
          "Name": "StartTime",
          "Type": "DateTimeOffset",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ConnectivityInterval"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "AcquireConnectionAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ConnectionSession>",
          "Parameters": [
            {
              "Name": "cellularApnContext",
              "Type": "CellularApnContext"
            }
          ]
        },
        {
          "Name": "AddHttpRoutePolicy",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "routePolicy",
              "Type": "RoutePolicy"
            }
          ]
        },
        {
          "Name": "RemoveHttpRoutePolicy",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "routePolicy",
              "Type": "RoutePolicy"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ConnectivityManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DataLimitInMegabytes",
          "Type": "Nullable<UInt32>",
          "IsGet": true
        },
        {
          "Name": "DataPlanUsage",
          "Type": "DataPlanUsage",
          "IsGet": true
        },
        {
          "Name": "InboundBitsPerSecond",
          "Type": "Nullable<UInt64>",
          "IsGet": true
        },
        {
          "Name": "MaxTransferSizeInMegabytes",
          "Type": "Nullable<UInt32>",
          "IsGet": true
        },
        {
          "Name": "NextBillingCycle",
          "Type": "Nullable<DateTimeOffset>",
          "IsGet": true
        },
        {
          "Name": "OutboundBitsPerSecond",
          "Type": "Nullable<UInt64>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.DataPlanStatus"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "LastSyncTime",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "MegabytesUsed",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.DataPlanUsage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BytesReceived",
          "Type": "UInt64",
          "IsGet": true
        },
        {
          "Name": "BytesSent",
          "Type": "UInt64",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.DataUsage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NetworkAdapter",
          "Type": "NetworkAdapter",
          "IsGet": true
        },
        {
          "Name": "PrefixLength",
          "Type": "Nullable<Byte>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.IPInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "InfrastructureId",
          "Type": "LanIdentifierData",
          "IsGet": true
        },
        {
          "Name": "NetworkAdapterId",
          "Type": "Guid",
          "IsGet": true
        },
        {
          "Name": "PortId",
          "Type": "LanIdentifierData",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.LanIdentifier"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Type",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Value",
          "Type": "IReadOnlyList<Byte>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.LanIdentifierData"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IanaInterfaceType",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "InboundMaxBitsPerSecond",
          "Type": "UInt64",
          "IsGet": true
        },
        {
          "Name": "NetworkAdapterId",
          "Type": "Guid",
          "IsGet": true
        },
        {
          "Name": "NetworkItem",
          "Type": "NetworkItem",
          "IsGet": true
        },
        {
          "Name": "OutboundMaxBitsPerSecond",
          "Type": "UInt64",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetConnectedProfileAsync",
          "ReturnType": "IAsyncOperation<ConnectionProfile>"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.NetworkAdapter"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "FindConnectionProfilesAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<ConnectionProfile>>",
          "Parameters": [
            {
              "Name": "pProfileFilter",
              "Type": "ConnectionProfileFilter"
            }
          ]
        },
        {
          "Name": "GetConnectionProfiles",
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<ConnectionProfile>"
        },
        {
          "Name": "GetHostNames",
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<HostName>"
        },
        {
          "Name": "GetInternetConnectionProfile",
          "IsStatic": true,
          "ReturnType": "ConnectionProfile"
        },
        {
          "Name": "GetLanIdentifiers",
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<LanIdentifier>"
        },
        {
          "Name": "GetProxyConfigurationAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<ProxyConfiguration>",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "GetSortedEndpointPairs",
          "IsStatic": true,
          "ReturnType": "IReadOnlyList<EndpointPair>",
          "Parameters": [
            {
              "Name": "destinationList",
              "Type": "IEnumerable<EndpointPair>"
            },
            {
              "Name": "sortOptions",
              "Type": "HostNameSortOptions"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "NetworkStatusChanged",
          "Type": "NetworkStatusChangedEventHandler",
          "IsStatic": true
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NetworkId",
          "Type": "Guid",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetNetworkTypes",
          "ReturnType": "NetworkTypes"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.NetworkItem"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NetworkAuthenticationType",
          "Type": "NetworkAuthenticationType",
          "IsGet": true
        },
        {
          "Name": "NetworkEncryptionType",
          "Type": "NetworkEncryptionType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.NetworkSecuritySettings"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "HasNewConnectionCost",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "HasNewDomainConnectivityLevel",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "HasNewHostNameList",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "HasNewInternetConnectionProfile",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "HasNewNetworkConnectivityLevel",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "HasNewWwanRegistrationState",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.NetworkStateChangeEventDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BytesReceived",
          "Type": "UInt64",
          "IsGet": true
        },
        {
          "Name": "BytesSent",
          "Type": "UInt64",
          "IsGet": true
        },
        {
          "Name": "ConnectionDuration",
          "Type": "TimeSpan",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.NetworkUsage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CanConnectDirectly",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "ProxyUris",
          "Type": "IReadOnlyList<Uri>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.ProxyConfiguration"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "connectionProfile",
              "Type": "ConnectionProfile"
            },
            {
              "Name": "hostName",
              "Type": "HostName"
            },
            {
              "Name": "type",
              "Type": "DomainNameType"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "ConnectionProfile",
          "Type": "ConnectionProfile",
          "IsGet": true
        },
        {
          "Name": "HostName",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "HostNameType",
          "Type": "DomainNameType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.RoutePolicy"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetConnectedSsid",
          "ReturnType": "String"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.WlanConnectionProfileDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AccessPointName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "HomeProviderId",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetCurrentDataClass",
          "ReturnType": "WwanDataClass"
        },
        {
          "Name": "GetNetworkRegistrationState",
          "ReturnType": "WwanNetworkRegistrationState"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.WwanConnectionProfileDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "localHostName",
              "Type": "HostName"
            },
            {
              "Name": "localServiceName",
              "Type": "String"
            },
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "LocalHostName",
          "Type": "HostName",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LocalServiceName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RemoteHostName",
          "Type": "HostName",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RemoteServiceName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.EndpointPair"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "hostName",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "CanonicalName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "IPInformation",
          "Type": "IPInformation",
          "IsGet": true
        },
        {
          "Name": "RawName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "HostNameType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Compare",
          "IsStatic": true,
          "ReturnType": "Int32",
          "Parameters": [
            {
              "Name": "value1",
              "Type": "String"
            },
            {
              "Name": "value2",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "IsEqual",
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "hostName",
              "Type": "HostName"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.HostName"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AuthenticationUrl",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "NetworkAdapter",
          "Type": "NetworkAdapter",
          "IsGet": true
        },
        {
          "Name": "RedirectMessageUrl",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "RedirectMessageXml",
          "Type": "XmlDocument",
          "IsGet": true
        },
        {
          "Name": "WirelessNetworkId",
          "Type": "Byte[]",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AbortAuthentication",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "markAsManual",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "IssueCredentials",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "password",
              "Type": "String"
            },
            {
              "Name": "extraParameters",
              "Type": "String"
            },
            {
              "Name": "markAsManualConnectOnFailure",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "IssueCredentialsAsync",
          "ReturnType": "IAsyncOperation<HotspotCredentialsAuthenticationResult>",
          "Parameters": [
            {
              "Name": "userName",
              "Type": "String"
            },
            {
              "Name": "password",
              "Type": "String"
            },
            {
              "Name": "extraParameters",
              "Type": "String"
            },
            {
              "Name": "markAsManualConnectOnFailure",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SkipAuthentication",
          "ReturnType": "Void"
        },
        {
          "Name": "TriggerAttentionRequired",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "packageRelativeApplicationId",
              "Type": "String"
            },
            {
              "Name": "applicationParameters",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TryGetAuthenticationContext",
          "IsStatic": true,
          "ReturnType": "Boolean",
          "Parameters": [
            {
              "Name": "evenToken",
              "Type": "String"
            },
            {
              "Name": "context",
              "Type": "HotspotAuthenticationContext&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.HotspotAuthenticationContext"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "EventToken",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.HotspotAuthenticationEventDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AuthenticationReplyXml",
          "Type": "XmlDocument",
          "IsGet": true
        },
        {
          "Name": "HasNetworkErrorOccurred",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "LogoffUrl",
          "Type": "Uri",
          "IsGet": true
        },
        {
          "Name": "ResponseCode",
          "Type": "HotspotAuthenticationResponseCode",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.HotspotCredentialsAuthenticationResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AvailableNetworkAccountIds",
          "Type": "IReadOnlyList<String>",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "CurrentDeviceInformation",
          "Type": "MobileBroadbandDeviceInformation",
          "IsGet": true
        },
        {
          "Name": "CurrentNetwork",
          "Type": "MobileBroadbandNetwork",
          "IsGet": true
        },
        {
          "Name": "NetworkAccountId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ServiceProviderGuid",
          "Type": "Guid",
          "IsGet": true
        },
        {
          "Name": "ServiceProviderName",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateFromNetworkAccountId",
          "IsStatic": true,
          "ReturnType": "MobileBroadbandAccount",
          "Parameters": [
            {
              "Name": "networkAccountId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetConnectionProfiles",
          "ReturnType": "IReadOnlyList<ConnectionProfile>"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandAccount"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NetworkAccountId",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandAccountEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "HasDeviceInformationChanged",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "HasNetworkChanged",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "NetworkAccountId",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandAccountUpdatedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Status",
          "Type": "MobileBroadbandAccountWatcherStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Start",
          "ReturnType": "Void"
        },
        {
          "Name": "Stop",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "AccountAdded",
          "Type": "TypedEventHandler<MobileBroadbandAccountWatcher,MobileBroadbandAccountEventArgs>"
        },
        {
          "Name": "AccountRemoved",
          "Type": "TypedEventHandler<MobileBroadbandAccountWatcher,MobileBroadbandAccountEventArgs>"
        },
        {
          "Name": "AccountUpdated",
          "Type": "TypedEventHandler<MobileBroadbandAccountWatcher,MobileBroadbandAccountUpdatedEventArgs>"
        },
        {
          "Name": "EnumerationCompleted",
          "Type": "TypedEventHandler<MobileBroadbandAccountWatcher,Object>"
        },
        {
          "Name": "Stopped",
          "Type": "TypedEventHandler<MobileBroadbandAccountWatcher,Object>"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CellularClass",
          "Type": "CellularClass",
          "IsGet": true
        },
        {
          "Name": "CurrentRadioState",
          "Type": "MobileBroadbandRadioState",
          "IsGet": true
        },
        {
          "Name": "CustomDataClass",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DataClasses",
          "Type": "DataClasses",
          "IsGet": true
        },
        {
          "Name": "DeviceId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DeviceType",
          "Type": "MobileBroadbandDeviceType",
          "IsGet": true
        },
        {
          "Name": "FirmwareInformation",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Manufacturer",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "MobileEquipmentId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Model",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "NetworkDeviceStatus",
          "Type": "NetworkDeviceStatus",
          "IsGet": true
        },
        {
          "Name": "PinManager",
          "Type": "MobileBroadbandPinManager",
          "IsGet": true
        },
        {
          "Name": "Revision",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SerialNumber",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SimIccId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SubscriberId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "TelephoneNumbers",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandDeviceInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DeviceServiceId",
          "Type": "Guid",
          "IsGet": true
        },
        {
          "Name": "SupportedCommands",
          "Type": "IReadOnlyList<UInt32>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "OpenCommandSession",
          "ReturnType": "MobileBroadbandDeviceServiceCommandSession"
        },
        {
          "Name": "OpenDataSession",
          "ReturnType": "MobileBroadbandDeviceServiceDataSession"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandDeviceService"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ResponseData",
          "Type": "IBuffer",
          "IsGet": true
        },
        {
          "Name": "StatusCode",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceCommandResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CloseSession",
          "ReturnType": "Void"
        },
        {
          "Name": "SendQueryCommandAsync",
          "ReturnType": "IAsyncOperation<MobileBroadbandDeviceServiceCommandResult>",
          "Parameters": [
            {
              "Name": "commandId",
              "Type": "UInt32"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "SendSetCommandAsync",
          "ReturnType": "IAsyncOperation<MobileBroadbandDeviceServiceCommandResult>",
          "Parameters": [
            {
              "Name": "commandId",
              "Type": "UInt32"
            },
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceCommandSession"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ReceivedData",
          "Type": "IBuffer",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CloseSession",
          "ReturnType": "Void"
        },
        {
          "Name": "WriteDataAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "value",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "DataReceived",
          "Type": "TypedEventHandler<MobileBroadbandDeviceServiceDataSession,MobileBroadbandDeviceServiceDataReceivedEventArgs>"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataSession"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DeviceServiceId",
          "Type": "Guid",
          "IsGet": true
        },
        {
          "Name": "IsDataReadSupported",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IsDataWriteSupported",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DeviceId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "DeviceServiceId",
          "Type": "Guid",
          "IsGet": true
        },
        {
          "Name": "ReceivedData",
          "Type": "IBuffer",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CurrentAccount",
          "Type": "MobileBroadbandAccount",
          "IsGet": true
        },
        {
          "Name": "DeviceInformation",
          "Type": "MobileBroadbandDeviceInformation",
          "IsGet": true
        },
        {
          "Name": "DeviceServices",
          "Type": "IReadOnlyList<MobileBroadbandDeviceServiceInformation>",
          "IsGet": true
        },
        {
          "Name": "MaxDeviceServiceCommandSizeInBytes",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "MaxDeviceServiceDataSizeInBytes",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Uicc",
          "Type": "MobileBroadbandUicc",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "FromId",
          "IsStatic": true,
          "ReturnType": "MobileBroadbandModem",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetDefault",
          "IsStatic": true,
          "ReturnType": "MobileBroadbandModem"
        },
        {
          "Name": "GetDeviceSelector",
          "IsStatic": true,
          "ReturnType": "String"
        },
        {
          "Name": "GetDeviceService",
          "ReturnType": "MobileBroadbandDeviceService",
          "Parameters": [
            {
              "Name": "deviceServiceId",
              "Type": "Guid"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandModem"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AccessPointName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ActivationNetworkError",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "NetworkAdapter",
          "Type": "NetworkAdapter",
          "IsGet": true
        },
        {
          "Name": "NetworkRegistrationState",
          "Type": "NetworkRegistrationState",
          "IsGet": true
        },
        {
          "Name": "PacketAttachNetworkError",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "RegisteredDataClass",
          "Type": "DataClasses",
          "IsGet": true
        },
        {
          "Name": "RegisteredProviderId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "RegisteredProviderName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "RegistrationNetworkError",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ShowConnectionUI",
          "ReturnType": "Void"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandNetwork"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DeviceId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Network",
          "Type": "MobileBroadbandNetwork",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandNetworkRegistrationStateChange"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NetworkRegistrationStateChanges",
          "Type": "IReadOnlyList<MobileBroadbandNetworkRegistrationStateChange>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandNetworkRegistrationStateChangeTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AttemptsRemaining",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Enabled",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "Format",
          "Type": "MobileBroadbandPinFormat",
          "IsGet": true
        },
        {
          "Name": "LockState",
          "Type": "MobileBroadbandPinLockState",
          "IsGet": true
        },
        {
          "Name": "MaxLength",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "MinLength",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Type",
          "Type": "MobileBroadbandPinType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "DisableAsync",
          "ReturnType": "IAsyncOperation<MobileBroadbandPinOperationResult>",
          "Parameters": [
            {
              "Name": "currentPin",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "EnableAsync",
          "ReturnType": "IAsyncOperation<MobileBroadbandPinOperationResult>",
          "Parameters": [
            {
              "Name": "currentPin",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "EnterAsync",
          "ReturnType": "IAsyncOperation<MobileBroadbandPinOperationResult>",
          "Parameters": [
            {
              "Name": "currentPin",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ChangeAsync",
          "ReturnType": "IAsyncOperation<MobileBroadbandPinOperationResult>",
          "Parameters": [
            {
              "Name": "currentPin",
              "Type": "String"
            },
            {
              "Name": "newPin",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "UnblockAsync",
          "ReturnType": "IAsyncOperation<MobileBroadbandPinOperationResult>",
          "Parameters": [
            {
              "Name": "pinUnblockKey",
              "Type": "String"
            },
            {
              "Name": "newPin",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandPin"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DeviceId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "PinLockState",
          "Type": "MobileBroadbandPinLockState",
          "IsGet": true
        },
        {
          "Name": "PinType",
          "Type": "MobileBroadbandPinType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandPinLockStateChange"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "PinLockStateChanges",
          "Type": "IReadOnlyList<MobileBroadbandPinLockStateChange>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandPinLockStateChangeTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "SupportedPins",
          "Type": "IReadOnlyList<MobileBroadbandPinType>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetPin",
          "ReturnType": "MobileBroadbandPin",
          "Parameters": [
            {
              "Name": "pinType",
              "Type": "MobileBroadbandPinType"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandPinManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AttemptsRemaining",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Succeeded",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandPinOperationResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DeviceId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "RadioState",
          "Type": "MobileBroadbandRadioState",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "RadioStateChanges",
          "Type": "IReadOnlyList<MobileBroadbandRadioStateChange>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChangeTriggerDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "SimIccId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "UiccAppIds",
          "Type": "IReadOnlyList<String>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandUicc"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "EncodingType",
          "Type": "Byte",
          "IsGet": true
        },
        {
          "Name": "Message",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "NetworkAccountId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "NotificationType",
          "Type": "NetworkOperatorEventMessageType",
          "IsGet": true
        },
        {
          "Name": "RuleId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SmsMessage",
          "Type": "ISmsMessage",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AuthorizeTethering",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "allow",
              "Type": "Boolean"
            },
            {
              "Name": "entitlementFailureReason",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Passphrase",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Ssid",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.NetworkOperatorTetheringAccessPointConfiguration"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ClientCount",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "MaxClientCount",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "TetheringOperationalState",
          "Type": "TetheringOperationalState",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ConfigureAccessPointAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "configuration",
              "Type": "NetworkOperatorTetheringAccessPointConfiguration"
            }
          ]
        },
        {
          "Name": "CreateFromNetworkAccountId",
          "IsStatic": true,
          "ReturnType": "NetworkOperatorTetheringManager",
          "Parameters": [
            {
              "Name": "networkAccountId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetCurrentAccessPointConfiguration",
          "ReturnType": "NetworkOperatorTetheringAccessPointConfiguration"
        },
        {
          "Name": "GetTetheringCapability",
          "IsStatic": true,
          "ReturnType": "TetheringCapability",
          "Parameters": [
            {
              "Name": "networkAccountId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "StartTetheringAsync",
          "ReturnType": "IAsyncOperation<NetworkOperatorTetheringOperationResult>"
        },
        {
          "Name": "StopTetheringAsync",
          "ReturnType": "IAsyncOperation<NetworkOperatorTetheringOperationResult>"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.NetworkOperatorTetheringManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AdditionalErrorMessage",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "TetheringOperationStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.NetworkOperatorTetheringOperationResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "UpdateCost",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "NetworkCostType"
            }
          ]
        },
        {
          "Name": "UpdateUsage",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "ProfileUsage"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.ProvisionedProfile"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AllElementsProvisioned",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "ProvisionResultsXml",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.ProvisionFromXmlDocumentResults"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreateFromNetworkAccountId",
          "IsStatic": true,
          "ReturnType": "ProvisioningAgent",
          "Parameters": [
            {
              "Name": "networkAccountId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetProvisionedProfile",
          "ReturnType": "ProvisionedProfile",
          "Parameters": [
            {
              "Name": "mediaType",
              "Type": "ProfileMediaType"
            },
            {
              "Name": "profileName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ProvisionFromXmlDocumentAsync",
          "ReturnType": "IAsyncOperation<ProvisionFromXmlDocumentResults>",
          "Parameters": [
            {
              "Name": "provisioningXmlDocument",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.ProvisioningAgent"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "messageText",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "DataCodingScheme",
          "Type": "Byte",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PayloadAsText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetPayload",
          "ReturnType": "Byte[]"
        },
        {
          "Name": "SetPayload",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "value",
              "Type": "Byte[]"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.UssdMessage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Message",
          "Type": "UssdMessage",
          "IsGet": true
        },
        {
          "Name": "ResultCode",
          "Type": "UssdResultCode",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.UssdReply"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Close",
          "ReturnType": "Void"
        },
        {
          "Name": "CreateFromNetworkAccountId",
          "IsStatic": true,
          "ReturnType": "UssdSession",
          "Parameters": [
            {
              "Name": "networkAccountId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateFromNetworkInterfaceId",
          "IsStatic": true,
          "ReturnType": "UssdSession",
          "Parameters": [
            {
              "Name": "networkInterfaceId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "SendMessageAndGetReplyAsync",
          "ReturnType": "IAsyncOperation<UssdReply>",
          "Parameters": [
            {
              "Name": "message",
              "Type": "UssdMessage"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.UssdSession"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "PeerInformation",
          "Type": "PeerInformation",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Proximity.ConnectionRequestedEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AllowBluetooth",
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AllowInfrastructure",
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AllowWiFiDirect",
          "Type": "Boolean",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AlternateIdentities",
          "Type": "IDictionary<String,String>",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "DiscoveryData",
          "Type": "IBuffer",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Role",
          "Type": "PeerRole",
          "IsStatic": true,
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SupportedDiscoveryTypes",
          "Type": "PeerDiscoveryTypes",
          "IsStatic": true,
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "ConnectAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<StreamSocket>",
          "Parameters": [
            {
              "Name": "peerInformation",
              "Type": "PeerInformation"
            }
          ]
        },
        {
          "Name": "CreateWatcher",
          "IsStatic": true,
          "ReturnType": "PeerWatcher"
        },
        {
          "Name": "FindAllPeersAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<PeerInformation>>"
        },
        {
          "Name": "Start",
          "IsStatic": true,
          "ReturnType": "Void"
        },
        {
          "Name": "Start",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "peerMessage",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "Stop",
          "IsStatic": true,
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "ConnectionRequested",
          "Type": "TypedEventHandler<Object,ConnectionRequestedEventArgs>",
          "IsStatic": true
        },
        {
          "Name": "TriggeredConnectionStateChanged",
          "Type": "TypedEventHandler<Object,TriggeredConnectionStateChangedEventArgs>",
          "IsStatic": true
        }
      ],
      "Name": "Windows.Networking.Proximity.PeerFinder"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DiscoveryData",
          "Type": "IBuffer",
          "IsGet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Proximity.PeerInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Status",
          "Type": "PeerWatcherStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Start",
          "ReturnType": "Void"
        },
        {
          "Name": "Stop",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "Added",
          "Type": "TypedEventHandler<PeerWatcher,PeerInformation>"
        },
        {
          "Name": "EnumerationCompleted",
          "Type": "TypedEventHandler<PeerWatcher,Object>"
        },
        {
          "Name": "Removed",
          "Type": "TypedEventHandler<PeerWatcher,PeerInformation>"
        },
        {
          "Name": "Stopped",
          "Type": "TypedEventHandler<PeerWatcher,Object>"
        },
        {
          "Name": "Updated",
          "Type": "TypedEventHandler<PeerWatcher,PeerInformation>"
        }
      ],
      "Name": "Windows.Networking.Proximity.PeerWatcher"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BitsPerSecond",
          "Type": "UInt64",
          "IsGet": true
        },
        {
          "Name": "DeviceId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "MaxMessageBytes",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "FromId",
          "IsStatic": true,
          "ReturnType": "ProximityDevice",
          "Parameters": [
            {
              "Name": "deviceId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetDefault",
          "IsStatic": true,
          "ReturnType": "ProximityDevice"
        },
        {
          "Name": "GetDeviceSelector",
          "IsStatic": true,
          "ReturnType": "String"
        },
        {
          "Name": "PublishBinaryMessage",
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "messageType",
              "Type": "String"
            },
            {
              "Name": "message",
              "Type": "IBuffer"
            }
          ]
        },
        {
          "Name": "PublishBinaryMessage",
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "messageType",
              "Type": "String"
            },
            {
              "Name": "message",
              "Type": "IBuffer"
            },
            {
              "Name": "messageTransmittedHandler",
              "Type": "MessageTransmittedHandler"
            }
          ]
        },
        {
          "Name": "PublishMessage",
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "messageType",
              "Type": "String"
            },
            {
              "Name": "message",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "PublishMessage",
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "messageType",
              "Type": "String"
            },
            {
              "Name": "message",
              "Type": "String"
            },
            {
              "Name": "messageTransmittedHandler",
              "Type": "MessageTransmittedHandler"
            }
          ]
        },
        {
          "Name": "PublishUriMessage",
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "message",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "PublishUriMessage",
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "message",
              "Type": "Uri"
            },
            {
              "Name": "messageTransmittedHandler",
              "Type": "MessageTransmittedHandler"
            }
          ]
        },
        {
          "Name": "StopPublishingMessage",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "messageId",
              "Type": "Int64"
            }
          ]
        },
        {
          "Name": "StopSubscribingForMessage",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "subscriptionId",
              "Type": "Int64"
            }
          ]
        },
        {
          "Name": "SubscribeForMessage",
          "ReturnType": "Int64",
          "Parameters": [
            {
              "Name": "messageType",
              "Type": "String"
            },
            {
              "Name": "messageReceivedHandler",
              "Type": "MessageReceivedHandler"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "DeviceArrived",
          "Type": "DeviceArrivedEventHandler"
        },
        {
          "Name": "DeviceDeparted",
          "Type": "DeviceDepartedEventHandler"
        }
      ],
      "Name": "Windows.Networking.Proximity.ProximityDevice"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Data",
          "Type": "IBuffer",
          "IsGet": true
        },
        {
          "Name": "DataAsString",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "MessageType",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SubscriptionId",
          "Type": "Int64",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Proximity.ProximityMessage"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Id",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Socket",
          "Type": "StreamSocket",
          "IsGet": true
        },
        {
          "Name": "State",
          "Type": "TriggeredConnectState",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Proximity.TriggeredConnectionStateChangedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ExpirationTime",
          "Type": "DateTimeOffset",
          "IsGet": true
        },
        {
          "Name": "Uri",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Close",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "PushNotificationReceived",
          "Type": "TypedEventHandler<PushNotificationChannel,PushNotificationReceivedEventArgs>"
        }
      ],
      "Name": "Windows.Networking.PushNotifications.PushNotificationChannel"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "CreatePushNotificationChannelForApplicationAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PushNotificationChannel>"
        },
        {
          "Name": "CreatePushNotificationChannelForApplicationAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PushNotificationChannel>",
          "Parameters": [
            {
              "Name": "applicationId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreatePushNotificationChannelForSecondaryTileAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<PushNotificationChannel>",
          "Parameters": [
            {
              "Name": "tileId",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.PushNotifications.PushNotificationChannelManager"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BadgeNotification",
          "Type": "BadgeNotification",
          "IsGet": true
        },
        {
          "Name": "Cancel",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NotificationType",
          "Type": "PushNotificationType",
          "IsGet": true
        },
        {
          "Name": "RawNotification",
          "Type": "RawNotification",
          "IsGet": true
        },
        {
          "Name": "TileNotification",
          "Type": "TileNotification",
          "IsGet": true
        },
        {
          "Name": "ToastNotification",
          "Type": "ToastNotification",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.PushNotifications.PushNotificationReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Content",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.PushNotifications.RawNotification"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "HasInstanceNameChanged",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "IPAddress",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "DnssdRegistrationStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.ServiceDiscovery.Dnssd.DnssdRegistrationResult"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IStringable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "DnssdServiceInstanceName",
              "Type": "HostName"
            },
            {
              "Name": "hostName",
              "Type": "HostName"
            },
            {
              "Name": "port",
              "Type": "UInt16"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "DnssdServiceInstanceName",
          "Type": "HostName",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "HostName",
          "Type": "HostName",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Port",
          "Type": "UInt16",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Priority",
          "Type": "UInt16",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TextAttributes",
          "Type": "IDictionary<String,String>",
          "IsGet": true
        },
        {
          "Name": "Weight",
          "Type": "UInt16",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "RegisterDatagramSocketAsync",
          "ReturnType": "IAsyncOperation<DnssdRegistrationResult>",
          "Parameters": [
            {
              "Name": "socket",
              "Type": "DatagramSocket"
            }
          ]
        },
        {
          "Name": "RegisterDatagramSocketAsync",
          "ReturnType": "IAsyncOperation<DnssdRegistrationResult>",
          "Parameters": [
            {
              "Name": "socket",
              "Type": "DatagramSocket"
            },
            {
              "Name": "adapter",
              "Type": "NetworkAdapter"
            }
          ]
        },
        {
          "Name": "RegisterStreamSocketListenerAsync",
          "ReturnType": "IAsyncOperation<DnssdRegistrationResult>",
          "Parameters": [
            {
              "Name": "socket",
              "Type": "StreamSocketListener"
            }
          ]
        },
        {
          "Name": "RegisterStreamSocketListenerAsync",
          "ReturnType": "IAsyncOperation<DnssdRegistrationResult>",
          "Parameters": [
            {
              "Name": "socket",
              "Type": "StreamSocketListener"
            },
            {
              "Name": "adapter",
              "Type": "NetworkAdapter"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.ServiceDiscovery.Dnssd.DnssdServiceInstance"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<DnssdServiceInstance>",
        "IReadOnlyCollection<DnssdServiceInstance>",
        "IReadOnlyList<DnssdServiceInstance>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.ServiceDiscovery.Dnssd.DnssdServiceInstanceCollection"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Status",
          "Type": "DnssdServiceWatcherStatus",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Start",
          "ReturnType": "Void"
        },
        {
          "Name": "Stop",
          "ReturnType": "Void"
        }
      ],
      "Events": [
        {
          "Name": "Added",
          "Type": "TypedEventHandler<DnssdServiceWatcher,DnssdServiceInstance>"
        },
        {
          "Name": "EnumerationCompleted",
          "Type": "TypedEventHandler<DnssdServiceWatcher,Object>"
        },
        {
          "Name": "Stopped",
          "Type": "TypedEventHandler<DnssdServiceWatcher,Object>"
        }
      ],
      "Name": "Windows.Networking.ServiceDiscovery.Dnssd.DnssdServiceWatcher"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "channelId",
              "Type": "String"
            },
            {
              "Name": "serverKeepAliveIntervalInMinutes",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Parameters": [
            {
              "Name": "channelId",
              "Type": "String"
            },
            {
              "Name": "serverKeepAliveIntervalInMinutes",
              "Type": "UInt32"
            },
            {
              "Name": "resourceRequestType",
              "Type": "ControlChannelTriggerResourceType"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "ControlChannelTriggerId",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "CurrentKeepAliveIntervalInMinutes",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "KeepAliveTrigger",
          "Type": "IBackgroundTrigger",
          "IsGet": true
        },
        {
          "Name": "PushNotificationTrigger",
          "Type": "IBackgroundTrigger",
          "IsGet": true
        },
        {
          "Name": "ServerKeepAliveIntervalInMinutes",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TransportObject",
          "Type": "Object",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "DecreaseNetworkKeepAliveInterval",
          "ReturnType": "Void"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "FlushTransport",
          "ReturnType": "Void"
        },
        {
          "Name": "UsingTransport",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "transport",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "WaitForPushEnabled",
          "ReturnType": "ControlChannelTriggerStatus"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.ControlChannelTrigger"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Control",
          "Type": "DatagramSocketControl",
          "IsGet": true
        },
        {
          "Name": "Information",
          "Type": "DatagramSocketInformation",
          "IsGet": true
        },
        {
          "Name": "OutputStream",
          "Type": "IOutputStream",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "BindEndpointAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localHostName",
              "Type": "HostName"
            },
            {
              "Name": "localServiceName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "BindServiceNameAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localServiceName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "BindServiceNameAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localServiceName",
              "Type": "String"
            },
            {
              "Name": "adapter",
              "Type": "NetworkAdapter"
            }
          ]
        },
        {
          "Name": "CancelIOAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "ConnectAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ConnectAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "endpointPair",
              "Type": "EndpointPair"
            }
          ]
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "EnableTransferOwnership",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "taskId",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "EnableTransferOwnership",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "taskId",
              "Type": "Guid"
            },
            {
              "Name": "connectedStandbyAction",
              "Type": "SocketActivityConnectedStandbyAction"
            }
          ]
        },
        {
          "Name": "GetEndpointPairsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<EndpointPair>>",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetEndpointPairsAsync",
          "IsStatic": true,
          "ReturnType": "IAsyncOperation<IReadOnlyList<EndpointPair>>",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            },
            {
              "Name": "sortOptions",
              "Type": "HostNameSortOptions"
            }
          ]
        },
        {
          "Name": "GetOutputStreamAsync",
          "ReturnType": "IAsyncOperation<IOutputStream>",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "GetOutputStreamAsync",
          "ReturnType": "IAsyncOperation<IOutputStream>",
          "Parameters": [
            {
              "Name": "endpointPair",
              "Type": "EndpointPair"
            }
          ]
        },
        {
          "Name": "JoinMulticastGroup",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "host",
              "Type": "HostName"
            }
          ]
        },
        {
          "Name": "TransferOwnership",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "socketId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TransferOwnership",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "socketId",
              "Type": "String"
            },
            {
              "Name": "data",
              "Type": "SocketActivityContext"
            }
          ]
        },
        {
          "Name": "TransferOwnership",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "socketId",
              "Type": "String"
            },
            {
              "Name": "data",
              "Type": "SocketActivityContext"
            },
            {
              "Name": "keepAliveTime",
              "Type": "TimeSpan"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "MessageReceived",
          "Type": "TypedEventHandler<DatagramSocket,DatagramSocketMessageReceivedEventArgs>"
        }
      ],
      "Name": "Windows.Networking.Sockets.DatagramSocket"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DontFragment",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "InboundBufferSizeInBytes",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OutboundUnicastHopLimit",
          "Type": "Byte",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "QualityOfService",
          "Type": "SocketQualityOfService",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.DatagramSocketControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "LocalAddress",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "LocalPort",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "RemoteAddress",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "RemotePort",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.DatagramSocketInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "LocalAddress",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "RemoteAddress",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "RemotePort",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDataReader",
          "ReturnType": "DataReader"
        },
        {
          "Name": "GetDataStream",
          "ReturnType": "IInputStream"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.DatagramSocketMessageReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IWebSocket"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Control",
          "Type": "MessageWebSocketControl",
          "IsGet": true
        },
        {
          "Name": "Information",
          "Type": "MessageWebSocketInformation",
          "IsGet": true
        },
        {
          "Name": "OutputStream",
          "Type": "IOutputStream",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Close",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "code",
              "Type": "UInt16"
            },
            {
              "Name": "reason",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ConnectAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "SetRequestHeader",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "Closed",
          "Type": "TypedEventHandler<IWebSocket,WebSocketClosedEventArgs>"
        },
        {
          "Name": "MessageReceived",
          "Type": "TypedEventHandler<MessageWebSocket,MessageWebSocketMessageReceivedEventArgs>"
        }
      ],
      "Name": "Windows.Networking.Sockets.MessageWebSocket"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebSocketControl"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "MaxMessageSize",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "MessageType",
          "Type": "SocketMessageType",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OutboundBufferSizeInBytes",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProxyCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ServerCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SupportedProtocols",
          "Type": "IList<String>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.MessageWebSocketControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebSocketInformation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BandwidthStatistics",
          "Type": "BandwidthStatistics",
          "IsGet": true
        },
        {
          "Name": "LocalAddress",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "Protocol",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.MessageWebSocketInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "MessageType",
          "Type": "SocketMessageType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetDataReader",
          "ReturnType": "DataReader"
        },
        {
          "Name": "GetDataStream",
          "ReturnType": "IInputStream"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.MessageWebSocketMessageReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "data",
              "Type": "IBuffer"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Data",
          "Type": "IBuffer",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.SocketActivityContext"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AllSockets",
          "Type": "IReadOnlyDictionary<String,SocketActivityInformation>",
          "IsStatic": true,
          "IsGet": true
        },
        {
          "Name": "Context",
          "Type": "SocketActivityContext",
          "IsGet": true
        },
        {
          "Name": "DatagramSocket",
          "Type": "DatagramSocket",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "SocketKind",
          "Type": "SocketActivityKind",
          "IsGet": true
        },
        {
          "Name": "StreamSocket",
          "Type": "StreamSocket",
          "IsGet": true
        },
        {
          "Name": "StreamSocketListener",
          "Type": "StreamSocketListener",
          "IsGet": true
        },
        {
          "Name": "TaskId",
          "Type": "Guid",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.SocketActivityInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Reason",
          "Type": "SocketActivityTriggerReason",
          "IsGet": true
        },
        {
          "Name": "SocketInformation",
          "Type": "SocketActivityInformation",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.SocketActivityTriggerDetails"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetStatus",
          "IsStatic": true,
          "ReturnType": "SocketErrorStatus",
          "Parameters": [
            {
              "Name": "hresult",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.SocketError"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Control",
          "Type": "StreamSocketControl",
          "IsGet": true
        },
        {
          "Name": "Information",
          "Type": "StreamSocketInformation",
          "IsGet": true
        },
        {
          "Name": "InputStream",
          "Type": "IInputStream",
          "IsGet": true
        },
        {
          "Name": "OutputStream",
          "Type": "IOutputStream",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "CancelIOAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "ConnectAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "endpointPair",
              "Type": "EndpointPair"
            }
          ]
        },
        {
          "Name": "ConnectAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ConnectAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "endpointPair",
              "Type": "EndpointPair"
            },
            {
              "Name": "protectionLevel",
              "Type": "SocketProtectionLevel"
            }
          ]
        },
        {
          "Name": "ConnectAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            },
            {
              "Name": "protectionLevel",
              "Type": "SocketProtectionLevel"
            }
          ]
        },
        {
          "Name": "ConnectAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "remoteHostName",
              "Type": "HostName"
            },
            {
              "Name": "remoteServiceName",
              "Type": "String"
            },
            {
              "Name": "protectionLevel",
              "Type": "SocketProtectionLevel"
            },
            {
              "Name": "adapter",
              "Type": "NetworkAdapter"
            }
          ]
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "EnableTransferOwnership",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "taskId",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "EnableTransferOwnership",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "taskId",
              "Type": "Guid"
            },
            {
              "Name": "connectedStandbyAction",
              "Type": "SocketActivityConnectedStandbyAction"
            }
          ]
        },
        {
          "Name": "TransferOwnership",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "socketId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TransferOwnership",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "socketId",
              "Type": "String"
            },
            {
              "Name": "data",
              "Type": "SocketActivityContext"
            }
          ]
        },
        {
          "Name": "TransferOwnership",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "socketId",
              "Type": "String"
            },
            {
              "Name": "data",
              "Type": "SocketActivityContext"
            },
            {
              "Name": "keepAliveTime",
              "Type": "TimeSpan"
            }
          ]
        },
        {
          "Name": "UpgradeToSslAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "protectionLevel",
              "Type": "SocketProtectionLevel"
            },
            {
              "Name": "validationHostName",
              "Type": "HostName"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamSocket"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "IgnorableServerCertificateErrors",
          "Type": "IList<ChainValidationResult>",
          "IsGet": true
        },
        {
          "Name": "KeepAlive",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NoDelay",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OutboundBufferSizeInBytes",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OutboundUnicastHopLimit",
          "Type": "Byte",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "QualityOfService",
          "Type": "SocketQualityOfService",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SerializeConnectionAttempts",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamSocketControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BandwidthStatistics",
          "Type": "BandwidthStatistics",
          "IsGet": true
        },
        {
          "Name": "LocalAddress",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "LocalPort",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ProtectionLevel",
          "Type": "SocketProtectionLevel",
          "IsGet": true
        },
        {
          "Name": "RemoteAddress",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "RemoteHostName",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "RemotePort",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "RemoteServiceName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "RoundTripTimeStatistics",
          "Type": "RoundTripTimeStatistics",
          "IsGet": true
        },
        {
          "Name": "ServerCertificate",
          "Type": "Certificate",
          "IsGet": true
        },
        {
          "Name": "ServerCertificateErrors",
          "Type": "IReadOnlyList<ChainValidationResult>",
          "IsGet": true
        },
        {
          "Name": "ServerCertificateErrorSeverity",
          "Type": "SocketSslErrorSeverity",
          "IsGet": true
        },
        {
          "Name": "ServerIntermediateCertificates",
          "Type": "IReadOnlyList<Certificate>",
          "IsGet": true
        },
        {
          "Name": "SessionKey",
          "Type": "IBuffer",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamSocketInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Control",
          "Type": "StreamSocketListenerControl",
          "IsGet": true
        },
        {
          "Name": "Information",
          "Type": "StreamSocketListenerInformation",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "BindEndpointAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localHostName",
              "Type": "HostName"
            },
            {
              "Name": "localServiceName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "BindServiceNameAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localServiceName",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "BindServiceNameAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localServiceName",
              "Type": "String"
            },
            {
              "Name": "protectionLevel",
              "Type": "SocketProtectionLevel"
            }
          ]
        },
        {
          "Name": "BindServiceNameAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "localServiceName",
              "Type": "String"
            },
            {
              "Name": "protectionLevel",
              "Type": "SocketProtectionLevel"
            },
            {
              "Name": "adapter",
              "Type": "NetworkAdapter"
            }
          ]
        },
        {
          "Name": "CancelIOAsync",
          "ReturnType": "IAsyncAction"
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "EnableTransferOwnership",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "taskId",
              "Type": "Guid"
            }
          ]
        },
        {
          "Name": "EnableTransferOwnership",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "taskId",
              "Type": "Guid"
            },
            {
              "Name": "connectedStandbyAction",
              "Type": "SocketActivityConnectedStandbyAction"
            }
          ]
        },
        {
          "Name": "TransferOwnership",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "socketId",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "TransferOwnership",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "socketId",
              "Type": "String"
            },
            {
              "Name": "data",
              "Type": "SocketActivityContext"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "ConnectionReceived",
          "Type": "TypedEventHandler<StreamSocketListener,StreamSocketListenerConnectionReceivedEventArgs>"
        }
      ],
      "Name": "Windows.Networking.Sockets.StreamSocketListener"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Socket",
          "Type": "StreamSocket",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamSocketListenerConnectionReceivedEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "KeepAlive",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NoDelay",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OutboundBufferSizeInBytes",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OutboundUnicastHopLimit",
          "Type": "Byte",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "QualityOfService",
          "Type": "SocketQualityOfService",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamSocketListenerControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "LocalPort",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamSocketListenerInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IDisposable",
        "IWebSocket"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Control",
          "Type": "StreamWebSocketControl",
          "IsGet": true
        },
        {
          "Name": "Information",
          "Type": "StreamWebSocketInformation",
          "IsGet": true
        },
        {
          "Name": "InputStream",
          "Type": "IInputStream",
          "IsGet": true
        },
        {
          "Name": "OutputStream",
          "Type": "IOutputStream",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "Close",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "code",
              "Type": "UInt16"
            },
            {
              "Name": "reason",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ConnectAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "Dispose",
          "ReturnType": "Void"
        },
        {
          "Name": "SetRequestHeader",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "Closed",
          "Type": "TypedEventHandler<IWebSocket,WebSocketClosedEventArgs>"
        }
      ],
      "Name": "Windows.Networking.Sockets.StreamWebSocket"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebSocketControl"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NoDelay",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OutboundBufferSizeInBytes",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProxyCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ServerCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SupportedProtocols",
          "Type": "IList<String>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamWebSocketControl"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IWebSocketInformation"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "BandwidthStatistics",
          "Type": "BandwidthStatistics",
          "IsGet": true
        },
        {
          "Name": "LocalAddress",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "Protocol",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.StreamWebSocketInformation"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Code",
          "Type": "UInt16",
          "IsGet": true
        },
        {
          "Name": "Reason",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.WebSocketClosedEventArgs"
    },
    {
      "IsStatic": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetStatus",
          "IsStatic": true,
          "ReturnType": "WebErrorStatus",
          "Parameters": [
            {
              "Name": "hresult",
              "Type": "Int32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.WebSocketError"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IBackgroundTask"
      ],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "Run",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "taskInstance",
              "Type": "IBackgroundTaskInstance"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Sockets.WebSocketKeepAlive"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "type",
              "Type": "VpnAppIdType"
            },
            {
              "Name": "value",
              "Type": "String"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Type",
          "Type": "VpnAppIdType",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Value",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnAppId"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCredential"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AdditionalPin",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "CertificateCredential",
          "Type": "Certificate",
          "IsGet": true
        },
        {
          "Name": "OldPasswordCredential",
          "Type": "PasswordCredential",
          "IsGet": true
        },
        {
          "Name": "PasskeyCredential",
          "Type": "PasswordCredential",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCredential"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPrompt"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Bordered",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Compulsory",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Label",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "OptionsText",
          "Type": "IReadOnlyList<String>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Selected",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomComboBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPrompt"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Bordered",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Compulsory",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DefaultText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Label",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NoEcho",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Text",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomEditBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPrompt"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Bordered",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Compulsory",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Label",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomErrorBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPrompt"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Bordered",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Compulsory",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Checked",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "InitialCheckState",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Label",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomCheckBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPromptElement"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Compulsory",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Emphasized",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "InitialValue",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Value",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomPromptBooleanInput"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPromptElement"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Compulsory",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Emphasized",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Options",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "SelectedIndex",
          "Type": "UInt32",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomPromptOptionSelector"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPromptElement"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Compulsory",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Emphasized",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Text",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomPromptText"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPromptElement"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Compulsory",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Emphasized",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "IsTextHidden",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PlaceholderText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Text",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomPromptTextInput"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnCustomPrompt"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Bordered",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Compulsory",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisplayText",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Label",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnCustomTextBox"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "DomainNameList",
          "Type": "IList<VpnDomainNameInfo>",
          "IsGet": true
        },
        {
          "Name": "ProxyAutoConfigurationUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnDomainNameAssignment"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "nameType",
              "Type": "VpnDomainNameType"
            },
            {
              "Name": "dnsServerList",
              "Type": "IEnumerable<HostName>"
            },
            {
              "Name": "proxyServerList",
              "Type": "IEnumerable<HostName>"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "DnsServers",
          "Type": "IList<HostName>",
          "IsGet": true
        },
        {
          "Name": "DomainName",
          "Type": "HostName",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DomainNameType",
          "Type": "VpnDomainNameType",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "WebProxyServers",
          "Type": "IList<HostName>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnDomainNameInfo"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Configuration",
          "Type": "VpnChannelConfiguration",
          "IsGet": true
        },
        {
          "Name": "Id",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "PlugInContext",
          "Type": "Object",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SystemHealth",
          "Type": "VpnSystemHealth",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AssociateTransport",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "mainOuterTunnelTransport",
              "Type": "Object"
            },
            {
              "Name": "optionalOuterTunnelTransport",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "GetVpnReceivePacketBuffer",
          "ReturnType": "VpnPacketBuffer"
        },
        {
          "Name": "GetVpnSendPacketBuffer",
          "ReturnType": "VpnPacketBuffer"
        },
        {
          "Name": "LogDiagnosticMessage",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "message",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ProcessEventAsync",
          "IsStatic": true,
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "thirdPartyPlugIn",
              "Type": "Object"
            },
            {
              "Name": "event",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "RequestCredentials",
          "ReturnType": "VpnPickedCredential",
          "Parameters": [
            {
              "Name": "credType",
              "Type": "VpnCredentialType"
            },
            {
              "Name": "isRetry",
              "Type": "Boolean"
            },
            {
              "Name": "isSingleSignOnCredential",
              "Type": "Boolean"
            },
            {
              "Name": "certificate",
              "Type": "Certificate"
            }
          ]
        },
        {
          "Name": "RequestCredentialsAsync",
          "ReturnType": "IAsyncOperation<VpnCredential>",
          "Parameters": [
            {
              "Name": "credType",
              "Type": "VpnCredentialType"
            },
            {
              "Name": "credOptions",
              "Type": "UInt32"
            },
            {
              "Name": "certificate",
              "Type": "Certificate"
            }
          ]
        },
        {
          "Name": "RequestCredentialsAsync",
          "ReturnType": "IAsyncOperation<VpnCredential>",
          "Parameters": [
            {
              "Name": "credType",
              "Type": "VpnCredentialType"
            },
            {
              "Name": "credOptions",
              "Type": "UInt32"
            }
          ]
        },
        {
          "Name": "RequestCredentialsAsync",
          "ReturnType": "IAsyncOperation<VpnCredential>",
          "Parameters": [
            {
              "Name": "credType",
              "Type": "VpnCredentialType"
            }
          ]
        },
        {
          "Name": "RequestCustomPrompt",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "customPrompt",
              "Type": "IReadOnlyList<IVpnCustomPrompt>"
            }
          ]
        },
        {
          "Name": "RequestCustomPromptAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "customPromptElement",
              "Type": "IReadOnlyList<IVpnCustomPromptElement>"
            }
          ]
        },
        {
          "Name": "RequestVpnPacketBuffer",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "type",
              "Type": "VpnDataPathType"
            },
            {
              "Name": "vpnPacketBuffer",
              "Type": "VpnPacketBuffer&",
              "Out": true
            }
          ]
        },
        {
          "Name": "SetAllowedSslTlsVersions",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "tunnelTransport",
              "Type": "Object"
            },
            {
              "Name": "useTls12",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "SetErrorMessage",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "message",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "Start",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "assignedClientIPv4list",
              "Type": "IReadOnlyList<HostName>"
            },
            {
              "Name": "assignedClientIPv6list",
              "Type": "IReadOnlyList<HostName>"
            },
            {
              "Name": "vpnInterfaceId",
              "Type": "VpnInterfaceId"
            },
            {
              "Name": "routeScope",
              "Type": "VpnRouteAssignment"
            },
            {
              "Name": "namespaceScope",
              "Type": "VpnNamespaceAssignment"
            },
            {
              "Name": "mtuSize",
              "Type": "UInt32"
            },
            {
              "Name": "maxFrameSize",
              "Type": "UInt32"
            },
            {
              "Name": "optimizeForLowCostNetwork",
              "Type": "Boolean"
            },
            {
              "Name": "mainOuterTunnelTransport",
              "Type": "Object"
            },
            {
              "Name": "optionalOuterTunnelTransport",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "StartExistingTransports",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "assignedClientIPv4list",
              "Type": "IReadOnlyList<HostName>"
            },
            {
              "Name": "assignedClientIPv6list",
              "Type": "IReadOnlyList<HostName>"
            },
            {
              "Name": "vpnInterfaceId",
              "Type": "VpnInterfaceId"
            },
            {
              "Name": "assignedRoutes",
              "Type": "VpnRouteAssignment"
            },
            {
              "Name": "assignedDomainName",
              "Type": "VpnDomainNameAssignment"
            },
            {
              "Name": "mtuSize",
              "Type": "UInt32"
            },
            {
              "Name": "maxFrameSize",
              "Type": "UInt32"
            },
            {
              "Name": "Reserved",
              "Type": "Boolean"
            }
          ]
        },
        {
          "Name": "StartWithMainTransport",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "assignedClientIPv4list",
              "Type": "IReadOnlyList<HostName>"
            },
            {
              "Name": "assignedClientIPv6list",
              "Type": "IReadOnlyList<HostName>"
            },
            {
              "Name": "vpnInterfaceId",
              "Type": "VpnInterfaceId"
            },
            {
              "Name": "assignedRoutes",
              "Type": "VpnRouteAssignment"
            },
            {
              "Name": "assignedDomainName",
              "Type": "VpnDomainNameAssignment"
            },
            {
              "Name": "mtuSize",
              "Type": "UInt32"
            },
            {
              "Name": "maxFrameSize",
              "Type": "UInt32"
            },
            {
              "Name": "Reserved",
              "Type": "Boolean"
            },
            {
              "Name": "mainOuterTunnelTransport",
              "Type": "Object"
            }
          ]
        },
        {
          "Name": "StartWithTrafficFilter",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "assignedClientIpv4List",
              "Type": "IReadOnlyList<HostName>"
            },
            {
              "Name": "assignedClientIpv6List",
              "Type": "IReadOnlyList<HostName>"
            },
            {
              "Name": "vpnInterfaceId",
              "Type": "VpnInterfaceId"
            },
            {
              "Name": "assignedRoutes",
              "Type": "VpnRouteAssignment"
            },
            {
              "Name": "assignedNamespace",
              "Type": "VpnDomainNameAssignment"
            },
            {
              "Name": "mtuSize",
              "Type": "UInt32"
            },
            {
              "Name": "maxFrameSize",
              "Type": "UInt32"
            },
            {
              "Name": "reserved",
              "Type": "Boolean"
            },
            {
              "Name": "mainOuterTunnelTransport",
              "Type": "Object"
            },
            {
              "Name": "optionalOuterTunnelTransport",
              "Type": "Object"
            },
            {
              "Name": "assignedTrafficFilters",
              "Type": "VpnTrafficFilterAssignment"
            }
          ]
        },
        {
          "Name": "Stop",
          "ReturnType": "Void"
        },
        {
          "Name": "TerminateConnection",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "message",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "ActivityChange",
          "Type": "TypedEventHandler<VpnChannel,VpnChannelActivityEventArgs>"
        },
        {
          "Name": "ActivityStateChange",
          "Type": "TypedEventHandler<VpnChannel,VpnChannelActivityStateChangedArgs>"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnChannel"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Type",
          "Type": "VpnChannelActivityEventType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnChannelActivityEventArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ActivityState",
          "Type": "VpnChannelActivityEventType",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnChannelActivityStateChangedArgs"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "CustomField",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ServerHostNameList",
          "Type": "IReadOnlyList<HostName>",
          "IsGet": true
        },
        {
          "Name": "ServerServiceName",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "ServerUris",
          "Type": "IReadOnlyList<Uri>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnChannelConfiguration"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "address",
              "Type": "Byte[]"
            }
          ]
        }
      ],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "GetAddressInfo",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "id",
              "Type": "Byte[]&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnInterfaceId"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [],
      "Methods": [
        {
          "Name": "AddProfileFromObjectAsync",
          "ReturnType": "IAsyncOperation<VpnManagementErrorStatus>",
          "Parameters": [
            {
              "Name": "profile",
              "Type": "VpnProfile"
            }
          ]
        },
        {
          "Name": "AddProfileFromXmlAsync",
          "ReturnType": "IAsyncOperation<VpnManagementErrorStatus>",
          "Parameters": [
            {
              "Name": "xml",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ConnectProfileAsync",
          "ReturnType": "IAsyncOperation<VpnManagementErrorStatus>",
          "Parameters": [
            {
              "Name": "profile",
              "Type": "VpnProfile"
            }
          ]
        },
        {
          "Name": "ConnectProfileWithPasswordCredentialAsync",
          "ReturnType": "IAsyncOperation<VpnManagementErrorStatus>",
          "Parameters": [
            {
              "Name": "profile",
              "Type": "VpnProfile"
            },
            {
              "Name": "passwordCredential",
              "Type": "PasswordCredential"
            }
          ]
        },
        {
          "Name": "DeleteProfileAsync",
          "ReturnType": "IAsyncOperation<VpnManagementErrorStatus>",
          "Parameters": [
            {
              "Name": "profile",
              "Type": "VpnProfile"
            }
          ]
        },
        {
          "Name": "DisconnectProfileAsync",
          "ReturnType": "IAsyncOperation<VpnManagementErrorStatus>",
          "Parameters": [
            {
              "Name": "profile",
              "Type": "VpnProfile"
            }
          ]
        },
        {
          "Name": "GetProfilesAsync",
          "ReturnType": "IAsyncOperation<IReadOnlyList<IVpnProfile>>"
        },
        {
          "Name": "UpdateProfileFromObjectAsync",
          "ReturnType": "IAsyncOperation<VpnManagementErrorStatus>",
          "Parameters": [
            {
              "Name": "profile",
              "Type": "VpnProfile"
            }
          ]
        },
        {
          "Name": "UpdateProfileFromXmlAsync",
          "ReturnType": "IAsyncOperation<VpnManagementErrorStatus>",
          "Parameters": [
            {
              "Name": "xml",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnManagementAgent"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "NamespaceList",
          "Type": "IList<VpnNamespaceInfo>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProxyAutoConfigUri",
          "Type": "Uri",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnNamespaceAssignment"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "dnsServerList",
              "Type": "IList<HostName>"
            },
            {
              "Name": "proxyServerList",
              "Type": "IList<HostName>"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "DnsServers",
          "Type": "IList<HostName>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Namespace",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "WebProxyServers",
          "Type": "IList<HostName>",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnNamespaceInfo"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnProfile"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AlwaysOn",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AppTriggers",
          "Type": "IList<VpnAppId>",
          "IsGet": true
        },
        {
          "Name": "DomainNameInfoList",
          "Type": "IList<VpnDomainNameInfo>",
          "IsGet": true
        },
        {
          "Name": "EapConfiguration",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "NativeProtocolType",
          "Type": "VpnNativeProtocolType",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProfileName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RememberCredentials",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Routes",
          "Type": "IList<VpnRoute>",
          "IsGet": true
        },
        {
          "Name": "RoutingPolicyType",
          "Type": "VpnRoutingPolicyType",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Servers",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "TrafficFilters",
          "Type": "IList<VpnTrafficFilter>",
          "IsGet": true
        },
        {
          "Name": "TunnelAuthenticationMethod",
          "Type": "VpnAuthenticationMethod",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "UserAuthenticationMethod",
          "Type": "VpnAuthenticationMethod",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnNativeProfile"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "parentBuffer",
              "Type": "VpnPacketBuffer"
            },
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "length",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "AppId",
          "Type": "VpnAppId",
          "IsGet": true
        },
        {
          "Name": "Buffer",
          "Type": "Buffer",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "VpnPacketBufferStatus",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TransportAffinity",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnPacketBuffer"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IEnumerable",
        "IEnumerable<VpnPacketBuffer>"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "Size",
          "Type": "UInt32",
          "IsGet": true
        },
        {
          "Name": "Status",
          "Type": "VpnPacketBufferStatus",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [
        {
          "Name": "AddAtBegin",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "nextVpnPacketBuffer",
              "Type": "VpnPacketBuffer"
            }
          ]
        },
        {
          "Name": "Append",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "nextVpnPacketBuffer",
              "Type": "VpnPacketBuffer"
            }
          ]
        },
        {
          "Name": "Clear",
          "ReturnType": "Void"
        },
        {
          "Name": "RemoveAtBegin",
          "ReturnType": "VpnPacketBuffer"
        },
        {
          "Name": "RemoveAtEnd",
          "ReturnType": "VpnPacketBuffer"
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnPacketBufferList"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AdditionalPin",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "OldPasswordCredential",
          "Type": "PasswordCredential",
          "IsGet": true
        },
        {
          "Name": "PasskeyCredential",
          "Type": "PasswordCredential",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnPickedCredential"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnProfile"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AlwaysOn",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AppTriggers",
          "Type": "IList<VpnAppId>",
          "IsGet": true
        },
        {
          "Name": "CustomConfiguration",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DomainNameInfoList",
          "Type": "IList<VpnDomainNameInfo>",
          "IsGet": true
        },
        {
          "Name": "ProfileName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RememberCredentials",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Routes",
          "Type": "IList<VpnRoute>",
          "IsGet": true
        },
        {
          "Name": "ServerUris",
          "Type": "IList<Uri>",
          "IsGet": true
        },
        {
          "Name": "TrafficFilters",
          "Type": "IList<VpnTrafficFilter>",
          "IsGet": true
        },
        {
          "Name": "VpnPluginPackageFamilyName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnPlugInProfile"
    },
    {
      "IsSealed": true,
      "Interfaces": [
        "IVpnProfile"
      ],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AlwaysOn",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AppTriggers",
          "Type": "IList<VpnAppId>",
          "IsGet": true
        },
        {
          "Name": "DomainNameInfoList",
          "Type": "IList<VpnDomainNameInfo>",
          "IsGet": true
        },
        {
          "Name": "ProfileName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RememberCredentials",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Routes",
          "Type": "IList<VpnRoute>",
          "IsGet": true
        },
        {
          "Name": "TrafficFilters",
          "Type": "IList<VpnTrafficFilter>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnProfile"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "address",
              "Type": "HostName"
            },
            {
              "Name": "prefixSize",
              "Type": "Byte"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "Address",
          "Type": "HostName",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "PrefixSize",
          "Type": "Byte",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnRoute"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "ExcludeLocalSubnets",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Ipv4ExclusionRoutes",
          "Type": "IList<VpnRoute>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Ipv4InclusionRoutes",
          "Type": "IList<VpnRoute>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Ipv6ExclusionRoutes",
          "Type": "IList<VpnRoute>",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Ipv6InclusionRoutes",
          "Type": "IList<VpnRoute>",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnRouteAssignment"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "StatementOfHealth",
          "Type": "Buffer",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnSystemHealth"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [
        {
          "Parameters": [
            {
              "Name": "appId",
              "Type": "VpnAppId"
            }
          ]
        }
      ],
      "Properties": [
        {
          "Name": "AppClaims",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "AppId",
          "Type": "VpnAppId",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "LocalAddressRanges",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "LocalPortRanges",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "Protocol",
          "Type": "VpnIPProtocol",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RemoteAddressRanges",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "RemotePortRanges",
          "Type": "IList<String>",
          "IsGet": true
        },
        {
          "Name": "RoutingPolicyType",
          "Type": "VpnRoutingPolicyType",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnTrafficFilter"
    },
    {
      "IsSealed": true,
      "Interfaces": [],
      "Constructors": [],
      "Properties": [
        {
          "Name": "AllowInbound",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AllowOutbound",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "TrafficFilterList",
          "Type": "IList<VpnTrafficFilter>",
          "IsGet": true
        }
      ],
      "Fields": [],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.VpnTrafficFilterAssignment"
    }
  ],
  "Structs": [
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "BytesReceived",
          "Type": "UInt64"
        },
        {
          "Name": "HasResponseChanged",
          "Type": "Boolean"
        },
        {
          "Name": "HasRestarted",
          "Type": "Boolean"
        },
        {
          "Name": "Status",
          "Type": "BackgroundTransferStatus"
        },
        {
          "Name": "TotalBytesToReceive",
          "Type": "UInt64"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundDownloadProgress"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "BytesReceived",
          "Type": "UInt64"
        },
        {
          "Name": "BytesSent",
          "Type": "UInt64"
        },
        {
          "Name": "HasResponseChanged",
          "Type": "Boolean"
        },
        {
          "Name": "HasRestarted",
          "Type": "Boolean"
        },
        {
          "Name": "Status",
          "Type": "BackgroundTransferStatus"
        },
        {
          "Name": "TotalBytesToReceive",
          "Type": "UInt64"
        },
        {
          "Name": "TotalBytesToSend",
          "Type": "UInt64"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundUploadProgress"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "Roaming",
          "Type": "TriStates"
        },
        {
          "Name": "Shared",
          "Type": "TriStates"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Connectivity.NetworkUsageStates"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "LastSyncTime",
          "Type": "DateTimeOffset"
        },
        {
          "Name": "UsageInMegabytes",
          "Type": "UInt32"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.NetworkOperators.ProfileUsage"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "InboundBandwidthPeaked",
          "Type": "Boolean"
        },
        {
          "Name": "InboundBitsPerSecond",
          "Type": "UInt64"
        },
        {
          "Name": "InboundBitsPerSecondInstability",
          "Type": "UInt64"
        },
        {
          "Name": "OutboundBandwidthPeaked",
          "Type": "Boolean"
        },
        {
          "Name": "OutboundBitsPerSecond",
          "Type": "UInt64"
        },
        {
          "Name": "OutboundBitsPerSecondInstability",
          "Type": "UInt64"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.BandwidthStatistics"
    },
    {
      "Interfaces": [],
      "Constructors": [],
      "Properties": [],
      "Fields": [
        {
          "Name": "Max",
          "Type": "UInt32"
        },
        {
          "Name": "Min",
          "Type": "UInt32"
        },
        {
          "Name": "Sum",
          "Type": "UInt32"
        },
        {
          "Name": "Variance",
          "Type": "UInt32"
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.RoundTripTimeStatistics"
    }
  ],
  "Interfaces": [
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "CostPolicy",
          "Type": "BackgroundTransferCostPolicy",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Group",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Method",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProxyCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ServerCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [
        {
          "Name": "SetRequestHeader",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.IBackgroundTransferBase"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "CreateWithName",
          "ReturnType": "BackgroundTransferContentPart",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "CreateWithNameAndFileName",
          "ReturnType": "BackgroundTransferContentPart",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "fileName",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.IBackgroundTransferContentPartFactory"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "CostPolicy",
          "Type": "BackgroundTransferCostPolicy",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Group",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "Guid",
          "Type": "Guid",
          "IsGet": true
        },
        {
          "Name": "Method",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "RequestedUri",
          "Type": "Uri",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "GetResponseInformation",
          "ReturnType": "ResponseInformation"
        },
        {
          "Name": "GetResultStreamAt",
          "ReturnType": "IInputStream",
          "Parameters": [
            {
              "Name": "position",
              "Type": "UInt64"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.IBackgroundTransferOperation"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Priority",
          "Type": "BackgroundTransferPriority",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.BackgroundTransfer.IBackgroundTransferOperationPriority"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "ControlChannelTrigger",
          "Type": "ControlChannelTrigger",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.IControlChannelTriggerEventDetails"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "HardwareSlotReset",
          "Type": "Boolean",
          "IsGet": true
        },
        {
          "Name": "ResetReason",
          "Type": "ControlChannelTriggerResetReason",
          "IsGet": true
        },
        {
          "Name": "SoftwareSlotReset",
          "Type": "Boolean",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.IControlChannelTriggerResetEventDetails"
    },
    {
      "Interfaces": [
        "IDisposable"
      ],
      "Properties": [
        {
          "Name": "OutputStream",
          "Type": "IOutputStream",
          "IsGet": true
        }
      ],
      "Methods": [
        {
          "Name": "Close",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "code",
              "Type": "UInt16"
            },
            {
              "Name": "reason",
              "Type": "String"
            }
          ]
        },
        {
          "Name": "ConnectAsync",
          "ReturnType": "IAsyncAction",
          "Parameters": [
            {
              "Name": "uri",
              "Type": "Uri"
            }
          ]
        },
        {
          "Name": "SetRequestHeader",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "headerName",
              "Type": "String"
            },
            {
              "Name": "headerValue",
              "Type": "String"
            }
          ]
        }
      ],
      "Events": [
        {
          "Name": "Closed",
          "Type": "TypedEventHandler<IWebSocket,WebSocketClosedEventArgs>"
        }
      ],
      "Name": "Windows.Networking.Sockets.IWebSocket"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "OutboundBufferSizeInBytes",
          "Type": "UInt32",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ProxyCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "ServerCredential",
          "Type": "PasswordCredential",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "SupportedProtocols",
          "Type": "IList<String>",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.IWebSocketControl"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "BandwidthStatistics",
          "Type": "BandwidthStatistics",
          "IsGet": true
        },
        {
          "Name": "LocalAddress",
          "Type": "HostName",
          "IsGet": true
        },
        {
          "Name": "Protocol",
          "Type": "String",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Sockets.IWebSocketInformation"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "AdditionalPin",
          "Type": "String",
          "IsGet": true
        },
        {
          "Name": "CertificateCredential",
          "Type": "Certificate",
          "IsGet": true
        },
        {
          "Name": "OldPasswordCredential",
          "Type": "PasswordCredential",
          "IsGet": true
        },
        {
          "Name": "PasskeyCredential",
          "Type": "PasswordCredential",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnCredential"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Bordered",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Compulsory",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Label",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnCustomPrompt"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "Compulsory",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "DisplayName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Emphasized",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnCustomPromptElement"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "CreateVpnDomainNameInfo",
          "ReturnType": "VpnDomainNameInfo",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "nameType",
              "Type": "VpnDomainNameType"
            },
            {
              "Name": "dnsServerList",
              "Type": "IEnumerable<HostName>"
            },
            {
              "Name": "proxyServerList",
              "Type": "IEnumerable<HostName>"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnDomainNameInfoFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "ProcessEventAsync",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "thirdPartyPlugIn",
              "Type": "Object"
            },
            {
              "Name": "event",
              "Type": "Object"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnChannelStatics"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "CreateVpnInterfaceId",
          "ReturnType": "VpnInterfaceId",
          "Parameters": [
            {
              "Name": "address",
              "Type": "Byte[]"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnInterfaceIdFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "CreateVpnNamespaceInfo",
          "ReturnType": "VpnNamespaceInfo",
          "Parameters": [
            {
              "Name": "name",
              "Type": "String"
            },
            {
              "Name": "dnsServerList",
              "Type": "IList<HostName>"
            },
            {
              "Name": "proxyServerList",
              "Type": "IList<HostName>"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnNamespaceInfoFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "CreateVpnPacketBuffer",
          "ReturnType": "VpnPacketBuffer",
          "Parameters": [
            {
              "Name": "parentBuffer",
              "Type": "VpnPacketBuffer"
            },
            {
              "Name": "offset",
              "Type": "UInt32"
            },
            {
              "Name": "length",
              "Type": "UInt32"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnPacketBufferFactory"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "Connect",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "channel",
              "Type": "VpnChannel"
            }
          ]
        },
        {
          "Name": "Decapsulate",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "channel",
              "Type": "VpnChannel"
            },
            {
              "Name": "encapBuffer",
              "Type": "VpnPacketBuffer"
            },
            {
              "Name": "decapsulatedPackets",
              "Type": "VpnPacketBufferList"
            },
            {
              "Name": "controlPacketsToSend",
              "Type": "VpnPacketBufferList"
            }
          ]
        },
        {
          "Name": "Disconnect",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "channel",
              "Type": "VpnChannel"
            }
          ]
        },
        {
          "Name": "Encapsulate",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "channel",
              "Type": "VpnChannel"
            },
            {
              "Name": "packets",
              "Type": "VpnPacketBufferList"
            },
            {
              "Name": "encapulatedPackets",
              "Type": "VpnPacketBufferList"
            }
          ]
        },
        {
          "Name": "GetKeepAlivePayload",
          "ReturnType": "Void",
          "Parameters": [
            {
              "Name": "channel",
              "Type": "VpnChannel"
            },
            {
              "Name": "keepAlivePacket",
              "Type": "VpnPacketBuffer&",
              "Out": true
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnPlugIn"
    },
    {
      "Interfaces": [],
      "Properties": [
        {
          "Name": "AlwaysOn",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "AppTriggers",
          "Type": "IList<VpnAppId>",
          "IsGet": true
        },
        {
          "Name": "DomainNameInfoList",
          "Type": "IList<VpnDomainNameInfo>",
          "IsGet": true
        },
        {
          "Name": "ProfileName",
          "Type": "String",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "RememberCredentials",
          "Type": "Boolean",
          "IsGet": true,
          "IsSet": true
        },
        {
          "Name": "Routes",
          "Type": "IList<VpnRoute>",
          "IsGet": true
        },
        {
          "Name": "TrafficFilters",
          "Type": "IList<VpnTrafficFilter>",
          "IsGet": true
        }
      ],
      "Methods": [],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnProfile"
    },
    {
      "Interfaces": [],
      "Properties": [],
      "Methods": [
        {
          "Name": "CreateVpnRoute",
          "ReturnType": "VpnRoute",
          "Parameters": [
            {
              "Name": "address",
              "Type": "HostName"
            },
            {
              "Name": "prefixSize",
              "Type": "Byte"
            }
          ]
        }
      ],
      "Events": [],
      "Name": "Windows.Networking.Vpn.IVpnRouteFactory"
    }
  ],
  "Enums": [
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Parallel",
          "Value": "0"
        },
        {
          "Name": "Serialized",
          "Value": "1"
        }
      ],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferBehavior"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "UnrestrictedOnly",
          "Value": "1"
        },
        {
          "Name": "Always",
          "Value": "2"
        }
      ],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferCostPolicy"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Default",
          "Value": "0"
        },
        {
          "Name": "High",
          "Value": "1"
        }
      ],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferPriority"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Idle",
          "Value": "0"
        },
        {
          "Name": "Running",
          "Value": "1"
        },
        {
          "Name": "PausedByApplication",
          "Value": "2"
        },
        {
          "Name": "PausedCostedNetwork",
          "Value": "3"
        },
        {
          "Name": "PausedNoNetwork",
          "Value": "4"
        },
        {
          "Name": "Completed",
          "Value": "5"
        },
        {
          "Name": "Canceled",
          "Value": "6"
        },
        {
          "Name": "Error",
          "Value": "7"
        }
      ],
      "Name": "Windows.Networking.BackgroundTransfer.BackgroundTransferStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Pap",
          "Value": "1"
        },
        {
          "Name": "Chap",
          "Value": "2"
        },
        {
          "Name": "Mschapv2",
          "Value": "3"
        }
      ],
      "Name": "Windows.Networking.Connectivity.CellularApnAuthenticationType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "PerMinute",
          "Value": "0"
        },
        {
          "Name": "PerHour",
          "Value": "1"
        },
        {
          "Name": "PerDay",
          "Value": "2"
        },
        {
          "Name": "Total",
          "Value": "3"
        }
      ],
      "Name": "Windows.Networking.Connectivity.DataUsageGranularity"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Unauthenticated",
          "Value": "1"
        },
        {
          "Name": "Authenticated",
          "Value": "2"
        }
      ],
      "Name": "Windows.Networking.Connectivity.DomainConnectivityLevel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Unknown",
          "Value": "1"
        },
        {
          "Name": "Open80211",
          "Value": "2"
        },
        {
          "Name": "SharedKey80211",
          "Value": "3"
        },
        {
          "Name": "Wpa",
          "Value": "4"
        },
        {
          "Name": "WpaPsk",
          "Value": "5"
        },
        {
          "Name": "WpaNone",
          "Value": "6"
        },
        {
          "Name": "Rsna",
          "Value": "7"
        },
        {
          "Name": "RsnaPsk",
          "Value": "8"
        },
        {
          "Name": "Ihv",
          "Value": "9"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkAuthenticationType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "LocalAccess",
          "Value": "1"
        },
        {
          "Name": "ConstrainedInternetAccess",
          "Value": "2"
        },
        {
          "Name": "InternetAccess",
          "Value": "3"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkConnectivityLevel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unknown",
          "Value": "0"
        },
        {
          "Name": "Unrestricted",
          "Value": "1"
        },
        {
          "Name": "Fixed",
          "Value": "2"
        },
        {
          "Name": "Variable",
          "Value": "3"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkCostType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Unknown",
          "Value": "1"
        },
        {
          "Name": "Wep",
          "Value": "2"
        },
        {
          "Name": "Wep40",
          "Value": "3"
        },
        {
          "Name": "Wep104",
          "Value": "4"
        },
        {
          "Name": "Tkip",
          "Value": "5"
        },
        {
          "Name": "Ccmp",
          "Value": "6"
        },
        {
          "Name": "WpaUseGroup",
          "Value": "7"
        },
        {
          "Name": "RsnUseGroup",
          "Value": "8"
        },
        {
          "Name": "Ihv",
          "Value": "9"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkEncryptionType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Internet",
          "Value": "1"
        },
        {
          "Name": "PrivateNetwork",
          "Value": "2"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkTypes"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "NotRoaming",
          "Value": "1"
        },
        {
          "Name": "Roaming",
          "Value": "2"
        }
      ],
      "Name": "Windows.Networking.Connectivity.RoamingStates"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "DoNotCare",
          "Value": "0"
        },
        {
          "Name": "No",
          "Value": "1"
        },
        {
          "Name": "Yes",
          "Value": "2"
        }
      ],
      "Name": "Windows.Networking.Connectivity.TriStates"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Gprs",
          "Value": "1"
        },
        {
          "Name": "Edge",
          "Value": "2"
        },
        {
          "Name": "Umts",
          "Value": "4"
        },
        {
          "Name": "Hsdpa",
          "Value": "8"
        },
        {
          "Name": "Hsupa",
          "Value": "16"
        },
        {
          "Name": "LteAdvanced",
          "Value": "32"
        },
        {
          "Name": "Cdma1xRtt",
          "Value": "65536"
        },
        {
          "Name": "Cdma1xEvdo",
          "Value": "131072"
        },
        {
          "Name": "Cdma1xEvdoRevA",
          "Value": "262144"
        },
        {
          "Name": "Cdma1xEvdv",
          "Value": "524288"
        },
        {
          "Name": "Cdma3xRtt",
          "Value": "1048576"
        },
        {
          "Name": "Cdma1xEvdoRevB",
          "Value": "2097152"
        },
        {
          "Name": "CdmaUmb",
          "Value": "4194304"
        },
        {
          "Name": "Custom",
          "Value": "2147483648"
        }
      ],
      "Name": "Windows.Networking.Connectivity.WwanDataClass"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Deregistered",
          "Value": "1"
        },
        {
          "Name": "Searching",
          "Value": "2"
        },
        {
          "Name": "Home",
          "Value": "3"
        },
        {
          "Name": "Roaming",
          "Value": "4"
        },
        {
          "Name": "Partner",
          "Value": "5"
        },
        {
          "Name": "Denied",
          "Value": "6"
        }
      ],
      "Name": "Windows.Networking.Connectivity.WwanNetworkRegistrationState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Suffix",
          "Value": "0"
        },
        {
          "Name": "FullyQualified",
          "Value": "1"
        }
      ],
      "Name": "Windows.Networking.DomainNameType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "OptimizeForLongConnections",
          "Value": "2"
        }
      ],
      "Name": "Windows.Networking.HostNameSortOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "DomainName",
          "Value": "0"
        },
        {
          "Name": "Ipv4",
          "Value": "1"
        },
        {
          "Name": "Ipv6",
          "Value": "2"
        },
        {
          "Name": "Bluetooth",
          "Value": "3"
        }
      ],
      "Name": "Windows.Networking.HostNameType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Gprs",
          "Value": "1"
        },
        {
          "Name": "Edge",
          "Value": "2"
        },
        {
          "Name": "Umts",
          "Value": "4"
        },
        {
          "Name": "Hsdpa",
          "Value": "8"
        },
        {
          "Name": "Hsupa",
          "Value": "16"
        },
        {
          "Name": "LteAdvanced",
          "Value": "32"
        },
        {
          "Name": "Cdma1xRtt",
          "Value": "65536"
        },
        {
          "Name": "Cdma1xEvdo",
          "Value": "131072"
        },
        {
          "Name": "Cdma1xEvdoRevA",
          "Value": "262144"
        },
        {
          "Name": "Cdma1xEvdv",
          "Value": "524288"
        },
        {
          "Name": "Cdma3xRtt",
          "Value": "1048576"
        },
        {
          "Name": "Cdma1xEvdoRevB",
          "Value": "2097152"
        },
        {
          "Name": "CdmaUmb",
          "Value": "4194304"
        },
        {
          "Name": "Custom",
          "Value": "2147483648"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.DataClasses"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "NoError",
          "Value": "0"
        },
        {
          "Name": "LoginSucceeded",
          "Value": "50"
        },
        {
          "Name": "LoginFailed",
          "Value": "100"
        },
        {
          "Name": "RadiusServerError",
          "Value": "102"
        },
        {
          "Name": "NetworkAdministratorError",
          "Value": "105"
        },
        {
          "Name": "LoginAborted",
          "Value": "151"
        },
        {
          "Name": "AccessGatewayInternalError",
          "Value": "255"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.HotspotAuthenticationResponseCode"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Created",
          "Value": "0"
        },
        {
          "Name": "Started",
          "Value": "1"
        },
        {
          "Name": "EnumerationCompleted",
          "Value": "2"
        },
        {
          "Name": "Stopped",
          "Value": "3"
        },
        {
          "Name": "Aborted",
          "Value": "4"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcherStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unknown",
          "Value": "0"
        },
        {
          "Name": "Embedded",
          "Value": "1"
        },
        {
          "Name": "Removable",
          "Value": "2"
        },
        {
          "Name": "Remote",
          "Value": "3"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandDeviceType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unknown",
          "Value": "0"
        },
        {
          "Name": "Numeric",
          "Value": "1"
        },
        {
          "Name": "Alphanumeric",
          "Value": "2"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandPinFormat"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unknown",
          "Value": "0"
        },
        {
          "Name": "Unlocked",
          "Value": "1"
        },
        {
          "Name": "PinRequired",
          "Value": "2"
        },
        {
          "Name": "PinUnblockKeyRequired",
          "Value": "3"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandPinLockState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Custom",
          "Value": "1"
        },
        {
          "Name": "Pin1",
          "Value": "2"
        },
        {
          "Name": "Pin2",
          "Value": "3"
        },
        {
          "Name": "SimPin",
          "Value": "4"
        },
        {
          "Name": "FirstSimPin",
          "Value": "5"
        },
        {
          "Name": "NetworkPin",
          "Value": "6"
        },
        {
          "Name": "NetworkSubsetPin",
          "Value": "7"
        },
        {
          "Name": "ServiceProviderPin",
          "Value": "8"
        },
        {
          "Name": "CorporatePin",
          "Value": "9"
        },
        {
          "Name": "SubsidyLock",
          "Value": "10"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandPinType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Off",
          "Value": "0"
        },
        {
          "Name": "On",
          "Value": "1"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.MobileBroadbandRadioState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "DeviceNotReady",
          "Value": "0"
        },
        {
          "Name": "DeviceReady",
          "Value": "1"
        },
        {
          "Name": "SimNotInserted",
          "Value": "2"
        },
        {
          "Name": "BadSim",
          "Value": "3"
        },
        {
          "Name": "DeviceHardwareFailure",
          "Value": "4"
        },
        {
          "Name": "AccountNotActivated",
          "Value": "5"
        },
        {
          "Name": "DeviceLocked",
          "Value": "6"
        },
        {
          "Name": "DeviceBlocked",
          "Value": "7"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.NetworkDeviceStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Gsm",
          "Value": "0"
        },
        {
          "Name": "Cdma",
          "Value": "1"
        },
        {
          "Name": "Ussd",
          "Value": "2"
        },
        {
          "Name": "DataPlanThresholdReached",
          "Value": "3"
        },
        {
          "Name": "DataPlanReset",
          "Value": "4"
        },
        {
          "Name": "DataPlanDeleted",
          "Value": "5"
        },
        {
          "Name": "ProfileConnected",
          "Value": "6"
        },
        {
          "Name": "ProfileDisconnected",
          "Value": "7"
        },
        {
          "Name": "RegisteredRoaming",
          "Value": "8"
        },
        {
          "Name": "RegisteredHome",
          "Value": "9"
        },
        {
          "Name": "TetheringEntitlementCheck",
          "Value": "10"
        },
        {
          "Name": "TetheringOperationalStateChanged",
          "Value": "11"
        },
        {
          "Name": "TetheringNumberOfClientsChanged",
          "Value": "12"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.NetworkOperatorEventMessageType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Deregistered",
          "Value": "1"
        },
        {
          "Name": "Searching",
          "Value": "2"
        },
        {
          "Name": "Home",
          "Value": "3"
        },
        {
          "Name": "Roaming",
          "Value": "4"
        },
        {
          "Name": "Partner",
          "Value": "5"
        },
        {
          "Name": "Denied",
          "Value": "6"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.NetworkRegistrationState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Wlan",
          "Value": "0"
        },
        {
          "Name": "Wwan",
          "Value": "1"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.ProfileMediaType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Enabled",
          "Value": "0"
        },
        {
          "Name": "DisabledByGroupPolicy",
          "Value": "1"
        },
        {
          "Name": "DisabledByHardwareLimitation",
          "Value": "2"
        },
        {
          "Name": "DisabledByOperator",
          "Value": "3"
        },
        {
          "Name": "DisabledBySku",
          "Value": "4"
        },
        {
          "Name": "DisabledByRequiredAppNotInstalled",
          "Value": "5"
        },
        {
          "Name": "DisabledDueToUnknownCause",
          "Value": "6"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.TetheringCapability"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unknown",
          "Value": "0"
        },
        {
          "Name": "On",
          "Value": "1"
        },
        {
          "Name": "Off",
          "Value": "2"
        },
        {
          "Name": "InTransition",
          "Value": "3"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.TetheringOperationalState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Success",
          "Value": "0"
        },
        {
          "Name": "Unknown",
          "Value": "1"
        },
        {
          "Name": "MobileBroadbandDeviceOff",
          "Value": "2"
        },
        {
          "Name": "WiFiDeviceOff",
          "Value": "3"
        },
        {
          "Name": "EntitlementCheckTimeout",
          "Value": "4"
        },
        {
          "Name": "EntitlementCheckFailure",
          "Value": "5"
        },
        {
          "Name": "OperationInProgress",
          "Value": "6"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.TetheringOperationStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "NoActionRequired",
          "Value": "0"
        },
        {
          "Name": "ActionRequired",
          "Value": "1"
        },
        {
          "Name": "Terminated",
          "Value": "2"
        },
        {
          "Name": "OtherLocalClient",
          "Value": "3"
        },
        {
          "Name": "OperationNotSupported",
          "Value": "4"
        },
        {
          "Name": "NetworkTimeout",
          "Value": "5"
        }
      ],
      "Name": "Windows.Networking.NetworkOperators.UssdResultCode"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Browse",
          "Value": "1"
        },
        {
          "Name": "Triggered",
          "Value": "2"
        }
      ],
      "Name": "Windows.Networking.Proximity.PeerDiscoveryTypes"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Peer",
          "Value": "0"
        },
        {
          "Name": "Host",
          "Value": "1"
        },
        {
          "Name": "Client",
          "Value": "2"
        }
      ],
      "Name": "Windows.Networking.Proximity.PeerRole"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Created",
          "Value": "0"
        },
        {
          "Name": "Started",
          "Value": "1"
        },
        {
          "Name": "EnumerationCompleted",
          "Value": "2"
        },
        {
          "Name": "Stopping",
          "Value": "3"
        },
        {
          "Name": "Stopped",
          "Value": "4"
        },
        {
          "Name": "Aborted",
          "Value": "5"
        }
      ],
      "Name": "Windows.Networking.Proximity.PeerWatcherStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "PeerFound",
          "Value": "0"
        },
        {
          "Name": "Listening",
          "Value": "1"
        },
        {
          "Name": "Connecting",
          "Value": "2"
        },
        {
          "Name": "Completed",
          "Value": "3"
        },
        {
          "Name": "Canceled",
          "Value": "4"
        },
        {
          "Name": "Failed",
          "Value": "5"
        }
      ],
      "Name": "Windows.Networking.Proximity.TriggeredConnectState"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Toast",
          "Value": "0"
        },
        {
          "Name": "Tile",
          "Value": "1"
        },
        {
          "Name": "Badge",
          "Value": "2"
        },
        {
          "Name": "Raw",
          "Value": "3"
        },
        {
          "Name": "TileFlyout",
          "Value": "4"
        }
      ],
      "Name": "Windows.Networking.PushNotifications.PushNotificationType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Success",
          "Value": "0"
        },
        {
          "Name": "InvalidServiceName",
          "Value": "1"
        },
        {
          "Name": "ServerError",
          "Value": "2"
        },
        {
          "Name": "SecurityError",
          "Value": "3"
        }
      ],
      "Name": "Windows.Networking.ServiceDiscovery.Dnssd.DnssdRegistrationStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Created",
          "Value": "0"
        },
        {
          "Name": "Started",
          "Value": "1"
        },
        {
          "Name": "EnumerationCompleted",
          "Value": "2"
        },
        {
          "Name": "Stopping",
          "Value": "3"
        },
        {
          "Name": "Stopped",
          "Value": "4"
        },
        {
          "Name": "Aborted",
          "Value": "5"
        }
      ],
      "Name": "Windows.Networking.ServiceDiscovery.Dnssd.DnssdServiceWatcherStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "FastUserSwitched",
          "Value": "0"
        },
        {
          "Name": "LowPowerExit",
          "Value": "1"
        },
        {
          "Name": "QuietHoursExit",
          "Value": "2"
        },
        {
          "Name": "ApplicationRestart",
          "Value": "3"
        }
      ],
      "Name": "Windows.Networking.Sockets.ControlChannelTriggerResetReason"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "RequestSoftwareSlot",
          "Value": "0"
        },
        {
          "Name": "RequestHardwareSlot",
          "Value": "1"
        }
      ],
      "Name": "Windows.Networking.Sockets.ControlChannelTriggerResourceType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "HardwareSlotRequested",
          "Value": "0"
        },
        {
          "Name": "SoftwareSlotAllocated",
          "Value": "1"
        },
        {
          "Name": "HardwareSlotAllocated",
          "Value": "2"
        },
        {
          "Name": "PolicyError",
          "Value": "3"
        },
        {
          "Name": "SystemError",
          "Value": "4"
        },
        {
          "Name": "TransportDisconnected",
          "Value": "5"
        },
        {
          "Name": "ServiceUnavailable",
          "Value": "6"
        }
      ],
      "Name": "Windows.Networking.Sockets.ControlChannelTriggerStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "DoNotWake",
          "Value": "0"
        },
        {
          "Name": "Wake",
          "Value": "1"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketActivityConnectedStandbyAction"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "StreamSocketListener",
          "Value": "1"
        },
        {
          "Name": "DatagramSocket",
          "Value": "2"
        },
        {
          "Name": "StreamSocket",
          "Value": "3"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketActivityKind"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "SocketActivity",
          "Value": "1"
        },
        {
          "Name": "ConnectionAccepted",
          "Value": "2"
        },
        {
          "Name": "KeepAliveTimerExpired",
          "Value": "3"
        },
        {
          "Name": "SocketClosed",
          "Value": "4"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketActivityTriggerReason"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Unknown",
          "Value": "0"
        },
        {
          "Name": "OperationAborted",
          "Value": "1"
        },
        {
          "Name": "HttpInvalidServerResponse",
          "Value": "2"
        },
        {
          "Name": "ConnectionTimedOut",
          "Value": "3"
        },
        {
          "Name": "AddressFamilyNotSupported",
          "Value": "4"
        },
        {
          "Name": "SocketTypeNotSupported",
          "Value": "5"
        },
        {
          "Name": "HostNotFound",
          "Value": "6"
        },
        {
          "Name": "NoDataRecordOfRequestedType",
          "Value": "7"
        },
        {
          "Name": "NonAuthoritativeHostNotFound",
          "Value": "8"
        },
        {
          "Name": "ClassTypeNotFound",
          "Value": "9"
        },
        {
          "Name": "AddressAlreadyInUse",
          "Value": "10"
        },
        {
          "Name": "CannotAssignRequestedAddress",
          "Value": "11"
        },
        {
          "Name": "ConnectionRefused",
          "Value": "12"
        },
        {
          "Name": "NetworkIsUnreachable",
          "Value": "13"
        },
        {
          "Name": "UnreachableHost",
          "Value": "14"
        },
        {
          "Name": "NetworkIsDown",
          "Value": "15"
        },
        {
          "Name": "NetworkDroppedConnectionOnReset",
          "Value": "16"
        },
        {
          "Name": "SoftwareCausedConnectionAbort",
          "Value": "17"
        },
        {
          "Name": "ConnectionResetByPeer",
          "Value": "18"
        },
        {
          "Name": "HostIsDown",
          "Value": "19"
        },
        {
          "Name": "NoAddressesFound",
          "Value": "20"
        },
        {
          "Name": "TooManyOpenFiles",
          "Value": "21"
        },
        {
          "Name": "MessageTooLong",
          "Value": "22"
        },
        {
          "Name": "CertificateExpired",
          "Value": "23"
        },
        {
          "Name": "CertificateUntrustedRoot",
          "Value": "24"
        },
        {
          "Name": "CertificateCommonNameIsIncorrect",
          "Value": "25"
        },
        {
          "Name": "CertificateWrongUsage",
          "Value": "26"
        },
        {
          "Name": "CertificateRevoked",
          "Value": "27"
        },
        {
          "Name": "CertificateNoRevocationCheck",
          "Value": "28"
        },
        {
          "Name": "CertificateRevocationServerOffline",
          "Value": "29"
        },
        {
          "Name": "CertificateIsInvalid",
          "Value": "30"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketErrorStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Binary",
          "Value": "0"
        },
        {
          "Name": "Utf8",
          "Value": "1"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketMessageType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "PlainSocket",
          "Value": "0"
        },
        {
          "Name": "Ssl",
          "Value": "1"
        },
        {
          "Name": "SslAllowNullEncryption",
          "Value": "2"
        },
        {
          "Name": "BluetoothEncryptionAllowNullAuthentication",
          "Value": "3"
        },
        {
          "Name": "BluetoothEncryptionWithAuthentication",
          "Value": "4"
        },
        {
          "Name": "Ssl3AllowWeakEncryption",
          "Value": "5"
        },
        {
          "Name": "Tls10",
          "Value": "6"
        },
        {
          "Name": "Tls11",
          "Value": "7"
        },
        {
          "Name": "Tls12",
          "Value": "8"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketProtectionLevel"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Normal",
          "Value": "0"
        },
        {
          "Name": "LowLatency",
          "Value": "1"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketQualityOfService"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Ignorable",
          "Value": "1"
        },
        {
          "Name": "Fatal",
          "Value": "2"
        }
      ],
      "Name": "Windows.Networking.Sockets.SocketSslErrorSeverity"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "PackageFamilyName",
          "Value": "0"
        },
        {
          "Name": "FullyQualifiedBinaryName",
          "Value": "1"
        },
        {
          "Name": "FilePath",
          "Value": "2"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnAppIdType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Mschapv2",
          "Value": "0"
        },
        {
          "Name": "Eap",
          "Value": "1"
        },
        {
          "Name": "Certificate",
          "Value": "2"
        },
        {
          "Name": "PresharedKey",
          "Value": "3"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnAuthenticationMethod"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "UsernamePassword",
          "Value": "0"
        },
        {
          "Name": "UsernameOtpPin",
          "Value": "1"
        },
        {
          "Name": "UsernamePasswordAndPin",
          "Value": "2"
        },
        {
          "Name": "UsernamePasswordChange",
          "Value": "3"
        },
        {
          "Name": "SmartCard",
          "Value": "4"
        },
        {
          "Name": "ProtectedCertificate",
          "Value": "5"
        },
        {
          "Name": "UnProtectedCertificate",
          "Value": "6"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnCredentialType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Send",
          "Value": "0"
        },
        {
          "Name": "Receive",
          "Value": "1"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnDataPathType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Suffix",
          "Value": "0"
        },
        {
          "Name": "FullyQualified",
          "Value": "1"
        },
        {
          "Name": "Reserved",
          "Value": "65535"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnDomainNameType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Idle",
          "Value": "0"
        },
        {
          "Name": "Active",
          "Value": "1"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnChannelActivityEventType"
    },
    {
      "IsFlags": true,
      "BaseType": "UInt32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Retrying",
          "Value": "1"
        },
        {
          "Name": "UseForSingleSignIn",
          "Value": "2"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnChannelRequestCredentialsOptions"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "None",
          "Value": "0"
        },
        {
          "Name": "Tcp",
          "Value": "6"
        },
        {
          "Name": "Udp",
          "Value": "17"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnIPProtocol"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Ok",
          "Value": "0"
        },
        {
          "Name": "Other",
          "Value": "1"
        },
        {
          "Name": "InvalidXmlSyntax",
          "Value": "2"
        },
        {
          "Name": "ProfileNameTooLong",
          "Value": "3"
        },
        {
          "Name": "ProfileInvalidAppId",
          "Value": "4"
        },
        {
          "Name": "AccessDenied",
          "Value": "5"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnManagementErrorStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Pptp",
          "Value": "0"
        },
        {
          "Name": "L2tp",
          "Value": "1"
        },
        {
          "Name": "IpsecIkev2",
          "Value": "2"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnNativeProtocolType"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "Ok",
          "Value": "0"
        },
        {
          "Name": "InvalidBufferSize",
          "Value": "1"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnPacketBufferStatus"
    },
    {
      "BaseType": "Int32",
      "Values": [
        {
          "Name": "SplitRouting",
          "Value": "0"
        },
        {
          "Name": "ForceAllTrafficOverVpn",
          "Value": "1"
        }
      ],
      "Name": "Windows.Networking.Vpn.VpnRoutingPolicyType"
    }
  ],
  "Delegates": [
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "ProximityDevice"
        },
        {
          "Name": "message",
          "Type": "ProximityMessage"
        }
      ],
      "Name": "Windows.Networking.Proximity.MessageReceivedHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "ProximityDevice"
        },
        {
          "Name": "messageId",
          "Type": "Int64"
        }
      ],
      "Name": "Windows.Networking.Proximity.MessageTransmittedHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "ProximityDevice"
        }
      ],
      "Name": "Windows.Networking.Proximity.DeviceArrivedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "ProximityDevice"
        }
      ],
      "Name": "Windows.Networking.Proximity.DeviceDepartedEventHandler"
    },
    {
      "ReturnType": "Void",
      "Parameters": [
        {
          "Name": "sender",
          "Type": "Object"
        }
      ],
      "Name": "Windows.Networking.Connectivity.NetworkStatusChangedEventHandler"
    }
  ]
}